
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Reparacion
 * 
 */
export type Reparacion = $Result.DefaultSelection<Prisma.$ReparacionPayload>
/**
 * Model RegistroReparacion
 * 
 */
export type RegistroReparacion = $Result.DefaultSelection<Prisma.$RegistroReparacionPayload>
/**
 * Model VentaCuota
 * 
 */
export type VentaCuota = $Result.DefaultSelection<Prisma.$VentaCuotaPayload>
/**
 * Model Cuota
 * 
 */
export type Cuota = $Result.DefaultSelection<Prisma.$CuotaPayload>
/**
 * Model PlantillaComprobante
 * 
 */
export type PlantillaComprobante = $Result.DefaultSelection<Prisma.$PlantillaComprobantePayload>
/**
 * Model VentaEliminada
 * 
 */
export type VentaEliminada = $Result.DefaultSelection<Prisma.$VentaEliminadaPayload>
/**
 * Model VentaEliminadaProducto
 * 
 */
export type VentaEliminadaProducto = $Result.DefaultSelection<Prisma.$VentaEliminadaProductoPayload>
/**
 * Model SucursalSaldo
 * 
 */
export type SucursalSaldo = $Result.DefaultSelection<Prisma.$SucursalSaldoPayload>
/**
 * Model RegistroCaja
 * 
 */
export type RegistroCaja = $Result.DefaultSelection<Prisma.$RegistroCajaPayload>
/**
 * Model SucursalSaldoGlobal
 * 
 */
export type SucursalSaldoGlobal = $Result.DefaultSelection<Prisma.$SucursalSaldoGlobalPayload>
/**
 * Model Deposito
 * 
 */
export type Deposito = $Result.DefaultSelection<Prisma.$DepositoPayload>
/**
 * Model Egreso
 * 
 */
export type Egreso = $Result.DefaultSelection<Prisma.$EgresoPayload>
/**
 * Model TicketSorteo
 * 
 */
export type TicketSorteo = $Result.DefaultSelection<Prisma.$TicketSorteoPayload>
/**
 * Model Vencimiento
 * 
 */
export type Vencimiento = $Result.DefaultSelection<Prisma.$VencimientoPayload>
/**
 * Model Notificacion
 * 
 */
export type Notificacion = $Result.DefaultSelection<Prisma.$NotificacionPayload>
/**
 * Model NotificacionesUsuarios
 * 
 */
export type NotificacionesUsuarios = $Result.DefaultSelection<Prisma.$NotificacionesUsuariosPayload>
/**
 * Model SolicitudPrecio
 * 
 */
export type SolicitudPrecio = $Result.DefaultSelection<Prisma.$SolicitudPrecioPayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model HistorialPrecioCosto
 * 
 */
export type HistorialPrecioCosto = $Result.DefaultSelection<Prisma.$HistorialPrecioCostoPayload>
/**
 * Model PrecioProducto
 * 
 */
export type PrecioProducto = $Result.DefaultSelection<Prisma.$PrecioProductoPayload>
/**
 * Model HistorialPrecio
 * 
 */
export type HistorialPrecio = $Result.DefaultSelection<Prisma.$HistorialPrecioPayload>
/**
 * Model AjusteStock
 * 
 */
export type AjusteStock = $Result.DefaultSelection<Prisma.$AjusteStockPayload>
/**
 * Model EliminacionStock
 * 
 */
export type EliminacionStock = $Result.DefaultSelection<Prisma.$EliminacionStockPayload>
/**
 * Model EliminacionProducto
 * 
 */
export type EliminacionProducto = $Result.DefaultSelection<Prisma.$EliminacionProductoPayload>
/**
 * Model EliminacionCliente
 * 
 */
export type EliminacionCliente = $Result.DefaultSelection<Prisma.$EliminacionClientePayload>
/**
 * Model Stock
 * 
 */
export type Stock = $Result.DefaultSelection<Prisma.$StockPayload>
/**
 * Model Sucursal
 * 
 */
export type Sucursal = $Result.DefaultSelection<Prisma.$SucursalPayload>
/**
 * Model EntregaStock
 * 
 */
export type EntregaStock = $Result.DefaultSelection<Prisma.$EntregaStockPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model MetaUsuario
 * 
 */
export type MetaUsuario = $Result.DefaultSelection<Prisma.$MetaUsuarioPayload>
/**
 * Model MetaCobros
 * 
 */
export type MetaCobros = $Result.DefaultSelection<Prisma.$MetaCobrosPayload>
/**
 * Model DepositoCobro
 * 
 */
export type DepositoCobro = $Result.DefaultSelection<Prisma.$DepositoCobroPayload>
/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Garantia
 * 
 */
export type Garantia = $Result.DefaultSelection<Prisma.$GarantiaPayload>
/**
 * Model RegistroGarantia
 * 
 */
export type RegistroGarantia = $Result.DefaultSelection<Prisma.$RegistroGarantiaPayload>
/**
 * Model Pago
 * 
 */
export type Pago = $Result.DefaultSelection<Prisma.$PagoPayload>
/**
 * Model HistorialStock
 * 
 */
export type HistorialStock = $Result.DefaultSelection<Prisma.$HistorialStockPayload>
/**
 * Model Venta
 * 
 */
export type Venta = $Result.DefaultSelection<Prisma.$VentaPayload>
/**
 * Model TransferenciaProducto
 * 
 */
export type TransferenciaProducto = $Result.DefaultSelection<Prisma.$TransferenciaProductoPayload>
/**
 * Model SolicitudTransferenciaProducto
 * 
 */
export type SolicitudTransferenciaProducto = $Result.DefaultSelection<Prisma.$SolicitudTransferenciaProductoPayload>
/**
 * Model VentaProducto
 * 
 */
export type VentaProducto = $Result.DefaultSelection<Prisma.$VentaProductoPayload>
/**
 * Model Proveedor
 * 
 */
export type Proveedor = $Result.DefaultSelection<Prisma.$ProveedorPayload>
/**
 * Model Categoria
 * 
 */
export type Categoria = $Result.DefaultSelection<Prisma.$CategoriaPayload>
/**
 * Model Departamento
 * 
 */
export type Departamento = $Result.DefaultSelection<Prisma.$DepartamentoPayload>
/**
 * Model Municipio
 * 
 */
export type Municipio = $Result.DefaultSelection<Prisma.$MunicipioPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const EstadoReparacion: {
  RECIBIDO: 'RECIBIDO',
  PENDIENTE: 'PENDIENTE',
  EN_PROCESO: 'EN_PROCESO',
  ESPERANDO_PIEZAS: 'ESPERANDO_PIEZAS',
  REPARADO: 'REPARADO',
  ENTREGADO: 'ENTREGADO',
  CANCELADO: 'CANCELADO',
  NO_REPARABLE: 'NO_REPARABLE',
  FINALIZADO: 'FINALIZADO'
};

export type EstadoReparacion = (typeof EstadoReparacion)[keyof typeof EstadoReparacion]


export const EstadoCuota: {
  ACTIVA: 'ACTIVA',
  COMPLETADA: 'COMPLETADA',
  CANCELADA: 'CANCELADA'
};

export type EstadoCuota = (typeof EstadoCuota)[keyof typeof EstadoCuota]


export const EstadoPago: {
  PENDIENTE: 'PENDIENTE',
  PAGADA: 'PAGADA',
  ATRASADA: 'ATRASADA'
};

export type EstadoPago = (typeof EstadoPago)[keyof typeof EstadoPago]


export const EstadoCaja: {
  ABIERTO: 'ABIERTO',
  CERRADO: 'CERRADO'
};

export type EstadoCaja = (typeof EstadoCaja)[keyof typeof EstadoCaja]


export const EstadoTicket: {
  ACTIVO: 'ACTIVO',
  INACTIVO: 'INACTIVO'
};

export type EstadoTicket = (typeof EstadoTicket)[keyof typeof EstadoTicket]


export const EstadoVencimiento: {
  PENDIENTE: 'PENDIENTE',
  NOTIFICADO: 'NOTIFICADO',
  RESUELTO: 'RESUELTO'
};

export type EstadoVencimiento = (typeof EstadoVencimiento)[keyof typeof EstadoVencimiento]


export const TipoNotificacion: {
  SOLICITUD_PRECIO: 'SOLICITUD_PRECIO',
  TRANSFERENCIA: 'TRANSFERENCIA',
  VENCIMIENTO: 'VENCIMIENTO',
  OTRO: 'OTRO'
};

export type TipoNotificacion = (typeof TipoNotificacion)[keyof typeof TipoNotificacion]


export const EstadoSolicitud: {
  PENDIENTE: 'PENDIENTE',
  APROBADO: 'APROBADO',
  RECHAZADO: 'RECHAZADO'
};

export type EstadoSolicitud = (typeof EstadoSolicitud)[keyof typeof EstadoSolicitud]


export const EstadoPrecio: {
  APROBADO: 'APROBADO',
  PENDIENTE: 'PENDIENTE',
  RECHAZADO: 'RECHAZADO'
};

export type EstadoPrecio = (typeof EstadoPrecio)[keyof typeof EstadoPrecio]


export const TipoPrecio: {
  CREADO_POR_SOLICITUD: 'CREADO_POR_SOLICITUD',
  ESTANDAR: 'ESTANDAR'
};

export type TipoPrecio = (typeof TipoPrecio)[keyof typeof TipoPrecio]


export const TipoAjuste: {
  INCREMENTO: 'INCREMENTO',
  DECREMENTO: 'DECREMENTO',
  CORRECCION: 'CORRECCION'
};

export type TipoAjuste = (typeof TipoAjuste)[keyof typeof TipoAjuste]


export const TipoSucursal: {
  TIENDA: 'TIENDA',
  ALMACEN: 'ALMACEN',
  CENTRO_DISTRIBUCION: 'CENTRO_DISTRIBUCION',
  TALLER: 'TALLER',
  OFICINA: 'OFICINA'
};

export type TipoSucursal = (typeof TipoSucursal)[keyof typeof TipoSucursal]


export const Rol: {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  VENDEDOR: 'VENDEDOR',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

export type Rol = (typeof Rol)[keyof typeof Rol]


export const EstadoMetaTienda: {
  CANCELADO: 'CANCELADO',
  ABIERTO: 'ABIERTO',
  FINALIZADO: 'FINALIZADO',
  CERRADO: 'CERRADO'
};

export type EstadoMetaTienda = (typeof EstadoMetaTienda)[keyof typeof EstadoMetaTienda]


export const EstadoMetaCobro: {
  CANCELADO: 'CANCELADO',
  ABIERTO: 'ABIERTO',
  FINALIZADO: 'FINALIZADO',
  CERRADO: 'CERRADO'
};

export type EstadoMetaCobro = (typeof EstadoMetaCobro)[keyof typeof EstadoMetaCobro]


export const EstadoGarantia: {
  RECIBIDO: 'RECIBIDO',
  ENVIADO_A_PROVEEDOR: 'ENVIADO_A_PROVEEDOR',
  EN_REPARACION: 'EN_REPARACION',
  REPARADO: 'REPARADO',
  REEMPLAZADO: 'REEMPLAZADO',
  ENTREGADO_CLIENTE: 'ENTREGADO_CLIENTE',
  CERRADO: 'CERRADO'
};

export type EstadoGarantia = (typeof EstadoGarantia)[keyof typeof EstadoGarantia]


export const MetodoPago: {
  CONTADO: 'CONTADO',
  TARJETA: 'TARJETA',
  TRANSFERENCIA: 'TRANSFERENCIA',
  PAYPAL: 'PAYPAL',
  OTRO: 'OTRO',
  CUTOAS: 'CUTOAS',
  CREDITO: 'CREDITO'
};

export type MetodoPago = (typeof MetodoPago)[keyof typeof MetodoPago]


export const EstadoSolicitudTransferencia: {
  PENDIENTE: 'PENDIENTE',
  APROBADO: 'APROBADO',
  RECHAZADO: 'RECHAZADO'
};

export type EstadoSolicitudTransferencia = (typeof EstadoSolicitudTransferencia)[keyof typeof EstadoSolicitudTransferencia]

}

export type EstadoReparacion = $Enums.EstadoReparacion

export const EstadoReparacion: typeof $Enums.EstadoReparacion

export type EstadoCuota = $Enums.EstadoCuota

export const EstadoCuota: typeof $Enums.EstadoCuota

export type EstadoPago = $Enums.EstadoPago

export const EstadoPago: typeof $Enums.EstadoPago

export type EstadoCaja = $Enums.EstadoCaja

export const EstadoCaja: typeof $Enums.EstadoCaja

export type EstadoTicket = $Enums.EstadoTicket

export const EstadoTicket: typeof $Enums.EstadoTicket

export type EstadoVencimiento = $Enums.EstadoVencimiento

export const EstadoVencimiento: typeof $Enums.EstadoVencimiento

export type TipoNotificacion = $Enums.TipoNotificacion

export const TipoNotificacion: typeof $Enums.TipoNotificacion

export type EstadoSolicitud = $Enums.EstadoSolicitud

export const EstadoSolicitud: typeof $Enums.EstadoSolicitud

export type EstadoPrecio = $Enums.EstadoPrecio

export const EstadoPrecio: typeof $Enums.EstadoPrecio

export type TipoPrecio = $Enums.TipoPrecio

export const TipoPrecio: typeof $Enums.TipoPrecio

export type TipoAjuste = $Enums.TipoAjuste

export const TipoAjuste: typeof $Enums.TipoAjuste

export type TipoSucursal = $Enums.TipoSucursal

export const TipoSucursal: typeof $Enums.TipoSucursal

export type Rol = $Enums.Rol

export const Rol: typeof $Enums.Rol

export type EstadoMetaTienda = $Enums.EstadoMetaTienda

export const EstadoMetaTienda: typeof $Enums.EstadoMetaTienda

export type EstadoMetaCobro = $Enums.EstadoMetaCobro

export const EstadoMetaCobro: typeof $Enums.EstadoMetaCobro

export type EstadoGarantia = $Enums.EstadoGarantia

export const EstadoGarantia: typeof $Enums.EstadoGarantia

export type MetodoPago = $Enums.MetodoPago

export const MetodoPago: typeof $Enums.MetodoPago

export type EstadoSolicitudTransferencia = $Enums.EstadoSolicitudTransferencia

export const EstadoSolicitudTransferencia: typeof $Enums.EstadoSolicitudTransferencia

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Reparacions
 * const reparacions = await prisma.reparacion.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Reparacions
   * const reparacions = await prisma.reparacion.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.reparacion`: Exposes CRUD operations for the **Reparacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reparacions
    * const reparacions = await prisma.reparacion.findMany()
    * ```
    */
  get reparacion(): Prisma.ReparacionDelegate<ExtArgs>;

  /**
   * `prisma.registroReparacion`: Exposes CRUD operations for the **RegistroReparacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroReparacions
    * const registroReparacions = await prisma.registroReparacion.findMany()
    * ```
    */
  get registroReparacion(): Prisma.RegistroReparacionDelegate<ExtArgs>;

  /**
   * `prisma.ventaCuota`: Exposes CRUD operations for the **VentaCuota** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VentaCuotas
    * const ventaCuotas = await prisma.ventaCuota.findMany()
    * ```
    */
  get ventaCuota(): Prisma.VentaCuotaDelegate<ExtArgs>;

  /**
   * `prisma.cuota`: Exposes CRUD operations for the **Cuota** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cuotas
    * const cuotas = await prisma.cuota.findMany()
    * ```
    */
  get cuota(): Prisma.CuotaDelegate<ExtArgs>;

  /**
   * `prisma.plantillaComprobante`: Exposes CRUD operations for the **PlantillaComprobante** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PlantillaComprobantes
    * const plantillaComprobantes = await prisma.plantillaComprobante.findMany()
    * ```
    */
  get plantillaComprobante(): Prisma.PlantillaComprobanteDelegate<ExtArgs>;

  /**
   * `prisma.ventaEliminada`: Exposes CRUD operations for the **VentaEliminada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VentaEliminadas
    * const ventaEliminadas = await prisma.ventaEliminada.findMany()
    * ```
    */
  get ventaEliminada(): Prisma.VentaEliminadaDelegate<ExtArgs>;

  /**
   * `prisma.ventaEliminadaProducto`: Exposes CRUD operations for the **VentaEliminadaProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VentaEliminadaProductos
    * const ventaEliminadaProductos = await prisma.ventaEliminadaProducto.findMany()
    * ```
    */
  get ventaEliminadaProducto(): Prisma.VentaEliminadaProductoDelegate<ExtArgs>;

  /**
   * `prisma.sucursalSaldo`: Exposes CRUD operations for the **SucursalSaldo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SucursalSaldos
    * const sucursalSaldos = await prisma.sucursalSaldo.findMany()
    * ```
    */
  get sucursalSaldo(): Prisma.SucursalSaldoDelegate<ExtArgs>;

  /**
   * `prisma.registroCaja`: Exposes CRUD operations for the **RegistroCaja** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroCajas
    * const registroCajas = await prisma.registroCaja.findMany()
    * ```
    */
  get registroCaja(): Prisma.RegistroCajaDelegate<ExtArgs>;

  /**
   * `prisma.sucursalSaldoGlobal`: Exposes CRUD operations for the **SucursalSaldoGlobal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SucursalSaldoGlobals
    * const sucursalSaldoGlobals = await prisma.sucursalSaldoGlobal.findMany()
    * ```
    */
  get sucursalSaldoGlobal(): Prisma.SucursalSaldoGlobalDelegate<ExtArgs>;

  /**
   * `prisma.deposito`: Exposes CRUD operations for the **Deposito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Depositos
    * const depositos = await prisma.deposito.findMany()
    * ```
    */
  get deposito(): Prisma.DepositoDelegate<ExtArgs>;

  /**
   * `prisma.egreso`: Exposes CRUD operations for the **Egreso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Egresos
    * const egresos = await prisma.egreso.findMany()
    * ```
    */
  get egreso(): Prisma.EgresoDelegate<ExtArgs>;

  /**
   * `prisma.ticketSorteo`: Exposes CRUD operations for the **TicketSorteo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TicketSorteos
    * const ticketSorteos = await prisma.ticketSorteo.findMany()
    * ```
    */
  get ticketSorteo(): Prisma.TicketSorteoDelegate<ExtArgs>;

  /**
   * `prisma.vencimiento`: Exposes CRUD operations for the **Vencimiento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vencimientos
    * const vencimientos = await prisma.vencimiento.findMany()
    * ```
    */
  get vencimiento(): Prisma.VencimientoDelegate<ExtArgs>;

  /**
   * `prisma.notificacion`: Exposes CRUD operations for the **Notificacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificacions
    * const notificacions = await prisma.notificacion.findMany()
    * ```
    */
  get notificacion(): Prisma.NotificacionDelegate<ExtArgs>;

  /**
   * `prisma.notificacionesUsuarios`: Exposes CRUD operations for the **NotificacionesUsuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NotificacionesUsuarios
    * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findMany()
    * ```
    */
  get notificacionesUsuarios(): Prisma.NotificacionesUsuariosDelegate<ExtArgs>;

  /**
   * `prisma.solicitudPrecio`: Exposes CRUD operations for the **SolicitudPrecio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SolicitudPrecios
    * const solicitudPrecios = await prisma.solicitudPrecio.findMany()
    * ```
    */
  get solicitudPrecio(): Prisma.SolicitudPrecioDelegate<ExtArgs>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs>;

  /**
   * `prisma.historialPrecioCosto`: Exposes CRUD operations for the **HistorialPrecioCosto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialPrecioCostos
    * const historialPrecioCostos = await prisma.historialPrecioCosto.findMany()
    * ```
    */
  get historialPrecioCosto(): Prisma.HistorialPrecioCostoDelegate<ExtArgs>;

  /**
   * `prisma.precioProducto`: Exposes CRUD operations for the **PrecioProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PrecioProductos
    * const precioProductos = await prisma.precioProducto.findMany()
    * ```
    */
  get precioProducto(): Prisma.PrecioProductoDelegate<ExtArgs>;

  /**
   * `prisma.historialPrecio`: Exposes CRUD operations for the **HistorialPrecio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialPrecios
    * const historialPrecios = await prisma.historialPrecio.findMany()
    * ```
    */
  get historialPrecio(): Prisma.HistorialPrecioDelegate<ExtArgs>;

  /**
   * `prisma.ajusteStock`: Exposes CRUD operations for the **AjusteStock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AjusteStocks
    * const ajusteStocks = await prisma.ajusteStock.findMany()
    * ```
    */
  get ajusteStock(): Prisma.AjusteStockDelegate<ExtArgs>;

  /**
   * `prisma.eliminacionStock`: Exposes CRUD operations for the **EliminacionStock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EliminacionStocks
    * const eliminacionStocks = await prisma.eliminacionStock.findMany()
    * ```
    */
  get eliminacionStock(): Prisma.EliminacionStockDelegate<ExtArgs>;

  /**
   * `prisma.eliminacionProducto`: Exposes CRUD operations for the **EliminacionProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EliminacionProductos
    * const eliminacionProductos = await prisma.eliminacionProducto.findMany()
    * ```
    */
  get eliminacionProducto(): Prisma.EliminacionProductoDelegate<ExtArgs>;

  /**
   * `prisma.eliminacionCliente`: Exposes CRUD operations for the **EliminacionCliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EliminacionClientes
    * const eliminacionClientes = await prisma.eliminacionCliente.findMany()
    * ```
    */
  get eliminacionCliente(): Prisma.EliminacionClienteDelegate<ExtArgs>;

  /**
   * `prisma.stock`: Exposes CRUD operations for the **Stock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stocks
    * const stocks = await prisma.stock.findMany()
    * ```
    */
  get stock(): Prisma.StockDelegate<ExtArgs>;

  /**
   * `prisma.sucursal`: Exposes CRUD operations for the **Sucursal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sucursals
    * const sucursals = await prisma.sucursal.findMany()
    * ```
    */
  get sucursal(): Prisma.SucursalDelegate<ExtArgs>;

  /**
   * `prisma.entregaStock`: Exposes CRUD operations for the **EntregaStock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EntregaStocks
    * const entregaStocks = await prisma.entregaStock.findMany()
    * ```
    */
  get entregaStock(): Prisma.EntregaStockDelegate<ExtArgs>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.metaUsuario`: Exposes CRUD operations for the **MetaUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MetaUsuarios
    * const metaUsuarios = await prisma.metaUsuario.findMany()
    * ```
    */
  get metaUsuario(): Prisma.MetaUsuarioDelegate<ExtArgs>;

  /**
   * `prisma.metaCobros`: Exposes CRUD operations for the **MetaCobros** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MetaCobros
    * const metaCobros = await prisma.metaCobros.findMany()
    * ```
    */
  get metaCobros(): Prisma.MetaCobrosDelegate<ExtArgs>;

  /**
   * `prisma.depositoCobro`: Exposes CRUD operations for the **DepositoCobro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DepositoCobros
    * const depositoCobros = await prisma.depositoCobro.findMany()
    * ```
    */
  get depositoCobro(): Prisma.DepositoCobroDelegate<ExtArgs>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs>;

  /**
   * `prisma.garantia`: Exposes CRUD operations for the **Garantia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Garantias
    * const garantias = await prisma.garantia.findMany()
    * ```
    */
  get garantia(): Prisma.GarantiaDelegate<ExtArgs>;

  /**
   * `prisma.registroGarantia`: Exposes CRUD operations for the **RegistroGarantia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegistroGarantias
    * const registroGarantias = await prisma.registroGarantia.findMany()
    * ```
    */
  get registroGarantia(): Prisma.RegistroGarantiaDelegate<ExtArgs>;

  /**
   * `prisma.pago`: Exposes CRUD operations for the **Pago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pago.findMany()
    * ```
    */
  get pago(): Prisma.PagoDelegate<ExtArgs>;

  /**
   * `prisma.historialStock`: Exposes CRUD operations for the **HistorialStock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialStocks
    * const historialStocks = await prisma.historialStock.findMany()
    * ```
    */
  get historialStock(): Prisma.HistorialStockDelegate<ExtArgs>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **Venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.VentaDelegate<ExtArgs>;

  /**
   * `prisma.transferenciaProducto`: Exposes CRUD operations for the **TransferenciaProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TransferenciaProductos
    * const transferenciaProductos = await prisma.transferenciaProducto.findMany()
    * ```
    */
  get transferenciaProducto(): Prisma.TransferenciaProductoDelegate<ExtArgs>;

  /**
   * `prisma.solicitudTransferenciaProducto`: Exposes CRUD operations for the **SolicitudTransferenciaProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SolicitudTransferenciaProductos
    * const solicitudTransferenciaProductos = await prisma.solicitudTransferenciaProducto.findMany()
    * ```
    */
  get solicitudTransferenciaProducto(): Prisma.SolicitudTransferenciaProductoDelegate<ExtArgs>;

  /**
   * `prisma.ventaProducto`: Exposes CRUD operations for the **VentaProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VentaProductos
    * const ventaProductos = await prisma.ventaProducto.findMany()
    * ```
    */
  get ventaProducto(): Prisma.VentaProductoDelegate<ExtArgs>;

  /**
   * `prisma.proveedor`: Exposes CRUD operations for the **Proveedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedors
    * const proveedors = await prisma.proveedor.findMany()
    * ```
    */
  get proveedor(): Prisma.ProveedorDelegate<ExtArgs>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **Categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.CategoriaDelegate<ExtArgs>;

  /**
   * `prisma.departamento`: Exposes CRUD operations for the **Departamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departamentos
    * const departamentos = await prisma.departamento.findMany()
    * ```
    */
  get departamento(): Prisma.DepartamentoDelegate<ExtArgs>;

  /**
   * `prisma.municipio`: Exposes CRUD operations for the **Municipio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Municipios
    * const municipios = await prisma.municipio.findMany()
    * ```
    */
  get municipio(): Prisma.MunicipioDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.20.0
   * Query Engine version: 06fc58a368dc7be9fbbbe894adf8d445d208c284
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Reparacion: 'Reparacion',
    RegistroReparacion: 'RegistroReparacion',
    VentaCuota: 'VentaCuota',
    Cuota: 'Cuota',
    PlantillaComprobante: 'PlantillaComprobante',
    VentaEliminada: 'VentaEliminada',
    VentaEliminadaProducto: 'VentaEliminadaProducto',
    SucursalSaldo: 'SucursalSaldo',
    RegistroCaja: 'RegistroCaja',
    SucursalSaldoGlobal: 'SucursalSaldoGlobal',
    Deposito: 'Deposito',
    Egreso: 'Egreso',
    TicketSorteo: 'TicketSorteo',
    Vencimiento: 'Vencimiento',
    Notificacion: 'Notificacion',
    NotificacionesUsuarios: 'NotificacionesUsuarios',
    SolicitudPrecio: 'SolicitudPrecio',
    Producto: 'Producto',
    HistorialPrecioCosto: 'HistorialPrecioCosto',
    PrecioProducto: 'PrecioProducto',
    HistorialPrecio: 'HistorialPrecio',
    AjusteStock: 'AjusteStock',
    EliminacionStock: 'EliminacionStock',
    EliminacionProducto: 'EliminacionProducto',
    EliminacionCliente: 'EliminacionCliente',
    Stock: 'Stock',
    Sucursal: 'Sucursal',
    EntregaStock: 'EntregaStock',
    Usuario: 'Usuario',
    MetaUsuario: 'MetaUsuario',
    MetaCobros: 'MetaCobros',
    DepositoCobro: 'DepositoCobro',
    Cliente: 'Cliente',
    Garantia: 'Garantia',
    RegistroGarantia: 'RegistroGarantia',
    Pago: 'Pago',
    HistorialStock: 'HistorialStock',
    Venta: 'Venta',
    TransferenciaProducto: 'TransferenciaProducto',
    SolicitudTransferenciaProducto: 'SolicitudTransferenciaProducto',
    VentaProducto: 'VentaProducto',
    Proveedor: 'Proveedor',
    Categoria: 'Categoria',
    Departamento: 'Departamento',
    Municipio: 'Municipio'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "reparacion" | "registroReparacion" | "ventaCuota" | "cuota" | "plantillaComprobante" | "ventaEliminada" | "ventaEliminadaProducto" | "sucursalSaldo" | "registroCaja" | "sucursalSaldoGlobal" | "deposito" | "egreso" | "ticketSorteo" | "vencimiento" | "notificacion" | "notificacionesUsuarios" | "solicitudPrecio" | "producto" | "historialPrecioCosto" | "precioProducto" | "historialPrecio" | "ajusteStock" | "eliminacionStock" | "eliminacionProducto" | "eliminacionCliente" | "stock" | "sucursal" | "entregaStock" | "usuario" | "metaUsuario" | "metaCobros" | "depositoCobro" | "cliente" | "garantia" | "registroGarantia" | "pago" | "historialStock" | "venta" | "transferenciaProducto" | "solicitudTransferenciaProducto" | "ventaProducto" | "proveedor" | "categoria" | "departamento" | "municipio"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Reparacion: {
        payload: Prisma.$ReparacionPayload<ExtArgs>
        fields: Prisma.ReparacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReparacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReparacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>
          }
          findFirst: {
            args: Prisma.ReparacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReparacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>
          }
          findMany: {
            args: Prisma.ReparacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>[]
          }
          create: {
            args: Prisma.ReparacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>
          }
          createMany: {
            args: Prisma.ReparacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReparacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>[]
          }
          delete: {
            args: Prisma.ReparacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>
          }
          update: {
            args: Prisma.ReparacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>
          }
          deleteMany: {
            args: Prisma.ReparacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReparacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReparacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReparacionPayload>
          }
          aggregate: {
            args: Prisma.ReparacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReparacion>
          }
          groupBy: {
            args: Prisma.ReparacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReparacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReparacionCountArgs<ExtArgs>
            result: $Utils.Optional<ReparacionCountAggregateOutputType> | number
          }
        }
      }
      RegistroReparacion: {
        payload: Prisma.$RegistroReparacionPayload<ExtArgs>
        fields: Prisma.RegistroReparacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroReparacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroReparacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>
          }
          findFirst: {
            args: Prisma.RegistroReparacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroReparacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>
          }
          findMany: {
            args: Prisma.RegistroReparacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>[]
          }
          create: {
            args: Prisma.RegistroReparacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>
          }
          createMany: {
            args: Prisma.RegistroReparacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroReparacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>[]
          }
          delete: {
            args: Prisma.RegistroReparacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>
          }
          update: {
            args: Prisma.RegistroReparacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>
          }
          deleteMany: {
            args: Prisma.RegistroReparacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroReparacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RegistroReparacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroReparacionPayload>
          }
          aggregate: {
            args: Prisma.RegistroReparacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroReparacion>
          }
          groupBy: {
            args: Prisma.RegistroReparacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroReparacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroReparacionCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroReparacionCountAggregateOutputType> | number
          }
        }
      }
      VentaCuota: {
        payload: Prisma.$VentaCuotaPayload<ExtArgs>
        fields: Prisma.VentaCuotaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaCuotaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaCuotaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>
          }
          findFirst: {
            args: Prisma.VentaCuotaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaCuotaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>
          }
          findMany: {
            args: Prisma.VentaCuotaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>[]
          }
          create: {
            args: Prisma.VentaCuotaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>
          }
          createMany: {
            args: Prisma.VentaCuotaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCuotaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>[]
          }
          delete: {
            args: Prisma.VentaCuotaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>
          }
          update: {
            args: Prisma.VentaCuotaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>
          }
          deleteMany: {
            args: Prisma.VentaCuotaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaCuotaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VentaCuotaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaCuotaPayload>
          }
          aggregate: {
            args: Prisma.VentaCuotaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVentaCuota>
          }
          groupBy: {
            args: Prisma.VentaCuotaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaCuotaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCuotaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCuotaCountAggregateOutputType> | number
          }
        }
      }
      Cuota: {
        payload: Prisma.$CuotaPayload<ExtArgs>
        fields: Prisma.CuotaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CuotaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CuotaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>
          }
          findFirst: {
            args: Prisma.CuotaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CuotaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>
          }
          findMany: {
            args: Prisma.CuotaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>[]
          }
          create: {
            args: Prisma.CuotaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>
          }
          createMany: {
            args: Prisma.CuotaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CuotaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>[]
          }
          delete: {
            args: Prisma.CuotaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>
          }
          update: {
            args: Prisma.CuotaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>
          }
          deleteMany: {
            args: Prisma.CuotaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CuotaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CuotaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuotaPayload>
          }
          aggregate: {
            args: Prisma.CuotaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCuota>
          }
          groupBy: {
            args: Prisma.CuotaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CuotaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CuotaCountArgs<ExtArgs>
            result: $Utils.Optional<CuotaCountAggregateOutputType> | number
          }
        }
      }
      PlantillaComprobante: {
        payload: Prisma.$PlantillaComprobantePayload<ExtArgs>
        fields: Prisma.PlantillaComprobanteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlantillaComprobanteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlantillaComprobanteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>
          }
          findFirst: {
            args: Prisma.PlantillaComprobanteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlantillaComprobanteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>
          }
          findMany: {
            args: Prisma.PlantillaComprobanteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>[]
          }
          create: {
            args: Prisma.PlantillaComprobanteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>
          }
          createMany: {
            args: Prisma.PlantillaComprobanteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlantillaComprobanteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>[]
          }
          delete: {
            args: Prisma.PlantillaComprobanteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>
          }
          update: {
            args: Prisma.PlantillaComprobanteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>
          }
          deleteMany: {
            args: Prisma.PlantillaComprobanteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlantillaComprobanteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PlantillaComprobanteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlantillaComprobantePayload>
          }
          aggregate: {
            args: Prisma.PlantillaComprobanteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlantillaComprobante>
          }
          groupBy: {
            args: Prisma.PlantillaComprobanteGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlantillaComprobanteGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlantillaComprobanteCountArgs<ExtArgs>
            result: $Utils.Optional<PlantillaComprobanteCountAggregateOutputType> | number
          }
        }
      }
      VentaEliminada: {
        payload: Prisma.$VentaEliminadaPayload<ExtArgs>
        fields: Prisma.VentaEliminadaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaEliminadaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaEliminadaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>
          }
          findFirst: {
            args: Prisma.VentaEliminadaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaEliminadaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>
          }
          findMany: {
            args: Prisma.VentaEliminadaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>[]
          }
          create: {
            args: Prisma.VentaEliminadaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>
          }
          createMany: {
            args: Prisma.VentaEliminadaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaEliminadaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>[]
          }
          delete: {
            args: Prisma.VentaEliminadaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>
          }
          update: {
            args: Prisma.VentaEliminadaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>
          }
          deleteMany: {
            args: Prisma.VentaEliminadaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaEliminadaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VentaEliminadaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaPayload>
          }
          aggregate: {
            args: Prisma.VentaEliminadaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVentaEliminada>
          }
          groupBy: {
            args: Prisma.VentaEliminadaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaEliminadaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaEliminadaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaEliminadaCountAggregateOutputType> | number
          }
        }
      }
      VentaEliminadaProducto: {
        payload: Prisma.$VentaEliminadaProductoPayload<ExtArgs>
        fields: Prisma.VentaEliminadaProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaEliminadaProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaEliminadaProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>
          }
          findFirst: {
            args: Prisma.VentaEliminadaProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaEliminadaProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>
          }
          findMany: {
            args: Prisma.VentaEliminadaProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>[]
          }
          create: {
            args: Prisma.VentaEliminadaProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>
          }
          createMany: {
            args: Prisma.VentaEliminadaProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaEliminadaProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>[]
          }
          delete: {
            args: Prisma.VentaEliminadaProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>
          }
          update: {
            args: Prisma.VentaEliminadaProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>
          }
          deleteMany: {
            args: Prisma.VentaEliminadaProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaEliminadaProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VentaEliminadaProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaEliminadaProductoPayload>
          }
          aggregate: {
            args: Prisma.VentaEliminadaProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVentaEliminadaProducto>
          }
          groupBy: {
            args: Prisma.VentaEliminadaProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaEliminadaProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaEliminadaProductoCountArgs<ExtArgs>
            result: $Utils.Optional<VentaEliminadaProductoCountAggregateOutputType> | number
          }
        }
      }
      SucursalSaldo: {
        payload: Prisma.$SucursalSaldoPayload<ExtArgs>
        fields: Prisma.SucursalSaldoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SucursalSaldoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SucursalSaldoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>
          }
          findFirst: {
            args: Prisma.SucursalSaldoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SucursalSaldoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>
          }
          findMany: {
            args: Prisma.SucursalSaldoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>[]
          }
          create: {
            args: Prisma.SucursalSaldoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>
          }
          createMany: {
            args: Prisma.SucursalSaldoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SucursalSaldoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>[]
          }
          delete: {
            args: Prisma.SucursalSaldoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>
          }
          update: {
            args: Prisma.SucursalSaldoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>
          }
          deleteMany: {
            args: Prisma.SucursalSaldoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SucursalSaldoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SucursalSaldoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoPayload>
          }
          aggregate: {
            args: Prisma.SucursalSaldoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSucursalSaldo>
          }
          groupBy: {
            args: Prisma.SucursalSaldoGroupByArgs<ExtArgs>
            result: $Utils.Optional<SucursalSaldoGroupByOutputType>[]
          }
          count: {
            args: Prisma.SucursalSaldoCountArgs<ExtArgs>
            result: $Utils.Optional<SucursalSaldoCountAggregateOutputType> | number
          }
        }
      }
      RegistroCaja: {
        payload: Prisma.$RegistroCajaPayload<ExtArgs>
        fields: Prisma.RegistroCajaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroCajaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroCajaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>
          }
          findFirst: {
            args: Prisma.RegistroCajaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroCajaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>
          }
          findMany: {
            args: Prisma.RegistroCajaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>[]
          }
          create: {
            args: Prisma.RegistroCajaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>
          }
          createMany: {
            args: Prisma.RegistroCajaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroCajaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>[]
          }
          delete: {
            args: Prisma.RegistroCajaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>
          }
          update: {
            args: Prisma.RegistroCajaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>
          }
          deleteMany: {
            args: Prisma.RegistroCajaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroCajaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RegistroCajaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroCajaPayload>
          }
          aggregate: {
            args: Prisma.RegistroCajaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroCaja>
          }
          groupBy: {
            args: Prisma.RegistroCajaGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroCajaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroCajaCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroCajaCountAggregateOutputType> | number
          }
        }
      }
      SucursalSaldoGlobal: {
        payload: Prisma.$SucursalSaldoGlobalPayload<ExtArgs>
        fields: Prisma.SucursalSaldoGlobalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SucursalSaldoGlobalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SucursalSaldoGlobalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>
          }
          findFirst: {
            args: Prisma.SucursalSaldoGlobalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SucursalSaldoGlobalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>
          }
          findMany: {
            args: Prisma.SucursalSaldoGlobalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>[]
          }
          create: {
            args: Prisma.SucursalSaldoGlobalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>
          }
          createMany: {
            args: Prisma.SucursalSaldoGlobalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SucursalSaldoGlobalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>[]
          }
          delete: {
            args: Prisma.SucursalSaldoGlobalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>
          }
          update: {
            args: Prisma.SucursalSaldoGlobalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>
          }
          deleteMany: {
            args: Prisma.SucursalSaldoGlobalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SucursalSaldoGlobalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SucursalSaldoGlobalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalSaldoGlobalPayload>
          }
          aggregate: {
            args: Prisma.SucursalSaldoGlobalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSucursalSaldoGlobal>
          }
          groupBy: {
            args: Prisma.SucursalSaldoGlobalGroupByArgs<ExtArgs>
            result: $Utils.Optional<SucursalSaldoGlobalGroupByOutputType>[]
          }
          count: {
            args: Prisma.SucursalSaldoGlobalCountArgs<ExtArgs>
            result: $Utils.Optional<SucursalSaldoGlobalCountAggregateOutputType> | number
          }
        }
      }
      Deposito: {
        payload: Prisma.$DepositoPayload<ExtArgs>
        fields: Prisma.DepositoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepositoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepositoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>
          }
          findFirst: {
            args: Prisma.DepositoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepositoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>
          }
          findMany: {
            args: Prisma.DepositoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>[]
          }
          create: {
            args: Prisma.DepositoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>
          }
          createMany: {
            args: Prisma.DepositoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepositoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>[]
          }
          delete: {
            args: Prisma.DepositoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>
          }
          update: {
            args: Prisma.DepositoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>
          }
          deleteMany: {
            args: Prisma.DepositoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepositoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DepositoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoPayload>
          }
          aggregate: {
            args: Prisma.DepositoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeposito>
          }
          groupBy: {
            args: Prisma.DepositoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepositoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepositoCountArgs<ExtArgs>
            result: $Utils.Optional<DepositoCountAggregateOutputType> | number
          }
        }
      }
      Egreso: {
        payload: Prisma.$EgresoPayload<ExtArgs>
        fields: Prisma.EgresoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EgresoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EgresoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>
          }
          findFirst: {
            args: Prisma.EgresoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EgresoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>
          }
          findMany: {
            args: Prisma.EgresoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>[]
          }
          create: {
            args: Prisma.EgresoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>
          }
          createMany: {
            args: Prisma.EgresoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EgresoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>[]
          }
          delete: {
            args: Prisma.EgresoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>
          }
          update: {
            args: Prisma.EgresoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>
          }
          deleteMany: {
            args: Prisma.EgresoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EgresoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EgresoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EgresoPayload>
          }
          aggregate: {
            args: Prisma.EgresoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEgreso>
          }
          groupBy: {
            args: Prisma.EgresoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EgresoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EgresoCountArgs<ExtArgs>
            result: $Utils.Optional<EgresoCountAggregateOutputType> | number
          }
        }
      }
      TicketSorteo: {
        payload: Prisma.$TicketSorteoPayload<ExtArgs>
        fields: Prisma.TicketSorteoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketSorteoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketSorteoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>
          }
          findFirst: {
            args: Prisma.TicketSorteoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketSorteoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>
          }
          findMany: {
            args: Prisma.TicketSorteoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>[]
          }
          create: {
            args: Prisma.TicketSorteoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>
          }
          createMany: {
            args: Prisma.TicketSorteoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TicketSorteoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>[]
          }
          delete: {
            args: Prisma.TicketSorteoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>
          }
          update: {
            args: Prisma.TicketSorteoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>
          }
          deleteMany: {
            args: Prisma.TicketSorteoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketSorteoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TicketSorteoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketSorteoPayload>
          }
          aggregate: {
            args: Prisma.TicketSorteoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicketSorteo>
          }
          groupBy: {
            args: Prisma.TicketSorteoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketSorteoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketSorteoCountArgs<ExtArgs>
            result: $Utils.Optional<TicketSorteoCountAggregateOutputType> | number
          }
        }
      }
      Vencimiento: {
        payload: Prisma.$VencimientoPayload<ExtArgs>
        fields: Prisma.VencimientoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VencimientoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VencimientoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>
          }
          findFirst: {
            args: Prisma.VencimientoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VencimientoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>
          }
          findMany: {
            args: Prisma.VencimientoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>[]
          }
          create: {
            args: Prisma.VencimientoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>
          }
          createMany: {
            args: Prisma.VencimientoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VencimientoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>[]
          }
          delete: {
            args: Prisma.VencimientoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>
          }
          update: {
            args: Prisma.VencimientoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>
          }
          deleteMany: {
            args: Prisma.VencimientoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VencimientoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VencimientoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VencimientoPayload>
          }
          aggregate: {
            args: Prisma.VencimientoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVencimiento>
          }
          groupBy: {
            args: Prisma.VencimientoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VencimientoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VencimientoCountArgs<ExtArgs>
            result: $Utils.Optional<VencimientoCountAggregateOutputType> | number
          }
        }
      }
      Notificacion: {
        payload: Prisma.$NotificacionPayload<ExtArgs>
        fields: Prisma.NotificacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          findFirst: {
            args: Prisma.NotificacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          findMany: {
            args: Prisma.NotificacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>[]
          }
          create: {
            args: Prisma.NotificacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          createMany: {
            args: Prisma.NotificacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>[]
          }
          delete: {
            args: Prisma.NotificacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          update: {
            args: Prisma.NotificacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          deleteMany: {
            args: Prisma.NotificacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionPayload>
          }
          aggregate: {
            args: Prisma.NotificacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacion>
          }
          groupBy: {
            args: Prisma.NotificacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacionCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacionCountAggregateOutputType> | number
          }
        }
      }
      NotificacionesUsuarios: {
        payload: Prisma.$NotificacionesUsuariosPayload<ExtArgs>
        fields: Prisma.NotificacionesUsuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacionesUsuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacionesUsuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>
          }
          findFirst: {
            args: Prisma.NotificacionesUsuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacionesUsuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>
          }
          findMany: {
            args: Prisma.NotificacionesUsuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>[]
          }
          create: {
            args: Prisma.NotificacionesUsuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>
          }
          createMany: {
            args: Prisma.NotificacionesUsuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacionesUsuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>[]
          }
          delete: {
            args: Prisma.NotificacionesUsuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>
          }
          update: {
            args: Prisma.NotificacionesUsuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>
          }
          deleteMany: {
            args: Prisma.NotificacionesUsuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacionesUsuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificacionesUsuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesUsuariosPayload>
          }
          aggregate: {
            args: Prisma.NotificacionesUsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificacionesUsuarios>
          }
          groupBy: {
            args: Prisma.NotificacionesUsuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacionesUsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacionesUsuariosCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacionesUsuariosCountAggregateOutputType> | number
          }
        }
      }
      SolicitudPrecio: {
        payload: Prisma.$SolicitudPrecioPayload<ExtArgs>
        fields: Prisma.SolicitudPrecioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SolicitudPrecioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SolicitudPrecioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>
          }
          findFirst: {
            args: Prisma.SolicitudPrecioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SolicitudPrecioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>
          }
          findMany: {
            args: Prisma.SolicitudPrecioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>[]
          }
          create: {
            args: Prisma.SolicitudPrecioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>
          }
          createMany: {
            args: Prisma.SolicitudPrecioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SolicitudPrecioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>[]
          }
          delete: {
            args: Prisma.SolicitudPrecioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>
          }
          update: {
            args: Prisma.SolicitudPrecioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>
          }
          deleteMany: {
            args: Prisma.SolicitudPrecioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SolicitudPrecioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SolicitudPrecioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudPrecioPayload>
          }
          aggregate: {
            args: Prisma.SolicitudPrecioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitudPrecio>
          }
          groupBy: {
            args: Prisma.SolicitudPrecioGroupByArgs<ExtArgs>
            result: $Utils.Optional<SolicitudPrecioGroupByOutputType>[]
          }
          count: {
            args: Prisma.SolicitudPrecioCountArgs<ExtArgs>
            result: $Utils.Optional<SolicitudPrecioCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      HistorialPrecioCosto: {
        payload: Prisma.$HistorialPrecioCostoPayload<ExtArgs>
        fields: Prisma.HistorialPrecioCostoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialPrecioCostoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialPrecioCostoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>
          }
          findFirst: {
            args: Prisma.HistorialPrecioCostoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialPrecioCostoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>
          }
          findMany: {
            args: Prisma.HistorialPrecioCostoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>[]
          }
          create: {
            args: Prisma.HistorialPrecioCostoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>
          }
          createMany: {
            args: Prisma.HistorialPrecioCostoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialPrecioCostoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>[]
          }
          delete: {
            args: Prisma.HistorialPrecioCostoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>
          }
          update: {
            args: Prisma.HistorialPrecioCostoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>
          }
          deleteMany: {
            args: Prisma.HistorialPrecioCostoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialPrecioCostoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HistorialPrecioCostoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioCostoPayload>
          }
          aggregate: {
            args: Prisma.HistorialPrecioCostoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialPrecioCosto>
          }
          groupBy: {
            args: Prisma.HistorialPrecioCostoGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialPrecioCostoGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialPrecioCostoCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialPrecioCostoCountAggregateOutputType> | number
          }
        }
      }
      PrecioProducto: {
        payload: Prisma.$PrecioProductoPayload<ExtArgs>
        fields: Prisma.PrecioProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PrecioProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PrecioProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>
          }
          findFirst: {
            args: Prisma.PrecioProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PrecioProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>
          }
          findMany: {
            args: Prisma.PrecioProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>[]
          }
          create: {
            args: Prisma.PrecioProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>
          }
          createMany: {
            args: Prisma.PrecioProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PrecioProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>[]
          }
          delete: {
            args: Prisma.PrecioProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>
          }
          update: {
            args: Prisma.PrecioProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>
          }
          deleteMany: {
            args: Prisma.PrecioProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PrecioProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PrecioProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecioProductoPayload>
          }
          aggregate: {
            args: Prisma.PrecioProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrecioProducto>
          }
          groupBy: {
            args: Prisma.PrecioProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PrecioProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PrecioProductoCountArgs<ExtArgs>
            result: $Utils.Optional<PrecioProductoCountAggregateOutputType> | number
          }
        }
      }
      HistorialPrecio: {
        payload: Prisma.$HistorialPrecioPayload<ExtArgs>
        fields: Prisma.HistorialPrecioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialPrecioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialPrecioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          findFirst: {
            args: Prisma.HistorialPrecioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialPrecioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          findMany: {
            args: Prisma.HistorialPrecioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>[]
          }
          create: {
            args: Prisma.HistorialPrecioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          createMany: {
            args: Prisma.HistorialPrecioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialPrecioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>[]
          }
          delete: {
            args: Prisma.HistorialPrecioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          update: {
            args: Prisma.HistorialPrecioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          deleteMany: {
            args: Prisma.HistorialPrecioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialPrecioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HistorialPrecioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          aggregate: {
            args: Prisma.HistorialPrecioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialPrecio>
          }
          groupBy: {
            args: Prisma.HistorialPrecioGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialPrecioGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialPrecioCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialPrecioCountAggregateOutputType> | number
          }
        }
      }
      AjusteStock: {
        payload: Prisma.$AjusteStockPayload<ExtArgs>
        fields: Prisma.AjusteStockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AjusteStockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AjusteStockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>
          }
          findFirst: {
            args: Prisma.AjusteStockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AjusteStockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>
          }
          findMany: {
            args: Prisma.AjusteStockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>[]
          }
          create: {
            args: Prisma.AjusteStockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>
          }
          createMany: {
            args: Prisma.AjusteStockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AjusteStockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>[]
          }
          delete: {
            args: Prisma.AjusteStockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>
          }
          update: {
            args: Prisma.AjusteStockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>
          }
          deleteMany: {
            args: Prisma.AjusteStockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AjusteStockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AjusteStockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AjusteStockPayload>
          }
          aggregate: {
            args: Prisma.AjusteStockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAjusteStock>
          }
          groupBy: {
            args: Prisma.AjusteStockGroupByArgs<ExtArgs>
            result: $Utils.Optional<AjusteStockGroupByOutputType>[]
          }
          count: {
            args: Prisma.AjusteStockCountArgs<ExtArgs>
            result: $Utils.Optional<AjusteStockCountAggregateOutputType> | number
          }
        }
      }
      EliminacionStock: {
        payload: Prisma.$EliminacionStockPayload<ExtArgs>
        fields: Prisma.EliminacionStockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EliminacionStockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EliminacionStockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>
          }
          findFirst: {
            args: Prisma.EliminacionStockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EliminacionStockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>
          }
          findMany: {
            args: Prisma.EliminacionStockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>[]
          }
          create: {
            args: Prisma.EliminacionStockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>
          }
          createMany: {
            args: Prisma.EliminacionStockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EliminacionStockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>[]
          }
          delete: {
            args: Prisma.EliminacionStockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>
          }
          update: {
            args: Prisma.EliminacionStockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>
          }
          deleteMany: {
            args: Prisma.EliminacionStockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EliminacionStockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EliminacionStockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionStockPayload>
          }
          aggregate: {
            args: Prisma.EliminacionStockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEliminacionStock>
          }
          groupBy: {
            args: Prisma.EliminacionStockGroupByArgs<ExtArgs>
            result: $Utils.Optional<EliminacionStockGroupByOutputType>[]
          }
          count: {
            args: Prisma.EliminacionStockCountArgs<ExtArgs>
            result: $Utils.Optional<EliminacionStockCountAggregateOutputType> | number
          }
        }
      }
      EliminacionProducto: {
        payload: Prisma.$EliminacionProductoPayload<ExtArgs>
        fields: Prisma.EliminacionProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EliminacionProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EliminacionProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>
          }
          findFirst: {
            args: Prisma.EliminacionProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EliminacionProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>
          }
          findMany: {
            args: Prisma.EliminacionProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>[]
          }
          create: {
            args: Prisma.EliminacionProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>
          }
          createMany: {
            args: Prisma.EliminacionProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EliminacionProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>[]
          }
          delete: {
            args: Prisma.EliminacionProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>
          }
          update: {
            args: Prisma.EliminacionProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>
          }
          deleteMany: {
            args: Prisma.EliminacionProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EliminacionProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EliminacionProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionProductoPayload>
          }
          aggregate: {
            args: Prisma.EliminacionProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEliminacionProducto>
          }
          groupBy: {
            args: Prisma.EliminacionProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EliminacionProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EliminacionProductoCountArgs<ExtArgs>
            result: $Utils.Optional<EliminacionProductoCountAggregateOutputType> | number
          }
        }
      }
      EliminacionCliente: {
        payload: Prisma.$EliminacionClientePayload<ExtArgs>
        fields: Prisma.EliminacionClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EliminacionClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EliminacionClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>
          }
          findFirst: {
            args: Prisma.EliminacionClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EliminacionClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>
          }
          findMany: {
            args: Prisma.EliminacionClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>[]
          }
          create: {
            args: Prisma.EliminacionClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>
          }
          createMany: {
            args: Prisma.EliminacionClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EliminacionClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>[]
          }
          delete: {
            args: Prisma.EliminacionClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>
          }
          update: {
            args: Prisma.EliminacionClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>
          }
          deleteMany: {
            args: Prisma.EliminacionClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EliminacionClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EliminacionClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EliminacionClientePayload>
          }
          aggregate: {
            args: Prisma.EliminacionClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEliminacionCliente>
          }
          groupBy: {
            args: Prisma.EliminacionClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<EliminacionClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.EliminacionClienteCountArgs<ExtArgs>
            result: $Utils.Optional<EliminacionClienteCountAggregateOutputType> | number
          }
        }
      }
      Stock: {
        payload: Prisma.$StockPayload<ExtArgs>
        fields: Prisma.StockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          findFirst: {
            args: Prisma.StockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          findMany: {
            args: Prisma.StockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>[]
          }
          create: {
            args: Prisma.StockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          createMany: {
            args: Prisma.StockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>[]
          }
          delete: {
            args: Prisma.StockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          update: {
            args: Prisma.StockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          deleteMany: {
            args: Prisma.StockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          aggregate: {
            args: Prisma.StockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock>
          }
          groupBy: {
            args: Prisma.StockGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockCountArgs<ExtArgs>
            result: $Utils.Optional<StockCountAggregateOutputType> | number
          }
        }
      }
      Sucursal: {
        payload: Prisma.$SucursalPayload<ExtArgs>
        fields: Prisma.SucursalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SucursalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SucursalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          findFirst: {
            args: Prisma.SucursalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SucursalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          findMany: {
            args: Prisma.SucursalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>[]
          }
          create: {
            args: Prisma.SucursalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          createMany: {
            args: Prisma.SucursalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SucursalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>[]
          }
          delete: {
            args: Prisma.SucursalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          update: {
            args: Prisma.SucursalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          deleteMany: {
            args: Prisma.SucursalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SucursalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SucursalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          aggregate: {
            args: Prisma.SucursalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSucursal>
          }
          groupBy: {
            args: Prisma.SucursalGroupByArgs<ExtArgs>
            result: $Utils.Optional<SucursalGroupByOutputType>[]
          }
          count: {
            args: Prisma.SucursalCountArgs<ExtArgs>
            result: $Utils.Optional<SucursalCountAggregateOutputType> | number
          }
        }
      }
      EntregaStock: {
        payload: Prisma.$EntregaStockPayload<ExtArgs>
        fields: Prisma.EntregaStockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EntregaStockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EntregaStockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>
          }
          findFirst: {
            args: Prisma.EntregaStockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EntregaStockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>
          }
          findMany: {
            args: Prisma.EntregaStockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>[]
          }
          create: {
            args: Prisma.EntregaStockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>
          }
          createMany: {
            args: Prisma.EntregaStockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EntregaStockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>[]
          }
          delete: {
            args: Prisma.EntregaStockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>
          }
          update: {
            args: Prisma.EntregaStockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>
          }
          deleteMany: {
            args: Prisma.EntregaStockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EntregaStockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EntregaStockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EntregaStockPayload>
          }
          aggregate: {
            args: Prisma.EntregaStockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEntregaStock>
          }
          groupBy: {
            args: Prisma.EntregaStockGroupByArgs<ExtArgs>
            result: $Utils.Optional<EntregaStockGroupByOutputType>[]
          }
          count: {
            args: Prisma.EntregaStockCountArgs<ExtArgs>
            result: $Utils.Optional<EntregaStockCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      MetaUsuario: {
        payload: Prisma.$MetaUsuarioPayload<ExtArgs>
        fields: Prisma.MetaUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MetaUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MetaUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>
          }
          findFirst: {
            args: Prisma.MetaUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MetaUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>
          }
          findMany: {
            args: Prisma.MetaUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>[]
          }
          create: {
            args: Prisma.MetaUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>
          }
          createMany: {
            args: Prisma.MetaUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MetaUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>[]
          }
          delete: {
            args: Prisma.MetaUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>
          }
          update: {
            args: Prisma.MetaUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.MetaUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MetaUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MetaUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaUsuarioPayload>
          }
          aggregate: {
            args: Prisma.MetaUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetaUsuario>
          }
          groupBy: {
            args: Prisma.MetaUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<MetaUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.MetaUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<MetaUsuarioCountAggregateOutputType> | number
          }
        }
      }
      MetaCobros: {
        payload: Prisma.$MetaCobrosPayload<ExtArgs>
        fields: Prisma.MetaCobrosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MetaCobrosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MetaCobrosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>
          }
          findFirst: {
            args: Prisma.MetaCobrosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MetaCobrosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>
          }
          findMany: {
            args: Prisma.MetaCobrosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>[]
          }
          create: {
            args: Prisma.MetaCobrosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>
          }
          createMany: {
            args: Prisma.MetaCobrosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MetaCobrosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>[]
          }
          delete: {
            args: Prisma.MetaCobrosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>
          }
          update: {
            args: Prisma.MetaCobrosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>
          }
          deleteMany: {
            args: Prisma.MetaCobrosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MetaCobrosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MetaCobrosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetaCobrosPayload>
          }
          aggregate: {
            args: Prisma.MetaCobrosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetaCobros>
          }
          groupBy: {
            args: Prisma.MetaCobrosGroupByArgs<ExtArgs>
            result: $Utils.Optional<MetaCobrosGroupByOutputType>[]
          }
          count: {
            args: Prisma.MetaCobrosCountArgs<ExtArgs>
            result: $Utils.Optional<MetaCobrosCountAggregateOutputType> | number
          }
        }
      }
      DepositoCobro: {
        payload: Prisma.$DepositoCobroPayload<ExtArgs>
        fields: Prisma.DepositoCobroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepositoCobroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepositoCobroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>
          }
          findFirst: {
            args: Prisma.DepositoCobroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepositoCobroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>
          }
          findMany: {
            args: Prisma.DepositoCobroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>[]
          }
          create: {
            args: Prisma.DepositoCobroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>
          }
          createMany: {
            args: Prisma.DepositoCobroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepositoCobroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>[]
          }
          delete: {
            args: Prisma.DepositoCobroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>
          }
          update: {
            args: Prisma.DepositoCobroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>
          }
          deleteMany: {
            args: Prisma.DepositoCobroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepositoCobroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DepositoCobroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositoCobroPayload>
          }
          aggregate: {
            args: Prisma.DepositoCobroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepositoCobro>
          }
          groupBy: {
            args: Prisma.DepositoCobroGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepositoCobroGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepositoCobroCountArgs<ExtArgs>
            result: $Utils.Optional<DepositoCobroCountAggregateOutputType> | number
          }
        }
      }
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Garantia: {
        payload: Prisma.$GarantiaPayload<ExtArgs>
        fields: Prisma.GarantiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GarantiaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GarantiaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>
          }
          findFirst: {
            args: Prisma.GarantiaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GarantiaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>
          }
          findMany: {
            args: Prisma.GarantiaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>[]
          }
          create: {
            args: Prisma.GarantiaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>
          }
          createMany: {
            args: Prisma.GarantiaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GarantiaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>[]
          }
          delete: {
            args: Prisma.GarantiaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>
          }
          update: {
            args: Prisma.GarantiaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>
          }
          deleteMany: {
            args: Prisma.GarantiaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GarantiaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GarantiaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GarantiaPayload>
          }
          aggregate: {
            args: Prisma.GarantiaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGarantia>
          }
          groupBy: {
            args: Prisma.GarantiaGroupByArgs<ExtArgs>
            result: $Utils.Optional<GarantiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.GarantiaCountArgs<ExtArgs>
            result: $Utils.Optional<GarantiaCountAggregateOutputType> | number
          }
        }
      }
      RegistroGarantia: {
        payload: Prisma.$RegistroGarantiaPayload<ExtArgs>
        fields: Prisma.RegistroGarantiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroGarantiaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroGarantiaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>
          }
          findFirst: {
            args: Prisma.RegistroGarantiaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroGarantiaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>
          }
          findMany: {
            args: Prisma.RegistroGarantiaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>[]
          }
          create: {
            args: Prisma.RegistroGarantiaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>
          }
          createMany: {
            args: Prisma.RegistroGarantiaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroGarantiaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>[]
          }
          delete: {
            args: Prisma.RegistroGarantiaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>
          }
          update: {
            args: Prisma.RegistroGarantiaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>
          }
          deleteMany: {
            args: Prisma.RegistroGarantiaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroGarantiaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RegistroGarantiaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroGarantiaPayload>
          }
          aggregate: {
            args: Prisma.RegistroGarantiaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistroGarantia>
          }
          groupBy: {
            args: Prisma.RegistroGarantiaGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroGarantiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroGarantiaCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroGarantiaCountAggregateOutputType> | number
          }
        }
      }
      Pago: {
        payload: Prisma.$PagoPayload<ExtArgs>
        fields: Prisma.PagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findFirst: {
            args: Prisma.PagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findMany: {
            args: Prisma.PagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          create: {
            args: Prisma.PagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          createMany: {
            args: Prisma.PagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          delete: {
            args: Prisma.PagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          update: {
            args: Prisma.PagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          deleteMany: {
            args: Prisma.PagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          aggregate: {
            args: Prisma.PagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePago>
          }
          groupBy: {
            args: Prisma.PagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagoCountArgs<ExtArgs>
            result: $Utils.Optional<PagoCountAggregateOutputType> | number
          }
        }
      }
      HistorialStock: {
        payload: Prisma.$HistorialStockPayload<ExtArgs>
        fields: Prisma.HistorialStockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialStockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialStockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>
          }
          findFirst: {
            args: Prisma.HistorialStockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialStockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>
          }
          findMany: {
            args: Prisma.HistorialStockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>[]
          }
          create: {
            args: Prisma.HistorialStockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>
          }
          createMany: {
            args: Prisma.HistorialStockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialStockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>[]
          }
          delete: {
            args: Prisma.HistorialStockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>
          }
          update: {
            args: Prisma.HistorialStockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>
          }
          deleteMany: {
            args: Prisma.HistorialStockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialStockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HistorialStockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialStockPayload>
          }
          aggregate: {
            args: Prisma.HistorialStockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialStock>
          }
          groupBy: {
            args: Prisma.HistorialStockGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialStockGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialStockCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialStockCountAggregateOutputType> | number
          }
        }
      }
      Venta: {
        payload: Prisma.$VentaPayload<ExtArgs>
        fields: Prisma.VentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findFirst: {
            args: Prisma.VentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findMany: {
            args: Prisma.VentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          create: {
            args: Prisma.VentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          createMany: {
            args: Prisma.VentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          delete: {
            args: Prisma.VentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          update: {
            args: Prisma.VentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          deleteMany: {
            args: Prisma.VentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.VentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
      TransferenciaProducto: {
        payload: Prisma.$TransferenciaProductoPayload<ExtArgs>
        fields: Prisma.TransferenciaProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransferenciaProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransferenciaProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>
          }
          findFirst: {
            args: Prisma.TransferenciaProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransferenciaProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>
          }
          findMany: {
            args: Prisma.TransferenciaProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>[]
          }
          create: {
            args: Prisma.TransferenciaProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>
          }
          createMany: {
            args: Prisma.TransferenciaProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransferenciaProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>[]
          }
          delete: {
            args: Prisma.TransferenciaProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>
          }
          update: {
            args: Prisma.TransferenciaProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>
          }
          deleteMany: {
            args: Prisma.TransferenciaProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransferenciaProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransferenciaProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferenciaProductoPayload>
          }
          aggregate: {
            args: Prisma.TransferenciaProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransferenciaProducto>
          }
          groupBy: {
            args: Prisma.TransferenciaProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransferenciaProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransferenciaProductoCountArgs<ExtArgs>
            result: $Utils.Optional<TransferenciaProductoCountAggregateOutputType> | number
          }
        }
      }
      SolicitudTransferenciaProducto: {
        payload: Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>
        fields: Prisma.SolicitudTransferenciaProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SolicitudTransferenciaProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SolicitudTransferenciaProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>
          }
          findFirst: {
            args: Prisma.SolicitudTransferenciaProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SolicitudTransferenciaProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>
          }
          findMany: {
            args: Prisma.SolicitudTransferenciaProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>[]
          }
          create: {
            args: Prisma.SolicitudTransferenciaProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>
          }
          createMany: {
            args: Prisma.SolicitudTransferenciaProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SolicitudTransferenciaProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>[]
          }
          delete: {
            args: Prisma.SolicitudTransferenciaProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>
          }
          update: {
            args: Prisma.SolicitudTransferenciaProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>
          }
          deleteMany: {
            args: Prisma.SolicitudTransferenciaProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SolicitudTransferenciaProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SolicitudTransferenciaProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SolicitudTransferenciaProductoPayload>
          }
          aggregate: {
            args: Prisma.SolicitudTransferenciaProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSolicitudTransferenciaProducto>
          }
          groupBy: {
            args: Prisma.SolicitudTransferenciaProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<SolicitudTransferenciaProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.SolicitudTransferenciaProductoCountArgs<ExtArgs>
            result: $Utils.Optional<SolicitudTransferenciaProductoCountAggregateOutputType> | number
          }
        }
      }
      VentaProducto: {
        payload: Prisma.$VentaProductoPayload<ExtArgs>
        fields: Prisma.VentaProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>
          }
          findFirst: {
            args: Prisma.VentaProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>
          }
          findMany: {
            args: Prisma.VentaProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>[]
          }
          create: {
            args: Prisma.VentaProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>
          }
          createMany: {
            args: Prisma.VentaProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>[]
          }
          delete: {
            args: Prisma.VentaProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>
          }
          update: {
            args: Prisma.VentaProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>
          }
          deleteMany: {
            args: Prisma.VentaProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VentaProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaProductoPayload>
          }
          aggregate: {
            args: Prisma.VentaProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVentaProducto>
          }
          groupBy: {
            args: Prisma.VentaProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaProductoCountArgs<ExtArgs>
            result: $Utils.Optional<VentaProductoCountAggregateOutputType> | number
          }
        }
      }
      Proveedor: {
        payload: Prisma.$ProveedorPayload<ExtArgs>
        fields: Prisma.ProveedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProveedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProveedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          findFirst: {
            args: Prisma.ProveedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProveedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          findMany: {
            args: Prisma.ProveedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>[]
          }
          create: {
            args: Prisma.ProveedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          createMany: {
            args: Prisma.ProveedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProveedorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>[]
          }
          delete: {
            args: Prisma.ProveedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          update: {
            args: Prisma.ProveedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          deleteMany: {
            args: Prisma.ProveedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProveedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProveedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          aggregate: {
            args: Prisma.ProveedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProveedor>
          }
          groupBy: {
            args: Prisma.ProveedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProveedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProveedorCountArgs<ExtArgs>
            result: $Utils.Optional<ProveedorCountAggregateOutputType> | number
          }
        }
      }
      Categoria: {
        payload: Prisma.$CategoriaPayload<ExtArgs>
        fields: Prisma.CategoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findFirst: {
            args: Prisma.CategoriaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          findMany: {
            args: Prisma.CategoriaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          create: {
            args: Prisma.CategoriaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          createMany: {
            args: Prisma.CategoriaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          update: {
            args: Prisma.CategoriaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoriaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.CategoriaGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      Departamento: {
        payload: Prisma.$DepartamentoPayload<ExtArgs>
        fields: Prisma.DepartamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepartamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepartamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          findFirst: {
            args: Prisma.DepartamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepartamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          findMany: {
            args: Prisma.DepartamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          create: {
            args: Prisma.DepartamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          createMany: {
            args: Prisma.DepartamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepartamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>[]
          }
          delete: {
            args: Prisma.DepartamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          update: {
            args: Prisma.DepartamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          deleteMany: {
            args: Prisma.DepartamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepartamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DepartamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartamentoPayload>
          }
          aggregate: {
            args: Prisma.DepartamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartamento>
          }
          groupBy: {
            args: Prisma.DepartamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepartamentoCountArgs<ExtArgs>
            result: $Utils.Optional<DepartamentoCountAggregateOutputType> | number
          }
        }
      }
      Municipio: {
        payload: Prisma.$MunicipioPayload<ExtArgs>
        fields: Prisma.MunicipioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MunicipioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MunicipioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          findFirst: {
            args: Prisma.MunicipioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MunicipioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          findMany: {
            args: Prisma.MunicipioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>[]
          }
          create: {
            args: Prisma.MunicipioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          createMany: {
            args: Prisma.MunicipioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MunicipioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>[]
          }
          delete: {
            args: Prisma.MunicipioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          update: {
            args: Prisma.MunicipioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          deleteMany: {
            args: Prisma.MunicipioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MunicipioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MunicipioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MunicipioPayload>
          }
          aggregate: {
            args: Prisma.MunicipioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMunicipio>
          }
          groupBy: {
            args: Prisma.MunicipioGroupByArgs<ExtArgs>
            result: $Utils.Optional<MunicipioGroupByOutputType>[]
          }
          count: {
            args: Prisma.MunicipioCountArgs<ExtArgs>
            result: $Utils.Optional<MunicipioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ReparacionCountOutputType
   */

  export type ReparacionCountOutputType = {
    registros: number
  }

  export type ReparacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registros?: boolean | ReparacionCountOutputTypeCountRegistrosArgs
  }

  // Custom InputTypes
  /**
   * ReparacionCountOutputType without action
   */
  export type ReparacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReparacionCountOutputType
     */
    select?: ReparacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReparacionCountOutputType without action
   */
  export type ReparacionCountOutputTypeCountRegistrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroReparacionWhereInput
  }


  /**
   * Count Type VentaCuotaCountOutputType
   */

  export type VentaCuotaCountOutputType = {
    cuotas: number
  }

  export type VentaCuotaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuotas?: boolean | VentaCuotaCountOutputTypeCountCuotasArgs
  }

  // Custom InputTypes
  /**
   * VentaCuotaCountOutputType without action
   */
  export type VentaCuotaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuotaCountOutputType
     */
    select?: VentaCuotaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentaCuotaCountOutputType without action
   */
  export type VentaCuotaCountOutputTypeCountCuotasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CuotaWhereInput
  }


  /**
   * Count Type VentaEliminadaCountOutputType
   */

  export type VentaEliminadaCountOutputType = {
    VentaEliminadaProducto: number
  }

  export type VentaEliminadaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VentaEliminadaProducto?: boolean | VentaEliminadaCountOutputTypeCountVentaEliminadaProductoArgs
  }

  // Custom InputTypes
  /**
   * VentaEliminadaCountOutputType without action
   */
  export type VentaEliminadaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaCountOutputType
     */
    select?: VentaEliminadaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentaEliminadaCountOutputType without action
   */
  export type VentaEliminadaCountOutputTypeCountVentaEliminadaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaProductoWhereInput
  }


  /**
   * Count Type RegistroCajaCountOutputType
   */

  export type RegistroCajaCountOutputType = {
    depositos: number
    egresos: number
    ventas: number
  }

  export type RegistroCajaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    depositos?: boolean | RegistroCajaCountOutputTypeCountDepositosArgs
    egresos?: boolean | RegistroCajaCountOutputTypeCountEgresosArgs
    ventas?: boolean | RegistroCajaCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * RegistroCajaCountOutputType without action
   */
  export type RegistroCajaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCajaCountOutputType
     */
    select?: RegistroCajaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegistroCajaCountOutputType without action
   */
  export type RegistroCajaCountOutputTypeCountDepositosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoWhereInput
  }

  /**
   * RegistroCajaCountOutputType without action
   */
  export type RegistroCajaCountOutputTypeCountEgresosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoWhereInput
  }

  /**
   * RegistroCajaCountOutputType without action
   */
  export type RegistroCajaCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }


  /**
   * Count Type NotificacionCountOutputType
   */

  export type NotificacionCountOutputType = {
    notificacionesUsuarios: number
    Usuario: number
  }

  export type NotificacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notificacionesUsuarios?: boolean | NotificacionCountOutputTypeCountNotificacionesUsuariosArgs
    Usuario?: boolean | NotificacionCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * NotificacionCountOutputType without action
   */
  export type NotificacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionCountOutputType
     */
    select?: NotificacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NotificacionCountOutputType without action
   */
  export type NotificacionCountOutputTypeCountNotificacionesUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionesUsuariosWhereInput
  }

  /**
   * NotificacionCountOutputType without action
   */
  export type NotificacionCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    stock: number
    categorias: number
    ventas: number
    HistorialStock: number
    HistorialPrecio: number
    TransferenciaProducto: number
    precios: number
    SolicitudPrecio: number
    solicitudesTransferencia: number
    HistorialPrecioCosto: number
    AjusteStock: number
    EliminacionProducto: number
    EliminacionStock: number
    Garantia: number
    RegistroGarantia: number
    VentaEliminadaProducto: number
    Reparacion: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock?: boolean | ProductoCountOutputTypeCountStockArgs
    categorias?: boolean | ProductoCountOutputTypeCountCategoriasArgs
    ventas?: boolean | ProductoCountOutputTypeCountVentasArgs
    HistorialStock?: boolean | ProductoCountOutputTypeCountHistorialStockArgs
    HistorialPrecio?: boolean | ProductoCountOutputTypeCountHistorialPrecioArgs
    TransferenciaProducto?: boolean | ProductoCountOutputTypeCountTransferenciaProductoArgs
    precios?: boolean | ProductoCountOutputTypeCountPreciosArgs
    SolicitudPrecio?: boolean | ProductoCountOutputTypeCountSolicitudPrecioArgs
    solicitudesTransferencia?: boolean | ProductoCountOutputTypeCountSolicitudesTransferenciaArgs
    HistorialPrecioCosto?: boolean | ProductoCountOutputTypeCountHistorialPrecioCostoArgs
    AjusteStock?: boolean | ProductoCountOutputTypeCountAjusteStockArgs
    EliminacionProducto?: boolean | ProductoCountOutputTypeCountEliminacionProductoArgs
    EliminacionStock?: boolean | ProductoCountOutputTypeCountEliminacionStockArgs
    Garantia?: boolean | ProductoCountOutputTypeCountGarantiaArgs
    RegistroGarantia?: boolean | ProductoCountOutputTypeCountRegistroGarantiaArgs
    VentaEliminadaProducto?: boolean | ProductoCountOutputTypeCountVentaEliminadaProductoArgs
    Reparacion?: boolean | ProductoCountOutputTypeCountReparacionArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountCategoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountHistorialStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialStockWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountHistorialPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountTransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrecioProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountSolicitudPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudPrecioWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountSolicitudesTransferenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountHistorialPrecioCostoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioCostoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountAjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AjusteStockWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountEliminacionProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountEliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionStockWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GarantiaWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountRegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroGarantiaWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountVentaEliminadaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaProductoWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReparacionWhereInput
  }


  /**
   * Count Type StockCountOutputType
   */

  export type StockCountOutputType = {
    Vencimiento: number
    AjusteStock: number
  }

  export type StockCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Vencimiento?: boolean | StockCountOutputTypeCountVencimientoArgs
    AjusteStock?: boolean | StockCountOutputTypeCountAjusteStockArgs
  }

  // Custom InputTypes
  /**
   * StockCountOutputType without action
   */
  export type StockCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockCountOutputType
     */
    select?: StockCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StockCountOutputType without action
   */
  export type StockCountOutputTypeCountVencimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VencimientoWhereInput
  }

  /**
   * StockCountOutputType without action
   */
  export type StockCountOutputTypeCountAjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AjusteStockWhereInput
  }


  /**
   * Count Type SucursalCountOutputType
   */

  export type SucursalCountOutputType = {
    productos: number
    usuarios: number
    Venta: number
    TransferenciaProducto: number
    TransferenciaProductoDestino: number
    EntregaStock: number
    solicitudesOrigen: number
    solicitudesDestino: number
    EliminacionStock: number
    RegistroCaja: number
    Deposito: number
    Egreso: number
    VentaEliminada: number
    VentaCuota: number
    PlantillaComprobante: number
    Reparacion: number
    MetaUsuario: number
    MetaCobros: number
    DepositoCobro: number
  }

  export type SucursalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | SucursalCountOutputTypeCountProductosArgs
    usuarios?: boolean | SucursalCountOutputTypeCountUsuariosArgs
    Venta?: boolean | SucursalCountOutputTypeCountVentaArgs
    TransferenciaProducto?: boolean | SucursalCountOutputTypeCountTransferenciaProductoArgs
    TransferenciaProductoDestino?: boolean | SucursalCountOutputTypeCountTransferenciaProductoDestinoArgs
    EntregaStock?: boolean | SucursalCountOutputTypeCountEntregaStockArgs
    solicitudesOrigen?: boolean | SucursalCountOutputTypeCountSolicitudesOrigenArgs
    solicitudesDestino?: boolean | SucursalCountOutputTypeCountSolicitudesDestinoArgs
    EliminacionStock?: boolean | SucursalCountOutputTypeCountEliminacionStockArgs
    RegistroCaja?: boolean | SucursalCountOutputTypeCountRegistroCajaArgs
    Deposito?: boolean | SucursalCountOutputTypeCountDepositoArgs
    Egreso?: boolean | SucursalCountOutputTypeCountEgresoArgs
    VentaEliminada?: boolean | SucursalCountOutputTypeCountVentaEliminadaArgs
    VentaCuota?: boolean | SucursalCountOutputTypeCountVentaCuotaArgs
    PlantillaComprobante?: boolean | SucursalCountOutputTypeCountPlantillaComprobanteArgs
    Reparacion?: boolean | SucursalCountOutputTypeCountReparacionArgs
    MetaUsuario?: boolean | SucursalCountOutputTypeCountMetaUsuarioArgs
    MetaCobros?: boolean | SucursalCountOutputTypeCountMetaCobrosArgs
    DepositoCobro?: boolean | SucursalCountOutputTypeCountDepositoCobroArgs
  }

  // Custom InputTypes
  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalCountOutputType
     */
    select?: SucursalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountTransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaProductoWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountTransferenciaProductoDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaProductoWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountEntregaStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EntregaStockWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountSolicitudesOrigenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountSolicitudesDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountEliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionStockWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountRegistroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroCajaWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountDepositoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountEgresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountVentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountVentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaCuotaWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountPlantillaComprobanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlantillaComprobanteWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReparacionWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountMetaUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetaUsuarioWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountMetaCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetaCobrosWhereInput
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountDepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoCobroWhereInput
  }


  /**
   * Count Type EntregaStockCountOutputType
   */

  export type EntregaStockCountOutputType = {
    stockEntregado: number
  }

  export type EntregaStockCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stockEntregado?: boolean | EntregaStockCountOutputTypeCountStockEntregadoArgs
  }

  // Custom InputTypes
  /**
   * EntregaStockCountOutputType without action
   */
  export type EntregaStockCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStockCountOutputType
     */
    select?: EntregaStockCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EntregaStockCountOutputType without action
   */
  export type EntregaStockCountOutputTypeCountStockEntregadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    entregasRecibidas: number
    TransferenciaProducto: number
    PrecioProducto: number
    solicitudesPrecio: number
    solicitudesAprobadas: number
    notificacionesEnviadas: number
    notificacionesRecibidas: number
    notificacionesUsuarios: number
    solicitudesEnviadas: number
    solicitudesAprobadasTransferencia: number
    HistorialPrecioCosto: number
    AjusteStock: number
    EliminacionProducto: number
    EliminacionCliente: number
    EliminacionStock: number
    RegistroGarantia: number
    Garantia: number
    RegistroCaja: number
    Deposito: number
    Egreso: number
    VentaEliminada: number
    VentaCuota: number
    Cuota: number
    Reparacion: number
    RegistroReparacion: number
    MetaUsuario: number
    MetaCobros: number
    DepositoCobro: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entregasRecibidas?: boolean | UsuarioCountOutputTypeCountEntregasRecibidasArgs
    TransferenciaProducto?: boolean | UsuarioCountOutputTypeCountTransferenciaProductoArgs
    PrecioProducto?: boolean | UsuarioCountOutputTypeCountPrecioProductoArgs
    solicitudesPrecio?: boolean | UsuarioCountOutputTypeCountSolicitudesPrecioArgs
    solicitudesAprobadas?: boolean | UsuarioCountOutputTypeCountSolicitudesAprobadasArgs
    notificacionesEnviadas?: boolean | UsuarioCountOutputTypeCountNotificacionesEnviadasArgs
    notificacionesRecibidas?: boolean | UsuarioCountOutputTypeCountNotificacionesRecibidasArgs
    notificacionesUsuarios?: boolean | UsuarioCountOutputTypeCountNotificacionesUsuariosArgs
    solicitudesEnviadas?: boolean | UsuarioCountOutputTypeCountSolicitudesEnviadasArgs
    solicitudesAprobadasTransferencia?: boolean | UsuarioCountOutputTypeCountSolicitudesAprobadasTransferenciaArgs
    HistorialPrecioCosto?: boolean | UsuarioCountOutputTypeCountHistorialPrecioCostoArgs
    AjusteStock?: boolean | UsuarioCountOutputTypeCountAjusteStockArgs
    EliminacionProducto?: boolean | UsuarioCountOutputTypeCountEliminacionProductoArgs
    EliminacionCliente?: boolean | UsuarioCountOutputTypeCountEliminacionClienteArgs
    EliminacionStock?: boolean | UsuarioCountOutputTypeCountEliminacionStockArgs
    RegistroGarantia?: boolean | UsuarioCountOutputTypeCountRegistroGarantiaArgs
    Garantia?: boolean | UsuarioCountOutputTypeCountGarantiaArgs
    RegistroCaja?: boolean | UsuarioCountOutputTypeCountRegistroCajaArgs
    Deposito?: boolean | UsuarioCountOutputTypeCountDepositoArgs
    Egreso?: boolean | UsuarioCountOutputTypeCountEgresoArgs
    VentaEliminada?: boolean | UsuarioCountOutputTypeCountVentaEliminadaArgs
    VentaCuota?: boolean | UsuarioCountOutputTypeCountVentaCuotaArgs
    Cuota?: boolean | UsuarioCountOutputTypeCountCuotaArgs
    Reparacion?: boolean | UsuarioCountOutputTypeCountReparacionArgs
    RegistroReparacion?: boolean | UsuarioCountOutputTypeCountRegistroReparacionArgs
    MetaUsuario?: boolean | UsuarioCountOutputTypeCountMetaUsuarioArgs
    MetaCobros?: boolean | UsuarioCountOutputTypeCountMetaCobrosArgs
    DepositoCobro?: boolean | UsuarioCountOutputTypeCountDepositoCobroArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEntregasRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EntregaStockWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountTransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaProductoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPrecioProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrecioProductoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountSolicitudesPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudPrecioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountSolicitudesAprobadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudPrecioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountNotificacionesEnviadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountNotificacionesRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountNotificacionesUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionesUsuariosWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountSolicitudesEnviadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountSolicitudesAprobadasTransferenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountHistorialPrecioCostoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioCostoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AjusteStockWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEliminacionProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionProductoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEliminacionClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionClienteWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionStockWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroGarantiaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GarantiaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRegistroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroCajaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDepositoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEgresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountVentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountVentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaCuotaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CuotaWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReparacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountRegistroReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroReparacionWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMetaUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetaUsuarioWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMetaCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetaCobrosWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountDepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoCobroWhereInput
  }


  /**
   * Count Type MetaCobrosCountOutputType
   */

  export type MetaCobrosCountOutputType = {
    DepositoCobro: number
  }

  export type MetaCobrosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DepositoCobro?: boolean | MetaCobrosCountOutputTypeCountDepositoCobroArgs
  }

  // Custom InputTypes
  /**
   * MetaCobrosCountOutputType without action
   */
  export type MetaCobrosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobrosCountOutputType
     */
    select?: MetaCobrosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MetaCobrosCountOutputType without action
   */
  export type MetaCobrosCountOutputTypeCountDepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoCobroWhereInput
  }


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    compras: number
    EliminacionCliente: number
    Garantia: number
    VentaEliminada: number
    VentaCuota: number
    Reparacion: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | ClienteCountOutputTypeCountComprasArgs
    EliminacionCliente?: boolean | ClienteCountOutputTypeCountEliminacionClienteArgs
    Garantia?: boolean | ClienteCountOutputTypeCountGarantiaArgs
    VentaEliminada?: boolean | ClienteCountOutputTypeCountVentaEliminadaArgs
    VentaCuota?: boolean | ClienteCountOutputTypeCountVentaCuotaArgs
    Reparacion?: boolean | ClienteCountOutputTypeCountReparacionArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountEliminacionClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionClienteWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GarantiaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountVentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountVentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaCuotaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReparacionWhereInput
  }


  /**
   * Count Type GarantiaCountOutputType
   */

  export type GarantiaCountOutputType = {
    registros: number
  }

  export type GarantiaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registros?: boolean | GarantiaCountOutputTypeCountRegistrosArgs
  }

  // Custom InputTypes
  /**
   * GarantiaCountOutputType without action
   */
  export type GarantiaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GarantiaCountOutputType
     */
    select?: GarantiaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GarantiaCountOutputType without action
   */
  export type GarantiaCountOutputTypeCountRegistrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroGarantiaWhereInput
  }


  /**
   * Count Type VentaCountOutputType
   */

  export type VentaCountOutputType = {
    productos: number
  }

  export type VentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | VentaCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCountOutputType
     */
    select?: VentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaProductoWhereInput
  }


  /**
   * Count Type ProveedorCountOutputType
   */

  export type ProveedorCountOutputType = {
    entregasStock: number
    Garantia: number
    RegistroGarantia: number
  }

  export type ProveedorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entregasStock?: boolean | ProveedorCountOutputTypeCountEntregasStockArgs
    Garantia?: boolean | ProveedorCountOutputTypeCountGarantiaArgs
    RegistroGarantia?: boolean | ProveedorCountOutputTypeCountRegistroGarantiaArgs
  }

  // Custom InputTypes
  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProveedorCountOutputType
     */
    select?: ProveedorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeCountEntregasStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EntregaStockWhereInput
  }

  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeCountGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GarantiaWhereInput
  }

  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeCountRegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroGarantiaWhereInput
  }


  /**
   * Count Type CategoriaCountOutputType
   */

  export type CategoriaCountOutputType = {
    productos: number
  }

  export type CategoriaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | CategoriaCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaCountOutputType
     */
    select?: CategoriaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaCountOutputType without action
   */
  export type CategoriaCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type DepartamentoCountOutputType
   */

  export type DepartamentoCountOutputType = {
    municipios: number
    clientes: number
  }

  export type DepartamentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    municipios?: boolean | DepartamentoCountOutputTypeCountMunicipiosArgs
    clientes?: boolean | DepartamentoCountOutputTypeCountClientesArgs
  }

  // Custom InputTypes
  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartamentoCountOutputType
     */
    select?: DepartamentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountMunicipiosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipioWhereInput
  }

  /**
   * DepartamentoCountOutputType without action
   */
  export type DepartamentoCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }


  /**
   * Count Type MunicipioCountOutputType
   */

  export type MunicipioCountOutputType = {
    clientes: number
  }

  export type MunicipioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | MunicipioCountOutputTypeCountClientesArgs
  }

  // Custom InputTypes
  /**
   * MunicipioCountOutputType without action
   */
  export type MunicipioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MunicipioCountOutputType
     */
    select?: MunicipioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MunicipioCountOutputType without action
   */
  export type MunicipioCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Reparacion
   */

  export type AggregateReparacion = {
    _count: ReparacionCountAggregateOutputType | null
    _avg: ReparacionAvgAggregateOutputType | null
    _sum: ReparacionSumAggregateOutputType | null
    _min: ReparacionMinAggregateOutputType | null
    _max: ReparacionMaxAggregateOutputType | null
  }

  export type ReparacionAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    clienteId: number | null
    productoId: number | null
  }

  export type ReparacionSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    clienteId: number | null
    productoId: number | null
  }

  export type ReparacionMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    clienteId: number | null
    productoId: number | null
    productoExterno: string | null
    problemas: string | null
    observaciones: string | null
    fechaRecibido: Date | null
    fechaEntregado: Date | null
    estado: $Enums.EstadoReparacion | null
    hojaSolucion: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type ReparacionMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    clienteId: number | null
    productoId: number | null
    productoExterno: string | null
    problemas: string | null
    observaciones: string | null
    fechaRecibido: Date | null
    fechaEntregado: Date | null
    estado: $Enums.EstadoReparacion | null
    hojaSolucion: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type ReparacionCountAggregateOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoId: number
    productoExterno: number
    problemas: number
    observaciones: number
    fechaRecibido: number
    fechaEntregado: number
    estado: number
    hojaSolucion: number
    creadoEn: number
    actualizadoEn: number
    _all: number
  }


  export type ReparacionAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    clienteId?: true
    productoId?: true
  }

  export type ReparacionSumAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    clienteId?: true
    productoId?: true
  }

  export type ReparacionMinAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    clienteId?: true
    productoId?: true
    productoExterno?: true
    problemas?: true
    observaciones?: true
    fechaRecibido?: true
    fechaEntregado?: true
    estado?: true
    hojaSolucion?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type ReparacionMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    clienteId?: true
    productoId?: true
    productoExterno?: true
    problemas?: true
    observaciones?: true
    fechaRecibido?: true
    fechaEntregado?: true
    estado?: true
    hojaSolucion?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type ReparacionCountAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    clienteId?: true
    productoId?: true
    productoExterno?: true
    problemas?: true
    observaciones?: true
    fechaRecibido?: true
    fechaEntregado?: true
    estado?: true
    hojaSolucion?: true
    creadoEn?: true
    actualizadoEn?: true
    _all?: true
  }

  export type ReparacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reparacion to aggregate.
     */
    where?: ReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reparacions to fetch.
     */
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reparacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reparacions
    **/
    _count?: true | ReparacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReparacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReparacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReparacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReparacionMaxAggregateInputType
  }

  export type GetReparacionAggregateType<T extends ReparacionAggregateArgs> = {
        [P in keyof T & keyof AggregateReparacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReparacion[P]>
      : GetScalarType<T[P], AggregateReparacion[P]>
  }




  export type ReparacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReparacionWhereInput
    orderBy?: ReparacionOrderByWithAggregationInput | ReparacionOrderByWithAggregationInput[]
    by: ReparacionScalarFieldEnum[] | ReparacionScalarFieldEnum
    having?: ReparacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReparacionCountAggregateInputType | true
    _avg?: ReparacionAvgAggregateInputType
    _sum?: ReparacionSumAggregateInputType
    _min?: ReparacionMinAggregateInputType
    _max?: ReparacionMaxAggregateInputType
  }

  export type ReparacionGroupByOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoId: number | null
    productoExterno: string | null
    problemas: string
    observaciones: string | null
    fechaRecibido: Date
    fechaEntregado: Date | null
    estado: $Enums.EstadoReparacion
    hojaSolucion: string | null
    creadoEn: Date
    actualizadoEn: Date
    _count: ReparacionCountAggregateOutputType | null
    _avg: ReparacionAvgAggregateOutputType | null
    _sum: ReparacionSumAggregateOutputType | null
    _min: ReparacionMinAggregateOutputType | null
    _max: ReparacionMaxAggregateOutputType | null
  }

  type GetReparacionGroupByPayload<T extends ReparacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReparacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReparacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReparacionGroupByOutputType[P]>
            : GetScalarType<T[P], ReparacionGroupByOutputType[P]>
        }
      >
    >


  export type ReparacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    clienteId?: boolean
    productoId?: boolean
    productoExterno?: boolean
    problemas?: boolean
    observaciones?: boolean
    fechaRecibido?: boolean
    fechaEntregado?: boolean
    estado?: boolean
    hojaSolucion?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | Reparacion$productoArgs<ExtArgs>
    registros?: boolean | Reparacion$registrosArgs<ExtArgs>
    _count?: boolean | ReparacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reparacion"]>

  export type ReparacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    clienteId?: boolean
    productoId?: boolean
    productoExterno?: boolean
    problemas?: boolean
    observaciones?: boolean
    fechaRecibido?: boolean
    fechaEntregado?: boolean
    estado?: boolean
    hojaSolucion?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | Reparacion$productoArgs<ExtArgs>
  }, ExtArgs["result"]["reparacion"]>

  export type ReparacionSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    clienteId?: boolean
    productoId?: boolean
    productoExterno?: boolean
    problemas?: boolean
    observaciones?: boolean
    fechaRecibido?: boolean
    fechaEntregado?: boolean
    estado?: boolean
    hojaSolucion?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }

  export type ReparacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | Reparacion$productoArgs<ExtArgs>
    registros?: boolean | Reparacion$registrosArgs<ExtArgs>
    _count?: boolean | ReparacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReparacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | Reparacion$productoArgs<ExtArgs>
  }

  export type $ReparacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reparacion"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      cliente: Prisma.$ClientePayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs> | null
      registros: Prisma.$RegistroReparacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      sucursalId: number
      clienteId: number
      productoId: number | null
      productoExterno: string | null
      problemas: string
      observaciones: string | null
      fechaRecibido: Date
      fechaEntregado: Date | null
      estado: $Enums.EstadoReparacion
      hojaSolucion: string | null
      creadoEn: Date
      actualizadoEn: Date
    }, ExtArgs["result"]["reparacion"]>
    composites: {}
  }

  type ReparacionGetPayload<S extends boolean | null | undefined | ReparacionDefaultArgs> = $Result.GetResult<Prisma.$ReparacionPayload, S>

  type ReparacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReparacionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReparacionCountAggregateInputType | true
    }

  export interface ReparacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reparacion'], meta: { name: 'Reparacion' } }
    /**
     * Find zero or one Reparacion that matches the filter.
     * @param {ReparacionFindUniqueArgs} args - Arguments to find a Reparacion
     * @example
     * // Get one Reparacion
     * const reparacion = await prisma.reparacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReparacionFindUniqueArgs>(args: SelectSubset<T, ReparacionFindUniqueArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Reparacion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReparacionFindUniqueOrThrowArgs} args - Arguments to find a Reparacion
     * @example
     * // Get one Reparacion
     * const reparacion = await prisma.reparacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReparacionFindUniqueOrThrowArgs>(args: SelectSubset<T, ReparacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Reparacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionFindFirstArgs} args - Arguments to find a Reparacion
     * @example
     * // Get one Reparacion
     * const reparacion = await prisma.reparacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReparacionFindFirstArgs>(args?: SelectSubset<T, ReparacionFindFirstArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Reparacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionFindFirstOrThrowArgs} args - Arguments to find a Reparacion
     * @example
     * // Get one Reparacion
     * const reparacion = await prisma.reparacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReparacionFindFirstOrThrowArgs>(args?: SelectSubset<T, ReparacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reparacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reparacions
     * const reparacions = await prisma.reparacion.findMany()
     * 
     * // Get first 10 Reparacions
     * const reparacions = await prisma.reparacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reparacionWithIdOnly = await prisma.reparacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReparacionFindManyArgs>(args?: SelectSubset<T, ReparacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Reparacion.
     * @param {ReparacionCreateArgs} args - Arguments to create a Reparacion.
     * @example
     * // Create one Reparacion
     * const Reparacion = await prisma.reparacion.create({
     *   data: {
     *     // ... data to create a Reparacion
     *   }
     * })
     * 
     */
    create<T extends ReparacionCreateArgs>(args: SelectSubset<T, ReparacionCreateArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reparacions.
     * @param {ReparacionCreateManyArgs} args - Arguments to create many Reparacions.
     * @example
     * // Create many Reparacions
     * const reparacion = await prisma.reparacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReparacionCreateManyArgs>(args?: SelectSubset<T, ReparacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reparacions and returns the data saved in the database.
     * @param {ReparacionCreateManyAndReturnArgs} args - Arguments to create many Reparacions.
     * @example
     * // Create many Reparacions
     * const reparacion = await prisma.reparacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reparacions and only return the `id`
     * const reparacionWithIdOnly = await prisma.reparacion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReparacionCreateManyAndReturnArgs>(args?: SelectSubset<T, ReparacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Reparacion.
     * @param {ReparacionDeleteArgs} args - Arguments to delete one Reparacion.
     * @example
     * // Delete one Reparacion
     * const Reparacion = await prisma.reparacion.delete({
     *   where: {
     *     // ... filter to delete one Reparacion
     *   }
     * })
     * 
     */
    delete<T extends ReparacionDeleteArgs>(args: SelectSubset<T, ReparacionDeleteArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Reparacion.
     * @param {ReparacionUpdateArgs} args - Arguments to update one Reparacion.
     * @example
     * // Update one Reparacion
     * const reparacion = await prisma.reparacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReparacionUpdateArgs>(args: SelectSubset<T, ReparacionUpdateArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reparacions.
     * @param {ReparacionDeleteManyArgs} args - Arguments to filter Reparacions to delete.
     * @example
     * // Delete a few Reparacions
     * const { count } = await prisma.reparacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReparacionDeleteManyArgs>(args?: SelectSubset<T, ReparacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reparacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reparacions
     * const reparacion = await prisma.reparacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReparacionUpdateManyArgs>(args: SelectSubset<T, ReparacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reparacion.
     * @param {ReparacionUpsertArgs} args - Arguments to update or create a Reparacion.
     * @example
     * // Update or create a Reparacion
     * const reparacion = await prisma.reparacion.upsert({
     *   create: {
     *     // ... data to create a Reparacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reparacion we want to update
     *   }
     * })
     */
    upsert<T extends ReparacionUpsertArgs>(args: SelectSubset<T, ReparacionUpsertArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reparacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionCountArgs} args - Arguments to filter Reparacions to count.
     * @example
     * // Count the number of Reparacions
     * const count = await prisma.reparacion.count({
     *   where: {
     *     // ... the filter for the Reparacions we want to count
     *   }
     * })
    **/
    count<T extends ReparacionCountArgs>(
      args?: Subset<T, ReparacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReparacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reparacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReparacionAggregateArgs>(args: Subset<T, ReparacionAggregateArgs>): Prisma.PrismaPromise<GetReparacionAggregateType<T>>

    /**
     * Group by Reparacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReparacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReparacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReparacionGroupByArgs['orderBy'] }
        : { orderBy?: ReparacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReparacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReparacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reparacion model
   */
  readonly fields: ReparacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reparacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReparacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producto<T extends Reparacion$productoArgs<ExtArgs> = {}>(args?: Subset<T, Reparacion$productoArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    registros<T extends Reparacion$registrosArgs<ExtArgs> = {}>(args?: Subset<T, Reparacion$registrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reparacion model
   */ 
  interface ReparacionFieldRefs {
    readonly id: FieldRef<"Reparacion", 'Int'>
    readonly usuarioId: FieldRef<"Reparacion", 'Int'>
    readonly sucursalId: FieldRef<"Reparacion", 'Int'>
    readonly clienteId: FieldRef<"Reparacion", 'Int'>
    readonly productoId: FieldRef<"Reparacion", 'Int'>
    readonly productoExterno: FieldRef<"Reparacion", 'String'>
    readonly problemas: FieldRef<"Reparacion", 'String'>
    readonly observaciones: FieldRef<"Reparacion", 'String'>
    readonly fechaRecibido: FieldRef<"Reparacion", 'DateTime'>
    readonly fechaEntregado: FieldRef<"Reparacion", 'DateTime'>
    readonly estado: FieldRef<"Reparacion", 'EstadoReparacion'>
    readonly hojaSolucion: FieldRef<"Reparacion", 'String'>
    readonly creadoEn: FieldRef<"Reparacion", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Reparacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Reparacion findUnique
   */
  export type ReparacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * Filter, which Reparacion to fetch.
     */
    where: ReparacionWhereUniqueInput
  }

  /**
   * Reparacion findUniqueOrThrow
   */
  export type ReparacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * Filter, which Reparacion to fetch.
     */
    where: ReparacionWhereUniqueInput
  }

  /**
   * Reparacion findFirst
   */
  export type ReparacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * Filter, which Reparacion to fetch.
     */
    where?: ReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reparacions to fetch.
     */
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reparacions.
     */
    cursor?: ReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reparacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reparacions.
     */
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Reparacion findFirstOrThrow
   */
  export type ReparacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * Filter, which Reparacion to fetch.
     */
    where?: ReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reparacions to fetch.
     */
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reparacions.
     */
    cursor?: ReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reparacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reparacions.
     */
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Reparacion findMany
   */
  export type ReparacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * Filter, which Reparacions to fetch.
     */
    where?: ReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reparacions to fetch.
     */
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reparacions.
     */
    cursor?: ReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reparacions.
     */
    skip?: number
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Reparacion create
   */
  export type ReparacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Reparacion.
     */
    data: XOR<ReparacionCreateInput, ReparacionUncheckedCreateInput>
  }

  /**
   * Reparacion createMany
   */
  export type ReparacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reparacions.
     */
    data: ReparacionCreateManyInput | ReparacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reparacion createManyAndReturn
   */
  export type ReparacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reparacions.
     */
    data: ReparacionCreateManyInput | ReparacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reparacion update
   */
  export type ReparacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Reparacion.
     */
    data: XOR<ReparacionUpdateInput, ReparacionUncheckedUpdateInput>
    /**
     * Choose, which Reparacion to update.
     */
    where: ReparacionWhereUniqueInput
  }

  /**
   * Reparacion updateMany
   */
  export type ReparacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reparacions.
     */
    data: XOR<ReparacionUpdateManyMutationInput, ReparacionUncheckedUpdateManyInput>
    /**
     * Filter which Reparacions to update
     */
    where?: ReparacionWhereInput
  }

  /**
   * Reparacion upsert
   */
  export type ReparacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Reparacion to update in case it exists.
     */
    where: ReparacionWhereUniqueInput
    /**
     * In case the Reparacion found by the `where` argument doesn't exist, create a new Reparacion with this data.
     */
    create: XOR<ReparacionCreateInput, ReparacionUncheckedCreateInput>
    /**
     * In case the Reparacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReparacionUpdateInput, ReparacionUncheckedUpdateInput>
  }

  /**
   * Reparacion delete
   */
  export type ReparacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    /**
     * Filter which Reparacion to delete.
     */
    where: ReparacionWhereUniqueInput
  }

  /**
   * Reparacion deleteMany
   */
  export type ReparacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reparacions to delete
     */
    where?: ReparacionWhereInput
  }

  /**
   * Reparacion.producto
   */
  export type Reparacion$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
  }

  /**
   * Reparacion.registros
   */
  export type Reparacion$registrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    where?: RegistroReparacionWhereInput
    orderBy?: RegistroReparacionOrderByWithRelationInput | RegistroReparacionOrderByWithRelationInput[]
    cursor?: RegistroReparacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroReparacionScalarFieldEnum | RegistroReparacionScalarFieldEnum[]
  }

  /**
   * Reparacion without action
   */
  export type ReparacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
  }


  /**
   * Model RegistroReparacion
   */

  export type AggregateRegistroReparacion = {
    _count: RegistroReparacionCountAggregateOutputType | null
    _avg: RegistroReparacionAvgAggregateOutputType | null
    _sum: RegistroReparacionSumAggregateOutputType | null
    _min: RegistroReparacionMinAggregateOutputType | null
    _max: RegistroReparacionMaxAggregateOutputType | null
  }

  export type RegistroReparacionAvgAggregateOutputType = {
    id: number | null
    reparacionId: number | null
    usuarioId: number | null
    montoPagado: number | null
  }

  export type RegistroReparacionSumAggregateOutputType = {
    id: number | null
    reparacionId: number | null
    usuarioId: number | null
    montoPagado: number | null
  }

  export type RegistroReparacionMinAggregateOutputType = {
    id: number | null
    reparacionId: number | null
    usuarioId: number | null
    estado: $Enums.EstadoReparacion | null
    accionesRealizadas: string | null
    fechaRegistro: Date | null
    comentarioFinal: string | null
    montoPagado: number | null
  }

  export type RegistroReparacionMaxAggregateOutputType = {
    id: number | null
    reparacionId: number | null
    usuarioId: number | null
    estado: $Enums.EstadoReparacion | null
    accionesRealizadas: string | null
    fechaRegistro: Date | null
    comentarioFinal: string | null
    montoPagado: number | null
  }

  export type RegistroReparacionCountAggregateOutputType = {
    id: number
    reparacionId: number
    usuarioId: number
    estado: number
    accionesRealizadas: number
    fechaRegistro: number
    comentarioFinal: number
    montoPagado: number
    _all: number
  }


  export type RegistroReparacionAvgAggregateInputType = {
    id?: true
    reparacionId?: true
    usuarioId?: true
    montoPagado?: true
  }

  export type RegistroReparacionSumAggregateInputType = {
    id?: true
    reparacionId?: true
    usuarioId?: true
    montoPagado?: true
  }

  export type RegistroReparacionMinAggregateInputType = {
    id?: true
    reparacionId?: true
    usuarioId?: true
    estado?: true
    accionesRealizadas?: true
    fechaRegistro?: true
    comentarioFinal?: true
    montoPagado?: true
  }

  export type RegistroReparacionMaxAggregateInputType = {
    id?: true
    reparacionId?: true
    usuarioId?: true
    estado?: true
    accionesRealizadas?: true
    fechaRegistro?: true
    comentarioFinal?: true
    montoPagado?: true
  }

  export type RegistroReparacionCountAggregateInputType = {
    id?: true
    reparacionId?: true
    usuarioId?: true
    estado?: true
    accionesRealizadas?: true
    fechaRegistro?: true
    comentarioFinal?: true
    montoPagado?: true
    _all?: true
  }

  export type RegistroReparacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroReparacion to aggregate.
     */
    where?: RegistroReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroReparacions to fetch.
     */
    orderBy?: RegistroReparacionOrderByWithRelationInput | RegistroReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroReparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroReparacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroReparacions
    **/
    _count?: true | RegistroReparacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroReparacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroReparacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroReparacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroReparacionMaxAggregateInputType
  }

  export type GetRegistroReparacionAggregateType<T extends RegistroReparacionAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroReparacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroReparacion[P]>
      : GetScalarType<T[P], AggregateRegistroReparacion[P]>
  }




  export type RegistroReparacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroReparacionWhereInput
    orderBy?: RegistroReparacionOrderByWithAggregationInput | RegistroReparacionOrderByWithAggregationInput[]
    by: RegistroReparacionScalarFieldEnum[] | RegistroReparacionScalarFieldEnum
    having?: RegistroReparacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroReparacionCountAggregateInputType | true
    _avg?: RegistroReparacionAvgAggregateInputType
    _sum?: RegistroReparacionSumAggregateInputType
    _min?: RegistroReparacionMinAggregateInputType
    _max?: RegistroReparacionMaxAggregateInputType
  }

  export type RegistroReparacionGroupByOutputType = {
    id: number
    reparacionId: number
    usuarioId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro: Date
    comentarioFinal: string | null
    montoPagado: number | null
    _count: RegistroReparacionCountAggregateOutputType | null
    _avg: RegistroReparacionAvgAggregateOutputType | null
    _sum: RegistroReparacionSumAggregateOutputType | null
    _min: RegistroReparacionMinAggregateOutputType | null
    _max: RegistroReparacionMaxAggregateOutputType | null
  }

  type GetRegistroReparacionGroupByPayload<T extends RegistroReparacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroReparacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroReparacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroReparacionGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroReparacionGroupByOutputType[P]>
        }
      >
    >


  export type RegistroReparacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reparacionId?: boolean
    usuarioId?: boolean
    estado?: boolean
    accionesRealizadas?: boolean
    fechaRegistro?: boolean
    comentarioFinal?: boolean
    montoPagado?: boolean
    reparacion?: boolean | ReparacionDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registroReparacion"]>

  export type RegistroReparacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reparacionId?: boolean
    usuarioId?: boolean
    estado?: boolean
    accionesRealizadas?: boolean
    fechaRegistro?: boolean
    comentarioFinal?: boolean
    montoPagado?: boolean
    reparacion?: boolean | ReparacionDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registroReparacion"]>

  export type RegistroReparacionSelectScalar = {
    id?: boolean
    reparacionId?: boolean
    usuarioId?: boolean
    estado?: boolean
    accionesRealizadas?: boolean
    fechaRegistro?: boolean
    comentarioFinal?: boolean
    montoPagado?: boolean
  }

  export type RegistroReparacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reparacion?: boolean | ReparacionDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type RegistroReparacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reparacion?: boolean | ReparacionDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $RegistroReparacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroReparacion"
    objects: {
      reparacion: Prisma.$ReparacionPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      reparacionId: number
      usuarioId: number
      estado: $Enums.EstadoReparacion
      accionesRealizadas: string
      fechaRegistro: Date
      comentarioFinal: string | null
      montoPagado: number | null
    }, ExtArgs["result"]["registroReparacion"]>
    composites: {}
  }

  type RegistroReparacionGetPayload<S extends boolean | null | undefined | RegistroReparacionDefaultArgs> = $Result.GetResult<Prisma.$RegistroReparacionPayload, S>

  type RegistroReparacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RegistroReparacionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RegistroReparacionCountAggregateInputType | true
    }

  export interface RegistroReparacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroReparacion'], meta: { name: 'RegistroReparacion' } }
    /**
     * Find zero or one RegistroReparacion that matches the filter.
     * @param {RegistroReparacionFindUniqueArgs} args - Arguments to find a RegistroReparacion
     * @example
     * // Get one RegistroReparacion
     * const registroReparacion = await prisma.registroReparacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroReparacionFindUniqueArgs>(args: SelectSubset<T, RegistroReparacionFindUniqueArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RegistroReparacion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RegistroReparacionFindUniqueOrThrowArgs} args - Arguments to find a RegistroReparacion
     * @example
     * // Get one RegistroReparacion
     * const registroReparacion = await prisma.registroReparacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroReparacionFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroReparacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RegistroReparacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionFindFirstArgs} args - Arguments to find a RegistroReparacion
     * @example
     * // Get one RegistroReparacion
     * const registroReparacion = await prisma.registroReparacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroReparacionFindFirstArgs>(args?: SelectSubset<T, RegistroReparacionFindFirstArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RegistroReparacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionFindFirstOrThrowArgs} args - Arguments to find a RegistroReparacion
     * @example
     * // Get one RegistroReparacion
     * const registroReparacion = await prisma.registroReparacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroReparacionFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroReparacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RegistroReparacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroReparacions
     * const registroReparacions = await prisma.registroReparacion.findMany()
     * 
     * // Get first 10 RegistroReparacions
     * const registroReparacions = await prisma.registroReparacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroReparacionWithIdOnly = await prisma.registroReparacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroReparacionFindManyArgs>(args?: SelectSubset<T, RegistroReparacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RegistroReparacion.
     * @param {RegistroReparacionCreateArgs} args - Arguments to create a RegistroReparacion.
     * @example
     * // Create one RegistroReparacion
     * const RegistroReparacion = await prisma.registroReparacion.create({
     *   data: {
     *     // ... data to create a RegistroReparacion
     *   }
     * })
     * 
     */
    create<T extends RegistroReparacionCreateArgs>(args: SelectSubset<T, RegistroReparacionCreateArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RegistroReparacions.
     * @param {RegistroReparacionCreateManyArgs} args - Arguments to create many RegistroReparacions.
     * @example
     * // Create many RegistroReparacions
     * const registroReparacion = await prisma.registroReparacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroReparacionCreateManyArgs>(args?: SelectSubset<T, RegistroReparacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroReparacions and returns the data saved in the database.
     * @param {RegistroReparacionCreateManyAndReturnArgs} args - Arguments to create many RegistroReparacions.
     * @example
     * // Create many RegistroReparacions
     * const registroReparacion = await prisma.registroReparacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroReparacions and only return the `id`
     * const registroReparacionWithIdOnly = await prisma.registroReparacion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroReparacionCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroReparacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RegistroReparacion.
     * @param {RegistroReparacionDeleteArgs} args - Arguments to delete one RegistroReparacion.
     * @example
     * // Delete one RegistroReparacion
     * const RegistroReparacion = await prisma.registroReparacion.delete({
     *   where: {
     *     // ... filter to delete one RegistroReparacion
     *   }
     * })
     * 
     */
    delete<T extends RegistroReparacionDeleteArgs>(args: SelectSubset<T, RegistroReparacionDeleteArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RegistroReparacion.
     * @param {RegistroReparacionUpdateArgs} args - Arguments to update one RegistroReparacion.
     * @example
     * // Update one RegistroReparacion
     * const registroReparacion = await prisma.registroReparacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroReparacionUpdateArgs>(args: SelectSubset<T, RegistroReparacionUpdateArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RegistroReparacions.
     * @param {RegistroReparacionDeleteManyArgs} args - Arguments to filter RegistroReparacions to delete.
     * @example
     * // Delete a few RegistroReparacions
     * const { count } = await prisma.registroReparacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroReparacionDeleteManyArgs>(args?: SelectSubset<T, RegistroReparacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroReparacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroReparacions
     * const registroReparacion = await prisma.registroReparacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroReparacionUpdateManyArgs>(args: SelectSubset<T, RegistroReparacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RegistroReparacion.
     * @param {RegistroReparacionUpsertArgs} args - Arguments to update or create a RegistroReparacion.
     * @example
     * // Update or create a RegistroReparacion
     * const registroReparacion = await prisma.registroReparacion.upsert({
     *   create: {
     *     // ... data to create a RegistroReparacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroReparacion we want to update
     *   }
     * })
     */
    upsert<T extends RegistroReparacionUpsertArgs>(args: SelectSubset<T, RegistroReparacionUpsertArgs<ExtArgs>>): Prisma__RegistroReparacionClient<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RegistroReparacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionCountArgs} args - Arguments to filter RegistroReparacions to count.
     * @example
     * // Count the number of RegistroReparacions
     * const count = await prisma.registroReparacion.count({
     *   where: {
     *     // ... the filter for the RegistroReparacions we want to count
     *   }
     * })
    **/
    count<T extends RegistroReparacionCountArgs>(
      args?: Subset<T, RegistroReparacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroReparacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroReparacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroReparacionAggregateArgs>(args: Subset<T, RegistroReparacionAggregateArgs>): Prisma.PrismaPromise<GetRegistroReparacionAggregateType<T>>

    /**
     * Group by RegistroReparacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroReparacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroReparacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroReparacionGroupByArgs['orderBy'] }
        : { orderBy?: RegistroReparacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroReparacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroReparacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroReparacion model
   */
  readonly fields: RegistroReparacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroReparacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroReparacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reparacion<T extends ReparacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReparacionDefaultArgs<ExtArgs>>): Prisma__ReparacionClient<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroReparacion model
   */ 
  interface RegistroReparacionFieldRefs {
    readonly id: FieldRef<"RegistroReparacion", 'Int'>
    readonly reparacionId: FieldRef<"RegistroReparacion", 'Int'>
    readonly usuarioId: FieldRef<"RegistroReparacion", 'Int'>
    readonly estado: FieldRef<"RegistroReparacion", 'EstadoReparacion'>
    readonly accionesRealizadas: FieldRef<"RegistroReparacion", 'String'>
    readonly fechaRegistro: FieldRef<"RegistroReparacion", 'DateTime'>
    readonly comentarioFinal: FieldRef<"RegistroReparacion", 'String'>
    readonly montoPagado: FieldRef<"RegistroReparacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RegistroReparacion findUnique
   */
  export type RegistroReparacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * Filter, which RegistroReparacion to fetch.
     */
    where: RegistroReparacionWhereUniqueInput
  }

  /**
   * RegistroReparacion findUniqueOrThrow
   */
  export type RegistroReparacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * Filter, which RegistroReparacion to fetch.
     */
    where: RegistroReparacionWhereUniqueInput
  }

  /**
   * RegistroReparacion findFirst
   */
  export type RegistroReparacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * Filter, which RegistroReparacion to fetch.
     */
    where?: RegistroReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroReparacions to fetch.
     */
    orderBy?: RegistroReparacionOrderByWithRelationInput | RegistroReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroReparacions.
     */
    cursor?: RegistroReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroReparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroReparacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroReparacions.
     */
    distinct?: RegistroReparacionScalarFieldEnum | RegistroReparacionScalarFieldEnum[]
  }

  /**
   * RegistroReparacion findFirstOrThrow
   */
  export type RegistroReparacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * Filter, which RegistroReparacion to fetch.
     */
    where?: RegistroReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroReparacions to fetch.
     */
    orderBy?: RegistroReparacionOrderByWithRelationInput | RegistroReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroReparacions.
     */
    cursor?: RegistroReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroReparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroReparacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroReparacions.
     */
    distinct?: RegistroReparacionScalarFieldEnum | RegistroReparacionScalarFieldEnum[]
  }

  /**
   * RegistroReparacion findMany
   */
  export type RegistroReparacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * Filter, which RegistroReparacions to fetch.
     */
    where?: RegistroReparacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroReparacions to fetch.
     */
    orderBy?: RegistroReparacionOrderByWithRelationInput | RegistroReparacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroReparacions.
     */
    cursor?: RegistroReparacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroReparacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroReparacions.
     */
    skip?: number
    distinct?: RegistroReparacionScalarFieldEnum | RegistroReparacionScalarFieldEnum[]
  }

  /**
   * RegistroReparacion create
   */
  export type RegistroReparacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * The data needed to create a RegistroReparacion.
     */
    data: XOR<RegistroReparacionCreateInput, RegistroReparacionUncheckedCreateInput>
  }

  /**
   * RegistroReparacion createMany
   */
  export type RegistroReparacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroReparacions.
     */
    data: RegistroReparacionCreateManyInput | RegistroReparacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroReparacion createManyAndReturn
   */
  export type RegistroReparacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RegistroReparacions.
     */
    data: RegistroReparacionCreateManyInput | RegistroReparacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RegistroReparacion update
   */
  export type RegistroReparacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * The data needed to update a RegistroReparacion.
     */
    data: XOR<RegistroReparacionUpdateInput, RegistroReparacionUncheckedUpdateInput>
    /**
     * Choose, which RegistroReparacion to update.
     */
    where: RegistroReparacionWhereUniqueInput
  }

  /**
   * RegistroReparacion updateMany
   */
  export type RegistroReparacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroReparacions.
     */
    data: XOR<RegistroReparacionUpdateManyMutationInput, RegistroReparacionUncheckedUpdateManyInput>
    /**
     * Filter which RegistroReparacions to update
     */
    where?: RegistroReparacionWhereInput
  }

  /**
   * RegistroReparacion upsert
   */
  export type RegistroReparacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * The filter to search for the RegistroReparacion to update in case it exists.
     */
    where: RegistroReparacionWhereUniqueInput
    /**
     * In case the RegistroReparacion found by the `where` argument doesn't exist, create a new RegistroReparacion with this data.
     */
    create: XOR<RegistroReparacionCreateInput, RegistroReparacionUncheckedCreateInput>
    /**
     * In case the RegistroReparacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroReparacionUpdateInput, RegistroReparacionUncheckedUpdateInput>
  }

  /**
   * RegistroReparacion delete
   */
  export type RegistroReparacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    /**
     * Filter which RegistroReparacion to delete.
     */
    where: RegistroReparacionWhereUniqueInput
  }

  /**
   * RegistroReparacion deleteMany
   */
  export type RegistroReparacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroReparacions to delete
     */
    where?: RegistroReparacionWhereInput
  }

  /**
   * RegistroReparacion without action
   */
  export type RegistroReparacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
  }


  /**
   * Model VentaCuota
   */

  export type AggregateVentaCuota = {
    _count: VentaCuotaCountAggregateOutputType | null
    _avg: VentaCuotaAvgAggregateOutputType | null
    _sum: VentaCuotaSumAggregateOutputType | null
    _min: VentaCuotaMinAggregateOutputType | null
    _max: VentaCuotaMaxAggregateOutputType | null
  }

  export type VentaCuotaAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    sucursalId: number | null
    totalVenta: number | null
    cuotaInicial: number | null
    cuotasTotales: number | null
    montoVenta: number | null
    garantiaMeses: number | null
    totalPagado: number | null
    diasEntrePagos: number | null
    interes: number | null
    ventaId: number | null
    montoTotalConInteres: number | null
  }

  export type VentaCuotaSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    sucursalId: number | null
    totalVenta: number | null
    cuotaInicial: number | null
    cuotasTotales: number | null
    montoVenta: number | null
    garantiaMeses: number | null
    totalPagado: number | null
    diasEntrePagos: number | null
    interes: number | null
    ventaId: number | null
    montoTotalConInteres: number | null
  }

  export type VentaCuotaMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    sucursalId: number | null
    totalVenta: number | null
    cuotaInicial: number | null
    cuotasTotales: number | null
    fechaInicio: Date | null
    estado: $Enums.EstadoCuota | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    dpi: string | null
    fechaContrato: Date | null
    montoVenta: number | null
    garantiaMeses: number | null
    totalPagado: number | null
    diasEntrePagos: number | null
    interes: number | null
    comentario: string | null
    ventaId: number | null
    montoTotalConInteres: number | null
  }

  export type VentaCuotaMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
    sucursalId: number | null
    totalVenta: number | null
    cuotaInicial: number | null
    cuotasTotales: number | null
    fechaInicio: Date | null
    estado: $Enums.EstadoCuota | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    dpi: string | null
    fechaContrato: Date | null
    montoVenta: number | null
    garantiaMeses: number | null
    totalPagado: number | null
    diasEntrePagos: number | null
    interes: number | null
    comentario: string | null
    ventaId: number | null
    montoTotalConInteres: number | null
  }

  export type VentaCuotaCountAggregateOutputType = {
    id: number
    clienteId: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio: number
    estado: number
    creadoEn: number
    actualizadoEn: number
    dpi: number
    testigos: number
    fechaContrato: number
    montoVenta: number
    garantiaMeses: number
    totalPagado: number
    diasEntrePagos: number
    interes: number
    comentario: number
    ventaId: number
    montoTotalConInteres: number
    _all: number
  }


  export type VentaCuotaAvgAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sucursalId?: true
    totalVenta?: true
    cuotaInicial?: true
    cuotasTotales?: true
    montoVenta?: true
    garantiaMeses?: true
    totalPagado?: true
    diasEntrePagos?: true
    interes?: true
    ventaId?: true
    montoTotalConInteres?: true
  }

  export type VentaCuotaSumAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sucursalId?: true
    totalVenta?: true
    cuotaInicial?: true
    cuotasTotales?: true
    montoVenta?: true
    garantiaMeses?: true
    totalPagado?: true
    diasEntrePagos?: true
    interes?: true
    ventaId?: true
    montoTotalConInteres?: true
  }

  export type VentaCuotaMinAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sucursalId?: true
    totalVenta?: true
    cuotaInicial?: true
    cuotasTotales?: true
    fechaInicio?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    dpi?: true
    fechaContrato?: true
    montoVenta?: true
    garantiaMeses?: true
    totalPagado?: true
    diasEntrePagos?: true
    interes?: true
    comentario?: true
    ventaId?: true
    montoTotalConInteres?: true
  }

  export type VentaCuotaMaxAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sucursalId?: true
    totalVenta?: true
    cuotaInicial?: true
    cuotasTotales?: true
    fechaInicio?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    dpi?: true
    fechaContrato?: true
    montoVenta?: true
    garantiaMeses?: true
    totalPagado?: true
    diasEntrePagos?: true
    interes?: true
    comentario?: true
    ventaId?: true
    montoTotalConInteres?: true
  }

  export type VentaCuotaCountAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
    sucursalId?: true
    totalVenta?: true
    cuotaInicial?: true
    cuotasTotales?: true
    fechaInicio?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    dpi?: true
    testigos?: true
    fechaContrato?: true
    montoVenta?: true
    garantiaMeses?: true
    totalPagado?: true
    diasEntrePagos?: true
    interes?: true
    comentario?: true
    ventaId?: true
    montoTotalConInteres?: true
    _all?: true
  }

  export type VentaCuotaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaCuota to aggregate.
     */
    where?: VentaCuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaCuotas to fetch.
     */
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaCuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaCuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaCuotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VentaCuotas
    **/
    _count?: true | VentaCuotaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaCuotaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaCuotaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaCuotaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaCuotaMaxAggregateInputType
  }

  export type GetVentaCuotaAggregateType<T extends VentaCuotaAggregateArgs> = {
        [P in keyof T & keyof AggregateVentaCuota]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVentaCuota[P]>
      : GetScalarType<T[P], AggregateVentaCuota[P]>
  }




  export type VentaCuotaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaCuotaWhereInput
    orderBy?: VentaCuotaOrderByWithAggregationInput | VentaCuotaOrderByWithAggregationInput[]
    by: VentaCuotaScalarFieldEnum[] | VentaCuotaScalarFieldEnum
    having?: VentaCuotaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCuotaCountAggregateInputType | true
    _avg?: VentaCuotaAvgAggregateInputType
    _sum?: VentaCuotaSumAggregateInputType
    _min?: VentaCuotaMinAggregateInputType
    _max?: VentaCuotaMaxAggregateInputType
  }

  export type VentaCuotaGroupByOutputType = {
    id: number
    clienteId: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio: Date
    estado: $Enums.EstadoCuota
    creadoEn: Date
    actualizadoEn: Date
    dpi: string
    testigos: JsonValue
    fechaContrato: Date
    montoVenta: number
    garantiaMeses: number
    totalPagado: number
    diasEntrePagos: number
    interes: number
    comentario: string | null
    ventaId: number | null
    montoTotalConInteres: number | null
    _count: VentaCuotaCountAggregateOutputType | null
    _avg: VentaCuotaAvgAggregateOutputType | null
    _sum: VentaCuotaSumAggregateOutputType | null
    _min: VentaCuotaMinAggregateOutputType | null
    _max: VentaCuotaMaxAggregateOutputType | null
  }

  type GetVentaCuotaGroupByPayload<T extends VentaCuotaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaCuotaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaCuotaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaCuotaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaCuotaGroupByOutputType[P]>
        }
      >
    >


  export type VentaCuotaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    totalVenta?: boolean
    cuotaInicial?: boolean
    cuotasTotales?: boolean
    fechaInicio?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    dpi?: boolean
    testigos?: boolean
    fechaContrato?: boolean
    montoVenta?: boolean
    garantiaMeses?: boolean
    totalPagado?: boolean
    diasEntrePagos?: boolean
    interes?: boolean
    comentario?: boolean
    ventaId?: boolean
    montoTotalConInteres?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    cuotas?: boolean | VentaCuota$cuotasArgs<ExtArgs>
    venta?: boolean | VentaCuota$ventaArgs<ExtArgs>
    _count?: boolean | VentaCuotaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ventaCuota"]>

  export type VentaCuotaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    totalVenta?: boolean
    cuotaInicial?: boolean
    cuotasTotales?: boolean
    fechaInicio?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    dpi?: boolean
    testigos?: boolean
    fechaContrato?: boolean
    montoVenta?: boolean
    garantiaMeses?: boolean
    totalPagado?: boolean
    diasEntrePagos?: boolean
    interes?: boolean
    comentario?: boolean
    ventaId?: boolean
    montoTotalConInteres?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    venta?: boolean | VentaCuota$ventaArgs<ExtArgs>
  }, ExtArgs["result"]["ventaCuota"]>

  export type VentaCuotaSelectScalar = {
    id?: boolean
    clienteId?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    totalVenta?: boolean
    cuotaInicial?: boolean
    cuotasTotales?: boolean
    fechaInicio?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    dpi?: boolean
    testigos?: boolean
    fechaContrato?: boolean
    montoVenta?: boolean
    garantiaMeses?: boolean
    totalPagado?: boolean
    diasEntrePagos?: boolean
    interes?: boolean
    comentario?: boolean
    ventaId?: boolean
    montoTotalConInteres?: boolean
  }

  export type VentaCuotaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    cuotas?: boolean | VentaCuota$cuotasArgs<ExtArgs>
    venta?: boolean | VentaCuota$ventaArgs<ExtArgs>
    _count?: boolean | VentaCuotaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VentaCuotaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    venta?: boolean | VentaCuota$ventaArgs<ExtArgs>
  }

  export type $VentaCuotaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VentaCuota"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      cuotas: Prisma.$CuotaPayload<ExtArgs>[]
      venta: Prisma.$VentaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      usuarioId: number
      sucursalId: number
      totalVenta: number
      cuotaInicial: number
      cuotasTotales: number
      fechaInicio: Date
      estado: $Enums.EstadoCuota
      creadoEn: Date
      actualizadoEn: Date
      dpi: string
      testigos: Prisma.JsonValue
      fechaContrato: Date
      montoVenta: number
      garantiaMeses: number
      totalPagado: number
      diasEntrePagos: number
      interes: number
      comentario: string | null
      ventaId: number | null
      montoTotalConInteres: number | null
    }, ExtArgs["result"]["ventaCuota"]>
    composites: {}
  }

  type VentaCuotaGetPayload<S extends boolean | null | undefined | VentaCuotaDefaultArgs> = $Result.GetResult<Prisma.$VentaCuotaPayload, S>

  type VentaCuotaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VentaCuotaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentaCuotaCountAggregateInputType | true
    }

  export interface VentaCuotaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VentaCuota'], meta: { name: 'VentaCuota' } }
    /**
     * Find zero or one VentaCuota that matches the filter.
     * @param {VentaCuotaFindUniqueArgs} args - Arguments to find a VentaCuota
     * @example
     * // Get one VentaCuota
     * const ventaCuota = await prisma.ventaCuota.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaCuotaFindUniqueArgs>(args: SelectSubset<T, VentaCuotaFindUniqueArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VentaCuota that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VentaCuotaFindUniqueOrThrowArgs} args - Arguments to find a VentaCuota
     * @example
     * // Get one VentaCuota
     * const ventaCuota = await prisma.ventaCuota.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaCuotaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaCuotaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VentaCuota that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaFindFirstArgs} args - Arguments to find a VentaCuota
     * @example
     * // Get one VentaCuota
     * const ventaCuota = await prisma.ventaCuota.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaCuotaFindFirstArgs>(args?: SelectSubset<T, VentaCuotaFindFirstArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VentaCuota that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaFindFirstOrThrowArgs} args - Arguments to find a VentaCuota
     * @example
     * // Get one VentaCuota
     * const ventaCuota = await prisma.ventaCuota.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaCuotaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaCuotaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VentaCuotas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VentaCuotas
     * const ventaCuotas = await prisma.ventaCuota.findMany()
     * 
     * // Get first 10 VentaCuotas
     * const ventaCuotas = await prisma.ventaCuota.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaCuotaWithIdOnly = await prisma.ventaCuota.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaCuotaFindManyArgs>(args?: SelectSubset<T, VentaCuotaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VentaCuota.
     * @param {VentaCuotaCreateArgs} args - Arguments to create a VentaCuota.
     * @example
     * // Create one VentaCuota
     * const VentaCuota = await prisma.ventaCuota.create({
     *   data: {
     *     // ... data to create a VentaCuota
     *   }
     * })
     * 
     */
    create<T extends VentaCuotaCreateArgs>(args: SelectSubset<T, VentaCuotaCreateArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VentaCuotas.
     * @param {VentaCuotaCreateManyArgs} args - Arguments to create many VentaCuotas.
     * @example
     * // Create many VentaCuotas
     * const ventaCuota = await prisma.ventaCuota.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCuotaCreateManyArgs>(args?: SelectSubset<T, VentaCuotaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VentaCuotas and returns the data saved in the database.
     * @param {VentaCuotaCreateManyAndReturnArgs} args - Arguments to create many VentaCuotas.
     * @example
     * // Create many VentaCuotas
     * const ventaCuota = await prisma.ventaCuota.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VentaCuotas and only return the `id`
     * const ventaCuotaWithIdOnly = await prisma.ventaCuota.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCuotaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCuotaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VentaCuota.
     * @param {VentaCuotaDeleteArgs} args - Arguments to delete one VentaCuota.
     * @example
     * // Delete one VentaCuota
     * const VentaCuota = await prisma.ventaCuota.delete({
     *   where: {
     *     // ... filter to delete one VentaCuota
     *   }
     * })
     * 
     */
    delete<T extends VentaCuotaDeleteArgs>(args: SelectSubset<T, VentaCuotaDeleteArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VentaCuota.
     * @param {VentaCuotaUpdateArgs} args - Arguments to update one VentaCuota.
     * @example
     * // Update one VentaCuota
     * const ventaCuota = await prisma.ventaCuota.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaCuotaUpdateArgs>(args: SelectSubset<T, VentaCuotaUpdateArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VentaCuotas.
     * @param {VentaCuotaDeleteManyArgs} args - Arguments to filter VentaCuotas to delete.
     * @example
     * // Delete a few VentaCuotas
     * const { count } = await prisma.ventaCuota.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaCuotaDeleteManyArgs>(args?: SelectSubset<T, VentaCuotaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VentaCuotas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VentaCuotas
     * const ventaCuota = await prisma.ventaCuota.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaCuotaUpdateManyArgs>(args: SelectSubset<T, VentaCuotaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VentaCuota.
     * @param {VentaCuotaUpsertArgs} args - Arguments to update or create a VentaCuota.
     * @example
     * // Update or create a VentaCuota
     * const ventaCuota = await prisma.ventaCuota.upsert({
     *   create: {
     *     // ... data to create a VentaCuota
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VentaCuota we want to update
     *   }
     * })
     */
    upsert<T extends VentaCuotaUpsertArgs>(args: SelectSubset<T, VentaCuotaUpsertArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VentaCuotas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaCountArgs} args - Arguments to filter VentaCuotas to count.
     * @example
     * // Count the number of VentaCuotas
     * const count = await prisma.ventaCuota.count({
     *   where: {
     *     // ... the filter for the VentaCuotas we want to count
     *   }
     * })
    **/
    count<T extends VentaCuotaCountArgs>(
      args?: Subset<T, VentaCuotaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCuotaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VentaCuota.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaCuotaAggregateArgs>(args: Subset<T, VentaCuotaAggregateArgs>): Prisma.PrismaPromise<GetVentaCuotaAggregateType<T>>

    /**
     * Group by VentaCuota.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCuotaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaCuotaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaCuotaGroupByArgs['orderBy'] }
        : { orderBy?: VentaCuotaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaCuotaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaCuotaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VentaCuota model
   */
  readonly fields: VentaCuotaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VentaCuota.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaCuotaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cuotas<T extends VentaCuota$cuotasArgs<ExtArgs> = {}>(args?: Subset<T, VentaCuota$cuotasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findMany"> | Null>
    venta<T extends VentaCuota$ventaArgs<ExtArgs> = {}>(args?: Subset<T, VentaCuota$ventaArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VentaCuota model
   */ 
  interface VentaCuotaFieldRefs {
    readonly id: FieldRef<"VentaCuota", 'Int'>
    readonly clienteId: FieldRef<"VentaCuota", 'Int'>
    readonly usuarioId: FieldRef<"VentaCuota", 'Int'>
    readonly sucursalId: FieldRef<"VentaCuota", 'Int'>
    readonly totalVenta: FieldRef<"VentaCuota", 'Float'>
    readonly cuotaInicial: FieldRef<"VentaCuota", 'Float'>
    readonly cuotasTotales: FieldRef<"VentaCuota", 'Int'>
    readonly fechaInicio: FieldRef<"VentaCuota", 'DateTime'>
    readonly estado: FieldRef<"VentaCuota", 'EstadoCuota'>
    readonly creadoEn: FieldRef<"VentaCuota", 'DateTime'>
    readonly actualizadoEn: FieldRef<"VentaCuota", 'DateTime'>
    readonly dpi: FieldRef<"VentaCuota", 'String'>
    readonly testigos: FieldRef<"VentaCuota", 'Json'>
    readonly fechaContrato: FieldRef<"VentaCuota", 'DateTime'>
    readonly montoVenta: FieldRef<"VentaCuota", 'Float'>
    readonly garantiaMeses: FieldRef<"VentaCuota", 'Int'>
    readonly totalPagado: FieldRef<"VentaCuota", 'Float'>
    readonly diasEntrePagos: FieldRef<"VentaCuota", 'Int'>
    readonly interes: FieldRef<"VentaCuota", 'Int'>
    readonly comentario: FieldRef<"VentaCuota", 'String'>
    readonly ventaId: FieldRef<"VentaCuota", 'Int'>
    readonly montoTotalConInteres: FieldRef<"VentaCuota", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * VentaCuota findUnique
   */
  export type VentaCuotaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * Filter, which VentaCuota to fetch.
     */
    where: VentaCuotaWhereUniqueInput
  }

  /**
   * VentaCuota findUniqueOrThrow
   */
  export type VentaCuotaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * Filter, which VentaCuota to fetch.
     */
    where: VentaCuotaWhereUniqueInput
  }

  /**
   * VentaCuota findFirst
   */
  export type VentaCuotaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * Filter, which VentaCuota to fetch.
     */
    where?: VentaCuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaCuotas to fetch.
     */
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaCuotas.
     */
    cursor?: VentaCuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaCuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaCuotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaCuotas.
     */
    distinct?: VentaCuotaScalarFieldEnum | VentaCuotaScalarFieldEnum[]
  }

  /**
   * VentaCuota findFirstOrThrow
   */
  export type VentaCuotaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * Filter, which VentaCuota to fetch.
     */
    where?: VentaCuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaCuotas to fetch.
     */
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaCuotas.
     */
    cursor?: VentaCuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaCuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaCuotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaCuotas.
     */
    distinct?: VentaCuotaScalarFieldEnum | VentaCuotaScalarFieldEnum[]
  }

  /**
   * VentaCuota findMany
   */
  export type VentaCuotaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * Filter, which VentaCuotas to fetch.
     */
    where?: VentaCuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaCuotas to fetch.
     */
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VentaCuotas.
     */
    cursor?: VentaCuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaCuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaCuotas.
     */
    skip?: number
    distinct?: VentaCuotaScalarFieldEnum | VentaCuotaScalarFieldEnum[]
  }

  /**
   * VentaCuota create
   */
  export type VentaCuotaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * The data needed to create a VentaCuota.
     */
    data: XOR<VentaCuotaCreateInput, VentaCuotaUncheckedCreateInput>
  }

  /**
   * VentaCuota createMany
   */
  export type VentaCuotaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VentaCuotas.
     */
    data: VentaCuotaCreateManyInput | VentaCuotaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VentaCuota createManyAndReturn
   */
  export type VentaCuotaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VentaCuotas.
     */
    data: VentaCuotaCreateManyInput | VentaCuotaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VentaCuota update
   */
  export type VentaCuotaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * The data needed to update a VentaCuota.
     */
    data: XOR<VentaCuotaUpdateInput, VentaCuotaUncheckedUpdateInput>
    /**
     * Choose, which VentaCuota to update.
     */
    where: VentaCuotaWhereUniqueInput
  }

  /**
   * VentaCuota updateMany
   */
  export type VentaCuotaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VentaCuotas.
     */
    data: XOR<VentaCuotaUpdateManyMutationInput, VentaCuotaUncheckedUpdateManyInput>
    /**
     * Filter which VentaCuotas to update
     */
    where?: VentaCuotaWhereInput
  }

  /**
   * VentaCuota upsert
   */
  export type VentaCuotaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * The filter to search for the VentaCuota to update in case it exists.
     */
    where: VentaCuotaWhereUniqueInput
    /**
     * In case the VentaCuota found by the `where` argument doesn't exist, create a new VentaCuota with this data.
     */
    create: XOR<VentaCuotaCreateInput, VentaCuotaUncheckedCreateInput>
    /**
     * In case the VentaCuota was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaCuotaUpdateInput, VentaCuotaUncheckedUpdateInput>
  }

  /**
   * VentaCuota delete
   */
  export type VentaCuotaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    /**
     * Filter which VentaCuota to delete.
     */
    where: VentaCuotaWhereUniqueInput
  }

  /**
   * VentaCuota deleteMany
   */
  export type VentaCuotaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaCuotas to delete
     */
    where?: VentaCuotaWhereInput
  }

  /**
   * VentaCuota.cuotas
   */
  export type VentaCuota$cuotasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    where?: CuotaWhereInput
    orderBy?: CuotaOrderByWithRelationInput | CuotaOrderByWithRelationInput[]
    cursor?: CuotaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CuotaScalarFieldEnum | CuotaScalarFieldEnum[]
  }

  /**
   * VentaCuota.venta
   */
  export type VentaCuota$ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
  }

  /**
   * VentaCuota without action
   */
  export type VentaCuotaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
  }


  /**
   * Model Cuota
   */

  export type AggregateCuota = {
    _count: CuotaCountAggregateOutputType | null
    _avg: CuotaAvgAggregateOutputType | null
    _sum: CuotaSumAggregateOutputType | null
    _min: CuotaMinAggregateOutputType | null
    _max: CuotaMaxAggregateOutputType | null
  }

  export type CuotaAvgAggregateOutputType = {
    id: number | null
    ventaCuotaId: number | null
    monto: number | null
    usuarioId: number | null
    montoEsperado: number | null
  }

  export type CuotaSumAggregateOutputType = {
    id: number | null
    ventaCuotaId: number | null
    monto: number | null
    usuarioId: number | null
    montoEsperado: number | null
  }

  export type CuotaMinAggregateOutputType = {
    id: number | null
    ventaCuotaId: number | null
    monto: number | null
    fechaVencimiento: Date | null
    fechaPago: Date | null
    estado: $Enums.EstadoPago | null
    usuarioId: number | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    comentario: string | null
    montoEsperado: number | null
  }

  export type CuotaMaxAggregateOutputType = {
    id: number | null
    ventaCuotaId: number | null
    monto: number | null
    fechaVencimiento: Date | null
    fechaPago: Date | null
    estado: $Enums.EstadoPago | null
    usuarioId: number | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    comentario: string | null
    montoEsperado: number | null
  }

  export type CuotaCountAggregateOutputType = {
    id: number
    ventaCuotaId: number
    monto: number
    fechaVencimiento: number
    fechaPago: number
    estado: number
    usuarioId: number
    creadoEn: number
    actualizadoEn: number
    comentario: number
    montoEsperado: number
    _all: number
  }


  export type CuotaAvgAggregateInputType = {
    id?: true
    ventaCuotaId?: true
    monto?: true
    usuarioId?: true
    montoEsperado?: true
  }

  export type CuotaSumAggregateInputType = {
    id?: true
    ventaCuotaId?: true
    monto?: true
    usuarioId?: true
    montoEsperado?: true
  }

  export type CuotaMinAggregateInputType = {
    id?: true
    ventaCuotaId?: true
    monto?: true
    fechaVencimiento?: true
    fechaPago?: true
    estado?: true
    usuarioId?: true
    creadoEn?: true
    actualizadoEn?: true
    comentario?: true
    montoEsperado?: true
  }

  export type CuotaMaxAggregateInputType = {
    id?: true
    ventaCuotaId?: true
    monto?: true
    fechaVencimiento?: true
    fechaPago?: true
    estado?: true
    usuarioId?: true
    creadoEn?: true
    actualizadoEn?: true
    comentario?: true
    montoEsperado?: true
  }

  export type CuotaCountAggregateInputType = {
    id?: true
    ventaCuotaId?: true
    monto?: true
    fechaVencimiento?: true
    fechaPago?: true
    estado?: true
    usuarioId?: true
    creadoEn?: true
    actualizadoEn?: true
    comentario?: true
    montoEsperado?: true
    _all?: true
  }

  export type CuotaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cuota to aggregate.
     */
    where?: CuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuotas to fetch.
     */
    orderBy?: CuotaOrderByWithRelationInput | CuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cuotas
    **/
    _count?: true | CuotaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CuotaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CuotaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CuotaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CuotaMaxAggregateInputType
  }

  export type GetCuotaAggregateType<T extends CuotaAggregateArgs> = {
        [P in keyof T & keyof AggregateCuota]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCuota[P]>
      : GetScalarType<T[P], AggregateCuota[P]>
  }




  export type CuotaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CuotaWhereInput
    orderBy?: CuotaOrderByWithAggregationInput | CuotaOrderByWithAggregationInput[]
    by: CuotaScalarFieldEnum[] | CuotaScalarFieldEnum
    having?: CuotaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CuotaCountAggregateInputType | true
    _avg?: CuotaAvgAggregateInputType
    _sum?: CuotaSumAggregateInputType
    _min?: CuotaMinAggregateInputType
    _max?: CuotaMaxAggregateInputType
  }

  export type CuotaGroupByOutputType = {
    id: number
    ventaCuotaId: number
    monto: number
    fechaVencimiento: Date | null
    fechaPago: Date | null
    estado: $Enums.EstadoPago
    usuarioId: number | null
    creadoEn: Date
    actualizadoEn: Date
    comentario: string | null
    montoEsperado: number | null
    _count: CuotaCountAggregateOutputType | null
    _avg: CuotaAvgAggregateOutputType | null
    _sum: CuotaSumAggregateOutputType | null
    _min: CuotaMinAggregateOutputType | null
    _max: CuotaMaxAggregateOutputType | null
  }

  type GetCuotaGroupByPayload<T extends CuotaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CuotaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CuotaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CuotaGroupByOutputType[P]>
            : GetScalarType<T[P], CuotaGroupByOutputType[P]>
        }
      >
    >


  export type CuotaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaCuotaId?: boolean
    monto?: boolean
    fechaVencimiento?: boolean
    fechaPago?: boolean
    estado?: boolean
    usuarioId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    comentario?: boolean
    montoEsperado?: boolean
    ventaCuota?: boolean | VentaCuotaDefaultArgs<ExtArgs>
    usuario?: boolean | Cuota$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["cuota"]>

  export type CuotaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaCuotaId?: boolean
    monto?: boolean
    fechaVencimiento?: boolean
    fechaPago?: boolean
    estado?: boolean
    usuarioId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    comentario?: boolean
    montoEsperado?: boolean
    ventaCuota?: boolean | VentaCuotaDefaultArgs<ExtArgs>
    usuario?: boolean | Cuota$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["cuota"]>

  export type CuotaSelectScalar = {
    id?: boolean
    ventaCuotaId?: boolean
    monto?: boolean
    fechaVencimiento?: boolean
    fechaPago?: boolean
    estado?: boolean
    usuarioId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    comentario?: boolean
    montoEsperado?: boolean
  }

  export type CuotaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventaCuota?: boolean | VentaCuotaDefaultArgs<ExtArgs>
    usuario?: boolean | Cuota$usuarioArgs<ExtArgs>
  }
  export type CuotaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventaCuota?: boolean | VentaCuotaDefaultArgs<ExtArgs>
    usuario?: boolean | Cuota$usuarioArgs<ExtArgs>
  }

  export type $CuotaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cuota"
    objects: {
      ventaCuota: Prisma.$VentaCuotaPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ventaCuotaId: number
      monto: number
      fechaVencimiento: Date | null
      fechaPago: Date | null
      estado: $Enums.EstadoPago
      usuarioId: number | null
      creadoEn: Date
      actualizadoEn: Date
      comentario: string | null
      montoEsperado: number | null
    }, ExtArgs["result"]["cuota"]>
    composites: {}
  }

  type CuotaGetPayload<S extends boolean | null | undefined | CuotaDefaultArgs> = $Result.GetResult<Prisma.$CuotaPayload, S>

  type CuotaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CuotaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CuotaCountAggregateInputType | true
    }

  export interface CuotaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cuota'], meta: { name: 'Cuota' } }
    /**
     * Find zero or one Cuota that matches the filter.
     * @param {CuotaFindUniqueArgs} args - Arguments to find a Cuota
     * @example
     * // Get one Cuota
     * const cuota = await prisma.cuota.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CuotaFindUniqueArgs>(args: SelectSubset<T, CuotaFindUniqueArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cuota that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CuotaFindUniqueOrThrowArgs} args - Arguments to find a Cuota
     * @example
     * // Get one Cuota
     * const cuota = await prisma.cuota.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CuotaFindUniqueOrThrowArgs>(args: SelectSubset<T, CuotaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cuota that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaFindFirstArgs} args - Arguments to find a Cuota
     * @example
     * // Get one Cuota
     * const cuota = await prisma.cuota.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CuotaFindFirstArgs>(args?: SelectSubset<T, CuotaFindFirstArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cuota that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaFindFirstOrThrowArgs} args - Arguments to find a Cuota
     * @example
     * // Get one Cuota
     * const cuota = await prisma.cuota.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CuotaFindFirstOrThrowArgs>(args?: SelectSubset<T, CuotaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cuotas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cuotas
     * const cuotas = await prisma.cuota.findMany()
     * 
     * // Get first 10 Cuotas
     * const cuotas = await prisma.cuota.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cuotaWithIdOnly = await prisma.cuota.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CuotaFindManyArgs>(args?: SelectSubset<T, CuotaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cuota.
     * @param {CuotaCreateArgs} args - Arguments to create a Cuota.
     * @example
     * // Create one Cuota
     * const Cuota = await prisma.cuota.create({
     *   data: {
     *     // ... data to create a Cuota
     *   }
     * })
     * 
     */
    create<T extends CuotaCreateArgs>(args: SelectSubset<T, CuotaCreateArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cuotas.
     * @param {CuotaCreateManyArgs} args - Arguments to create many Cuotas.
     * @example
     * // Create many Cuotas
     * const cuota = await prisma.cuota.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CuotaCreateManyArgs>(args?: SelectSubset<T, CuotaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cuotas and returns the data saved in the database.
     * @param {CuotaCreateManyAndReturnArgs} args - Arguments to create many Cuotas.
     * @example
     * // Create many Cuotas
     * const cuota = await prisma.cuota.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cuotas and only return the `id`
     * const cuotaWithIdOnly = await prisma.cuota.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CuotaCreateManyAndReturnArgs>(args?: SelectSubset<T, CuotaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cuota.
     * @param {CuotaDeleteArgs} args - Arguments to delete one Cuota.
     * @example
     * // Delete one Cuota
     * const Cuota = await prisma.cuota.delete({
     *   where: {
     *     // ... filter to delete one Cuota
     *   }
     * })
     * 
     */
    delete<T extends CuotaDeleteArgs>(args: SelectSubset<T, CuotaDeleteArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cuota.
     * @param {CuotaUpdateArgs} args - Arguments to update one Cuota.
     * @example
     * // Update one Cuota
     * const cuota = await prisma.cuota.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CuotaUpdateArgs>(args: SelectSubset<T, CuotaUpdateArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cuotas.
     * @param {CuotaDeleteManyArgs} args - Arguments to filter Cuotas to delete.
     * @example
     * // Delete a few Cuotas
     * const { count } = await prisma.cuota.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CuotaDeleteManyArgs>(args?: SelectSubset<T, CuotaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cuotas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cuotas
     * const cuota = await prisma.cuota.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CuotaUpdateManyArgs>(args: SelectSubset<T, CuotaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cuota.
     * @param {CuotaUpsertArgs} args - Arguments to update or create a Cuota.
     * @example
     * // Update or create a Cuota
     * const cuota = await prisma.cuota.upsert({
     *   create: {
     *     // ... data to create a Cuota
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cuota we want to update
     *   }
     * })
     */
    upsert<T extends CuotaUpsertArgs>(args: SelectSubset<T, CuotaUpsertArgs<ExtArgs>>): Prisma__CuotaClient<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cuotas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaCountArgs} args - Arguments to filter Cuotas to count.
     * @example
     * // Count the number of Cuotas
     * const count = await prisma.cuota.count({
     *   where: {
     *     // ... the filter for the Cuotas we want to count
     *   }
     * })
    **/
    count<T extends CuotaCountArgs>(
      args?: Subset<T, CuotaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CuotaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cuota.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CuotaAggregateArgs>(args: Subset<T, CuotaAggregateArgs>): Prisma.PrismaPromise<GetCuotaAggregateType<T>>

    /**
     * Group by Cuota.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuotaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CuotaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CuotaGroupByArgs['orderBy'] }
        : { orderBy?: CuotaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CuotaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCuotaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cuota model
   */
  readonly fields: CuotaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cuota.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CuotaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ventaCuota<T extends VentaCuotaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaCuotaDefaultArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends Cuota$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Cuota$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cuota model
   */ 
  interface CuotaFieldRefs {
    readonly id: FieldRef<"Cuota", 'Int'>
    readonly ventaCuotaId: FieldRef<"Cuota", 'Int'>
    readonly monto: FieldRef<"Cuota", 'Float'>
    readonly fechaVencimiento: FieldRef<"Cuota", 'DateTime'>
    readonly fechaPago: FieldRef<"Cuota", 'DateTime'>
    readonly estado: FieldRef<"Cuota", 'EstadoPago'>
    readonly usuarioId: FieldRef<"Cuota", 'Int'>
    readonly creadoEn: FieldRef<"Cuota", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Cuota", 'DateTime'>
    readonly comentario: FieldRef<"Cuota", 'String'>
    readonly montoEsperado: FieldRef<"Cuota", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Cuota findUnique
   */
  export type CuotaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * Filter, which Cuota to fetch.
     */
    where: CuotaWhereUniqueInput
  }

  /**
   * Cuota findUniqueOrThrow
   */
  export type CuotaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * Filter, which Cuota to fetch.
     */
    where: CuotaWhereUniqueInput
  }

  /**
   * Cuota findFirst
   */
  export type CuotaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * Filter, which Cuota to fetch.
     */
    where?: CuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuotas to fetch.
     */
    orderBy?: CuotaOrderByWithRelationInput | CuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cuotas.
     */
    cursor?: CuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cuotas.
     */
    distinct?: CuotaScalarFieldEnum | CuotaScalarFieldEnum[]
  }

  /**
   * Cuota findFirstOrThrow
   */
  export type CuotaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * Filter, which Cuota to fetch.
     */
    where?: CuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuotas to fetch.
     */
    orderBy?: CuotaOrderByWithRelationInput | CuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cuotas.
     */
    cursor?: CuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuotas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cuotas.
     */
    distinct?: CuotaScalarFieldEnum | CuotaScalarFieldEnum[]
  }

  /**
   * Cuota findMany
   */
  export type CuotaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * Filter, which Cuotas to fetch.
     */
    where?: CuotaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuotas to fetch.
     */
    orderBy?: CuotaOrderByWithRelationInput | CuotaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cuotas.
     */
    cursor?: CuotaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuotas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuotas.
     */
    skip?: number
    distinct?: CuotaScalarFieldEnum | CuotaScalarFieldEnum[]
  }

  /**
   * Cuota create
   */
  export type CuotaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * The data needed to create a Cuota.
     */
    data: XOR<CuotaCreateInput, CuotaUncheckedCreateInput>
  }

  /**
   * Cuota createMany
   */
  export type CuotaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cuotas.
     */
    data: CuotaCreateManyInput | CuotaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cuota createManyAndReturn
   */
  export type CuotaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Cuotas.
     */
    data: CuotaCreateManyInput | CuotaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cuota update
   */
  export type CuotaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * The data needed to update a Cuota.
     */
    data: XOR<CuotaUpdateInput, CuotaUncheckedUpdateInput>
    /**
     * Choose, which Cuota to update.
     */
    where: CuotaWhereUniqueInput
  }

  /**
   * Cuota updateMany
   */
  export type CuotaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cuotas.
     */
    data: XOR<CuotaUpdateManyMutationInput, CuotaUncheckedUpdateManyInput>
    /**
     * Filter which Cuotas to update
     */
    where?: CuotaWhereInput
  }

  /**
   * Cuota upsert
   */
  export type CuotaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * The filter to search for the Cuota to update in case it exists.
     */
    where: CuotaWhereUniqueInput
    /**
     * In case the Cuota found by the `where` argument doesn't exist, create a new Cuota with this data.
     */
    create: XOR<CuotaCreateInput, CuotaUncheckedCreateInput>
    /**
     * In case the Cuota was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CuotaUpdateInput, CuotaUncheckedUpdateInput>
  }

  /**
   * Cuota delete
   */
  export type CuotaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    /**
     * Filter which Cuota to delete.
     */
    where: CuotaWhereUniqueInput
  }

  /**
   * Cuota deleteMany
   */
  export type CuotaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cuotas to delete
     */
    where?: CuotaWhereInput
  }

  /**
   * Cuota.usuario
   */
  export type Cuota$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Cuota without action
   */
  export type CuotaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
  }


  /**
   * Model PlantillaComprobante
   */

  export type AggregatePlantillaComprobante = {
    _count: PlantillaComprobanteCountAggregateOutputType | null
    _avg: PlantillaComprobanteAvgAggregateOutputType | null
    _sum: PlantillaComprobanteSumAggregateOutputType | null
    _min: PlantillaComprobanteMinAggregateOutputType | null
    _max: PlantillaComprobanteMaxAggregateOutputType | null
  }

  export type PlantillaComprobanteAvgAggregateOutputType = {
    id: number | null
    sucursalId: number | null
  }

  export type PlantillaComprobanteSumAggregateOutputType = {
    id: number | null
    sucursalId: number | null
  }

  export type PlantillaComprobanteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    texto: string | null
    sucursalId: number | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type PlantillaComprobanteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    texto: string | null
    sucursalId: number | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type PlantillaComprobanteCountAggregateOutputType = {
    id: number
    nombre: number
    texto: number
    sucursalId: number
    creadoEn: number
    actualizadoEn: number
    _all: number
  }


  export type PlantillaComprobanteAvgAggregateInputType = {
    id?: true
    sucursalId?: true
  }

  export type PlantillaComprobanteSumAggregateInputType = {
    id?: true
    sucursalId?: true
  }

  export type PlantillaComprobanteMinAggregateInputType = {
    id?: true
    nombre?: true
    texto?: true
    sucursalId?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type PlantillaComprobanteMaxAggregateInputType = {
    id?: true
    nombre?: true
    texto?: true
    sucursalId?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type PlantillaComprobanteCountAggregateInputType = {
    id?: true
    nombre?: true
    texto?: true
    sucursalId?: true
    creadoEn?: true
    actualizadoEn?: true
    _all?: true
  }

  export type PlantillaComprobanteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlantillaComprobante to aggregate.
     */
    where?: PlantillaComprobanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlantillaComprobantes to fetch.
     */
    orderBy?: PlantillaComprobanteOrderByWithRelationInput | PlantillaComprobanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlantillaComprobanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlantillaComprobantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlantillaComprobantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PlantillaComprobantes
    **/
    _count?: true | PlantillaComprobanteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlantillaComprobanteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlantillaComprobanteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlantillaComprobanteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlantillaComprobanteMaxAggregateInputType
  }

  export type GetPlantillaComprobanteAggregateType<T extends PlantillaComprobanteAggregateArgs> = {
        [P in keyof T & keyof AggregatePlantillaComprobante]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlantillaComprobante[P]>
      : GetScalarType<T[P], AggregatePlantillaComprobante[P]>
  }




  export type PlantillaComprobanteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlantillaComprobanteWhereInput
    orderBy?: PlantillaComprobanteOrderByWithAggregationInput | PlantillaComprobanteOrderByWithAggregationInput[]
    by: PlantillaComprobanteScalarFieldEnum[] | PlantillaComprobanteScalarFieldEnum
    having?: PlantillaComprobanteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlantillaComprobanteCountAggregateInputType | true
    _avg?: PlantillaComprobanteAvgAggregateInputType
    _sum?: PlantillaComprobanteSumAggregateInputType
    _min?: PlantillaComprobanteMinAggregateInputType
    _max?: PlantillaComprobanteMaxAggregateInputType
  }

  export type PlantillaComprobanteGroupByOutputType = {
    id: number
    nombre: string
    texto: string
    sucursalId: number | null
    creadoEn: Date
    actualizadoEn: Date
    _count: PlantillaComprobanteCountAggregateOutputType | null
    _avg: PlantillaComprobanteAvgAggregateOutputType | null
    _sum: PlantillaComprobanteSumAggregateOutputType | null
    _min: PlantillaComprobanteMinAggregateOutputType | null
    _max: PlantillaComprobanteMaxAggregateOutputType | null
  }

  type GetPlantillaComprobanteGroupByPayload<T extends PlantillaComprobanteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlantillaComprobanteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlantillaComprobanteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlantillaComprobanteGroupByOutputType[P]>
            : GetScalarType<T[P], PlantillaComprobanteGroupByOutputType[P]>
        }
      >
    >


  export type PlantillaComprobanteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    texto?: boolean
    sucursalId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    sucursal?: boolean | PlantillaComprobante$sucursalArgs<ExtArgs>
  }, ExtArgs["result"]["plantillaComprobante"]>

  export type PlantillaComprobanteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    texto?: boolean
    sucursalId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    sucursal?: boolean | PlantillaComprobante$sucursalArgs<ExtArgs>
  }, ExtArgs["result"]["plantillaComprobante"]>

  export type PlantillaComprobanteSelectScalar = {
    id?: boolean
    nombre?: boolean
    texto?: boolean
    sucursalId?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }

  export type PlantillaComprobanteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | PlantillaComprobante$sucursalArgs<ExtArgs>
  }
  export type PlantillaComprobanteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | PlantillaComprobante$sucursalArgs<ExtArgs>
  }

  export type $PlantillaComprobantePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PlantillaComprobante"
    objects: {
      sucursal: Prisma.$SucursalPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      texto: string
      sucursalId: number | null
      creadoEn: Date
      actualizadoEn: Date
    }, ExtArgs["result"]["plantillaComprobante"]>
    composites: {}
  }

  type PlantillaComprobanteGetPayload<S extends boolean | null | undefined | PlantillaComprobanteDefaultArgs> = $Result.GetResult<Prisma.$PlantillaComprobantePayload, S>

  type PlantillaComprobanteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PlantillaComprobanteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PlantillaComprobanteCountAggregateInputType | true
    }

  export interface PlantillaComprobanteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PlantillaComprobante'], meta: { name: 'PlantillaComprobante' } }
    /**
     * Find zero or one PlantillaComprobante that matches the filter.
     * @param {PlantillaComprobanteFindUniqueArgs} args - Arguments to find a PlantillaComprobante
     * @example
     * // Get one PlantillaComprobante
     * const plantillaComprobante = await prisma.plantillaComprobante.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlantillaComprobanteFindUniqueArgs>(args: SelectSubset<T, PlantillaComprobanteFindUniqueArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PlantillaComprobante that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PlantillaComprobanteFindUniqueOrThrowArgs} args - Arguments to find a PlantillaComprobante
     * @example
     * // Get one PlantillaComprobante
     * const plantillaComprobante = await prisma.plantillaComprobante.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlantillaComprobanteFindUniqueOrThrowArgs>(args: SelectSubset<T, PlantillaComprobanteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PlantillaComprobante that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteFindFirstArgs} args - Arguments to find a PlantillaComprobante
     * @example
     * // Get one PlantillaComprobante
     * const plantillaComprobante = await prisma.plantillaComprobante.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlantillaComprobanteFindFirstArgs>(args?: SelectSubset<T, PlantillaComprobanteFindFirstArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PlantillaComprobante that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteFindFirstOrThrowArgs} args - Arguments to find a PlantillaComprobante
     * @example
     * // Get one PlantillaComprobante
     * const plantillaComprobante = await prisma.plantillaComprobante.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlantillaComprobanteFindFirstOrThrowArgs>(args?: SelectSubset<T, PlantillaComprobanteFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PlantillaComprobantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PlantillaComprobantes
     * const plantillaComprobantes = await prisma.plantillaComprobante.findMany()
     * 
     * // Get first 10 PlantillaComprobantes
     * const plantillaComprobantes = await prisma.plantillaComprobante.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const plantillaComprobanteWithIdOnly = await prisma.plantillaComprobante.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PlantillaComprobanteFindManyArgs>(args?: SelectSubset<T, PlantillaComprobanteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PlantillaComprobante.
     * @param {PlantillaComprobanteCreateArgs} args - Arguments to create a PlantillaComprobante.
     * @example
     * // Create one PlantillaComprobante
     * const PlantillaComprobante = await prisma.plantillaComprobante.create({
     *   data: {
     *     // ... data to create a PlantillaComprobante
     *   }
     * })
     * 
     */
    create<T extends PlantillaComprobanteCreateArgs>(args: SelectSubset<T, PlantillaComprobanteCreateArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PlantillaComprobantes.
     * @param {PlantillaComprobanteCreateManyArgs} args - Arguments to create many PlantillaComprobantes.
     * @example
     * // Create many PlantillaComprobantes
     * const plantillaComprobante = await prisma.plantillaComprobante.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlantillaComprobanteCreateManyArgs>(args?: SelectSubset<T, PlantillaComprobanteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PlantillaComprobantes and returns the data saved in the database.
     * @param {PlantillaComprobanteCreateManyAndReturnArgs} args - Arguments to create many PlantillaComprobantes.
     * @example
     * // Create many PlantillaComprobantes
     * const plantillaComprobante = await prisma.plantillaComprobante.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PlantillaComprobantes and only return the `id`
     * const plantillaComprobanteWithIdOnly = await prisma.plantillaComprobante.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlantillaComprobanteCreateManyAndReturnArgs>(args?: SelectSubset<T, PlantillaComprobanteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PlantillaComprobante.
     * @param {PlantillaComprobanteDeleteArgs} args - Arguments to delete one PlantillaComprobante.
     * @example
     * // Delete one PlantillaComprobante
     * const PlantillaComprobante = await prisma.plantillaComprobante.delete({
     *   where: {
     *     // ... filter to delete one PlantillaComprobante
     *   }
     * })
     * 
     */
    delete<T extends PlantillaComprobanteDeleteArgs>(args: SelectSubset<T, PlantillaComprobanteDeleteArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PlantillaComprobante.
     * @param {PlantillaComprobanteUpdateArgs} args - Arguments to update one PlantillaComprobante.
     * @example
     * // Update one PlantillaComprobante
     * const plantillaComprobante = await prisma.plantillaComprobante.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlantillaComprobanteUpdateArgs>(args: SelectSubset<T, PlantillaComprobanteUpdateArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PlantillaComprobantes.
     * @param {PlantillaComprobanteDeleteManyArgs} args - Arguments to filter PlantillaComprobantes to delete.
     * @example
     * // Delete a few PlantillaComprobantes
     * const { count } = await prisma.plantillaComprobante.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlantillaComprobanteDeleteManyArgs>(args?: SelectSubset<T, PlantillaComprobanteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlantillaComprobantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PlantillaComprobantes
     * const plantillaComprobante = await prisma.plantillaComprobante.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlantillaComprobanteUpdateManyArgs>(args: SelectSubset<T, PlantillaComprobanteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PlantillaComprobante.
     * @param {PlantillaComprobanteUpsertArgs} args - Arguments to update or create a PlantillaComprobante.
     * @example
     * // Update or create a PlantillaComprobante
     * const plantillaComprobante = await prisma.plantillaComprobante.upsert({
     *   create: {
     *     // ... data to create a PlantillaComprobante
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PlantillaComprobante we want to update
     *   }
     * })
     */
    upsert<T extends PlantillaComprobanteUpsertArgs>(args: SelectSubset<T, PlantillaComprobanteUpsertArgs<ExtArgs>>): Prisma__PlantillaComprobanteClient<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PlantillaComprobantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteCountArgs} args - Arguments to filter PlantillaComprobantes to count.
     * @example
     * // Count the number of PlantillaComprobantes
     * const count = await prisma.plantillaComprobante.count({
     *   where: {
     *     // ... the filter for the PlantillaComprobantes we want to count
     *   }
     * })
    **/
    count<T extends PlantillaComprobanteCountArgs>(
      args?: Subset<T, PlantillaComprobanteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlantillaComprobanteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PlantillaComprobante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlantillaComprobanteAggregateArgs>(args: Subset<T, PlantillaComprobanteAggregateArgs>): Prisma.PrismaPromise<GetPlantillaComprobanteAggregateType<T>>

    /**
     * Group by PlantillaComprobante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlantillaComprobanteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlantillaComprobanteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlantillaComprobanteGroupByArgs['orderBy'] }
        : { orderBy?: PlantillaComprobanteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlantillaComprobanteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlantillaComprobanteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PlantillaComprobante model
   */
  readonly fields: PlantillaComprobanteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PlantillaComprobante.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlantillaComprobanteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sucursal<T extends PlantillaComprobante$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, PlantillaComprobante$sucursalArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PlantillaComprobante model
   */ 
  interface PlantillaComprobanteFieldRefs {
    readonly id: FieldRef<"PlantillaComprobante", 'Int'>
    readonly nombre: FieldRef<"PlantillaComprobante", 'String'>
    readonly texto: FieldRef<"PlantillaComprobante", 'String'>
    readonly sucursalId: FieldRef<"PlantillaComprobante", 'Int'>
    readonly creadoEn: FieldRef<"PlantillaComprobante", 'DateTime'>
    readonly actualizadoEn: FieldRef<"PlantillaComprobante", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PlantillaComprobante findUnique
   */
  export type PlantillaComprobanteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * Filter, which PlantillaComprobante to fetch.
     */
    where: PlantillaComprobanteWhereUniqueInput
  }

  /**
   * PlantillaComprobante findUniqueOrThrow
   */
  export type PlantillaComprobanteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * Filter, which PlantillaComprobante to fetch.
     */
    where: PlantillaComprobanteWhereUniqueInput
  }

  /**
   * PlantillaComprobante findFirst
   */
  export type PlantillaComprobanteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * Filter, which PlantillaComprobante to fetch.
     */
    where?: PlantillaComprobanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlantillaComprobantes to fetch.
     */
    orderBy?: PlantillaComprobanteOrderByWithRelationInput | PlantillaComprobanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlantillaComprobantes.
     */
    cursor?: PlantillaComprobanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlantillaComprobantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlantillaComprobantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlantillaComprobantes.
     */
    distinct?: PlantillaComprobanteScalarFieldEnum | PlantillaComprobanteScalarFieldEnum[]
  }

  /**
   * PlantillaComprobante findFirstOrThrow
   */
  export type PlantillaComprobanteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * Filter, which PlantillaComprobante to fetch.
     */
    where?: PlantillaComprobanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlantillaComprobantes to fetch.
     */
    orderBy?: PlantillaComprobanteOrderByWithRelationInput | PlantillaComprobanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlantillaComprobantes.
     */
    cursor?: PlantillaComprobanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlantillaComprobantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlantillaComprobantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlantillaComprobantes.
     */
    distinct?: PlantillaComprobanteScalarFieldEnum | PlantillaComprobanteScalarFieldEnum[]
  }

  /**
   * PlantillaComprobante findMany
   */
  export type PlantillaComprobanteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * Filter, which PlantillaComprobantes to fetch.
     */
    where?: PlantillaComprobanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlantillaComprobantes to fetch.
     */
    orderBy?: PlantillaComprobanteOrderByWithRelationInput | PlantillaComprobanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PlantillaComprobantes.
     */
    cursor?: PlantillaComprobanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlantillaComprobantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlantillaComprobantes.
     */
    skip?: number
    distinct?: PlantillaComprobanteScalarFieldEnum | PlantillaComprobanteScalarFieldEnum[]
  }

  /**
   * PlantillaComprobante create
   */
  export type PlantillaComprobanteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * The data needed to create a PlantillaComprobante.
     */
    data: XOR<PlantillaComprobanteCreateInput, PlantillaComprobanteUncheckedCreateInput>
  }

  /**
   * PlantillaComprobante createMany
   */
  export type PlantillaComprobanteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PlantillaComprobantes.
     */
    data: PlantillaComprobanteCreateManyInput | PlantillaComprobanteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlantillaComprobante createManyAndReturn
   */
  export type PlantillaComprobanteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PlantillaComprobantes.
     */
    data: PlantillaComprobanteCreateManyInput | PlantillaComprobanteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PlantillaComprobante update
   */
  export type PlantillaComprobanteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * The data needed to update a PlantillaComprobante.
     */
    data: XOR<PlantillaComprobanteUpdateInput, PlantillaComprobanteUncheckedUpdateInput>
    /**
     * Choose, which PlantillaComprobante to update.
     */
    where: PlantillaComprobanteWhereUniqueInput
  }

  /**
   * PlantillaComprobante updateMany
   */
  export type PlantillaComprobanteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PlantillaComprobantes.
     */
    data: XOR<PlantillaComprobanteUpdateManyMutationInput, PlantillaComprobanteUncheckedUpdateManyInput>
    /**
     * Filter which PlantillaComprobantes to update
     */
    where?: PlantillaComprobanteWhereInput
  }

  /**
   * PlantillaComprobante upsert
   */
  export type PlantillaComprobanteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * The filter to search for the PlantillaComprobante to update in case it exists.
     */
    where: PlantillaComprobanteWhereUniqueInput
    /**
     * In case the PlantillaComprobante found by the `where` argument doesn't exist, create a new PlantillaComprobante with this data.
     */
    create: XOR<PlantillaComprobanteCreateInput, PlantillaComprobanteUncheckedCreateInput>
    /**
     * In case the PlantillaComprobante was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlantillaComprobanteUpdateInput, PlantillaComprobanteUncheckedUpdateInput>
  }

  /**
   * PlantillaComprobante delete
   */
  export type PlantillaComprobanteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    /**
     * Filter which PlantillaComprobante to delete.
     */
    where: PlantillaComprobanteWhereUniqueInput
  }

  /**
   * PlantillaComprobante deleteMany
   */
  export type PlantillaComprobanteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlantillaComprobantes to delete
     */
    where?: PlantillaComprobanteWhereInput
  }

  /**
   * PlantillaComprobante.sucursal
   */
  export type PlantillaComprobante$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    where?: SucursalWhereInput
  }

  /**
   * PlantillaComprobante without action
   */
  export type PlantillaComprobanteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
  }


  /**
   * Model VentaEliminada
   */

  export type AggregateVentaEliminada = {
    _count: VentaEliminadaCountAggregateOutputType | null
    _avg: VentaEliminadaAvgAggregateOutputType | null
    _sum: VentaEliminadaSumAggregateOutputType | null
    _min: VentaEliminadaMinAggregateOutputType | null
    _max: VentaEliminadaMaxAggregateOutputType | null
  }

  export type VentaEliminadaAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    totalVenta: number | null
    clienteId: number | null
    sucursalId: number | null
  }

  export type VentaEliminadaSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    totalVenta: number | null
    clienteId: number | null
    sucursalId: number | null
  }

  export type VentaEliminadaMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    motivo: string | null
    totalVenta: number | null
    clienteId: number | null
    fechaEliminacion: Date | null
    sucursalId: number | null
  }

  export type VentaEliminadaMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    motivo: string | null
    totalVenta: number | null
    clienteId: number | null
    fechaEliminacion: Date | null
    sucursalId: number | null
  }

  export type VentaEliminadaCountAggregateOutputType = {
    id: number
    usuarioId: number
    motivo: number
    totalVenta: number
    clienteId: number
    fechaEliminacion: number
    sucursalId: number
    _all: number
  }


  export type VentaEliminadaAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    totalVenta?: true
    clienteId?: true
    sucursalId?: true
  }

  export type VentaEliminadaSumAggregateInputType = {
    id?: true
    usuarioId?: true
    totalVenta?: true
    clienteId?: true
    sucursalId?: true
  }

  export type VentaEliminadaMinAggregateInputType = {
    id?: true
    usuarioId?: true
    motivo?: true
    totalVenta?: true
    clienteId?: true
    fechaEliminacion?: true
    sucursalId?: true
  }

  export type VentaEliminadaMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    motivo?: true
    totalVenta?: true
    clienteId?: true
    fechaEliminacion?: true
    sucursalId?: true
  }

  export type VentaEliminadaCountAggregateInputType = {
    id?: true
    usuarioId?: true
    motivo?: true
    totalVenta?: true
    clienteId?: true
    fechaEliminacion?: true
    sucursalId?: true
    _all?: true
  }

  export type VentaEliminadaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaEliminada to aggregate.
     */
    where?: VentaEliminadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadas to fetch.
     */
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaEliminadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VentaEliminadas
    **/
    _count?: true | VentaEliminadaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaEliminadaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaEliminadaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaEliminadaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaEliminadaMaxAggregateInputType
  }

  export type GetVentaEliminadaAggregateType<T extends VentaEliminadaAggregateArgs> = {
        [P in keyof T & keyof AggregateVentaEliminada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVentaEliminada[P]>
      : GetScalarType<T[P], AggregateVentaEliminada[P]>
  }




  export type VentaEliminadaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaWhereInput
    orderBy?: VentaEliminadaOrderByWithAggregationInput | VentaEliminadaOrderByWithAggregationInput[]
    by: VentaEliminadaScalarFieldEnum[] | VentaEliminadaScalarFieldEnum
    having?: VentaEliminadaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaEliminadaCountAggregateInputType | true
    _avg?: VentaEliminadaAvgAggregateInputType
    _sum?: VentaEliminadaSumAggregateInputType
    _min?: VentaEliminadaMinAggregateInputType
    _max?: VentaEliminadaMaxAggregateInputType
  }

  export type VentaEliminadaGroupByOutputType = {
    id: number
    usuarioId: number
    motivo: string
    totalVenta: number
    clienteId: number | null
    fechaEliminacion: Date
    sucursalId: number
    _count: VentaEliminadaCountAggregateOutputType | null
    _avg: VentaEliminadaAvgAggregateOutputType | null
    _sum: VentaEliminadaSumAggregateOutputType | null
    _min: VentaEliminadaMinAggregateOutputType | null
    _max: VentaEliminadaMaxAggregateOutputType | null
  }

  type GetVentaEliminadaGroupByPayload<T extends VentaEliminadaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaEliminadaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaEliminadaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaEliminadaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaEliminadaGroupByOutputType[P]>
        }
      >
    >


  export type VentaEliminadaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    motivo?: boolean
    totalVenta?: boolean
    clienteId?: boolean
    fechaEliminacion?: boolean
    sucursalId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    cliente?: boolean | VentaEliminada$clienteArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    VentaEliminadaProducto?: boolean | VentaEliminada$VentaEliminadaProductoArgs<ExtArgs>
    _count?: boolean | VentaEliminadaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ventaEliminada"]>

  export type VentaEliminadaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    motivo?: boolean
    totalVenta?: boolean
    clienteId?: boolean
    fechaEliminacion?: boolean
    sucursalId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    cliente?: boolean | VentaEliminada$clienteArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ventaEliminada"]>

  export type VentaEliminadaSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    motivo?: boolean
    totalVenta?: boolean
    clienteId?: boolean
    fechaEliminacion?: boolean
    sucursalId?: boolean
  }

  export type VentaEliminadaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    cliente?: boolean | VentaEliminada$clienteArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    VentaEliminadaProducto?: boolean | VentaEliminada$VentaEliminadaProductoArgs<ExtArgs>
    _count?: boolean | VentaEliminadaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VentaEliminadaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    cliente?: boolean | VentaEliminada$clienteArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $VentaEliminadaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VentaEliminada"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      cliente: Prisma.$ClientePayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      VentaEliminadaProducto: Prisma.$VentaEliminadaProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      motivo: string
      totalVenta: number
      clienteId: number | null
      fechaEliminacion: Date
      sucursalId: number
    }, ExtArgs["result"]["ventaEliminada"]>
    composites: {}
  }

  type VentaEliminadaGetPayload<S extends boolean | null | undefined | VentaEliminadaDefaultArgs> = $Result.GetResult<Prisma.$VentaEliminadaPayload, S>

  type VentaEliminadaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VentaEliminadaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentaEliminadaCountAggregateInputType | true
    }

  export interface VentaEliminadaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VentaEliminada'], meta: { name: 'VentaEliminada' } }
    /**
     * Find zero or one VentaEliminada that matches the filter.
     * @param {VentaEliminadaFindUniqueArgs} args - Arguments to find a VentaEliminada
     * @example
     * // Get one VentaEliminada
     * const ventaEliminada = await prisma.ventaEliminada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaEliminadaFindUniqueArgs>(args: SelectSubset<T, VentaEliminadaFindUniqueArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VentaEliminada that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VentaEliminadaFindUniqueOrThrowArgs} args - Arguments to find a VentaEliminada
     * @example
     * // Get one VentaEliminada
     * const ventaEliminada = await prisma.ventaEliminada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaEliminadaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaEliminadaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VentaEliminada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaFindFirstArgs} args - Arguments to find a VentaEliminada
     * @example
     * // Get one VentaEliminada
     * const ventaEliminada = await prisma.ventaEliminada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaEliminadaFindFirstArgs>(args?: SelectSubset<T, VentaEliminadaFindFirstArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VentaEliminada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaFindFirstOrThrowArgs} args - Arguments to find a VentaEliminada
     * @example
     * // Get one VentaEliminada
     * const ventaEliminada = await prisma.ventaEliminada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaEliminadaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaEliminadaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VentaEliminadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VentaEliminadas
     * const ventaEliminadas = await prisma.ventaEliminada.findMany()
     * 
     * // Get first 10 VentaEliminadas
     * const ventaEliminadas = await prisma.ventaEliminada.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaEliminadaWithIdOnly = await prisma.ventaEliminada.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaEliminadaFindManyArgs>(args?: SelectSubset<T, VentaEliminadaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VentaEliminada.
     * @param {VentaEliminadaCreateArgs} args - Arguments to create a VentaEliminada.
     * @example
     * // Create one VentaEliminada
     * const VentaEliminada = await prisma.ventaEliminada.create({
     *   data: {
     *     // ... data to create a VentaEliminada
     *   }
     * })
     * 
     */
    create<T extends VentaEliminadaCreateArgs>(args: SelectSubset<T, VentaEliminadaCreateArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VentaEliminadas.
     * @param {VentaEliminadaCreateManyArgs} args - Arguments to create many VentaEliminadas.
     * @example
     * // Create many VentaEliminadas
     * const ventaEliminada = await prisma.ventaEliminada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaEliminadaCreateManyArgs>(args?: SelectSubset<T, VentaEliminadaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VentaEliminadas and returns the data saved in the database.
     * @param {VentaEliminadaCreateManyAndReturnArgs} args - Arguments to create many VentaEliminadas.
     * @example
     * // Create many VentaEliminadas
     * const ventaEliminada = await prisma.ventaEliminada.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VentaEliminadas and only return the `id`
     * const ventaEliminadaWithIdOnly = await prisma.ventaEliminada.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaEliminadaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaEliminadaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VentaEliminada.
     * @param {VentaEliminadaDeleteArgs} args - Arguments to delete one VentaEliminada.
     * @example
     * // Delete one VentaEliminada
     * const VentaEliminada = await prisma.ventaEliminada.delete({
     *   where: {
     *     // ... filter to delete one VentaEliminada
     *   }
     * })
     * 
     */
    delete<T extends VentaEliminadaDeleteArgs>(args: SelectSubset<T, VentaEliminadaDeleteArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VentaEliminada.
     * @param {VentaEliminadaUpdateArgs} args - Arguments to update one VentaEliminada.
     * @example
     * // Update one VentaEliminada
     * const ventaEliminada = await prisma.ventaEliminada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaEliminadaUpdateArgs>(args: SelectSubset<T, VentaEliminadaUpdateArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VentaEliminadas.
     * @param {VentaEliminadaDeleteManyArgs} args - Arguments to filter VentaEliminadas to delete.
     * @example
     * // Delete a few VentaEliminadas
     * const { count } = await prisma.ventaEliminada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaEliminadaDeleteManyArgs>(args?: SelectSubset<T, VentaEliminadaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VentaEliminadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VentaEliminadas
     * const ventaEliminada = await prisma.ventaEliminada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaEliminadaUpdateManyArgs>(args: SelectSubset<T, VentaEliminadaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VentaEliminada.
     * @param {VentaEliminadaUpsertArgs} args - Arguments to update or create a VentaEliminada.
     * @example
     * // Update or create a VentaEliminada
     * const ventaEliminada = await prisma.ventaEliminada.upsert({
     *   create: {
     *     // ... data to create a VentaEliminada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VentaEliminada we want to update
     *   }
     * })
     */
    upsert<T extends VentaEliminadaUpsertArgs>(args: SelectSubset<T, VentaEliminadaUpsertArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VentaEliminadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaCountArgs} args - Arguments to filter VentaEliminadas to count.
     * @example
     * // Count the number of VentaEliminadas
     * const count = await prisma.ventaEliminada.count({
     *   where: {
     *     // ... the filter for the VentaEliminadas we want to count
     *   }
     * })
    **/
    count<T extends VentaEliminadaCountArgs>(
      args?: Subset<T, VentaEliminadaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaEliminadaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VentaEliminada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaEliminadaAggregateArgs>(args: Subset<T, VentaEliminadaAggregateArgs>): Prisma.PrismaPromise<GetVentaEliminadaAggregateType<T>>

    /**
     * Group by VentaEliminada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaEliminadaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaEliminadaGroupByArgs['orderBy'] }
        : { orderBy?: VentaEliminadaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaEliminadaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaEliminadaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VentaEliminada model
   */
  readonly fields: VentaEliminadaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VentaEliminada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaEliminadaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    cliente<T extends VentaEliminada$clienteArgs<ExtArgs> = {}>(args?: Subset<T, VentaEliminada$clienteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    VentaEliminadaProducto<T extends VentaEliminada$VentaEliminadaProductoArgs<ExtArgs> = {}>(args?: Subset<T, VentaEliminada$VentaEliminadaProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VentaEliminada model
   */ 
  interface VentaEliminadaFieldRefs {
    readonly id: FieldRef<"VentaEliminada", 'Int'>
    readonly usuarioId: FieldRef<"VentaEliminada", 'Int'>
    readonly motivo: FieldRef<"VentaEliminada", 'String'>
    readonly totalVenta: FieldRef<"VentaEliminada", 'Float'>
    readonly clienteId: FieldRef<"VentaEliminada", 'Int'>
    readonly fechaEliminacion: FieldRef<"VentaEliminada", 'DateTime'>
    readonly sucursalId: FieldRef<"VentaEliminada", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * VentaEliminada findUnique
   */
  export type VentaEliminadaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminada to fetch.
     */
    where: VentaEliminadaWhereUniqueInput
  }

  /**
   * VentaEliminada findUniqueOrThrow
   */
  export type VentaEliminadaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminada to fetch.
     */
    where: VentaEliminadaWhereUniqueInput
  }

  /**
   * VentaEliminada findFirst
   */
  export type VentaEliminadaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminada to fetch.
     */
    where?: VentaEliminadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadas to fetch.
     */
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaEliminadas.
     */
    cursor?: VentaEliminadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaEliminadas.
     */
    distinct?: VentaEliminadaScalarFieldEnum | VentaEliminadaScalarFieldEnum[]
  }

  /**
   * VentaEliminada findFirstOrThrow
   */
  export type VentaEliminadaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminada to fetch.
     */
    where?: VentaEliminadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadas to fetch.
     */
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaEliminadas.
     */
    cursor?: VentaEliminadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaEliminadas.
     */
    distinct?: VentaEliminadaScalarFieldEnum | VentaEliminadaScalarFieldEnum[]
  }

  /**
   * VentaEliminada findMany
   */
  export type VentaEliminadaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminadas to fetch.
     */
    where?: VentaEliminadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadas to fetch.
     */
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VentaEliminadas.
     */
    cursor?: VentaEliminadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadas.
     */
    skip?: number
    distinct?: VentaEliminadaScalarFieldEnum | VentaEliminadaScalarFieldEnum[]
  }

  /**
   * VentaEliminada create
   */
  export type VentaEliminadaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * The data needed to create a VentaEliminada.
     */
    data: XOR<VentaEliminadaCreateInput, VentaEliminadaUncheckedCreateInput>
  }

  /**
   * VentaEliminada createMany
   */
  export type VentaEliminadaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VentaEliminadas.
     */
    data: VentaEliminadaCreateManyInput | VentaEliminadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VentaEliminada createManyAndReturn
   */
  export type VentaEliminadaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VentaEliminadas.
     */
    data: VentaEliminadaCreateManyInput | VentaEliminadaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VentaEliminada update
   */
  export type VentaEliminadaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * The data needed to update a VentaEliminada.
     */
    data: XOR<VentaEliminadaUpdateInput, VentaEliminadaUncheckedUpdateInput>
    /**
     * Choose, which VentaEliminada to update.
     */
    where: VentaEliminadaWhereUniqueInput
  }

  /**
   * VentaEliminada updateMany
   */
  export type VentaEliminadaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VentaEliminadas.
     */
    data: XOR<VentaEliminadaUpdateManyMutationInput, VentaEliminadaUncheckedUpdateManyInput>
    /**
     * Filter which VentaEliminadas to update
     */
    where?: VentaEliminadaWhereInput
  }

  /**
   * VentaEliminada upsert
   */
  export type VentaEliminadaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * The filter to search for the VentaEliminada to update in case it exists.
     */
    where: VentaEliminadaWhereUniqueInput
    /**
     * In case the VentaEliminada found by the `where` argument doesn't exist, create a new VentaEliminada with this data.
     */
    create: XOR<VentaEliminadaCreateInput, VentaEliminadaUncheckedCreateInput>
    /**
     * In case the VentaEliminada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaEliminadaUpdateInput, VentaEliminadaUncheckedUpdateInput>
  }

  /**
   * VentaEliminada delete
   */
  export type VentaEliminadaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    /**
     * Filter which VentaEliminada to delete.
     */
    where: VentaEliminadaWhereUniqueInput
  }

  /**
   * VentaEliminada deleteMany
   */
  export type VentaEliminadaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaEliminadas to delete
     */
    where?: VentaEliminadaWhereInput
  }

  /**
   * VentaEliminada.cliente
   */
  export type VentaEliminada$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
  }

  /**
   * VentaEliminada.VentaEliminadaProducto
   */
  export type VentaEliminada$VentaEliminadaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    where?: VentaEliminadaProductoWhereInput
    orderBy?: VentaEliminadaProductoOrderByWithRelationInput | VentaEliminadaProductoOrderByWithRelationInput[]
    cursor?: VentaEliminadaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaEliminadaProductoScalarFieldEnum | VentaEliminadaProductoScalarFieldEnum[]
  }

  /**
   * VentaEliminada without action
   */
  export type VentaEliminadaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
  }


  /**
   * Model VentaEliminadaProducto
   */

  export type AggregateVentaEliminadaProducto = {
    _count: VentaEliminadaProductoCountAggregateOutputType | null
    _avg: VentaEliminadaProductoAvgAggregateOutputType | null
    _sum: VentaEliminadaProductoSumAggregateOutputType | null
    _min: VentaEliminadaProductoMinAggregateOutputType | null
    _max: VentaEliminadaProductoMaxAggregateOutputType | null
  }

  export type VentaEliminadaProductoAvgAggregateOutputType = {
    id: number | null
    ventaEliminadaId: number | null
    productoId: number | null
    cantidad: number | null
    precioVenta: number | null
  }

  export type VentaEliminadaProductoSumAggregateOutputType = {
    id: number | null
    ventaEliminadaId: number | null
    productoId: number | null
    cantidad: number | null
    precioVenta: number | null
  }

  export type VentaEliminadaProductoMinAggregateOutputType = {
    id: number | null
    ventaEliminadaId: number | null
    productoId: number | null
    cantidad: number | null
    precioVenta: number | null
    creadoEn: Date | null
  }

  export type VentaEliminadaProductoMaxAggregateOutputType = {
    id: number | null
    ventaEliminadaId: number | null
    productoId: number | null
    cantidad: number | null
    precioVenta: number | null
    creadoEn: Date | null
  }

  export type VentaEliminadaProductoCountAggregateOutputType = {
    id: number
    ventaEliminadaId: number
    productoId: number
    cantidad: number
    precioVenta: number
    creadoEn: number
    _all: number
  }


  export type VentaEliminadaProductoAvgAggregateInputType = {
    id?: true
    ventaEliminadaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
  }

  export type VentaEliminadaProductoSumAggregateInputType = {
    id?: true
    ventaEliminadaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
  }

  export type VentaEliminadaProductoMinAggregateInputType = {
    id?: true
    ventaEliminadaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
    creadoEn?: true
  }

  export type VentaEliminadaProductoMaxAggregateInputType = {
    id?: true
    ventaEliminadaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
    creadoEn?: true
  }

  export type VentaEliminadaProductoCountAggregateInputType = {
    id?: true
    ventaEliminadaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
    creadoEn?: true
    _all?: true
  }

  export type VentaEliminadaProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaEliminadaProducto to aggregate.
     */
    where?: VentaEliminadaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadaProductos to fetch.
     */
    orderBy?: VentaEliminadaProductoOrderByWithRelationInput | VentaEliminadaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaEliminadaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VentaEliminadaProductos
    **/
    _count?: true | VentaEliminadaProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaEliminadaProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaEliminadaProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaEliminadaProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaEliminadaProductoMaxAggregateInputType
  }

  export type GetVentaEliminadaProductoAggregateType<T extends VentaEliminadaProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateVentaEliminadaProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVentaEliminadaProducto[P]>
      : GetScalarType<T[P], AggregateVentaEliminadaProducto[P]>
  }




  export type VentaEliminadaProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaEliminadaProductoWhereInput
    orderBy?: VentaEliminadaProductoOrderByWithAggregationInput | VentaEliminadaProductoOrderByWithAggregationInput[]
    by: VentaEliminadaProductoScalarFieldEnum[] | VentaEliminadaProductoScalarFieldEnum
    having?: VentaEliminadaProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaEliminadaProductoCountAggregateInputType | true
    _avg?: VentaEliminadaProductoAvgAggregateInputType
    _sum?: VentaEliminadaProductoSumAggregateInputType
    _min?: VentaEliminadaProductoMinAggregateInputType
    _max?: VentaEliminadaProductoMaxAggregateInputType
  }

  export type VentaEliminadaProductoGroupByOutputType = {
    id: number
    ventaEliminadaId: number
    productoId: number | null
    cantidad: number
    precioVenta: number
    creadoEn: Date
    _count: VentaEliminadaProductoCountAggregateOutputType | null
    _avg: VentaEliminadaProductoAvgAggregateOutputType | null
    _sum: VentaEliminadaProductoSumAggregateOutputType | null
    _min: VentaEliminadaProductoMinAggregateOutputType | null
    _max: VentaEliminadaProductoMaxAggregateOutputType | null
  }

  type GetVentaEliminadaProductoGroupByPayload<T extends VentaEliminadaProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaEliminadaProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaEliminadaProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaEliminadaProductoGroupByOutputType[P]>
            : GetScalarType<T[P], VentaEliminadaProductoGroupByOutputType[P]>
        }
      >
    >


  export type VentaEliminadaProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaEliminadaId?: boolean
    productoId?: boolean
    cantidad?: boolean
    precioVenta?: boolean
    creadoEn?: boolean
    ventaEliminada?: boolean | VentaEliminadaDefaultArgs<ExtArgs>
    producto?: boolean | VentaEliminadaProducto$productoArgs<ExtArgs>
  }, ExtArgs["result"]["ventaEliminadaProducto"]>

  export type VentaEliminadaProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaEliminadaId?: boolean
    productoId?: boolean
    cantidad?: boolean
    precioVenta?: boolean
    creadoEn?: boolean
    ventaEliminada?: boolean | VentaEliminadaDefaultArgs<ExtArgs>
    producto?: boolean | VentaEliminadaProducto$productoArgs<ExtArgs>
  }, ExtArgs["result"]["ventaEliminadaProducto"]>

  export type VentaEliminadaProductoSelectScalar = {
    id?: boolean
    ventaEliminadaId?: boolean
    productoId?: boolean
    cantidad?: boolean
    precioVenta?: boolean
    creadoEn?: boolean
  }

  export type VentaEliminadaProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventaEliminada?: boolean | VentaEliminadaDefaultArgs<ExtArgs>
    producto?: boolean | VentaEliminadaProducto$productoArgs<ExtArgs>
  }
  export type VentaEliminadaProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventaEliminada?: boolean | VentaEliminadaDefaultArgs<ExtArgs>
    producto?: boolean | VentaEliminadaProducto$productoArgs<ExtArgs>
  }

  export type $VentaEliminadaProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VentaEliminadaProducto"
    objects: {
      ventaEliminada: Prisma.$VentaEliminadaPayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ventaEliminadaId: number
      productoId: number | null
      cantidad: number
      precioVenta: number
      creadoEn: Date
    }, ExtArgs["result"]["ventaEliminadaProducto"]>
    composites: {}
  }

  type VentaEliminadaProductoGetPayload<S extends boolean | null | undefined | VentaEliminadaProductoDefaultArgs> = $Result.GetResult<Prisma.$VentaEliminadaProductoPayload, S>

  type VentaEliminadaProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VentaEliminadaProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentaEliminadaProductoCountAggregateInputType | true
    }

  export interface VentaEliminadaProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VentaEliminadaProducto'], meta: { name: 'VentaEliminadaProducto' } }
    /**
     * Find zero or one VentaEliminadaProducto that matches the filter.
     * @param {VentaEliminadaProductoFindUniqueArgs} args - Arguments to find a VentaEliminadaProducto
     * @example
     * // Get one VentaEliminadaProducto
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaEliminadaProductoFindUniqueArgs>(args: SelectSubset<T, VentaEliminadaProductoFindUniqueArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VentaEliminadaProducto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VentaEliminadaProductoFindUniqueOrThrowArgs} args - Arguments to find a VentaEliminadaProducto
     * @example
     * // Get one VentaEliminadaProducto
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaEliminadaProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaEliminadaProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VentaEliminadaProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoFindFirstArgs} args - Arguments to find a VentaEliminadaProducto
     * @example
     * // Get one VentaEliminadaProducto
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaEliminadaProductoFindFirstArgs>(args?: SelectSubset<T, VentaEliminadaProductoFindFirstArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VentaEliminadaProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoFindFirstOrThrowArgs} args - Arguments to find a VentaEliminadaProducto
     * @example
     * // Get one VentaEliminadaProducto
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaEliminadaProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaEliminadaProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VentaEliminadaProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VentaEliminadaProductos
     * const ventaEliminadaProductos = await prisma.ventaEliminadaProducto.findMany()
     * 
     * // Get first 10 VentaEliminadaProductos
     * const ventaEliminadaProductos = await prisma.ventaEliminadaProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaEliminadaProductoWithIdOnly = await prisma.ventaEliminadaProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaEliminadaProductoFindManyArgs>(args?: SelectSubset<T, VentaEliminadaProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VentaEliminadaProducto.
     * @param {VentaEliminadaProductoCreateArgs} args - Arguments to create a VentaEliminadaProducto.
     * @example
     * // Create one VentaEliminadaProducto
     * const VentaEliminadaProducto = await prisma.ventaEliminadaProducto.create({
     *   data: {
     *     // ... data to create a VentaEliminadaProducto
     *   }
     * })
     * 
     */
    create<T extends VentaEliminadaProductoCreateArgs>(args: SelectSubset<T, VentaEliminadaProductoCreateArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VentaEliminadaProductos.
     * @param {VentaEliminadaProductoCreateManyArgs} args - Arguments to create many VentaEliminadaProductos.
     * @example
     * // Create many VentaEliminadaProductos
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaEliminadaProductoCreateManyArgs>(args?: SelectSubset<T, VentaEliminadaProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VentaEliminadaProductos and returns the data saved in the database.
     * @param {VentaEliminadaProductoCreateManyAndReturnArgs} args - Arguments to create many VentaEliminadaProductos.
     * @example
     * // Create many VentaEliminadaProductos
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VentaEliminadaProductos and only return the `id`
     * const ventaEliminadaProductoWithIdOnly = await prisma.ventaEliminadaProducto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaEliminadaProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaEliminadaProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VentaEliminadaProducto.
     * @param {VentaEliminadaProductoDeleteArgs} args - Arguments to delete one VentaEliminadaProducto.
     * @example
     * // Delete one VentaEliminadaProducto
     * const VentaEliminadaProducto = await prisma.ventaEliminadaProducto.delete({
     *   where: {
     *     // ... filter to delete one VentaEliminadaProducto
     *   }
     * })
     * 
     */
    delete<T extends VentaEliminadaProductoDeleteArgs>(args: SelectSubset<T, VentaEliminadaProductoDeleteArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VentaEliminadaProducto.
     * @param {VentaEliminadaProductoUpdateArgs} args - Arguments to update one VentaEliminadaProducto.
     * @example
     * // Update one VentaEliminadaProducto
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaEliminadaProductoUpdateArgs>(args: SelectSubset<T, VentaEliminadaProductoUpdateArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VentaEliminadaProductos.
     * @param {VentaEliminadaProductoDeleteManyArgs} args - Arguments to filter VentaEliminadaProductos to delete.
     * @example
     * // Delete a few VentaEliminadaProductos
     * const { count } = await prisma.ventaEliminadaProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaEliminadaProductoDeleteManyArgs>(args?: SelectSubset<T, VentaEliminadaProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VentaEliminadaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VentaEliminadaProductos
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaEliminadaProductoUpdateManyArgs>(args: SelectSubset<T, VentaEliminadaProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VentaEliminadaProducto.
     * @param {VentaEliminadaProductoUpsertArgs} args - Arguments to update or create a VentaEliminadaProducto.
     * @example
     * // Update or create a VentaEliminadaProducto
     * const ventaEliminadaProducto = await prisma.ventaEliminadaProducto.upsert({
     *   create: {
     *     // ... data to create a VentaEliminadaProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VentaEliminadaProducto we want to update
     *   }
     * })
     */
    upsert<T extends VentaEliminadaProductoUpsertArgs>(args: SelectSubset<T, VentaEliminadaProductoUpsertArgs<ExtArgs>>): Prisma__VentaEliminadaProductoClient<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VentaEliminadaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoCountArgs} args - Arguments to filter VentaEliminadaProductos to count.
     * @example
     * // Count the number of VentaEliminadaProductos
     * const count = await prisma.ventaEliminadaProducto.count({
     *   where: {
     *     // ... the filter for the VentaEliminadaProductos we want to count
     *   }
     * })
    **/
    count<T extends VentaEliminadaProductoCountArgs>(
      args?: Subset<T, VentaEliminadaProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaEliminadaProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VentaEliminadaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaEliminadaProductoAggregateArgs>(args: Subset<T, VentaEliminadaProductoAggregateArgs>): Prisma.PrismaPromise<GetVentaEliminadaProductoAggregateType<T>>

    /**
     * Group by VentaEliminadaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaEliminadaProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaEliminadaProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaEliminadaProductoGroupByArgs['orderBy'] }
        : { orderBy?: VentaEliminadaProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaEliminadaProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaEliminadaProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VentaEliminadaProducto model
   */
  readonly fields: VentaEliminadaProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VentaEliminadaProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaEliminadaProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ventaEliminada<T extends VentaEliminadaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaEliminadaDefaultArgs<ExtArgs>>): Prisma__VentaEliminadaClient<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producto<T extends VentaEliminadaProducto$productoArgs<ExtArgs> = {}>(args?: Subset<T, VentaEliminadaProducto$productoArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VentaEliminadaProducto model
   */ 
  interface VentaEliminadaProductoFieldRefs {
    readonly id: FieldRef<"VentaEliminadaProducto", 'Int'>
    readonly ventaEliminadaId: FieldRef<"VentaEliminadaProducto", 'Int'>
    readonly productoId: FieldRef<"VentaEliminadaProducto", 'Int'>
    readonly cantidad: FieldRef<"VentaEliminadaProducto", 'Int'>
    readonly precioVenta: FieldRef<"VentaEliminadaProducto", 'Float'>
    readonly creadoEn: FieldRef<"VentaEliminadaProducto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VentaEliminadaProducto findUnique
   */
  export type VentaEliminadaProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminadaProducto to fetch.
     */
    where: VentaEliminadaProductoWhereUniqueInput
  }

  /**
   * VentaEliminadaProducto findUniqueOrThrow
   */
  export type VentaEliminadaProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminadaProducto to fetch.
     */
    where: VentaEliminadaProductoWhereUniqueInput
  }

  /**
   * VentaEliminadaProducto findFirst
   */
  export type VentaEliminadaProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminadaProducto to fetch.
     */
    where?: VentaEliminadaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadaProductos to fetch.
     */
    orderBy?: VentaEliminadaProductoOrderByWithRelationInput | VentaEliminadaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaEliminadaProductos.
     */
    cursor?: VentaEliminadaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaEliminadaProductos.
     */
    distinct?: VentaEliminadaProductoScalarFieldEnum | VentaEliminadaProductoScalarFieldEnum[]
  }

  /**
   * VentaEliminadaProducto findFirstOrThrow
   */
  export type VentaEliminadaProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminadaProducto to fetch.
     */
    where?: VentaEliminadaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadaProductos to fetch.
     */
    orderBy?: VentaEliminadaProductoOrderByWithRelationInput | VentaEliminadaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaEliminadaProductos.
     */
    cursor?: VentaEliminadaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaEliminadaProductos.
     */
    distinct?: VentaEliminadaProductoScalarFieldEnum | VentaEliminadaProductoScalarFieldEnum[]
  }

  /**
   * VentaEliminadaProducto findMany
   */
  export type VentaEliminadaProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaEliminadaProductos to fetch.
     */
    where?: VentaEliminadaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaEliminadaProductos to fetch.
     */
    orderBy?: VentaEliminadaProductoOrderByWithRelationInput | VentaEliminadaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VentaEliminadaProductos.
     */
    cursor?: VentaEliminadaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaEliminadaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaEliminadaProductos.
     */
    skip?: number
    distinct?: VentaEliminadaProductoScalarFieldEnum | VentaEliminadaProductoScalarFieldEnum[]
  }

  /**
   * VentaEliminadaProducto create
   */
  export type VentaEliminadaProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a VentaEliminadaProducto.
     */
    data: XOR<VentaEliminadaProductoCreateInput, VentaEliminadaProductoUncheckedCreateInput>
  }

  /**
   * VentaEliminadaProducto createMany
   */
  export type VentaEliminadaProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VentaEliminadaProductos.
     */
    data: VentaEliminadaProductoCreateManyInput | VentaEliminadaProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VentaEliminadaProducto createManyAndReturn
   */
  export type VentaEliminadaProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VentaEliminadaProductos.
     */
    data: VentaEliminadaProductoCreateManyInput | VentaEliminadaProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VentaEliminadaProducto update
   */
  export type VentaEliminadaProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a VentaEliminadaProducto.
     */
    data: XOR<VentaEliminadaProductoUpdateInput, VentaEliminadaProductoUncheckedUpdateInput>
    /**
     * Choose, which VentaEliminadaProducto to update.
     */
    where: VentaEliminadaProductoWhereUniqueInput
  }

  /**
   * VentaEliminadaProducto updateMany
   */
  export type VentaEliminadaProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VentaEliminadaProductos.
     */
    data: XOR<VentaEliminadaProductoUpdateManyMutationInput, VentaEliminadaProductoUncheckedUpdateManyInput>
    /**
     * Filter which VentaEliminadaProductos to update
     */
    where?: VentaEliminadaProductoWhereInput
  }

  /**
   * VentaEliminadaProducto upsert
   */
  export type VentaEliminadaProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the VentaEliminadaProducto to update in case it exists.
     */
    where: VentaEliminadaProductoWhereUniqueInput
    /**
     * In case the VentaEliminadaProducto found by the `where` argument doesn't exist, create a new VentaEliminadaProducto with this data.
     */
    create: XOR<VentaEliminadaProductoCreateInput, VentaEliminadaProductoUncheckedCreateInput>
    /**
     * In case the VentaEliminadaProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaEliminadaProductoUpdateInput, VentaEliminadaProductoUncheckedUpdateInput>
  }

  /**
   * VentaEliminadaProducto delete
   */
  export type VentaEliminadaProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    /**
     * Filter which VentaEliminadaProducto to delete.
     */
    where: VentaEliminadaProductoWhereUniqueInput
  }

  /**
   * VentaEliminadaProducto deleteMany
   */
  export type VentaEliminadaProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaEliminadaProductos to delete
     */
    where?: VentaEliminadaProductoWhereInput
  }

  /**
   * VentaEliminadaProducto.producto
   */
  export type VentaEliminadaProducto$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
  }

  /**
   * VentaEliminadaProducto without action
   */
  export type VentaEliminadaProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
  }


  /**
   * Model SucursalSaldo
   */

  export type AggregateSucursalSaldo = {
    _count: SucursalSaldoCountAggregateOutputType | null
    _avg: SucursalSaldoAvgAggregateOutputType | null
    _sum: SucursalSaldoSumAggregateOutputType | null
    _min: SucursalSaldoMinAggregateOutputType | null
    _max: SucursalSaldoMaxAggregateOutputType | null
  }

  export type SucursalSaldoAvgAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    saldoAcumulado: number | null
    totalIngresos: number | null
    totalEgresos: number | null
  }

  export type SucursalSaldoSumAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    saldoAcumulado: number | null
    totalIngresos: number | null
    totalEgresos: number | null
  }

  export type SucursalSaldoMinAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    saldoAcumulado: number | null
    totalIngresos: number | null
    totalEgresos: number | null
    actualizadoEn: Date | null
  }

  export type SucursalSaldoMaxAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    saldoAcumulado: number | null
    totalIngresos: number | null
    totalEgresos: number | null
    actualizadoEn: Date | null
  }

  export type SucursalSaldoCountAggregateOutputType = {
    id: number
    sucursalId: number
    saldoAcumulado: number
    totalIngresos: number
    totalEgresos: number
    actualizadoEn: number
    _all: number
  }


  export type SucursalSaldoAvgAggregateInputType = {
    id?: true
    sucursalId?: true
    saldoAcumulado?: true
    totalIngresos?: true
    totalEgresos?: true
  }

  export type SucursalSaldoSumAggregateInputType = {
    id?: true
    sucursalId?: true
    saldoAcumulado?: true
    totalIngresos?: true
    totalEgresos?: true
  }

  export type SucursalSaldoMinAggregateInputType = {
    id?: true
    sucursalId?: true
    saldoAcumulado?: true
    totalIngresos?: true
    totalEgresos?: true
    actualizadoEn?: true
  }

  export type SucursalSaldoMaxAggregateInputType = {
    id?: true
    sucursalId?: true
    saldoAcumulado?: true
    totalIngresos?: true
    totalEgresos?: true
    actualizadoEn?: true
  }

  export type SucursalSaldoCountAggregateInputType = {
    id?: true
    sucursalId?: true
    saldoAcumulado?: true
    totalIngresos?: true
    totalEgresos?: true
    actualizadoEn?: true
    _all?: true
  }

  export type SucursalSaldoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SucursalSaldo to aggregate.
     */
    where?: SucursalSaldoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldos to fetch.
     */
    orderBy?: SucursalSaldoOrderByWithRelationInput | SucursalSaldoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SucursalSaldoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SucursalSaldos
    **/
    _count?: true | SucursalSaldoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SucursalSaldoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SucursalSaldoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SucursalSaldoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SucursalSaldoMaxAggregateInputType
  }

  export type GetSucursalSaldoAggregateType<T extends SucursalSaldoAggregateArgs> = {
        [P in keyof T & keyof AggregateSucursalSaldo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSucursalSaldo[P]>
      : GetScalarType<T[P], AggregateSucursalSaldo[P]>
  }




  export type SucursalSaldoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SucursalSaldoWhereInput
    orderBy?: SucursalSaldoOrderByWithAggregationInput | SucursalSaldoOrderByWithAggregationInput[]
    by: SucursalSaldoScalarFieldEnum[] | SucursalSaldoScalarFieldEnum
    having?: SucursalSaldoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SucursalSaldoCountAggregateInputType | true
    _avg?: SucursalSaldoAvgAggregateInputType
    _sum?: SucursalSaldoSumAggregateInputType
    _min?: SucursalSaldoMinAggregateInputType
    _max?: SucursalSaldoMaxAggregateInputType
  }

  export type SucursalSaldoGroupByOutputType = {
    id: number
    sucursalId: number
    saldoAcumulado: number
    totalIngresos: number
    totalEgresos: number
    actualizadoEn: Date
    _count: SucursalSaldoCountAggregateOutputType | null
    _avg: SucursalSaldoAvgAggregateOutputType | null
    _sum: SucursalSaldoSumAggregateOutputType | null
    _min: SucursalSaldoMinAggregateOutputType | null
    _max: SucursalSaldoMaxAggregateOutputType | null
  }

  type GetSucursalSaldoGroupByPayload<T extends SucursalSaldoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SucursalSaldoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SucursalSaldoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SucursalSaldoGroupByOutputType[P]>
            : GetScalarType<T[P], SucursalSaldoGroupByOutputType[P]>
        }
      >
    >


  export type SucursalSaldoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sucursalId?: boolean
    saldoAcumulado?: boolean
    totalIngresos?: boolean
    totalEgresos?: boolean
    actualizadoEn?: boolean
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sucursalSaldo"]>

  export type SucursalSaldoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sucursalId?: boolean
    saldoAcumulado?: boolean
    totalIngresos?: boolean
    totalEgresos?: boolean
    actualizadoEn?: boolean
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sucursalSaldo"]>

  export type SucursalSaldoSelectScalar = {
    id?: boolean
    sucursalId?: boolean
    saldoAcumulado?: boolean
    totalIngresos?: boolean
    totalEgresos?: boolean
    actualizadoEn?: boolean
  }

  export type SucursalSaldoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }
  export type SucursalSaldoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $SucursalSaldoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SucursalSaldo"
    objects: {
      sucursal: Prisma.$SucursalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sucursalId: number
      saldoAcumulado: number
      totalIngresos: number
      totalEgresos: number
      actualizadoEn: Date
    }, ExtArgs["result"]["sucursalSaldo"]>
    composites: {}
  }

  type SucursalSaldoGetPayload<S extends boolean | null | undefined | SucursalSaldoDefaultArgs> = $Result.GetResult<Prisma.$SucursalSaldoPayload, S>

  type SucursalSaldoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SucursalSaldoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SucursalSaldoCountAggregateInputType | true
    }

  export interface SucursalSaldoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SucursalSaldo'], meta: { name: 'SucursalSaldo' } }
    /**
     * Find zero or one SucursalSaldo that matches the filter.
     * @param {SucursalSaldoFindUniqueArgs} args - Arguments to find a SucursalSaldo
     * @example
     * // Get one SucursalSaldo
     * const sucursalSaldo = await prisma.sucursalSaldo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SucursalSaldoFindUniqueArgs>(args: SelectSubset<T, SucursalSaldoFindUniqueArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SucursalSaldo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SucursalSaldoFindUniqueOrThrowArgs} args - Arguments to find a SucursalSaldo
     * @example
     * // Get one SucursalSaldo
     * const sucursalSaldo = await prisma.sucursalSaldo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SucursalSaldoFindUniqueOrThrowArgs>(args: SelectSubset<T, SucursalSaldoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SucursalSaldo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoFindFirstArgs} args - Arguments to find a SucursalSaldo
     * @example
     * // Get one SucursalSaldo
     * const sucursalSaldo = await prisma.sucursalSaldo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SucursalSaldoFindFirstArgs>(args?: SelectSubset<T, SucursalSaldoFindFirstArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SucursalSaldo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoFindFirstOrThrowArgs} args - Arguments to find a SucursalSaldo
     * @example
     * // Get one SucursalSaldo
     * const sucursalSaldo = await prisma.sucursalSaldo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SucursalSaldoFindFirstOrThrowArgs>(args?: SelectSubset<T, SucursalSaldoFindFirstOrThrowArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SucursalSaldos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SucursalSaldos
     * const sucursalSaldos = await prisma.sucursalSaldo.findMany()
     * 
     * // Get first 10 SucursalSaldos
     * const sucursalSaldos = await prisma.sucursalSaldo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sucursalSaldoWithIdOnly = await prisma.sucursalSaldo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SucursalSaldoFindManyArgs>(args?: SelectSubset<T, SucursalSaldoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SucursalSaldo.
     * @param {SucursalSaldoCreateArgs} args - Arguments to create a SucursalSaldo.
     * @example
     * // Create one SucursalSaldo
     * const SucursalSaldo = await prisma.sucursalSaldo.create({
     *   data: {
     *     // ... data to create a SucursalSaldo
     *   }
     * })
     * 
     */
    create<T extends SucursalSaldoCreateArgs>(args: SelectSubset<T, SucursalSaldoCreateArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SucursalSaldos.
     * @param {SucursalSaldoCreateManyArgs} args - Arguments to create many SucursalSaldos.
     * @example
     * // Create many SucursalSaldos
     * const sucursalSaldo = await prisma.sucursalSaldo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SucursalSaldoCreateManyArgs>(args?: SelectSubset<T, SucursalSaldoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SucursalSaldos and returns the data saved in the database.
     * @param {SucursalSaldoCreateManyAndReturnArgs} args - Arguments to create many SucursalSaldos.
     * @example
     * // Create many SucursalSaldos
     * const sucursalSaldo = await prisma.sucursalSaldo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SucursalSaldos and only return the `id`
     * const sucursalSaldoWithIdOnly = await prisma.sucursalSaldo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SucursalSaldoCreateManyAndReturnArgs>(args?: SelectSubset<T, SucursalSaldoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SucursalSaldo.
     * @param {SucursalSaldoDeleteArgs} args - Arguments to delete one SucursalSaldo.
     * @example
     * // Delete one SucursalSaldo
     * const SucursalSaldo = await prisma.sucursalSaldo.delete({
     *   where: {
     *     // ... filter to delete one SucursalSaldo
     *   }
     * })
     * 
     */
    delete<T extends SucursalSaldoDeleteArgs>(args: SelectSubset<T, SucursalSaldoDeleteArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SucursalSaldo.
     * @param {SucursalSaldoUpdateArgs} args - Arguments to update one SucursalSaldo.
     * @example
     * // Update one SucursalSaldo
     * const sucursalSaldo = await prisma.sucursalSaldo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SucursalSaldoUpdateArgs>(args: SelectSubset<T, SucursalSaldoUpdateArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SucursalSaldos.
     * @param {SucursalSaldoDeleteManyArgs} args - Arguments to filter SucursalSaldos to delete.
     * @example
     * // Delete a few SucursalSaldos
     * const { count } = await prisma.sucursalSaldo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SucursalSaldoDeleteManyArgs>(args?: SelectSubset<T, SucursalSaldoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SucursalSaldos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SucursalSaldos
     * const sucursalSaldo = await prisma.sucursalSaldo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SucursalSaldoUpdateManyArgs>(args: SelectSubset<T, SucursalSaldoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SucursalSaldo.
     * @param {SucursalSaldoUpsertArgs} args - Arguments to update or create a SucursalSaldo.
     * @example
     * // Update or create a SucursalSaldo
     * const sucursalSaldo = await prisma.sucursalSaldo.upsert({
     *   create: {
     *     // ... data to create a SucursalSaldo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SucursalSaldo we want to update
     *   }
     * })
     */
    upsert<T extends SucursalSaldoUpsertArgs>(args: SelectSubset<T, SucursalSaldoUpsertArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SucursalSaldos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoCountArgs} args - Arguments to filter SucursalSaldos to count.
     * @example
     * // Count the number of SucursalSaldos
     * const count = await prisma.sucursalSaldo.count({
     *   where: {
     *     // ... the filter for the SucursalSaldos we want to count
     *   }
     * })
    **/
    count<T extends SucursalSaldoCountArgs>(
      args?: Subset<T, SucursalSaldoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SucursalSaldoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SucursalSaldo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SucursalSaldoAggregateArgs>(args: Subset<T, SucursalSaldoAggregateArgs>): Prisma.PrismaPromise<GetSucursalSaldoAggregateType<T>>

    /**
     * Group by SucursalSaldo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SucursalSaldoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SucursalSaldoGroupByArgs['orderBy'] }
        : { orderBy?: SucursalSaldoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SucursalSaldoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSucursalSaldoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SucursalSaldo model
   */
  readonly fields: SucursalSaldoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SucursalSaldo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SucursalSaldoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SucursalSaldo model
   */ 
  interface SucursalSaldoFieldRefs {
    readonly id: FieldRef<"SucursalSaldo", 'Int'>
    readonly sucursalId: FieldRef<"SucursalSaldo", 'Int'>
    readonly saldoAcumulado: FieldRef<"SucursalSaldo", 'Float'>
    readonly totalIngresos: FieldRef<"SucursalSaldo", 'Float'>
    readonly totalEgresos: FieldRef<"SucursalSaldo", 'Float'>
    readonly actualizadoEn: FieldRef<"SucursalSaldo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SucursalSaldo findUnique
   */
  export type SucursalSaldoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * Filter, which SucursalSaldo to fetch.
     */
    where: SucursalSaldoWhereUniqueInput
  }

  /**
   * SucursalSaldo findUniqueOrThrow
   */
  export type SucursalSaldoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * Filter, which SucursalSaldo to fetch.
     */
    where: SucursalSaldoWhereUniqueInput
  }

  /**
   * SucursalSaldo findFirst
   */
  export type SucursalSaldoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * Filter, which SucursalSaldo to fetch.
     */
    where?: SucursalSaldoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldos to fetch.
     */
    orderBy?: SucursalSaldoOrderByWithRelationInput | SucursalSaldoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SucursalSaldos.
     */
    cursor?: SucursalSaldoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SucursalSaldos.
     */
    distinct?: SucursalSaldoScalarFieldEnum | SucursalSaldoScalarFieldEnum[]
  }

  /**
   * SucursalSaldo findFirstOrThrow
   */
  export type SucursalSaldoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * Filter, which SucursalSaldo to fetch.
     */
    where?: SucursalSaldoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldos to fetch.
     */
    orderBy?: SucursalSaldoOrderByWithRelationInput | SucursalSaldoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SucursalSaldos.
     */
    cursor?: SucursalSaldoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SucursalSaldos.
     */
    distinct?: SucursalSaldoScalarFieldEnum | SucursalSaldoScalarFieldEnum[]
  }

  /**
   * SucursalSaldo findMany
   */
  export type SucursalSaldoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * Filter, which SucursalSaldos to fetch.
     */
    where?: SucursalSaldoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldos to fetch.
     */
    orderBy?: SucursalSaldoOrderByWithRelationInput | SucursalSaldoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SucursalSaldos.
     */
    cursor?: SucursalSaldoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldos.
     */
    skip?: number
    distinct?: SucursalSaldoScalarFieldEnum | SucursalSaldoScalarFieldEnum[]
  }

  /**
   * SucursalSaldo create
   */
  export type SucursalSaldoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * The data needed to create a SucursalSaldo.
     */
    data: XOR<SucursalSaldoCreateInput, SucursalSaldoUncheckedCreateInput>
  }

  /**
   * SucursalSaldo createMany
   */
  export type SucursalSaldoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SucursalSaldos.
     */
    data: SucursalSaldoCreateManyInput | SucursalSaldoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SucursalSaldo createManyAndReturn
   */
  export type SucursalSaldoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SucursalSaldos.
     */
    data: SucursalSaldoCreateManyInput | SucursalSaldoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SucursalSaldo update
   */
  export type SucursalSaldoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * The data needed to update a SucursalSaldo.
     */
    data: XOR<SucursalSaldoUpdateInput, SucursalSaldoUncheckedUpdateInput>
    /**
     * Choose, which SucursalSaldo to update.
     */
    where: SucursalSaldoWhereUniqueInput
  }

  /**
   * SucursalSaldo updateMany
   */
  export type SucursalSaldoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SucursalSaldos.
     */
    data: XOR<SucursalSaldoUpdateManyMutationInput, SucursalSaldoUncheckedUpdateManyInput>
    /**
     * Filter which SucursalSaldos to update
     */
    where?: SucursalSaldoWhereInput
  }

  /**
   * SucursalSaldo upsert
   */
  export type SucursalSaldoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * The filter to search for the SucursalSaldo to update in case it exists.
     */
    where: SucursalSaldoWhereUniqueInput
    /**
     * In case the SucursalSaldo found by the `where` argument doesn't exist, create a new SucursalSaldo with this data.
     */
    create: XOR<SucursalSaldoCreateInput, SucursalSaldoUncheckedCreateInput>
    /**
     * In case the SucursalSaldo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SucursalSaldoUpdateInput, SucursalSaldoUncheckedUpdateInput>
  }

  /**
   * SucursalSaldo delete
   */
  export type SucursalSaldoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    /**
     * Filter which SucursalSaldo to delete.
     */
    where: SucursalSaldoWhereUniqueInput
  }

  /**
   * SucursalSaldo deleteMany
   */
  export type SucursalSaldoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SucursalSaldos to delete
     */
    where?: SucursalSaldoWhereInput
  }

  /**
   * SucursalSaldo without action
   */
  export type SucursalSaldoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
  }


  /**
   * Model RegistroCaja
   */

  export type AggregateRegistroCaja = {
    _count: RegistroCajaCountAggregateOutputType | null
    _avg: RegistroCajaAvgAggregateOutputType | null
    _sum: RegistroCajaSumAggregateOutputType | null
    _min: RegistroCajaMinAggregateOutputType | null
    _max: RegistroCajaMaxAggregateOutputType | null
  }

  export type RegistroCajaAvgAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    usuarioId: number | null
    saldoInicial: number | null
    saldoFinal: number | null
  }

  export type RegistroCajaSumAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    usuarioId: number | null
    saldoInicial: number | null
    saldoFinal: number | null
  }

  export type RegistroCajaMinAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    usuarioId: number | null
    saldoInicial: number | null
    saldoFinal: number | null
    fechaInicio: Date | null
    fechaCierre: Date | null
    estado: $Enums.EstadoCaja | null
    comentario: string | null
  }

  export type RegistroCajaMaxAggregateOutputType = {
    id: number | null
    sucursalId: number | null
    usuarioId: number | null
    saldoInicial: number | null
    saldoFinal: number | null
    fechaInicio: Date | null
    fechaCierre: Date | null
    estado: $Enums.EstadoCaja | null
    comentario: string | null
  }

  export type RegistroCajaCountAggregateOutputType = {
    id: number
    sucursalId: number
    usuarioId: number
    saldoInicial: number
    saldoFinal: number
    fechaInicio: number
    fechaCierre: number
    estado: number
    comentario: number
    _all: number
  }


  export type RegistroCajaAvgAggregateInputType = {
    id?: true
    sucursalId?: true
    usuarioId?: true
    saldoInicial?: true
    saldoFinal?: true
  }

  export type RegistroCajaSumAggregateInputType = {
    id?: true
    sucursalId?: true
    usuarioId?: true
    saldoInicial?: true
    saldoFinal?: true
  }

  export type RegistroCajaMinAggregateInputType = {
    id?: true
    sucursalId?: true
    usuarioId?: true
    saldoInicial?: true
    saldoFinal?: true
    fechaInicio?: true
    fechaCierre?: true
    estado?: true
    comentario?: true
  }

  export type RegistroCajaMaxAggregateInputType = {
    id?: true
    sucursalId?: true
    usuarioId?: true
    saldoInicial?: true
    saldoFinal?: true
    fechaInicio?: true
    fechaCierre?: true
    estado?: true
    comentario?: true
  }

  export type RegistroCajaCountAggregateInputType = {
    id?: true
    sucursalId?: true
    usuarioId?: true
    saldoInicial?: true
    saldoFinal?: true
    fechaInicio?: true
    fechaCierre?: true
    estado?: true
    comentario?: true
    _all?: true
  }

  export type RegistroCajaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroCaja to aggregate.
     */
    where?: RegistroCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCajas to fetch.
     */
    orderBy?: RegistroCajaOrderByWithRelationInput | RegistroCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCajas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroCajas
    **/
    _count?: true | RegistroCajaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroCajaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroCajaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroCajaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroCajaMaxAggregateInputType
  }

  export type GetRegistroCajaAggregateType<T extends RegistroCajaAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroCaja]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroCaja[P]>
      : GetScalarType<T[P], AggregateRegistroCaja[P]>
  }




  export type RegistroCajaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroCajaWhereInput
    orderBy?: RegistroCajaOrderByWithAggregationInput | RegistroCajaOrderByWithAggregationInput[]
    by: RegistroCajaScalarFieldEnum[] | RegistroCajaScalarFieldEnum
    having?: RegistroCajaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroCajaCountAggregateInputType | true
    _avg?: RegistroCajaAvgAggregateInputType
    _sum?: RegistroCajaSumAggregateInputType
    _min?: RegistroCajaMinAggregateInputType
    _max?: RegistroCajaMaxAggregateInputType
  }

  export type RegistroCajaGroupByOutputType = {
    id: number
    sucursalId: number | null
    usuarioId: number | null
    saldoInicial: number | null
    saldoFinal: number | null
    fechaInicio: Date | null
    fechaCierre: Date | null
    estado: $Enums.EstadoCaja | null
    comentario: string | null
    _count: RegistroCajaCountAggregateOutputType | null
    _avg: RegistroCajaAvgAggregateOutputType | null
    _sum: RegistroCajaSumAggregateOutputType | null
    _min: RegistroCajaMinAggregateOutputType | null
    _max: RegistroCajaMaxAggregateOutputType | null
  }

  type GetRegistroCajaGroupByPayload<T extends RegistroCajaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroCajaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroCajaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroCajaGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroCajaGroupByOutputType[P]>
        }
      >
    >


  export type RegistroCajaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    fechaInicio?: boolean
    fechaCierre?: boolean
    estado?: boolean
    comentario?: boolean
    sucursal?: boolean | RegistroCaja$sucursalArgs<ExtArgs>
    usuario?: boolean | RegistroCaja$usuarioArgs<ExtArgs>
    depositos?: boolean | RegistroCaja$depositosArgs<ExtArgs>
    egresos?: boolean | RegistroCaja$egresosArgs<ExtArgs>
    ventas?: boolean | RegistroCaja$ventasArgs<ExtArgs>
    _count?: boolean | RegistroCajaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registroCaja"]>

  export type RegistroCajaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    fechaInicio?: boolean
    fechaCierre?: boolean
    estado?: boolean
    comentario?: boolean
    sucursal?: boolean | RegistroCaja$sucursalArgs<ExtArgs>
    usuario?: boolean | RegistroCaja$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["registroCaja"]>

  export type RegistroCajaSelectScalar = {
    id?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    fechaInicio?: boolean
    fechaCierre?: boolean
    estado?: boolean
    comentario?: boolean
  }

  export type RegistroCajaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | RegistroCaja$sucursalArgs<ExtArgs>
    usuario?: boolean | RegistroCaja$usuarioArgs<ExtArgs>
    depositos?: boolean | RegistroCaja$depositosArgs<ExtArgs>
    egresos?: boolean | RegistroCaja$egresosArgs<ExtArgs>
    ventas?: boolean | RegistroCaja$ventasArgs<ExtArgs>
    _count?: boolean | RegistroCajaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RegistroCajaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | RegistroCaja$sucursalArgs<ExtArgs>
    usuario?: boolean | RegistroCaja$usuarioArgs<ExtArgs>
  }

  export type $RegistroCajaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroCaja"
    objects: {
      sucursal: Prisma.$SucursalPayload<ExtArgs> | null
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
      depositos: Prisma.$DepositoPayload<ExtArgs>[]
      egresos: Prisma.$EgresoPayload<ExtArgs>[]
      ventas: Prisma.$VentaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sucursalId: number | null
      usuarioId: number | null
      saldoInicial: number | null
      saldoFinal: number | null
      fechaInicio: Date | null
      fechaCierre: Date | null
      estado: $Enums.EstadoCaja | null
      comentario: string | null
    }, ExtArgs["result"]["registroCaja"]>
    composites: {}
  }

  type RegistroCajaGetPayload<S extends boolean | null | undefined | RegistroCajaDefaultArgs> = $Result.GetResult<Prisma.$RegistroCajaPayload, S>

  type RegistroCajaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RegistroCajaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RegistroCajaCountAggregateInputType | true
    }

  export interface RegistroCajaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroCaja'], meta: { name: 'RegistroCaja' } }
    /**
     * Find zero or one RegistroCaja that matches the filter.
     * @param {RegistroCajaFindUniqueArgs} args - Arguments to find a RegistroCaja
     * @example
     * // Get one RegistroCaja
     * const registroCaja = await prisma.registroCaja.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroCajaFindUniqueArgs>(args: SelectSubset<T, RegistroCajaFindUniqueArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RegistroCaja that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RegistroCajaFindUniqueOrThrowArgs} args - Arguments to find a RegistroCaja
     * @example
     * // Get one RegistroCaja
     * const registroCaja = await prisma.registroCaja.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroCajaFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroCajaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RegistroCaja that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaFindFirstArgs} args - Arguments to find a RegistroCaja
     * @example
     * // Get one RegistroCaja
     * const registroCaja = await prisma.registroCaja.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroCajaFindFirstArgs>(args?: SelectSubset<T, RegistroCajaFindFirstArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RegistroCaja that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaFindFirstOrThrowArgs} args - Arguments to find a RegistroCaja
     * @example
     * // Get one RegistroCaja
     * const registroCaja = await prisma.registroCaja.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroCajaFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroCajaFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RegistroCajas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroCajas
     * const registroCajas = await prisma.registroCaja.findMany()
     * 
     * // Get first 10 RegistroCajas
     * const registroCajas = await prisma.registroCaja.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroCajaWithIdOnly = await prisma.registroCaja.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroCajaFindManyArgs>(args?: SelectSubset<T, RegistroCajaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RegistroCaja.
     * @param {RegistroCajaCreateArgs} args - Arguments to create a RegistroCaja.
     * @example
     * // Create one RegistroCaja
     * const RegistroCaja = await prisma.registroCaja.create({
     *   data: {
     *     // ... data to create a RegistroCaja
     *   }
     * })
     * 
     */
    create<T extends RegistroCajaCreateArgs>(args: SelectSubset<T, RegistroCajaCreateArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RegistroCajas.
     * @param {RegistroCajaCreateManyArgs} args - Arguments to create many RegistroCajas.
     * @example
     * // Create many RegistroCajas
     * const registroCaja = await prisma.registroCaja.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroCajaCreateManyArgs>(args?: SelectSubset<T, RegistroCajaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroCajas and returns the data saved in the database.
     * @param {RegistroCajaCreateManyAndReturnArgs} args - Arguments to create many RegistroCajas.
     * @example
     * // Create many RegistroCajas
     * const registroCaja = await prisma.registroCaja.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroCajas and only return the `id`
     * const registroCajaWithIdOnly = await prisma.registroCaja.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroCajaCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroCajaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RegistroCaja.
     * @param {RegistroCajaDeleteArgs} args - Arguments to delete one RegistroCaja.
     * @example
     * // Delete one RegistroCaja
     * const RegistroCaja = await prisma.registroCaja.delete({
     *   where: {
     *     // ... filter to delete one RegistroCaja
     *   }
     * })
     * 
     */
    delete<T extends RegistroCajaDeleteArgs>(args: SelectSubset<T, RegistroCajaDeleteArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RegistroCaja.
     * @param {RegistroCajaUpdateArgs} args - Arguments to update one RegistroCaja.
     * @example
     * // Update one RegistroCaja
     * const registroCaja = await prisma.registroCaja.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroCajaUpdateArgs>(args: SelectSubset<T, RegistroCajaUpdateArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RegistroCajas.
     * @param {RegistroCajaDeleteManyArgs} args - Arguments to filter RegistroCajas to delete.
     * @example
     * // Delete a few RegistroCajas
     * const { count } = await prisma.registroCaja.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroCajaDeleteManyArgs>(args?: SelectSubset<T, RegistroCajaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroCajas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroCajas
     * const registroCaja = await prisma.registroCaja.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroCajaUpdateManyArgs>(args: SelectSubset<T, RegistroCajaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RegistroCaja.
     * @param {RegistroCajaUpsertArgs} args - Arguments to update or create a RegistroCaja.
     * @example
     * // Update or create a RegistroCaja
     * const registroCaja = await prisma.registroCaja.upsert({
     *   create: {
     *     // ... data to create a RegistroCaja
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroCaja we want to update
     *   }
     * })
     */
    upsert<T extends RegistroCajaUpsertArgs>(args: SelectSubset<T, RegistroCajaUpsertArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RegistroCajas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaCountArgs} args - Arguments to filter RegistroCajas to count.
     * @example
     * // Count the number of RegistroCajas
     * const count = await prisma.registroCaja.count({
     *   where: {
     *     // ... the filter for the RegistroCajas we want to count
     *   }
     * })
    **/
    count<T extends RegistroCajaCountArgs>(
      args?: Subset<T, RegistroCajaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroCajaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroCaja.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroCajaAggregateArgs>(args: Subset<T, RegistroCajaAggregateArgs>): Prisma.PrismaPromise<GetRegistroCajaAggregateType<T>>

    /**
     * Group by RegistroCaja.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCajaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroCajaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroCajaGroupByArgs['orderBy'] }
        : { orderBy?: RegistroCajaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroCajaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroCajaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroCaja model
   */
  readonly fields: RegistroCajaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroCaja.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroCajaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sucursal<T extends RegistroCaja$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, RegistroCaja$sucursalArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends RegistroCaja$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, RegistroCaja$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    depositos<T extends RegistroCaja$depositosArgs<ExtArgs> = {}>(args?: Subset<T, RegistroCaja$depositosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findMany"> | Null>
    egresos<T extends RegistroCaja$egresosArgs<ExtArgs> = {}>(args?: Subset<T, RegistroCaja$egresosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findMany"> | Null>
    ventas<T extends RegistroCaja$ventasArgs<ExtArgs> = {}>(args?: Subset<T, RegistroCaja$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroCaja model
   */ 
  interface RegistroCajaFieldRefs {
    readonly id: FieldRef<"RegistroCaja", 'Int'>
    readonly sucursalId: FieldRef<"RegistroCaja", 'Int'>
    readonly usuarioId: FieldRef<"RegistroCaja", 'Int'>
    readonly saldoInicial: FieldRef<"RegistroCaja", 'Float'>
    readonly saldoFinal: FieldRef<"RegistroCaja", 'Float'>
    readonly fechaInicio: FieldRef<"RegistroCaja", 'DateTime'>
    readonly fechaCierre: FieldRef<"RegistroCaja", 'DateTime'>
    readonly estado: FieldRef<"RegistroCaja", 'EstadoCaja'>
    readonly comentario: FieldRef<"RegistroCaja", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RegistroCaja findUnique
   */
  export type RegistroCajaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroCaja to fetch.
     */
    where: RegistroCajaWhereUniqueInput
  }

  /**
   * RegistroCaja findUniqueOrThrow
   */
  export type RegistroCajaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroCaja to fetch.
     */
    where: RegistroCajaWhereUniqueInput
  }

  /**
   * RegistroCaja findFirst
   */
  export type RegistroCajaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroCaja to fetch.
     */
    where?: RegistroCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCajas to fetch.
     */
    orderBy?: RegistroCajaOrderByWithRelationInput | RegistroCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroCajas.
     */
    cursor?: RegistroCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCajas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroCajas.
     */
    distinct?: RegistroCajaScalarFieldEnum | RegistroCajaScalarFieldEnum[]
  }

  /**
   * RegistroCaja findFirstOrThrow
   */
  export type RegistroCajaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroCaja to fetch.
     */
    where?: RegistroCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCajas to fetch.
     */
    orderBy?: RegistroCajaOrderByWithRelationInput | RegistroCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroCajas.
     */
    cursor?: RegistroCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCajas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroCajas.
     */
    distinct?: RegistroCajaScalarFieldEnum | RegistroCajaScalarFieldEnum[]
  }

  /**
   * RegistroCaja findMany
   */
  export type RegistroCajaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroCajas to fetch.
     */
    where?: RegistroCajaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroCajas to fetch.
     */
    orderBy?: RegistroCajaOrderByWithRelationInput | RegistroCajaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroCajas.
     */
    cursor?: RegistroCajaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroCajas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroCajas.
     */
    skip?: number
    distinct?: RegistroCajaScalarFieldEnum | RegistroCajaScalarFieldEnum[]
  }

  /**
   * RegistroCaja create
   */
  export type RegistroCajaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * The data needed to create a RegistroCaja.
     */
    data?: XOR<RegistroCajaCreateInput, RegistroCajaUncheckedCreateInput>
  }

  /**
   * RegistroCaja createMany
   */
  export type RegistroCajaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroCajas.
     */
    data: RegistroCajaCreateManyInput | RegistroCajaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroCaja createManyAndReturn
   */
  export type RegistroCajaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RegistroCajas.
     */
    data: RegistroCajaCreateManyInput | RegistroCajaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RegistroCaja update
   */
  export type RegistroCajaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * The data needed to update a RegistroCaja.
     */
    data: XOR<RegistroCajaUpdateInput, RegistroCajaUncheckedUpdateInput>
    /**
     * Choose, which RegistroCaja to update.
     */
    where: RegistroCajaWhereUniqueInput
  }

  /**
   * RegistroCaja updateMany
   */
  export type RegistroCajaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroCajas.
     */
    data: XOR<RegistroCajaUpdateManyMutationInput, RegistroCajaUncheckedUpdateManyInput>
    /**
     * Filter which RegistroCajas to update
     */
    where?: RegistroCajaWhereInput
  }

  /**
   * RegistroCaja upsert
   */
  export type RegistroCajaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * The filter to search for the RegistroCaja to update in case it exists.
     */
    where: RegistroCajaWhereUniqueInput
    /**
     * In case the RegistroCaja found by the `where` argument doesn't exist, create a new RegistroCaja with this data.
     */
    create: XOR<RegistroCajaCreateInput, RegistroCajaUncheckedCreateInput>
    /**
     * In case the RegistroCaja was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroCajaUpdateInput, RegistroCajaUncheckedUpdateInput>
  }

  /**
   * RegistroCaja delete
   */
  export type RegistroCajaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    /**
     * Filter which RegistroCaja to delete.
     */
    where: RegistroCajaWhereUniqueInput
  }

  /**
   * RegistroCaja deleteMany
   */
  export type RegistroCajaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroCajas to delete
     */
    where?: RegistroCajaWhereInput
  }

  /**
   * RegistroCaja.sucursal
   */
  export type RegistroCaja$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    where?: SucursalWhereInput
  }

  /**
   * RegistroCaja.usuario
   */
  export type RegistroCaja$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * RegistroCaja.depositos
   */
  export type RegistroCaja$depositosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    where?: DepositoWhereInput
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    cursor?: DepositoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositoScalarFieldEnum | DepositoScalarFieldEnum[]
  }

  /**
   * RegistroCaja.egresos
   */
  export type RegistroCaja$egresosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    where?: EgresoWhereInput
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    cursor?: EgresoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * RegistroCaja.ventas
   */
  export type RegistroCaja$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * RegistroCaja without action
   */
  export type RegistroCajaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
  }


  /**
   * Model SucursalSaldoGlobal
   */

  export type AggregateSucursalSaldoGlobal = {
    _count: SucursalSaldoGlobalCountAggregateOutputType | null
    _avg: SucursalSaldoGlobalAvgAggregateOutputType | null
    _sum: SucursalSaldoGlobalSumAggregateOutputType | null
    _min: SucursalSaldoGlobalMinAggregateOutputType | null
    _max: SucursalSaldoGlobalMaxAggregateOutputType | null
  }

  export type SucursalSaldoGlobalAvgAggregateOutputType = {
    id: number | null
    saldoGlobal: number | null
    totalIngresos: number | null
    totalEgresos: number | null
  }

  export type SucursalSaldoGlobalSumAggregateOutputType = {
    id: number | null
    saldoGlobal: number | null
    totalIngresos: number | null
    totalEgresos: number | null
  }

  export type SucursalSaldoGlobalMinAggregateOutputType = {
    id: number | null
    saldoGlobal: number | null
    totalIngresos: number | null
    totalEgresos: number | null
    actualizadoEn: Date | null
  }

  export type SucursalSaldoGlobalMaxAggregateOutputType = {
    id: number | null
    saldoGlobal: number | null
    totalIngresos: number | null
    totalEgresos: number | null
    actualizadoEn: Date | null
  }

  export type SucursalSaldoGlobalCountAggregateOutputType = {
    id: number
    saldoGlobal: number
    totalIngresos: number
    totalEgresos: number
    actualizadoEn: number
    _all: number
  }


  export type SucursalSaldoGlobalAvgAggregateInputType = {
    id?: true
    saldoGlobal?: true
    totalIngresos?: true
    totalEgresos?: true
  }

  export type SucursalSaldoGlobalSumAggregateInputType = {
    id?: true
    saldoGlobal?: true
    totalIngresos?: true
    totalEgresos?: true
  }

  export type SucursalSaldoGlobalMinAggregateInputType = {
    id?: true
    saldoGlobal?: true
    totalIngresos?: true
    totalEgresos?: true
    actualizadoEn?: true
  }

  export type SucursalSaldoGlobalMaxAggregateInputType = {
    id?: true
    saldoGlobal?: true
    totalIngresos?: true
    totalEgresos?: true
    actualizadoEn?: true
  }

  export type SucursalSaldoGlobalCountAggregateInputType = {
    id?: true
    saldoGlobal?: true
    totalIngresos?: true
    totalEgresos?: true
    actualizadoEn?: true
    _all?: true
  }

  export type SucursalSaldoGlobalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SucursalSaldoGlobal to aggregate.
     */
    where?: SucursalSaldoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldoGlobals to fetch.
     */
    orderBy?: SucursalSaldoGlobalOrderByWithRelationInput | SucursalSaldoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SucursalSaldoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldoGlobals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SucursalSaldoGlobals
    **/
    _count?: true | SucursalSaldoGlobalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SucursalSaldoGlobalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SucursalSaldoGlobalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SucursalSaldoGlobalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SucursalSaldoGlobalMaxAggregateInputType
  }

  export type GetSucursalSaldoGlobalAggregateType<T extends SucursalSaldoGlobalAggregateArgs> = {
        [P in keyof T & keyof AggregateSucursalSaldoGlobal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSucursalSaldoGlobal[P]>
      : GetScalarType<T[P], AggregateSucursalSaldoGlobal[P]>
  }




  export type SucursalSaldoGlobalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SucursalSaldoGlobalWhereInput
    orderBy?: SucursalSaldoGlobalOrderByWithAggregationInput | SucursalSaldoGlobalOrderByWithAggregationInput[]
    by: SucursalSaldoGlobalScalarFieldEnum[] | SucursalSaldoGlobalScalarFieldEnum
    having?: SucursalSaldoGlobalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SucursalSaldoGlobalCountAggregateInputType | true
    _avg?: SucursalSaldoGlobalAvgAggregateInputType
    _sum?: SucursalSaldoGlobalSumAggregateInputType
    _min?: SucursalSaldoGlobalMinAggregateInputType
    _max?: SucursalSaldoGlobalMaxAggregateInputType
  }

  export type SucursalSaldoGlobalGroupByOutputType = {
    id: number
    saldoGlobal: number
    totalIngresos: number
    totalEgresos: number
    actualizadoEn: Date
    _count: SucursalSaldoGlobalCountAggregateOutputType | null
    _avg: SucursalSaldoGlobalAvgAggregateOutputType | null
    _sum: SucursalSaldoGlobalSumAggregateOutputType | null
    _min: SucursalSaldoGlobalMinAggregateOutputType | null
    _max: SucursalSaldoGlobalMaxAggregateOutputType | null
  }

  type GetSucursalSaldoGlobalGroupByPayload<T extends SucursalSaldoGlobalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SucursalSaldoGlobalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SucursalSaldoGlobalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SucursalSaldoGlobalGroupByOutputType[P]>
            : GetScalarType<T[P], SucursalSaldoGlobalGroupByOutputType[P]>
        }
      >
    >


  export type SucursalSaldoGlobalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    saldoGlobal?: boolean
    totalIngresos?: boolean
    totalEgresos?: boolean
    actualizadoEn?: boolean
  }, ExtArgs["result"]["sucursalSaldoGlobal"]>

  export type SucursalSaldoGlobalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    saldoGlobal?: boolean
    totalIngresos?: boolean
    totalEgresos?: boolean
    actualizadoEn?: boolean
  }, ExtArgs["result"]["sucursalSaldoGlobal"]>

  export type SucursalSaldoGlobalSelectScalar = {
    id?: boolean
    saldoGlobal?: boolean
    totalIngresos?: boolean
    totalEgresos?: boolean
    actualizadoEn?: boolean
  }


  export type $SucursalSaldoGlobalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SucursalSaldoGlobal"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      saldoGlobal: number
      totalIngresos: number
      totalEgresos: number
      actualizadoEn: Date
    }, ExtArgs["result"]["sucursalSaldoGlobal"]>
    composites: {}
  }

  type SucursalSaldoGlobalGetPayload<S extends boolean | null | undefined | SucursalSaldoGlobalDefaultArgs> = $Result.GetResult<Prisma.$SucursalSaldoGlobalPayload, S>

  type SucursalSaldoGlobalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SucursalSaldoGlobalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SucursalSaldoGlobalCountAggregateInputType | true
    }

  export interface SucursalSaldoGlobalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SucursalSaldoGlobal'], meta: { name: 'SucursalSaldoGlobal' } }
    /**
     * Find zero or one SucursalSaldoGlobal that matches the filter.
     * @param {SucursalSaldoGlobalFindUniqueArgs} args - Arguments to find a SucursalSaldoGlobal
     * @example
     * // Get one SucursalSaldoGlobal
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SucursalSaldoGlobalFindUniqueArgs>(args: SelectSubset<T, SucursalSaldoGlobalFindUniqueArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SucursalSaldoGlobal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SucursalSaldoGlobalFindUniqueOrThrowArgs} args - Arguments to find a SucursalSaldoGlobal
     * @example
     * // Get one SucursalSaldoGlobal
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SucursalSaldoGlobalFindUniqueOrThrowArgs>(args: SelectSubset<T, SucursalSaldoGlobalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SucursalSaldoGlobal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalFindFirstArgs} args - Arguments to find a SucursalSaldoGlobal
     * @example
     * // Get one SucursalSaldoGlobal
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SucursalSaldoGlobalFindFirstArgs>(args?: SelectSubset<T, SucursalSaldoGlobalFindFirstArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SucursalSaldoGlobal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalFindFirstOrThrowArgs} args - Arguments to find a SucursalSaldoGlobal
     * @example
     * // Get one SucursalSaldoGlobal
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SucursalSaldoGlobalFindFirstOrThrowArgs>(args?: SelectSubset<T, SucursalSaldoGlobalFindFirstOrThrowArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SucursalSaldoGlobals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SucursalSaldoGlobals
     * const sucursalSaldoGlobals = await prisma.sucursalSaldoGlobal.findMany()
     * 
     * // Get first 10 SucursalSaldoGlobals
     * const sucursalSaldoGlobals = await prisma.sucursalSaldoGlobal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sucursalSaldoGlobalWithIdOnly = await prisma.sucursalSaldoGlobal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SucursalSaldoGlobalFindManyArgs>(args?: SelectSubset<T, SucursalSaldoGlobalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SucursalSaldoGlobal.
     * @param {SucursalSaldoGlobalCreateArgs} args - Arguments to create a SucursalSaldoGlobal.
     * @example
     * // Create one SucursalSaldoGlobal
     * const SucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.create({
     *   data: {
     *     // ... data to create a SucursalSaldoGlobal
     *   }
     * })
     * 
     */
    create<T extends SucursalSaldoGlobalCreateArgs>(args: SelectSubset<T, SucursalSaldoGlobalCreateArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SucursalSaldoGlobals.
     * @param {SucursalSaldoGlobalCreateManyArgs} args - Arguments to create many SucursalSaldoGlobals.
     * @example
     * // Create many SucursalSaldoGlobals
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SucursalSaldoGlobalCreateManyArgs>(args?: SelectSubset<T, SucursalSaldoGlobalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SucursalSaldoGlobals and returns the data saved in the database.
     * @param {SucursalSaldoGlobalCreateManyAndReturnArgs} args - Arguments to create many SucursalSaldoGlobals.
     * @example
     * // Create many SucursalSaldoGlobals
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SucursalSaldoGlobals and only return the `id`
     * const sucursalSaldoGlobalWithIdOnly = await prisma.sucursalSaldoGlobal.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SucursalSaldoGlobalCreateManyAndReturnArgs>(args?: SelectSubset<T, SucursalSaldoGlobalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SucursalSaldoGlobal.
     * @param {SucursalSaldoGlobalDeleteArgs} args - Arguments to delete one SucursalSaldoGlobal.
     * @example
     * // Delete one SucursalSaldoGlobal
     * const SucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.delete({
     *   where: {
     *     // ... filter to delete one SucursalSaldoGlobal
     *   }
     * })
     * 
     */
    delete<T extends SucursalSaldoGlobalDeleteArgs>(args: SelectSubset<T, SucursalSaldoGlobalDeleteArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SucursalSaldoGlobal.
     * @param {SucursalSaldoGlobalUpdateArgs} args - Arguments to update one SucursalSaldoGlobal.
     * @example
     * // Update one SucursalSaldoGlobal
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SucursalSaldoGlobalUpdateArgs>(args: SelectSubset<T, SucursalSaldoGlobalUpdateArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SucursalSaldoGlobals.
     * @param {SucursalSaldoGlobalDeleteManyArgs} args - Arguments to filter SucursalSaldoGlobals to delete.
     * @example
     * // Delete a few SucursalSaldoGlobals
     * const { count } = await prisma.sucursalSaldoGlobal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SucursalSaldoGlobalDeleteManyArgs>(args?: SelectSubset<T, SucursalSaldoGlobalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SucursalSaldoGlobals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SucursalSaldoGlobals
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SucursalSaldoGlobalUpdateManyArgs>(args: SelectSubset<T, SucursalSaldoGlobalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SucursalSaldoGlobal.
     * @param {SucursalSaldoGlobalUpsertArgs} args - Arguments to update or create a SucursalSaldoGlobal.
     * @example
     * // Update or create a SucursalSaldoGlobal
     * const sucursalSaldoGlobal = await prisma.sucursalSaldoGlobal.upsert({
     *   create: {
     *     // ... data to create a SucursalSaldoGlobal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SucursalSaldoGlobal we want to update
     *   }
     * })
     */
    upsert<T extends SucursalSaldoGlobalUpsertArgs>(args: SelectSubset<T, SucursalSaldoGlobalUpsertArgs<ExtArgs>>): Prisma__SucursalSaldoGlobalClient<$Result.GetResult<Prisma.$SucursalSaldoGlobalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SucursalSaldoGlobals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalCountArgs} args - Arguments to filter SucursalSaldoGlobals to count.
     * @example
     * // Count the number of SucursalSaldoGlobals
     * const count = await prisma.sucursalSaldoGlobal.count({
     *   where: {
     *     // ... the filter for the SucursalSaldoGlobals we want to count
     *   }
     * })
    **/
    count<T extends SucursalSaldoGlobalCountArgs>(
      args?: Subset<T, SucursalSaldoGlobalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SucursalSaldoGlobalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SucursalSaldoGlobal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SucursalSaldoGlobalAggregateArgs>(args: Subset<T, SucursalSaldoGlobalAggregateArgs>): Prisma.PrismaPromise<GetSucursalSaldoGlobalAggregateType<T>>

    /**
     * Group by SucursalSaldoGlobal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalSaldoGlobalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SucursalSaldoGlobalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SucursalSaldoGlobalGroupByArgs['orderBy'] }
        : { orderBy?: SucursalSaldoGlobalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SucursalSaldoGlobalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSucursalSaldoGlobalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SucursalSaldoGlobal model
   */
  readonly fields: SucursalSaldoGlobalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SucursalSaldoGlobal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SucursalSaldoGlobalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SucursalSaldoGlobal model
   */ 
  interface SucursalSaldoGlobalFieldRefs {
    readonly id: FieldRef<"SucursalSaldoGlobal", 'Int'>
    readonly saldoGlobal: FieldRef<"SucursalSaldoGlobal", 'Float'>
    readonly totalIngresos: FieldRef<"SucursalSaldoGlobal", 'Float'>
    readonly totalEgresos: FieldRef<"SucursalSaldoGlobal", 'Float'>
    readonly actualizadoEn: FieldRef<"SucursalSaldoGlobal", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SucursalSaldoGlobal findUnique
   */
  export type SucursalSaldoGlobalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * Filter, which SucursalSaldoGlobal to fetch.
     */
    where: SucursalSaldoGlobalWhereUniqueInput
  }

  /**
   * SucursalSaldoGlobal findUniqueOrThrow
   */
  export type SucursalSaldoGlobalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * Filter, which SucursalSaldoGlobal to fetch.
     */
    where: SucursalSaldoGlobalWhereUniqueInput
  }

  /**
   * SucursalSaldoGlobal findFirst
   */
  export type SucursalSaldoGlobalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * Filter, which SucursalSaldoGlobal to fetch.
     */
    where?: SucursalSaldoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldoGlobals to fetch.
     */
    orderBy?: SucursalSaldoGlobalOrderByWithRelationInput | SucursalSaldoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SucursalSaldoGlobals.
     */
    cursor?: SucursalSaldoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldoGlobals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SucursalSaldoGlobals.
     */
    distinct?: SucursalSaldoGlobalScalarFieldEnum | SucursalSaldoGlobalScalarFieldEnum[]
  }

  /**
   * SucursalSaldoGlobal findFirstOrThrow
   */
  export type SucursalSaldoGlobalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * Filter, which SucursalSaldoGlobal to fetch.
     */
    where?: SucursalSaldoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldoGlobals to fetch.
     */
    orderBy?: SucursalSaldoGlobalOrderByWithRelationInput | SucursalSaldoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SucursalSaldoGlobals.
     */
    cursor?: SucursalSaldoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldoGlobals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SucursalSaldoGlobals.
     */
    distinct?: SucursalSaldoGlobalScalarFieldEnum | SucursalSaldoGlobalScalarFieldEnum[]
  }

  /**
   * SucursalSaldoGlobal findMany
   */
  export type SucursalSaldoGlobalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * Filter, which SucursalSaldoGlobals to fetch.
     */
    where?: SucursalSaldoGlobalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SucursalSaldoGlobals to fetch.
     */
    orderBy?: SucursalSaldoGlobalOrderByWithRelationInput | SucursalSaldoGlobalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SucursalSaldoGlobals.
     */
    cursor?: SucursalSaldoGlobalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SucursalSaldoGlobals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SucursalSaldoGlobals.
     */
    skip?: number
    distinct?: SucursalSaldoGlobalScalarFieldEnum | SucursalSaldoGlobalScalarFieldEnum[]
  }

  /**
   * SucursalSaldoGlobal create
   */
  export type SucursalSaldoGlobalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * The data needed to create a SucursalSaldoGlobal.
     */
    data: XOR<SucursalSaldoGlobalCreateInput, SucursalSaldoGlobalUncheckedCreateInput>
  }

  /**
   * SucursalSaldoGlobal createMany
   */
  export type SucursalSaldoGlobalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SucursalSaldoGlobals.
     */
    data: SucursalSaldoGlobalCreateManyInput | SucursalSaldoGlobalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SucursalSaldoGlobal createManyAndReturn
   */
  export type SucursalSaldoGlobalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SucursalSaldoGlobals.
     */
    data: SucursalSaldoGlobalCreateManyInput | SucursalSaldoGlobalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SucursalSaldoGlobal update
   */
  export type SucursalSaldoGlobalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * The data needed to update a SucursalSaldoGlobal.
     */
    data: XOR<SucursalSaldoGlobalUpdateInput, SucursalSaldoGlobalUncheckedUpdateInput>
    /**
     * Choose, which SucursalSaldoGlobal to update.
     */
    where: SucursalSaldoGlobalWhereUniqueInput
  }

  /**
   * SucursalSaldoGlobal updateMany
   */
  export type SucursalSaldoGlobalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SucursalSaldoGlobals.
     */
    data: XOR<SucursalSaldoGlobalUpdateManyMutationInput, SucursalSaldoGlobalUncheckedUpdateManyInput>
    /**
     * Filter which SucursalSaldoGlobals to update
     */
    where?: SucursalSaldoGlobalWhereInput
  }

  /**
   * SucursalSaldoGlobal upsert
   */
  export type SucursalSaldoGlobalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * The filter to search for the SucursalSaldoGlobal to update in case it exists.
     */
    where: SucursalSaldoGlobalWhereUniqueInput
    /**
     * In case the SucursalSaldoGlobal found by the `where` argument doesn't exist, create a new SucursalSaldoGlobal with this data.
     */
    create: XOR<SucursalSaldoGlobalCreateInput, SucursalSaldoGlobalUncheckedCreateInput>
    /**
     * In case the SucursalSaldoGlobal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SucursalSaldoGlobalUpdateInput, SucursalSaldoGlobalUncheckedUpdateInput>
  }

  /**
   * SucursalSaldoGlobal delete
   */
  export type SucursalSaldoGlobalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
    /**
     * Filter which SucursalSaldoGlobal to delete.
     */
    where: SucursalSaldoGlobalWhereUniqueInput
  }

  /**
   * SucursalSaldoGlobal deleteMany
   */
  export type SucursalSaldoGlobalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SucursalSaldoGlobals to delete
     */
    where?: SucursalSaldoGlobalWhereInput
  }

  /**
   * SucursalSaldoGlobal without action
   */
  export type SucursalSaldoGlobalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldoGlobal
     */
    select?: SucursalSaldoGlobalSelect<ExtArgs> | null
  }


  /**
   * Model Deposito
   */

  export type AggregateDeposito = {
    _count: DepositoCountAggregateOutputType | null
    _avg: DepositoAvgAggregateOutputType | null
    _sum: DepositoSumAggregateOutputType | null
    _min: DepositoMinAggregateOutputType | null
    _max: DepositoMaxAggregateOutputType | null
  }

  export type DepositoAvgAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    monto: number | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type DepositoSumAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    monto: number | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type DepositoMinAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    monto: number | null
    numeroBoleta: string | null
    banco: string | null
    fechaDeposito: Date | null
    usadoParaCierre: boolean | null
    descripcion: string | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type DepositoMaxAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    monto: number | null
    numeroBoleta: string | null
    banco: string | null
    fechaDeposito: Date | null
    usadoParaCierre: boolean | null
    descripcion: string | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type DepositoCountAggregateOutputType = {
    id: number
    registroCajaId: number
    monto: number
    numeroBoleta: number
    banco: number
    fechaDeposito: number
    usadoParaCierre: number
    descripcion: number
    sucursalId: number
    usuarioId: number
    _all: number
  }


  export type DepositoAvgAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type DepositoSumAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type DepositoMinAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    numeroBoleta?: true
    banco?: true
    fechaDeposito?: true
    usadoParaCierre?: true
    descripcion?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type DepositoMaxAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    numeroBoleta?: true
    banco?: true
    fechaDeposito?: true
    usadoParaCierre?: true
    descripcion?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type DepositoCountAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    numeroBoleta?: true
    banco?: true
    fechaDeposito?: true
    usadoParaCierre?: true
    descripcion?: true
    sucursalId?: true
    usuarioId?: true
    _all?: true
  }

  export type DepositoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Deposito to aggregate.
     */
    where?: DepositoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depositos to fetch.
     */
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepositoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depositos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depositos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Depositos
    **/
    _count?: true | DepositoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepositoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepositoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepositoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepositoMaxAggregateInputType
  }

  export type GetDepositoAggregateType<T extends DepositoAggregateArgs> = {
        [P in keyof T & keyof AggregateDeposito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeposito[P]>
      : GetScalarType<T[P], AggregateDeposito[P]>
  }




  export type DepositoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoWhereInput
    orderBy?: DepositoOrderByWithAggregationInput | DepositoOrderByWithAggregationInput[]
    by: DepositoScalarFieldEnum[] | DepositoScalarFieldEnum
    having?: DepositoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepositoCountAggregateInputType | true
    _avg?: DepositoAvgAggregateInputType
    _sum?: DepositoSumAggregateInputType
    _min?: DepositoMinAggregateInputType
    _max?: DepositoMaxAggregateInputType
  }

  export type DepositoGroupByOutputType = {
    id: number
    registroCajaId: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito: Date
    usadoParaCierre: boolean
    descripcion: string | null
    sucursalId: number | null
    usuarioId: number | null
    _count: DepositoCountAggregateOutputType | null
    _avg: DepositoAvgAggregateOutputType | null
    _sum: DepositoSumAggregateOutputType | null
    _min: DepositoMinAggregateOutputType | null
    _max: DepositoMaxAggregateOutputType | null
  }

  type GetDepositoGroupByPayload<T extends DepositoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepositoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepositoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepositoGroupByOutputType[P]>
            : GetScalarType<T[P], DepositoGroupByOutputType[P]>
        }
      >
    >


  export type DepositoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registroCajaId?: boolean
    monto?: boolean
    numeroBoleta?: boolean
    banco?: boolean
    fechaDeposito?: boolean
    usadoParaCierre?: boolean
    descripcion?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    registroCaja?: boolean | Deposito$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Deposito$sucursalArgs<ExtArgs>
    usuario?: boolean | Deposito$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["deposito"]>

  export type DepositoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registroCajaId?: boolean
    monto?: boolean
    numeroBoleta?: boolean
    banco?: boolean
    fechaDeposito?: boolean
    usadoParaCierre?: boolean
    descripcion?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    registroCaja?: boolean | Deposito$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Deposito$sucursalArgs<ExtArgs>
    usuario?: boolean | Deposito$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["deposito"]>

  export type DepositoSelectScalar = {
    id?: boolean
    registroCajaId?: boolean
    monto?: boolean
    numeroBoleta?: boolean
    banco?: boolean
    fechaDeposito?: boolean
    usadoParaCierre?: boolean
    descripcion?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
  }

  export type DepositoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registroCaja?: boolean | Deposito$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Deposito$sucursalArgs<ExtArgs>
    usuario?: boolean | Deposito$usuarioArgs<ExtArgs>
  }
  export type DepositoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registroCaja?: boolean | Deposito$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Deposito$sucursalArgs<ExtArgs>
    usuario?: boolean | Deposito$usuarioArgs<ExtArgs>
  }

  export type $DepositoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Deposito"
    objects: {
      registroCaja: Prisma.$RegistroCajaPayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs> | null
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registroCajaId: number | null
      monto: number
      numeroBoleta: string
      banco: string
      fechaDeposito: Date
      usadoParaCierre: boolean
      descripcion: string | null
      sucursalId: number | null
      usuarioId: number | null
    }, ExtArgs["result"]["deposito"]>
    composites: {}
  }

  type DepositoGetPayload<S extends boolean | null | undefined | DepositoDefaultArgs> = $Result.GetResult<Prisma.$DepositoPayload, S>

  type DepositoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DepositoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DepositoCountAggregateInputType | true
    }

  export interface DepositoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Deposito'], meta: { name: 'Deposito' } }
    /**
     * Find zero or one Deposito that matches the filter.
     * @param {DepositoFindUniqueArgs} args - Arguments to find a Deposito
     * @example
     * // Get one Deposito
     * const deposito = await prisma.deposito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepositoFindUniqueArgs>(args: SelectSubset<T, DepositoFindUniqueArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Deposito that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DepositoFindUniqueOrThrowArgs} args - Arguments to find a Deposito
     * @example
     * // Get one Deposito
     * const deposito = await prisma.deposito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepositoFindUniqueOrThrowArgs>(args: SelectSubset<T, DepositoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Deposito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoFindFirstArgs} args - Arguments to find a Deposito
     * @example
     * // Get one Deposito
     * const deposito = await prisma.deposito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepositoFindFirstArgs>(args?: SelectSubset<T, DepositoFindFirstArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Deposito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoFindFirstOrThrowArgs} args - Arguments to find a Deposito
     * @example
     * // Get one Deposito
     * const deposito = await prisma.deposito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepositoFindFirstOrThrowArgs>(args?: SelectSubset<T, DepositoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Depositos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Depositos
     * const depositos = await prisma.deposito.findMany()
     * 
     * // Get first 10 Depositos
     * const depositos = await prisma.deposito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const depositoWithIdOnly = await prisma.deposito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepositoFindManyArgs>(args?: SelectSubset<T, DepositoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Deposito.
     * @param {DepositoCreateArgs} args - Arguments to create a Deposito.
     * @example
     * // Create one Deposito
     * const Deposito = await prisma.deposito.create({
     *   data: {
     *     // ... data to create a Deposito
     *   }
     * })
     * 
     */
    create<T extends DepositoCreateArgs>(args: SelectSubset<T, DepositoCreateArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Depositos.
     * @param {DepositoCreateManyArgs} args - Arguments to create many Depositos.
     * @example
     * // Create many Depositos
     * const deposito = await prisma.deposito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepositoCreateManyArgs>(args?: SelectSubset<T, DepositoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Depositos and returns the data saved in the database.
     * @param {DepositoCreateManyAndReturnArgs} args - Arguments to create many Depositos.
     * @example
     * // Create many Depositos
     * const deposito = await prisma.deposito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Depositos and only return the `id`
     * const depositoWithIdOnly = await prisma.deposito.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepositoCreateManyAndReturnArgs>(args?: SelectSubset<T, DepositoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Deposito.
     * @param {DepositoDeleteArgs} args - Arguments to delete one Deposito.
     * @example
     * // Delete one Deposito
     * const Deposito = await prisma.deposito.delete({
     *   where: {
     *     // ... filter to delete one Deposito
     *   }
     * })
     * 
     */
    delete<T extends DepositoDeleteArgs>(args: SelectSubset<T, DepositoDeleteArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Deposito.
     * @param {DepositoUpdateArgs} args - Arguments to update one Deposito.
     * @example
     * // Update one Deposito
     * const deposito = await prisma.deposito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepositoUpdateArgs>(args: SelectSubset<T, DepositoUpdateArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Depositos.
     * @param {DepositoDeleteManyArgs} args - Arguments to filter Depositos to delete.
     * @example
     * // Delete a few Depositos
     * const { count } = await prisma.deposito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepositoDeleteManyArgs>(args?: SelectSubset<T, DepositoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Depositos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Depositos
     * const deposito = await prisma.deposito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepositoUpdateManyArgs>(args: SelectSubset<T, DepositoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Deposito.
     * @param {DepositoUpsertArgs} args - Arguments to update or create a Deposito.
     * @example
     * // Update or create a Deposito
     * const deposito = await prisma.deposito.upsert({
     *   create: {
     *     // ... data to create a Deposito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Deposito we want to update
     *   }
     * })
     */
    upsert<T extends DepositoUpsertArgs>(args: SelectSubset<T, DepositoUpsertArgs<ExtArgs>>): Prisma__DepositoClient<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Depositos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCountArgs} args - Arguments to filter Depositos to count.
     * @example
     * // Count the number of Depositos
     * const count = await prisma.deposito.count({
     *   where: {
     *     // ... the filter for the Depositos we want to count
     *   }
     * })
    **/
    count<T extends DepositoCountArgs>(
      args?: Subset<T, DepositoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepositoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Deposito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepositoAggregateArgs>(args: Subset<T, DepositoAggregateArgs>): Prisma.PrismaPromise<GetDepositoAggregateType<T>>

    /**
     * Group by Deposito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepositoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepositoGroupByArgs['orderBy'] }
        : { orderBy?: DepositoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepositoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepositoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Deposito model
   */
  readonly fields: DepositoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Deposito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepositoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registroCaja<T extends Deposito$registroCajaArgs<ExtArgs> = {}>(args?: Subset<T, Deposito$registroCajaArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends Deposito$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, Deposito$sucursalArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends Deposito$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Deposito$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Deposito model
   */ 
  interface DepositoFieldRefs {
    readonly id: FieldRef<"Deposito", 'Int'>
    readonly registroCajaId: FieldRef<"Deposito", 'Int'>
    readonly monto: FieldRef<"Deposito", 'Float'>
    readonly numeroBoleta: FieldRef<"Deposito", 'String'>
    readonly banco: FieldRef<"Deposito", 'String'>
    readonly fechaDeposito: FieldRef<"Deposito", 'DateTime'>
    readonly usadoParaCierre: FieldRef<"Deposito", 'Boolean'>
    readonly descripcion: FieldRef<"Deposito", 'String'>
    readonly sucursalId: FieldRef<"Deposito", 'Int'>
    readonly usuarioId: FieldRef<"Deposito", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Deposito findUnique
   */
  export type DepositoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * Filter, which Deposito to fetch.
     */
    where: DepositoWhereUniqueInput
  }

  /**
   * Deposito findUniqueOrThrow
   */
  export type DepositoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * Filter, which Deposito to fetch.
     */
    where: DepositoWhereUniqueInput
  }

  /**
   * Deposito findFirst
   */
  export type DepositoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * Filter, which Deposito to fetch.
     */
    where?: DepositoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depositos to fetch.
     */
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Depositos.
     */
    cursor?: DepositoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depositos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depositos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Depositos.
     */
    distinct?: DepositoScalarFieldEnum | DepositoScalarFieldEnum[]
  }

  /**
   * Deposito findFirstOrThrow
   */
  export type DepositoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * Filter, which Deposito to fetch.
     */
    where?: DepositoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depositos to fetch.
     */
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Depositos.
     */
    cursor?: DepositoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depositos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depositos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Depositos.
     */
    distinct?: DepositoScalarFieldEnum | DepositoScalarFieldEnum[]
  }

  /**
   * Deposito findMany
   */
  export type DepositoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * Filter, which Depositos to fetch.
     */
    where?: DepositoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depositos to fetch.
     */
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Depositos.
     */
    cursor?: DepositoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depositos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depositos.
     */
    skip?: number
    distinct?: DepositoScalarFieldEnum | DepositoScalarFieldEnum[]
  }

  /**
   * Deposito create
   */
  export type DepositoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * The data needed to create a Deposito.
     */
    data: XOR<DepositoCreateInput, DepositoUncheckedCreateInput>
  }

  /**
   * Deposito createMany
   */
  export type DepositoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Depositos.
     */
    data: DepositoCreateManyInput | DepositoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Deposito createManyAndReturn
   */
  export type DepositoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Depositos.
     */
    data: DepositoCreateManyInput | DepositoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Deposito update
   */
  export type DepositoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * The data needed to update a Deposito.
     */
    data: XOR<DepositoUpdateInput, DepositoUncheckedUpdateInput>
    /**
     * Choose, which Deposito to update.
     */
    where: DepositoWhereUniqueInput
  }

  /**
   * Deposito updateMany
   */
  export type DepositoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Depositos.
     */
    data: XOR<DepositoUpdateManyMutationInput, DepositoUncheckedUpdateManyInput>
    /**
     * Filter which Depositos to update
     */
    where?: DepositoWhereInput
  }

  /**
   * Deposito upsert
   */
  export type DepositoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * The filter to search for the Deposito to update in case it exists.
     */
    where: DepositoWhereUniqueInput
    /**
     * In case the Deposito found by the `where` argument doesn't exist, create a new Deposito with this data.
     */
    create: XOR<DepositoCreateInput, DepositoUncheckedCreateInput>
    /**
     * In case the Deposito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepositoUpdateInput, DepositoUncheckedUpdateInput>
  }

  /**
   * Deposito delete
   */
  export type DepositoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    /**
     * Filter which Deposito to delete.
     */
    where: DepositoWhereUniqueInput
  }

  /**
   * Deposito deleteMany
   */
  export type DepositoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Depositos to delete
     */
    where?: DepositoWhereInput
  }

  /**
   * Deposito.registroCaja
   */
  export type Deposito$registroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    where?: RegistroCajaWhereInput
  }

  /**
   * Deposito.sucursal
   */
  export type Deposito$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    where?: SucursalWhereInput
  }

  /**
   * Deposito.usuario
   */
  export type Deposito$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Deposito without action
   */
  export type DepositoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
  }


  /**
   * Model Egreso
   */

  export type AggregateEgreso = {
    _count: EgresoCountAggregateOutputType | null
    _avg: EgresoAvgAggregateOutputType | null
    _sum: EgresoSumAggregateOutputType | null
    _min: EgresoMinAggregateOutputType | null
    _max: EgresoMaxAggregateOutputType | null
  }

  export type EgresoAvgAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    monto: number | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type EgresoSumAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    monto: number | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type EgresoMinAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    descripcion: string | null
    monto: number | null
    fechaEgreso: Date | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type EgresoMaxAggregateOutputType = {
    id: number | null
    registroCajaId: number | null
    descripcion: string | null
    monto: number | null
    fechaEgreso: Date | null
    sucursalId: number | null
    usuarioId: number | null
  }

  export type EgresoCountAggregateOutputType = {
    id: number
    registroCajaId: number
    descripcion: number
    monto: number
    fechaEgreso: number
    sucursalId: number
    usuarioId: number
    _all: number
  }


  export type EgresoAvgAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type EgresoSumAggregateInputType = {
    id?: true
    registroCajaId?: true
    monto?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type EgresoMinAggregateInputType = {
    id?: true
    registroCajaId?: true
    descripcion?: true
    monto?: true
    fechaEgreso?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type EgresoMaxAggregateInputType = {
    id?: true
    registroCajaId?: true
    descripcion?: true
    monto?: true
    fechaEgreso?: true
    sucursalId?: true
    usuarioId?: true
  }

  export type EgresoCountAggregateInputType = {
    id?: true
    registroCajaId?: true
    descripcion?: true
    monto?: true
    fechaEgreso?: true
    sucursalId?: true
    usuarioId?: true
    _all?: true
  }

  export type EgresoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Egreso to aggregate.
     */
    where?: EgresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Egresos to fetch.
     */
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EgresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Egresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Egresos
    **/
    _count?: true | EgresoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EgresoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EgresoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EgresoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EgresoMaxAggregateInputType
  }

  export type GetEgresoAggregateType<T extends EgresoAggregateArgs> = {
        [P in keyof T & keyof AggregateEgreso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEgreso[P]>
      : GetScalarType<T[P], AggregateEgreso[P]>
  }




  export type EgresoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EgresoWhereInput
    orderBy?: EgresoOrderByWithAggregationInput | EgresoOrderByWithAggregationInput[]
    by: EgresoScalarFieldEnum[] | EgresoScalarFieldEnum
    having?: EgresoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EgresoCountAggregateInputType | true
    _avg?: EgresoAvgAggregateInputType
    _sum?: EgresoSumAggregateInputType
    _min?: EgresoMinAggregateInputType
    _max?: EgresoMaxAggregateInputType
  }

  export type EgresoGroupByOutputType = {
    id: number
    registroCajaId: number | null
    descripcion: string | null
    monto: number
    fechaEgreso: Date
    sucursalId: number | null
    usuarioId: number | null
    _count: EgresoCountAggregateOutputType | null
    _avg: EgresoAvgAggregateOutputType | null
    _sum: EgresoSumAggregateOutputType | null
    _min: EgresoMinAggregateOutputType | null
    _max: EgresoMaxAggregateOutputType | null
  }

  type GetEgresoGroupByPayload<T extends EgresoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EgresoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EgresoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EgresoGroupByOutputType[P]>
            : GetScalarType<T[P], EgresoGroupByOutputType[P]>
        }
      >
    >


  export type EgresoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registroCajaId?: boolean
    descripcion?: boolean
    monto?: boolean
    fechaEgreso?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    registroCaja?: boolean | Egreso$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Egreso$sucursalArgs<ExtArgs>
    usuario?: boolean | Egreso$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["egreso"]>

  export type EgresoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registroCajaId?: boolean
    descripcion?: boolean
    monto?: boolean
    fechaEgreso?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
    registroCaja?: boolean | Egreso$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Egreso$sucursalArgs<ExtArgs>
    usuario?: boolean | Egreso$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["egreso"]>

  export type EgresoSelectScalar = {
    id?: boolean
    registroCajaId?: boolean
    descripcion?: boolean
    monto?: boolean
    fechaEgreso?: boolean
    sucursalId?: boolean
    usuarioId?: boolean
  }

  export type EgresoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registroCaja?: boolean | Egreso$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Egreso$sucursalArgs<ExtArgs>
    usuario?: boolean | Egreso$usuarioArgs<ExtArgs>
  }
  export type EgresoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registroCaja?: boolean | Egreso$registroCajaArgs<ExtArgs>
    sucursal?: boolean | Egreso$sucursalArgs<ExtArgs>
    usuario?: boolean | Egreso$usuarioArgs<ExtArgs>
  }

  export type $EgresoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Egreso"
    objects: {
      registroCaja: Prisma.$RegistroCajaPayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs> | null
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registroCajaId: number | null
      descripcion: string | null
      monto: number
      fechaEgreso: Date
      sucursalId: number | null
      usuarioId: number | null
    }, ExtArgs["result"]["egreso"]>
    composites: {}
  }

  type EgresoGetPayload<S extends boolean | null | undefined | EgresoDefaultArgs> = $Result.GetResult<Prisma.$EgresoPayload, S>

  type EgresoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EgresoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EgresoCountAggregateInputType | true
    }

  export interface EgresoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Egreso'], meta: { name: 'Egreso' } }
    /**
     * Find zero or one Egreso that matches the filter.
     * @param {EgresoFindUniqueArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EgresoFindUniqueArgs>(args: SelectSubset<T, EgresoFindUniqueArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Egreso that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EgresoFindUniqueOrThrowArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EgresoFindUniqueOrThrowArgs>(args: SelectSubset<T, EgresoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Egreso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoFindFirstArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EgresoFindFirstArgs>(args?: SelectSubset<T, EgresoFindFirstArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Egreso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoFindFirstOrThrowArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EgresoFindFirstOrThrowArgs>(args?: SelectSubset<T, EgresoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Egresos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Egresos
     * const egresos = await prisma.egreso.findMany()
     * 
     * // Get first 10 Egresos
     * const egresos = await prisma.egreso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const egresoWithIdOnly = await prisma.egreso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EgresoFindManyArgs>(args?: SelectSubset<T, EgresoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Egreso.
     * @param {EgresoCreateArgs} args - Arguments to create a Egreso.
     * @example
     * // Create one Egreso
     * const Egreso = await prisma.egreso.create({
     *   data: {
     *     // ... data to create a Egreso
     *   }
     * })
     * 
     */
    create<T extends EgresoCreateArgs>(args: SelectSubset<T, EgresoCreateArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Egresos.
     * @param {EgresoCreateManyArgs} args - Arguments to create many Egresos.
     * @example
     * // Create many Egresos
     * const egreso = await prisma.egreso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EgresoCreateManyArgs>(args?: SelectSubset<T, EgresoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Egresos and returns the data saved in the database.
     * @param {EgresoCreateManyAndReturnArgs} args - Arguments to create many Egresos.
     * @example
     * // Create many Egresos
     * const egreso = await prisma.egreso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Egresos and only return the `id`
     * const egresoWithIdOnly = await prisma.egreso.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EgresoCreateManyAndReturnArgs>(args?: SelectSubset<T, EgresoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Egreso.
     * @param {EgresoDeleteArgs} args - Arguments to delete one Egreso.
     * @example
     * // Delete one Egreso
     * const Egreso = await prisma.egreso.delete({
     *   where: {
     *     // ... filter to delete one Egreso
     *   }
     * })
     * 
     */
    delete<T extends EgresoDeleteArgs>(args: SelectSubset<T, EgresoDeleteArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Egreso.
     * @param {EgresoUpdateArgs} args - Arguments to update one Egreso.
     * @example
     * // Update one Egreso
     * const egreso = await prisma.egreso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EgresoUpdateArgs>(args: SelectSubset<T, EgresoUpdateArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Egresos.
     * @param {EgresoDeleteManyArgs} args - Arguments to filter Egresos to delete.
     * @example
     * // Delete a few Egresos
     * const { count } = await prisma.egreso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EgresoDeleteManyArgs>(args?: SelectSubset<T, EgresoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Egresos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Egresos
     * const egreso = await prisma.egreso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EgresoUpdateManyArgs>(args: SelectSubset<T, EgresoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Egreso.
     * @param {EgresoUpsertArgs} args - Arguments to update or create a Egreso.
     * @example
     * // Update or create a Egreso
     * const egreso = await prisma.egreso.upsert({
     *   create: {
     *     // ... data to create a Egreso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Egreso we want to update
     *   }
     * })
     */
    upsert<T extends EgresoUpsertArgs>(args: SelectSubset<T, EgresoUpsertArgs<ExtArgs>>): Prisma__EgresoClient<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Egresos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoCountArgs} args - Arguments to filter Egresos to count.
     * @example
     * // Count the number of Egresos
     * const count = await prisma.egreso.count({
     *   where: {
     *     // ... the filter for the Egresos we want to count
     *   }
     * })
    **/
    count<T extends EgresoCountArgs>(
      args?: Subset<T, EgresoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EgresoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Egreso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EgresoAggregateArgs>(args: Subset<T, EgresoAggregateArgs>): Prisma.PrismaPromise<GetEgresoAggregateType<T>>

    /**
     * Group by Egreso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EgresoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EgresoGroupByArgs['orderBy'] }
        : { orderBy?: EgresoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EgresoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEgresoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Egreso model
   */
  readonly fields: EgresoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Egreso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EgresoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registroCaja<T extends Egreso$registroCajaArgs<ExtArgs> = {}>(args?: Subset<T, Egreso$registroCajaArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends Egreso$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, Egreso$sucursalArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends Egreso$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Egreso$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Egreso model
   */ 
  interface EgresoFieldRefs {
    readonly id: FieldRef<"Egreso", 'Int'>
    readonly registroCajaId: FieldRef<"Egreso", 'Int'>
    readonly descripcion: FieldRef<"Egreso", 'String'>
    readonly monto: FieldRef<"Egreso", 'Float'>
    readonly fechaEgreso: FieldRef<"Egreso", 'DateTime'>
    readonly sucursalId: FieldRef<"Egreso", 'Int'>
    readonly usuarioId: FieldRef<"Egreso", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Egreso findUnique
   */
  export type EgresoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * Filter, which Egreso to fetch.
     */
    where: EgresoWhereUniqueInput
  }

  /**
   * Egreso findUniqueOrThrow
   */
  export type EgresoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * Filter, which Egreso to fetch.
     */
    where: EgresoWhereUniqueInput
  }

  /**
   * Egreso findFirst
   */
  export type EgresoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * Filter, which Egreso to fetch.
     */
    where?: EgresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Egresos to fetch.
     */
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Egresos.
     */
    cursor?: EgresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Egresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Egresos.
     */
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * Egreso findFirstOrThrow
   */
  export type EgresoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * Filter, which Egreso to fetch.
     */
    where?: EgresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Egresos to fetch.
     */
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Egresos.
     */
    cursor?: EgresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Egresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Egresos.
     */
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * Egreso findMany
   */
  export type EgresoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * Filter, which Egresos to fetch.
     */
    where?: EgresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Egresos to fetch.
     */
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Egresos.
     */
    cursor?: EgresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Egresos.
     */
    skip?: number
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * Egreso create
   */
  export type EgresoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * The data needed to create a Egreso.
     */
    data: XOR<EgresoCreateInput, EgresoUncheckedCreateInput>
  }

  /**
   * Egreso createMany
   */
  export type EgresoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Egresos.
     */
    data: EgresoCreateManyInput | EgresoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Egreso createManyAndReturn
   */
  export type EgresoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Egresos.
     */
    data: EgresoCreateManyInput | EgresoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Egreso update
   */
  export type EgresoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * The data needed to update a Egreso.
     */
    data: XOR<EgresoUpdateInput, EgresoUncheckedUpdateInput>
    /**
     * Choose, which Egreso to update.
     */
    where: EgresoWhereUniqueInput
  }

  /**
   * Egreso updateMany
   */
  export type EgresoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Egresos.
     */
    data: XOR<EgresoUpdateManyMutationInput, EgresoUncheckedUpdateManyInput>
    /**
     * Filter which Egresos to update
     */
    where?: EgresoWhereInput
  }

  /**
   * Egreso upsert
   */
  export type EgresoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * The filter to search for the Egreso to update in case it exists.
     */
    where: EgresoWhereUniqueInput
    /**
     * In case the Egreso found by the `where` argument doesn't exist, create a new Egreso with this data.
     */
    create: XOR<EgresoCreateInput, EgresoUncheckedCreateInput>
    /**
     * In case the Egreso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EgresoUpdateInput, EgresoUncheckedUpdateInput>
  }

  /**
   * Egreso delete
   */
  export type EgresoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    /**
     * Filter which Egreso to delete.
     */
    where: EgresoWhereUniqueInput
  }

  /**
   * Egreso deleteMany
   */
  export type EgresoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Egresos to delete
     */
    where?: EgresoWhereInput
  }

  /**
   * Egreso.registroCaja
   */
  export type Egreso$registroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    where?: RegistroCajaWhereInput
  }

  /**
   * Egreso.sucursal
   */
  export type Egreso$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    where?: SucursalWhereInput
  }

  /**
   * Egreso.usuario
   */
  export type Egreso$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Egreso without action
   */
  export type EgresoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
  }


  /**
   * Model TicketSorteo
   */

  export type AggregateTicketSorteo = {
    _count: TicketSorteoCountAggregateOutputType | null
    _avg: TicketSorteoAvgAggregateOutputType | null
    _sum: TicketSorteoSumAggregateOutputType | null
    _min: TicketSorteoMinAggregateOutputType | null
    _max: TicketSorteoMaxAggregateOutputType | null
  }

  export type TicketSorteoAvgAggregateOutputType = {
    id: number | null
  }

  export type TicketSorteoSumAggregateOutputType = {
    id: number | null
  }

  export type TicketSorteoMinAggregateOutputType = {
    id: number | null
    descripcionSorteo: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    estado: $Enums.EstadoTicket | null
  }

  export type TicketSorteoMaxAggregateOutputType = {
    id: number | null
    descripcionSorteo: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    estado: $Enums.EstadoTicket | null
  }

  export type TicketSorteoCountAggregateOutputType = {
    id: number
    descripcionSorteo: number
    creadoEn: number
    actualizadoEn: number
    estado: number
    _all: number
  }


  export type TicketSorteoAvgAggregateInputType = {
    id?: true
  }

  export type TicketSorteoSumAggregateInputType = {
    id?: true
  }

  export type TicketSorteoMinAggregateInputType = {
    id?: true
    descripcionSorteo?: true
    creadoEn?: true
    actualizadoEn?: true
    estado?: true
  }

  export type TicketSorteoMaxAggregateInputType = {
    id?: true
    descripcionSorteo?: true
    creadoEn?: true
    actualizadoEn?: true
    estado?: true
  }

  export type TicketSorteoCountAggregateInputType = {
    id?: true
    descripcionSorteo?: true
    creadoEn?: true
    actualizadoEn?: true
    estado?: true
    _all?: true
  }

  export type TicketSorteoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketSorteo to aggregate.
     */
    where?: TicketSorteoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketSorteos to fetch.
     */
    orderBy?: TicketSorteoOrderByWithRelationInput | TicketSorteoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketSorteoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketSorteos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketSorteos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TicketSorteos
    **/
    _count?: true | TicketSorteoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketSorteoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketSorteoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketSorteoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketSorteoMaxAggregateInputType
  }

  export type GetTicketSorteoAggregateType<T extends TicketSorteoAggregateArgs> = {
        [P in keyof T & keyof AggregateTicketSorteo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicketSorteo[P]>
      : GetScalarType<T[P], AggregateTicketSorteo[P]>
  }




  export type TicketSorteoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketSorteoWhereInput
    orderBy?: TicketSorteoOrderByWithAggregationInput | TicketSorteoOrderByWithAggregationInput[]
    by: TicketSorteoScalarFieldEnum[] | TicketSorteoScalarFieldEnum
    having?: TicketSorteoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketSorteoCountAggregateInputType | true
    _avg?: TicketSorteoAvgAggregateInputType
    _sum?: TicketSorteoSumAggregateInputType
    _min?: TicketSorteoMinAggregateInputType
    _max?: TicketSorteoMaxAggregateInputType
  }

  export type TicketSorteoGroupByOutputType = {
    id: number
    descripcionSorteo: string | null
    creadoEn: Date
    actualizadoEn: Date
    estado: $Enums.EstadoTicket
    _count: TicketSorteoCountAggregateOutputType | null
    _avg: TicketSorteoAvgAggregateOutputType | null
    _sum: TicketSorteoSumAggregateOutputType | null
    _min: TicketSorteoMinAggregateOutputType | null
    _max: TicketSorteoMaxAggregateOutputType | null
  }

  type GetTicketSorteoGroupByPayload<T extends TicketSorteoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketSorteoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketSorteoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketSorteoGroupByOutputType[P]>
            : GetScalarType<T[P], TicketSorteoGroupByOutputType[P]>
        }
      >
    >


  export type TicketSorteoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcionSorteo?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    estado?: boolean
  }, ExtArgs["result"]["ticketSorteo"]>

  export type TicketSorteoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcionSorteo?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    estado?: boolean
  }, ExtArgs["result"]["ticketSorteo"]>

  export type TicketSorteoSelectScalar = {
    id?: boolean
    descripcionSorteo?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    estado?: boolean
  }


  export type $TicketSorteoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TicketSorteo"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcionSorteo: string | null
      creadoEn: Date
      actualizadoEn: Date
      estado: $Enums.EstadoTicket
    }, ExtArgs["result"]["ticketSorteo"]>
    composites: {}
  }

  type TicketSorteoGetPayload<S extends boolean | null | undefined | TicketSorteoDefaultArgs> = $Result.GetResult<Prisma.$TicketSorteoPayload, S>

  type TicketSorteoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TicketSorteoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TicketSorteoCountAggregateInputType | true
    }

  export interface TicketSorteoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TicketSorteo'], meta: { name: 'TicketSorteo' } }
    /**
     * Find zero or one TicketSorteo that matches the filter.
     * @param {TicketSorteoFindUniqueArgs} args - Arguments to find a TicketSorteo
     * @example
     * // Get one TicketSorteo
     * const ticketSorteo = await prisma.ticketSorteo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketSorteoFindUniqueArgs>(args: SelectSubset<T, TicketSorteoFindUniqueArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TicketSorteo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TicketSorteoFindUniqueOrThrowArgs} args - Arguments to find a TicketSorteo
     * @example
     * // Get one TicketSorteo
     * const ticketSorteo = await prisma.ticketSorteo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketSorteoFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketSorteoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TicketSorteo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoFindFirstArgs} args - Arguments to find a TicketSorteo
     * @example
     * // Get one TicketSorteo
     * const ticketSorteo = await prisma.ticketSorteo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketSorteoFindFirstArgs>(args?: SelectSubset<T, TicketSorteoFindFirstArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TicketSorteo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoFindFirstOrThrowArgs} args - Arguments to find a TicketSorteo
     * @example
     * // Get one TicketSorteo
     * const ticketSorteo = await prisma.ticketSorteo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketSorteoFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketSorteoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TicketSorteos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TicketSorteos
     * const ticketSorteos = await prisma.ticketSorteo.findMany()
     * 
     * // Get first 10 TicketSorteos
     * const ticketSorteos = await prisma.ticketSorteo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketSorteoWithIdOnly = await prisma.ticketSorteo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketSorteoFindManyArgs>(args?: SelectSubset<T, TicketSorteoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TicketSorteo.
     * @param {TicketSorteoCreateArgs} args - Arguments to create a TicketSorteo.
     * @example
     * // Create one TicketSorteo
     * const TicketSorteo = await prisma.ticketSorteo.create({
     *   data: {
     *     // ... data to create a TicketSorteo
     *   }
     * })
     * 
     */
    create<T extends TicketSorteoCreateArgs>(args: SelectSubset<T, TicketSorteoCreateArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TicketSorteos.
     * @param {TicketSorteoCreateManyArgs} args - Arguments to create many TicketSorteos.
     * @example
     * // Create many TicketSorteos
     * const ticketSorteo = await prisma.ticketSorteo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketSorteoCreateManyArgs>(args?: SelectSubset<T, TicketSorteoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TicketSorteos and returns the data saved in the database.
     * @param {TicketSorteoCreateManyAndReturnArgs} args - Arguments to create many TicketSorteos.
     * @example
     * // Create many TicketSorteos
     * const ticketSorteo = await prisma.ticketSorteo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TicketSorteos and only return the `id`
     * const ticketSorteoWithIdOnly = await prisma.ticketSorteo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TicketSorteoCreateManyAndReturnArgs>(args?: SelectSubset<T, TicketSorteoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TicketSorteo.
     * @param {TicketSorteoDeleteArgs} args - Arguments to delete one TicketSorteo.
     * @example
     * // Delete one TicketSorteo
     * const TicketSorteo = await prisma.ticketSorteo.delete({
     *   where: {
     *     // ... filter to delete one TicketSorteo
     *   }
     * })
     * 
     */
    delete<T extends TicketSorteoDeleteArgs>(args: SelectSubset<T, TicketSorteoDeleteArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TicketSorteo.
     * @param {TicketSorteoUpdateArgs} args - Arguments to update one TicketSorteo.
     * @example
     * // Update one TicketSorteo
     * const ticketSorteo = await prisma.ticketSorteo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketSorteoUpdateArgs>(args: SelectSubset<T, TicketSorteoUpdateArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TicketSorteos.
     * @param {TicketSorteoDeleteManyArgs} args - Arguments to filter TicketSorteos to delete.
     * @example
     * // Delete a few TicketSorteos
     * const { count } = await prisma.ticketSorteo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketSorteoDeleteManyArgs>(args?: SelectSubset<T, TicketSorteoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketSorteos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TicketSorteos
     * const ticketSorteo = await prisma.ticketSorteo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketSorteoUpdateManyArgs>(args: SelectSubset<T, TicketSorteoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TicketSorteo.
     * @param {TicketSorteoUpsertArgs} args - Arguments to update or create a TicketSorteo.
     * @example
     * // Update or create a TicketSorteo
     * const ticketSorteo = await prisma.ticketSorteo.upsert({
     *   create: {
     *     // ... data to create a TicketSorteo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TicketSorteo we want to update
     *   }
     * })
     */
    upsert<T extends TicketSorteoUpsertArgs>(args: SelectSubset<T, TicketSorteoUpsertArgs<ExtArgs>>): Prisma__TicketSorteoClient<$Result.GetResult<Prisma.$TicketSorteoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TicketSorteos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoCountArgs} args - Arguments to filter TicketSorteos to count.
     * @example
     * // Count the number of TicketSorteos
     * const count = await prisma.ticketSorteo.count({
     *   where: {
     *     // ... the filter for the TicketSorteos we want to count
     *   }
     * })
    **/
    count<T extends TicketSorteoCountArgs>(
      args?: Subset<T, TicketSorteoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketSorteoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TicketSorteo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketSorteoAggregateArgs>(args: Subset<T, TicketSorteoAggregateArgs>): Prisma.PrismaPromise<GetTicketSorteoAggregateType<T>>

    /**
     * Group by TicketSorteo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketSorteoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketSorteoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketSorteoGroupByArgs['orderBy'] }
        : { orderBy?: TicketSorteoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketSorteoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketSorteoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TicketSorteo model
   */
  readonly fields: TicketSorteoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TicketSorteo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketSorteoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TicketSorteo model
   */ 
  interface TicketSorteoFieldRefs {
    readonly id: FieldRef<"TicketSorteo", 'Int'>
    readonly descripcionSorteo: FieldRef<"TicketSorteo", 'String'>
    readonly creadoEn: FieldRef<"TicketSorteo", 'DateTime'>
    readonly actualizadoEn: FieldRef<"TicketSorteo", 'DateTime'>
    readonly estado: FieldRef<"TicketSorteo", 'EstadoTicket'>
  }
    

  // Custom InputTypes
  /**
   * TicketSorteo findUnique
   */
  export type TicketSorteoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * Filter, which TicketSorteo to fetch.
     */
    where: TicketSorteoWhereUniqueInput
  }

  /**
   * TicketSorteo findUniqueOrThrow
   */
  export type TicketSorteoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * Filter, which TicketSorteo to fetch.
     */
    where: TicketSorteoWhereUniqueInput
  }

  /**
   * TicketSorteo findFirst
   */
  export type TicketSorteoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * Filter, which TicketSorteo to fetch.
     */
    where?: TicketSorteoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketSorteos to fetch.
     */
    orderBy?: TicketSorteoOrderByWithRelationInput | TicketSorteoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketSorteos.
     */
    cursor?: TicketSorteoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketSorteos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketSorteos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketSorteos.
     */
    distinct?: TicketSorteoScalarFieldEnum | TicketSorteoScalarFieldEnum[]
  }

  /**
   * TicketSorteo findFirstOrThrow
   */
  export type TicketSorteoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * Filter, which TicketSorteo to fetch.
     */
    where?: TicketSorteoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketSorteos to fetch.
     */
    orderBy?: TicketSorteoOrderByWithRelationInput | TicketSorteoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketSorteos.
     */
    cursor?: TicketSorteoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketSorteos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketSorteos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketSorteos.
     */
    distinct?: TicketSorteoScalarFieldEnum | TicketSorteoScalarFieldEnum[]
  }

  /**
   * TicketSorteo findMany
   */
  export type TicketSorteoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * Filter, which TicketSorteos to fetch.
     */
    where?: TicketSorteoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketSorteos to fetch.
     */
    orderBy?: TicketSorteoOrderByWithRelationInput | TicketSorteoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TicketSorteos.
     */
    cursor?: TicketSorteoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketSorteos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketSorteos.
     */
    skip?: number
    distinct?: TicketSorteoScalarFieldEnum | TicketSorteoScalarFieldEnum[]
  }

  /**
   * TicketSorteo create
   */
  export type TicketSorteoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * The data needed to create a TicketSorteo.
     */
    data: XOR<TicketSorteoCreateInput, TicketSorteoUncheckedCreateInput>
  }

  /**
   * TicketSorteo createMany
   */
  export type TicketSorteoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TicketSorteos.
     */
    data: TicketSorteoCreateManyInput | TicketSorteoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketSorteo createManyAndReturn
   */
  export type TicketSorteoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TicketSorteos.
     */
    data: TicketSorteoCreateManyInput | TicketSorteoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketSorteo update
   */
  export type TicketSorteoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * The data needed to update a TicketSorteo.
     */
    data: XOR<TicketSorteoUpdateInput, TicketSorteoUncheckedUpdateInput>
    /**
     * Choose, which TicketSorteo to update.
     */
    where: TicketSorteoWhereUniqueInput
  }

  /**
   * TicketSorteo updateMany
   */
  export type TicketSorteoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TicketSorteos.
     */
    data: XOR<TicketSorteoUpdateManyMutationInput, TicketSorteoUncheckedUpdateManyInput>
    /**
     * Filter which TicketSorteos to update
     */
    where?: TicketSorteoWhereInput
  }

  /**
   * TicketSorteo upsert
   */
  export type TicketSorteoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * The filter to search for the TicketSorteo to update in case it exists.
     */
    where: TicketSorteoWhereUniqueInput
    /**
     * In case the TicketSorteo found by the `where` argument doesn't exist, create a new TicketSorteo with this data.
     */
    create: XOR<TicketSorteoCreateInput, TicketSorteoUncheckedCreateInput>
    /**
     * In case the TicketSorteo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketSorteoUpdateInput, TicketSorteoUncheckedUpdateInput>
  }

  /**
   * TicketSorteo delete
   */
  export type TicketSorteoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
    /**
     * Filter which TicketSorteo to delete.
     */
    where: TicketSorteoWhereUniqueInput
  }

  /**
   * TicketSorteo deleteMany
   */
  export type TicketSorteoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketSorteos to delete
     */
    where?: TicketSorteoWhereInput
  }

  /**
   * TicketSorteo without action
   */
  export type TicketSorteoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketSorteo
     */
    select?: TicketSorteoSelect<ExtArgs> | null
  }


  /**
   * Model Vencimiento
   */

  export type AggregateVencimiento = {
    _count: VencimientoCountAggregateOutputType | null
    _avg: VencimientoAvgAggregateOutputType | null
    _sum: VencimientoSumAggregateOutputType | null
    _min: VencimientoMinAggregateOutputType | null
    _max: VencimientoMaxAggregateOutputType | null
  }

  export type VencimientoAvgAggregateOutputType = {
    id: number | null
    stockId: number | null
  }

  export type VencimientoSumAggregateOutputType = {
    id: number | null
    stockId: number | null
  }

  export type VencimientoMinAggregateOutputType = {
    id: number | null
    fechaVencimiento: Date | null
    estado: $Enums.EstadoVencimiento | null
    descripcion: string | null
    stockId: number | null
    fechaCreacion: Date | null
  }

  export type VencimientoMaxAggregateOutputType = {
    id: number | null
    fechaVencimiento: Date | null
    estado: $Enums.EstadoVencimiento | null
    descripcion: string | null
    stockId: number | null
    fechaCreacion: Date | null
  }

  export type VencimientoCountAggregateOutputType = {
    id: number
    fechaVencimiento: number
    estado: number
    descripcion: number
    stockId: number
    fechaCreacion: number
    _all: number
  }


  export type VencimientoAvgAggregateInputType = {
    id?: true
    stockId?: true
  }

  export type VencimientoSumAggregateInputType = {
    id?: true
    stockId?: true
  }

  export type VencimientoMinAggregateInputType = {
    id?: true
    fechaVencimiento?: true
    estado?: true
    descripcion?: true
    stockId?: true
    fechaCreacion?: true
  }

  export type VencimientoMaxAggregateInputType = {
    id?: true
    fechaVencimiento?: true
    estado?: true
    descripcion?: true
    stockId?: true
    fechaCreacion?: true
  }

  export type VencimientoCountAggregateInputType = {
    id?: true
    fechaVencimiento?: true
    estado?: true
    descripcion?: true
    stockId?: true
    fechaCreacion?: true
    _all?: true
  }

  export type VencimientoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vencimiento to aggregate.
     */
    where?: VencimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vencimientos to fetch.
     */
    orderBy?: VencimientoOrderByWithRelationInput | VencimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VencimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vencimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vencimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vencimientos
    **/
    _count?: true | VencimientoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VencimientoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VencimientoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VencimientoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VencimientoMaxAggregateInputType
  }

  export type GetVencimientoAggregateType<T extends VencimientoAggregateArgs> = {
        [P in keyof T & keyof AggregateVencimiento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVencimiento[P]>
      : GetScalarType<T[P], AggregateVencimiento[P]>
  }




  export type VencimientoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VencimientoWhereInput
    orderBy?: VencimientoOrderByWithAggregationInput | VencimientoOrderByWithAggregationInput[]
    by: VencimientoScalarFieldEnum[] | VencimientoScalarFieldEnum
    having?: VencimientoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VencimientoCountAggregateInputType | true
    _avg?: VencimientoAvgAggregateInputType
    _sum?: VencimientoSumAggregateInputType
    _min?: VencimientoMinAggregateInputType
    _max?: VencimientoMaxAggregateInputType
  }

  export type VencimientoGroupByOutputType = {
    id: number
    fechaVencimiento: Date
    estado: $Enums.EstadoVencimiento
    descripcion: string | null
    stockId: number | null
    fechaCreacion: Date
    _count: VencimientoCountAggregateOutputType | null
    _avg: VencimientoAvgAggregateOutputType | null
    _sum: VencimientoSumAggregateOutputType | null
    _min: VencimientoMinAggregateOutputType | null
    _max: VencimientoMaxAggregateOutputType | null
  }

  type GetVencimientoGroupByPayload<T extends VencimientoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VencimientoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VencimientoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VencimientoGroupByOutputType[P]>
            : GetScalarType<T[P], VencimientoGroupByOutputType[P]>
        }
      >
    >


  export type VencimientoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaVencimiento?: boolean
    estado?: boolean
    descripcion?: boolean
    stockId?: boolean
    fechaCreacion?: boolean
    stock?: boolean | Vencimiento$stockArgs<ExtArgs>
  }, ExtArgs["result"]["vencimiento"]>

  export type VencimientoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaVencimiento?: boolean
    estado?: boolean
    descripcion?: boolean
    stockId?: boolean
    fechaCreacion?: boolean
    stock?: boolean | Vencimiento$stockArgs<ExtArgs>
  }, ExtArgs["result"]["vencimiento"]>

  export type VencimientoSelectScalar = {
    id?: boolean
    fechaVencimiento?: boolean
    estado?: boolean
    descripcion?: boolean
    stockId?: boolean
    fechaCreacion?: boolean
  }

  export type VencimientoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock?: boolean | Vencimiento$stockArgs<ExtArgs>
  }
  export type VencimientoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock?: boolean | Vencimiento$stockArgs<ExtArgs>
  }

  export type $VencimientoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vencimiento"
    objects: {
      stock: Prisma.$StockPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fechaVencimiento: Date
      estado: $Enums.EstadoVencimiento
      descripcion: string | null
      stockId: number | null
      fechaCreacion: Date
    }, ExtArgs["result"]["vencimiento"]>
    composites: {}
  }

  type VencimientoGetPayload<S extends boolean | null | undefined | VencimientoDefaultArgs> = $Result.GetResult<Prisma.$VencimientoPayload, S>

  type VencimientoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VencimientoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VencimientoCountAggregateInputType | true
    }

  export interface VencimientoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vencimiento'], meta: { name: 'Vencimiento' } }
    /**
     * Find zero or one Vencimiento that matches the filter.
     * @param {VencimientoFindUniqueArgs} args - Arguments to find a Vencimiento
     * @example
     * // Get one Vencimiento
     * const vencimiento = await prisma.vencimiento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VencimientoFindUniqueArgs>(args: SelectSubset<T, VencimientoFindUniqueArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Vencimiento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VencimientoFindUniqueOrThrowArgs} args - Arguments to find a Vencimiento
     * @example
     * // Get one Vencimiento
     * const vencimiento = await prisma.vencimiento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VencimientoFindUniqueOrThrowArgs>(args: SelectSubset<T, VencimientoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Vencimiento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoFindFirstArgs} args - Arguments to find a Vencimiento
     * @example
     * // Get one Vencimiento
     * const vencimiento = await prisma.vencimiento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VencimientoFindFirstArgs>(args?: SelectSubset<T, VencimientoFindFirstArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Vencimiento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoFindFirstOrThrowArgs} args - Arguments to find a Vencimiento
     * @example
     * // Get one Vencimiento
     * const vencimiento = await prisma.vencimiento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VencimientoFindFirstOrThrowArgs>(args?: SelectSubset<T, VencimientoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Vencimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vencimientos
     * const vencimientos = await prisma.vencimiento.findMany()
     * 
     * // Get first 10 Vencimientos
     * const vencimientos = await prisma.vencimiento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vencimientoWithIdOnly = await prisma.vencimiento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VencimientoFindManyArgs>(args?: SelectSubset<T, VencimientoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Vencimiento.
     * @param {VencimientoCreateArgs} args - Arguments to create a Vencimiento.
     * @example
     * // Create one Vencimiento
     * const Vencimiento = await prisma.vencimiento.create({
     *   data: {
     *     // ... data to create a Vencimiento
     *   }
     * })
     * 
     */
    create<T extends VencimientoCreateArgs>(args: SelectSubset<T, VencimientoCreateArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Vencimientos.
     * @param {VencimientoCreateManyArgs} args - Arguments to create many Vencimientos.
     * @example
     * // Create many Vencimientos
     * const vencimiento = await prisma.vencimiento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VencimientoCreateManyArgs>(args?: SelectSubset<T, VencimientoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vencimientos and returns the data saved in the database.
     * @param {VencimientoCreateManyAndReturnArgs} args - Arguments to create many Vencimientos.
     * @example
     * // Create many Vencimientos
     * const vencimiento = await prisma.vencimiento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vencimientos and only return the `id`
     * const vencimientoWithIdOnly = await prisma.vencimiento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VencimientoCreateManyAndReturnArgs>(args?: SelectSubset<T, VencimientoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Vencimiento.
     * @param {VencimientoDeleteArgs} args - Arguments to delete one Vencimiento.
     * @example
     * // Delete one Vencimiento
     * const Vencimiento = await prisma.vencimiento.delete({
     *   where: {
     *     // ... filter to delete one Vencimiento
     *   }
     * })
     * 
     */
    delete<T extends VencimientoDeleteArgs>(args: SelectSubset<T, VencimientoDeleteArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Vencimiento.
     * @param {VencimientoUpdateArgs} args - Arguments to update one Vencimiento.
     * @example
     * // Update one Vencimiento
     * const vencimiento = await prisma.vencimiento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VencimientoUpdateArgs>(args: SelectSubset<T, VencimientoUpdateArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Vencimientos.
     * @param {VencimientoDeleteManyArgs} args - Arguments to filter Vencimientos to delete.
     * @example
     * // Delete a few Vencimientos
     * const { count } = await prisma.vencimiento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VencimientoDeleteManyArgs>(args?: SelectSubset<T, VencimientoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vencimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vencimientos
     * const vencimiento = await prisma.vencimiento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VencimientoUpdateManyArgs>(args: SelectSubset<T, VencimientoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Vencimiento.
     * @param {VencimientoUpsertArgs} args - Arguments to update or create a Vencimiento.
     * @example
     * // Update or create a Vencimiento
     * const vencimiento = await prisma.vencimiento.upsert({
     *   create: {
     *     // ... data to create a Vencimiento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vencimiento we want to update
     *   }
     * })
     */
    upsert<T extends VencimientoUpsertArgs>(args: SelectSubset<T, VencimientoUpsertArgs<ExtArgs>>): Prisma__VencimientoClient<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Vencimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoCountArgs} args - Arguments to filter Vencimientos to count.
     * @example
     * // Count the number of Vencimientos
     * const count = await prisma.vencimiento.count({
     *   where: {
     *     // ... the filter for the Vencimientos we want to count
     *   }
     * })
    **/
    count<T extends VencimientoCountArgs>(
      args?: Subset<T, VencimientoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VencimientoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vencimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VencimientoAggregateArgs>(args: Subset<T, VencimientoAggregateArgs>): Prisma.PrismaPromise<GetVencimientoAggregateType<T>>

    /**
     * Group by Vencimiento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VencimientoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VencimientoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VencimientoGroupByArgs['orderBy'] }
        : { orderBy?: VencimientoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VencimientoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVencimientoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vencimiento model
   */
  readonly fields: VencimientoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vencimiento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VencimientoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    stock<T extends Vencimiento$stockArgs<ExtArgs> = {}>(args?: Subset<T, Vencimiento$stockArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vencimiento model
   */ 
  interface VencimientoFieldRefs {
    readonly id: FieldRef<"Vencimiento", 'Int'>
    readonly fechaVencimiento: FieldRef<"Vencimiento", 'DateTime'>
    readonly estado: FieldRef<"Vencimiento", 'EstadoVencimiento'>
    readonly descripcion: FieldRef<"Vencimiento", 'String'>
    readonly stockId: FieldRef<"Vencimiento", 'Int'>
    readonly fechaCreacion: FieldRef<"Vencimiento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Vencimiento findUnique
   */
  export type VencimientoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * Filter, which Vencimiento to fetch.
     */
    where: VencimientoWhereUniqueInput
  }

  /**
   * Vencimiento findUniqueOrThrow
   */
  export type VencimientoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * Filter, which Vencimiento to fetch.
     */
    where: VencimientoWhereUniqueInput
  }

  /**
   * Vencimiento findFirst
   */
  export type VencimientoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * Filter, which Vencimiento to fetch.
     */
    where?: VencimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vencimientos to fetch.
     */
    orderBy?: VencimientoOrderByWithRelationInput | VencimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vencimientos.
     */
    cursor?: VencimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vencimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vencimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vencimientos.
     */
    distinct?: VencimientoScalarFieldEnum | VencimientoScalarFieldEnum[]
  }

  /**
   * Vencimiento findFirstOrThrow
   */
  export type VencimientoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * Filter, which Vencimiento to fetch.
     */
    where?: VencimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vencimientos to fetch.
     */
    orderBy?: VencimientoOrderByWithRelationInput | VencimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vencimientos.
     */
    cursor?: VencimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vencimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vencimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vencimientos.
     */
    distinct?: VencimientoScalarFieldEnum | VencimientoScalarFieldEnum[]
  }

  /**
   * Vencimiento findMany
   */
  export type VencimientoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * Filter, which Vencimientos to fetch.
     */
    where?: VencimientoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vencimientos to fetch.
     */
    orderBy?: VencimientoOrderByWithRelationInput | VencimientoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vencimientos.
     */
    cursor?: VencimientoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vencimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vencimientos.
     */
    skip?: number
    distinct?: VencimientoScalarFieldEnum | VencimientoScalarFieldEnum[]
  }

  /**
   * Vencimiento create
   */
  export type VencimientoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * The data needed to create a Vencimiento.
     */
    data: XOR<VencimientoCreateInput, VencimientoUncheckedCreateInput>
  }

  /**
   * Vencimiento createMany
   */
  export type VencimientoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vencimientos.
     */
    data: VencimientoCreateManyInput | VencimientoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vencimiento createManyAndReturn
   */
  export type VencimientoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Vencimientos.
     */
    data: VencimientoCreateManyInput | VencimientoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vencimiento update
   */
  export type VencimientoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * The data needed to update a Vencimiento.
     */
    data: XOR<VencimientoUpdateInput, VencimientoUncheckedUpdateInput>
    /**
     * Choose, which Vencimiento to update.
     */
    where: VencimientoWhereUniqueInput
  }

  /**
   * Vencimiento updateMany
   */
  export type VencimientoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vencimientos.
     */
    data: XOR<VencimientoUpdateManyMutationInput, VencimientoUncheckedUpdateManyInput>
    /**
     * Filter which Vencimientos to update
     */
    where?: VencimientoWhereInput
  }

  /**
   * Vencimiento upsert
   */
  export type VencimientoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * The filter to search for the Vencimiento to update in case it exists.
     */
    where: VencimientoWhereUniqueInput
    /**
     * In case the Vencimiento found by the `where` argument doesn't exist, create a new Vencimiento with this data.
     */
    create: XOR<VencimientoCreateInput, VencimientoUncheckedCreateInput>
    /**
     * In case the Vencimiento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VencimientoUpdateInput, VencimientoUncheckedUpdateInput>
  }

  /**
   * Vencimiento delete
   */
  export type VencimientoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    /**
     * Filter which Vencimiento to delete.
     */
    where: VencimientoWhereUniqueInput
  }

  /**
   * Vencimiento deleteMany
   */
  export type VencimientoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vencimientos to delete
     */
    where?: VencimientoWhereInput
  }

  /**
   * Vencimiento.stock
   */
  export type Vencimiento$stockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
  }

  /**
   * Vencimiento without action
   */
  export type VencimientoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
  }


  /**
   * Model Notificacion
   */

  export type AggregateNotificacion = {
    _count: NotificacionCountAggregateOutputType | null
    _avg: NotificacionAvgAggregateOutputType | null
    _sum: NotificacionSumAggregateOutputType | null
    _min: NotificacionMinAggregateOutputType | null
    _max: NotificacionMaxAggregateOutputType | null
  }

  export type NotificacionAvgAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    referenciaId: number | null
  }

  export type NotificacionSumAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    referenciaId: number | null
  }

  export type NotificacionMinAggregateOutputType = {
    id: number | null
    mensaje: string | null
    remitenteId: number | null
    tipoNotificacion: $Enums.TipoNotificacion | null
    referenciaId: number | null
    fechaCreacion: Date | null
  }

  export type NotificacionMaxAggregateOutputType = {
    id: number | null
    mensaje: string | null
    remitenteId: number | null
    tipoNotificacion: $Enums.TipoNotificacion | null
    referenciaId: number | null
    fechaCreacion: Date | null
  }

  export type NotificacionCountAggregateOutputType = {
    id: number
    mensaje: number
    remitenteId: number
    tipoNotificacion: number
    referenciaId: number
    fechaCreacion: number
    _all: number
  }


  export type NotificacionAvgAggregateInputType = {
    id?: true
    remitenteId?: true
    referenciaId?: true
  }

  export type NotificacionSumAggregateInputType = {
    id?: true
    remitenteId?: true
    referenciaId?: true
  }

  export type NotificacionMinAggregateInputType = {
    id?: true
    mensaje?: true
    remitenteId?: true
    tipoNotificacion?: true
    referenciaId?: true
    fechaCreacion?: true
  }

  export type NotificacionMaxAggregateInputType = {
    id?: true
    mensaje?: true
    remitenteId?: true
    tipoNotificacion?: true
    referenciaId?: true
    fechaCreacion?: true
  }

  export type NotificacionCountAggregateInputType = {
    id?: true
    mensaje?: true
    remitenteId?: true
    tipoNotificacion?: true
    referenciaId?: true
    fechaCreacion?: true
    _all?: true
  }

  export type NotificacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacion to aggregate.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notificacions
    **/
    _count?: true | NotificacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacionMaxAggregateInputType
  }

  export type GetNotificacionAggregateType<T extends NotificacionAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacion[P]>
      : GetScalarType<T[P], AggregateNotificacion[P]>
  }




  export type NotificacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionWhereInput
    orderBy?: NotificacionOrderByWithAggregationInput | NotificacionOrderByWithAggregationInput[]
    by: NotificacionScalarFieldEnum[] | NotificacionScalarFieldEnum
    having?: NotificacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacionCountAggregateInputType | true
    _avg?: NotificacionAvgAggregateInputType
    _sum?: NotificacionSumAggregateInputType
    _min?: NotificacionMinAggregateInputType
    _max?: NotificacionMaxAggregateInputType
  }

  export type NotificacionGroupByOutputType = {
    id: number
    mensaje: string
    remitenteId: number | null
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId: number | null
    fechaCreacion: Date
    _count: NotificacionCountAggregateOutputType | null
    _avg: NotificacionAvgAggregateOutputType | null
    _sum: NotificacionSumAggregateOutputType | null
    _min: NotificacionMinAggregateOutputType | null
    _max: NotificacionMaxAggregateOutputType | null
  }

  type GetNotificacionGroupByPayload<T extends NotificacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacionGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacionGroupByOutputType[P]>
        }
      >
    >


  export type NotificacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensaje?: boolean
    remitenteId?: boolean
    tipoNotificacion?: boolean
    referenciaId?: boolean
    fechaCreacion?: boolean
    remitente?: boolean | Notificacion$remitenteArgs<ExtArgs>
    notificacionesUsuarios?: boolean | Notificacion$notificacionesUsuariosArgs<ExtArgs>
    Usuario?: boolean | Notificacion$UsuarioArgs<ExtArgs>
    _count?: boolean | NotificacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacion"]>

  export type NotificacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mensaje?: boolean
    remitenteId?: boolean
    tipoNotificacion?: boolean
    referenciaId?: boolean
    fechaCreacion?: boolean
    remitente?: boolean | Notificacion$remitenteArgs<ExtArgs>
  }, ExtArgs["result"]["notificacion"]>

  export type NotificacionSelectScalar = {
    id?: boolean
    mensaje?: boolean
    remitenteId?: boolean
    tipoNotificacion?: boolean
    referenciaId?: boolean
    fechaCreacion?: boolean
  }

  export type NotificacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | Notificacion$remitenteArgs<ExtArgs>
    notificacionesUsuarios?: boolean | Notificacion$notificacionesUsuariosArgs<ExtArgs>
    Usuario?: boolean | Notificacion$UsuarioArgs<ExtArgs>
    _count?: boolean | NotificacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type NotificacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | Notificacion$remitenteArgs<ExtArgs>
  }

  export type $NotificacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notificacion"
    objects: {
      remitente: Prisma.$UsuarioPayload<ExtArgs> | null
      notificacionesUsuarios: Prisma.$NotificacionesUsuariosPayload<ExtArgs>[]
      Usuario: Prisma.$UsuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      mensaje: string
      remitenteId: number | null
      tipoNotificacion: $Enums.TipoNotificacion
      referenciaId: number | null
      fechaCreacion: Date
    }, ExtArgs["result"]["notificacion"]>
    composites: {}
  }

  type NotificacionGetPayload<S extends boolean | null | undefined | NotificacionDefaultArgs> = $Result.GetResult<Prisma.$NotificacionPayload, S>

  type NotificacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificacionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificacionCountAggregateInputType | true
    }

  export interface NotificacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notificacion'], meta: { name: 'Notificacion' } }
    /**
     * Find zero or one Notificacion that matches the filter.
     * @param {NotificacionFindUniqueArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacionFindUniqueArgs>(args: SelectSubset<T, NotificacionFindUniqueArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notificacion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificacionFindUniqueOrThrowArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacionFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notificacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionFindFirstArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacionFindFirstArgs>(args?: SelectSubset<T, NotificacionFindFirstArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notificacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionFindFirstOrThrowArgs} args - Arguments to find a Notificacion
     * @example
     * // Get one Notificacion
     * const notificacion = await prisma.notificacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacionFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notificacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificacions
     * const notificacions = await prisma.notificacion.findMany()
     * 
     * // Get first 10 Notificacions
     * const notificacions = await prisma.notificacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacionWithIdOnly = await prisma.notificacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacionFindManyArgs>(args?: SelectSubset<T, NotificacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notificacion.
     * @param {NotificacionCreateArgs} args - Arguments to create a Notificacion.
     * @example
     * // Create one Notificacion
     * const Notificacion = await prisma.notificacion.create({
     *   data: {
     *     // ... data to create a Notificacion
     *   }
     * })
     * 
     */
    create<T extends NotificacionCreateArgs>(args: SelectSubset<T, NotificacionCreateArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notificacions.
     * @param {NotificacionCreateManyArgs} args - Arguments to create many Notificacions.
     * @example
     * // Create many Notificacions
     * const notificacion = await prisma.notificacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacionCreateManyArgs>(args?: SelectSubset<T, NotificacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificacions and returns the data saved in the database.
     * @param {NotificacionCreateManyAndReturnArgs} args - Arguments to create many Notificacions.
     * @example
     * // Create many Notificacions
     * const notificacion = await prisma.notificacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificacions and only return the `id`
     * const notificacionWithIdOnly = await prisma.notificacion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacionCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notificacion.
     * @param {NotificacionDeleteArgs} args - Arguments to delete one Notificacion.
     * @example
     * // Delete one Notificacion
     * const Notificacion = await prisma.notificacion.delete({
     *   where: {
     *     // ... filter to delete one Notificacion
     *   }
     * })
     * 
     */
    delete<T extends NotificacionDeleteArgs>(args: SelectSubset<T, NotificacionDeleteArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notificacion.
     * @param {NotificacionUpdateArgs} args - Arguments to update one Notificacion.
     * @example
     * // Update one Notificacion
     * const notificacion = await prisma.notificacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacionUpdateArgs>(args: SelectSubset<T, NotificacionUpdateArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notificacions.
     * @param {NotificacionDeleteManyArgs} args - Arguments to filter Notificacions to delete.
     * @example
     * // Delete a few Notificacions
     * const { count } = await prisma.notificacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacionDeleteManyArgs>(args?: SelectSubset<T, NotificacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificacions
     * const notificacion = await prisma.notificacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacionUpdateManyArgs>(args: SelectSubset<T, NotificacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notificacion.
     * @param {NotificacionUpsertArgs} args - Arguments to update or create a Notificacion.
     * @example
     * // Update or create a Notificacion
     * const notificacion = await prisma.notificacion.upsert({
     *   create: {
     *     // ... data to create a Notificacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificacion we want to update
     *   }
     * })
     */
    upsert<T extends NotificacionUpsertArgs>(args: SelectSubset<T, NotificacionUpsertArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionCountArgs} args - Arguments to filter Notificacions to count.
     * @example
     * // Count the number of Notificacions
     * const count = await prisma.notificacion.count({
     *   where: {
     *     // ... the filter for the Notificacions we want to count
     *   }
     * })
    **/
    count<T extends NotificacionCountArgs>(
      args?: Subset<T, NotificacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacionAggregateArgs>(args: Subset<T, NotificacionAggregateArgs>): Prisma.PrismaPromise<GetNotificacionAggregateType<T>>

    /**
     * Group by Notificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacionGroupByArgs['orderBy'] }
        : { orderBy?: NotificacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notificacion model
   */
  readonly fields: NotificacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notificacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    remitente<T extends Notificacion$remitenteArgs<ExtArgs> = {}>(args?: Subset<T, Notificacion$remitenteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    notificacionesUsuarios<T extends Notificacion$notificacionesUsuariosArgs<ExtArgs> = {}>(args?: Subset<T, Notificacion$notificacionesUsuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    Usuario<T extends Notificacion$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Notificacion$UsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notificacion model
   */ 
  interface NotificacionFieldRefs {
    readonly id: FieldRef<"Notificacion", 'Int'>
    readonly mensaje: FieldRef<"Notificacion", 'String'>
    readonly remitenteId: FieldRef<"Notificacion", 'Int'>
    readonly tipoNotificacion: FieldRef<"Notificacion", 'TipoNotificacion'>
    readonly referenciaId: FieldRef<"Notificacion", 'Int'>
    readonly fechaCreacion: FieldRef<"Notificacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notificacion findUnique
   */
  export type NotificacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion findUniqueOrThrow
   */
  export type NotificacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion findFirst
   */
  export type NotificacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacions.
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacions.
     */
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Notificacion findFirstOrThrow
   */
  export type NotificacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacion to fetch.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificacions.
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificacions.
     */
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Notificacion findMany
   */
  export type NotificacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter, which Notificacions to fetch.
     */
    where?: NotificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificacions to fetch.
     */
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notificacions.
     */
    cursor?: NotificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificacions.
     */
    skip?: number
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Notificacion create
   */
  export type NotificacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Notificacion.
     */
    data: XOR<NotificacionCreateInput, NotificacionUncheckedCreateInput>
  }

  /**
   * Notificacion createMany
   */
  export type NotificacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notificacions.
     */
    data: NotificacionCreateManyInput | NotificacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notificacion createManyAndReturn
   */
  export type NotificacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notificacions.
     */
    data: NotificacionCreateManyInput | NotificacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificacion update
   */
  export type NotificacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Notificacion.
     */
    data: XOR<NotificacionUpdateInput, NotificacionUncheckedUpdateInput>
    /**
     * Choose, which Notificacion to update.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion updateMany
   */
  export type NotificacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notificacions.
     */
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyInput>
    /**
     * Filter which Notificacions to update
     */
    where?: NotificacionWhereInput
  }

  /**
   * Notificacion upsert
   */
  export type NotificacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Notificacion to update in case it exists.
     */
    where: NotificacionWhereUniqueInput
    /**
     * In case the Notificacion found by the `where` argument doesn't exist, create a new Notificacion with this data.
     */
    create: XOR<NotificacionCreateInput, NotificacionUncheckedCreateInput>
    /**
     * In case the Notificacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacionUpdateInput, NotificacionUncheckedUpdateInput>
  }

  /**
   * Notificacion delete
   */
  export type NotificacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    /**
     * Filter which Notificacion to delete.
     */
    where: NotificacionWhereUniqueInput
  }

  /**
   * Notificacion deleteMany
   */
  export type NotificacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificacions to delete
     */
    where?: NotificacionWhereInput
  }

  /**
   * Notificacion.remitente
   */
  export type Notificacion$remitenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Notificacion.notificacionesUsuarios
   */
  export type Notificacion$notificacionesUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    where?: NotificacionesUsuariosWhereInput
    orderBy?: NotificacionesUsuariosOrderByWithRelationInput | NotificacionesUsuariosOrderByWithRelationInput[]
    cursor?: NotificacionesUsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionesUsuariosScalarFieldEnum | NotificacionesUsuariosScalarFieldEnum[]
  }

  /**
   * Notificacion.Usuario
   */
  export type Notificacion$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Notificacion without action
   */
  export type NotificacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
  }


  /**
   * Model NotificacionesUsuarios
   */

  export type AggregateNotificacionesUsuarios = {
    _count: NotificacionesUsuariosCountAggregateOutputType | null
    _avg: NotificacionesUsuariosAvgAggregateOutputType | null
    _sum: NotificacionesUsuariosSumAggregateOutputType | null
    _min: NotificacionesUsuariosMinAggregateOutputType | null
    _max: NotificacionesUsuariosMaxAggregateOutputType | null
  }

  export type NotificacionesUsuariosAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    notificacionId: number | null
  }

  export type NotificacionesUsuariosSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    notificacionId: number | null
  }

  export type NotificacionesUsuariosMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    notificacionId: number | null
    leido: boolean | null
    eliminado: boolean | null
    leidoEn: Date | null
    recibidoEn: Date | null
  }

  export type NotificacionesUsuariosMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    notificacionId: number | null
    leido: boolean | null
    eliminado: boolean | null
    leidoEn: Date | null
    recibidoEn: Date | null
  }

  export type NotificacionesUsuariosCountAggregateOutputType = {
    id: number
    usuarioId: number
    notificacionId: number
    leido: number
    eliminado: number
    leidoEn: number
    recibidoEn: number
    _all: number
  }


  export type NotificacionesUsuariosAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    notificacionId?: true
  }

  export type NotificacionesUsuariosSumAggregateInputType = {
    id?: true
    usuarioId?: true
    notificacionId?: true
  }

  export type NotificacionesUsuariosMinAggregateInputType = {
    id?: true
    usuarioId?: true
    notificacionId?: true
    leido?: true
    eliminado?: true
    leidoEn?: true
    recibidoEn?: true
  }

  export type NotificacionesUsuariosMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    notificacionId?: true
    leido?: true
    eliminado?: true
    leidoEn?: true
    recibidoEn?: true
  }

  export type NotificacionesUsuariosCountAggregateInputType = {
    id?: true
    usuarioId?: true
    notificacionId?: true
    leido?: true
    eliminado?: true
    leidoEn?: true
    recibidoEn?: true
    _all?: true
  }

  export type NotificacionesUsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NotificacionesUsuarios to aggregate.
     */
    where?: NotificacionesUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificacionesUsuarios to fetch.
     */
    orderBy?: NotificacionesUsuariosOrderByWithRelationInput | NotificacionesUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacionesUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificacionesUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificacionesUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NotificacionesUsuarios
    **/
    _count?: true | NotificacionesUsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacionesUsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacionesUsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacionesUsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacionesUsuariosMaxAggregateInputType
  }

  export type GetNotificacionesUsuariosAggregateType<T extends NotificacionesUsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificacionesUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificacionesUsuarios[P]>
      : GetScalarType<T[P], AggregateNotificacionesUsuarios[P]>
  }




  export type NotificacionesUsuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionesUsuariosWhereInput
    orderBy?: NotificacionesUsuariosOrderByWithAggregationInput | NotificacionesUsuariosOrderByWithAggregationInput[]
    by: NotificacionesUsuariosScalarFieldEnum[] | NotificacionesUsuariosScalarFieldEnum
    having?: NotificacionesUsuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacionesUsuariosCountAggregateInputType | true
    _avg?: NotificacionesUsuariosAvgAggregateInputType
    _sum?: NotificacionesUsuariosSumAggregateInputType
    _min?: NotificacionesUsuariosMinAggregateInputType
    _max?: NotificacionesUsuariosMaxAggregateInputType
  }

  export type NotificacionesUsuariosGroupByOutputType = {
    id: number
    usuarioId: number
    notificacionId: number
    leido: boolean
    eliminado: boolean
    leidoEn: Date | null
    recibidoEn: Date
    _count: NotificacionesUsuariosCountAggregateOutputType | null
    _avg: NotificacionesUsuariosAvgAggregateOutputType | null
    _sum: NotificacionesUsuariosSumAggregateOutputType | null
    _min: NotificacionesUsuariosMinAggregateOutputType | null
    _max: NotificacionesUsuariosMaxAggregateOutputType | null
  }

  type GetNotificacionesUsuariosGroupByPayload<T extends NotificacionesUsuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacionesUsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacionesUsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacionesUsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacionesUsuariosGroupByOutputType[P]>
        }
      >
    >


  export type NotificacionesUsuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    notificacionId?: boolean
    leido?: boolean
    eliminado?: boolean
    leidoEn?: boolean
    recibidoEn?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    notificacion?: boolean | NotificacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacionesUsuarios"]>

  export type NotificacionesUsuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    notificacionId?: boolean
    leido?: boolean
    eliminado?: boolean
    leidoEn?: boolean
    recibidoEn?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    notificacion?: boolean | NotificacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificacionesUsuarios"]>

  export type NotificacionesUsuariosSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    notificacionId?: boolean
    leido?: boolean
    eliminado?: boolean
    leidoEn?: boolean
    recibidoEn?: boolean
  }

  export type NotificacionesUsuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    notificacion?: boolean | NotificacionDefaultArgs<ExtArgs>
  }
  export type NotificacionesUsuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    notificacion?: boolean | NotificacionDefaultArgs<ExtArgs>
  }

  export type $NotificacionesUsuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NotificacionesUsuarios"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      notificacion: Prisma.$NotificacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      notificacionId: number
      leido: boolean
      eliminado: boolean
      leidoEn: Date | null
      recibidoEn: Date
    }, ExtArgs["result"]["notificacionesUsuarios"]>
    composites: {}
  }

  type NotificacionesUsuariosGetPayload<S extends boolean | null | undefined | NotificacionesUsuariosDefaultArgs> = $Result.GetResult<Prisma.$NotificacionesUsuariosPayload, S>

  type NotificacionesUsuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificacionesUsuariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificacionesUsuariosCountAggregateInputType | true
    }

  export interface NotificacionesUsuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NotificacionesUsuarios'], meta: { name: 'NotificacionesUsuarios' } }
    /**
     * Find zero or one NotificacionesUsuarios that matches the filter.
     * @param {NotificacionesUsuariosFindUniqueArgs} args - Arguments to find a NotificacionesUsuarios
     * @example
     * // Get one NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacionesUsuariosFindUniqueArgs>(args: SelectSubset<T, NotificacionesUsuariosFindUniqueArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one NotificacionesUsuarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificacionesUsuariosFindUniqueOrThrowArgs} args - Arguments to find a NotificacionesUsuarios
     * @example
     * // Get one NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacionesUsuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacionesUsuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first NotificacionesUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosFindFirstArgs} args - Arguments to find a NotificacionesUsuarios
     * @example
     * // Get one NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacionesUsuariosFindFirstArgs>(args?: SelectSubset<T, NotificacionesUsuariosFindFirstArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first NotificacionesUsuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosFindFirstOrThrowArgs} args - Arguments to find a NotificacionesUsuarios
     * @example
     * // Get one NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacionesUsuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacionesUsuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more NotificacionesUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findMany()
     * 
     * // Get first 10 NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacionesUsuariosWithIdOnly = await prisma.notificacionesUsuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacionesUsuariosFindManyArgs>(args?: SelectSubset<T, NotificacionesUsuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a NotificacionesUsuarios.
     * @param {NotificacionesUsuariosCreateArgs} args - Arguments to create a NotificacionesUsuarios.
     * @example
     * // Create one NotificacionesUsuarios
     * const NotificacionesUsuarios = await prisma.notificacionesUsuarios.create({
     *   data: {
     *     // ... data to create a NotificacionesUsuarios
     *   }
     * })
     * 
     */
    create<T extends NotificacionesUsuariosCreateArgs>(args: SelectSubset<T, NotificacionesUsuariosCreateArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many NotificacionesUsuarios.
     * @param {NotificacionesUsuariosCreateManyArgs} args - Arguments to create many NotificacionesUsuarios.
     * @example
     * // Create many NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacionesUsuariosCreateManyArgs>(args?: SelectSubset<T, NotificacionesUsuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many NotificacionesUsuarios and returns the data saved in the database.
     * @param {NotificacionesUsuariosCreateManyAndReturnArgs} args - Arguments to create many NotificacionesUsuarios.
     * @example
     * // Create many NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many NotificacionesUsuarios and only return the `id`
     * const notificacionesUsuariosWithIdOnly = await prisma.notificacionesUsuarios.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacionesUsuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacionesUsuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a NotificacionesUsuarios.
     * @param {NotificacionesUsuariosDeleteArgs} args - Arguments to delete one NotificacionesUsuarios.
     * @example
     * // Delete one NotificacionesUsuarios
     * const NotificacionesUsuarios = await prisma.notificacionesUsuarios.delete({
     *   where: {
     *     // ... filter to delete one NotificacionesUsuarios
     *   }
     * })
     * 
     */
    delete<T extends NotificacionesUsuariosDeleteArgs>(args: SelectSubset<T, NotificacionesUsuariosDeleteArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one NotificacionesUsuarios.
     * @param {NotificacionesUsuariosUpdateArgs} args - Arguments to update one NotificacionesUsuarios.
     * @example
     * // Update one NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacionesUsuariosUpdateArgs>(args: SelectSubset<T, NotificacionesUsuariosUpdateArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more NotificacionesUsuarios.
     * @param {NotificacionesUsuariosDeleteManyArgs} args - Arguments to filter NotificacionesUsuarios to delete.
     * @example
     * // Delete a few NotificacionesUsuarios
     * const { count } = await prisma.notificacionesUsuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacionesUsuariosDeleteManyArgs>(args?: SelectSubset<T, NotificacionesUsuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NotificacionesUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacionesUsuariosUpdateManyArgs>(args: SelectSubset<T, NotificacionesUsuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NotificacionesUsuarios.
     * @param {NotificacionesUsuariosUpsertArgs} args - Arguments to update or create a NotificacionesUsuarios.
     * @example
     * // Update or create a NotificacionesUsuarios
     * const notificacionesUsuarios = await prisma.notificacionesUsuarios.upsert({
     *   create: {
     *     // ... data to create a NotificacionesUsuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NotificacionesUsuarios we want to update
     *   }
     * })
     */
    upsert<T extends NotificacionesUsuariosUpsertArgs>(args: SelectSubset<T, NotificacionesUsuariosUpsertArgs<ExtArgs>>): Prisma__NotificacionesUsuariosClient<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of NotificacionesUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosCountArgs} args - Arguments to filter NotificacionesUsuarios to count.
     * @example
     * // Count the number of NotificacionesUsuarios
     * const count = await prisma.notificacionesUsuarios.count({
     *   where: {
     *     // ... the filter for the NotificacionesUsuarios we want to count
     *   }
     * })
    **/
    count<T extends NotificacionesUsuariosCountArgs>(
      args?: Subset<T, NotificacionesUsuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacionesUsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NotificacionesUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacionesUsuariosAggregateArgs>(args: Subset<T, NotificacionesUsuariosAggregateArgs>): Prisma.PrismaPromise<GetNotificacionesUsuariosAggregateType<T>>

    /**
     * Group by NotificacionesUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUsuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacionesUsuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacionesUsuariosGroupByArgs['orderBy'] }
        : { orderBy?: NotificacionesUsuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacionesUsuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacionesUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NotificacionesUsuarios model
   */
  readonly fields: NotificacionesUsuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NotificacionesUsuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacionesUsuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    notificacion<T extends NotificacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, NotificacionDefaultArgs<ExtArgs>>): Prisma__NotificacionClient<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NotificacionesUsuarios model
   */ 
  interface NotificacionesUsuariosFieldRefs {
    readonly id: FieldRef<"NotificacionesUsuarios", 'Int'>
    readonly usuarioId: FieldRef<"NotificacionesUsuarios", 'Int'>
    readonly notificacionId: FieldRef<"NotificacionesUsuarios", 'Int'>
    readonly leido: FieldRef<"NotificacionesUsuarios", 'Boolean'>
    readonly eliminado: FieldRef<"NotificacionesUsuarios", 'Boolean'>
    readonly leidoEn: FieldRef<"NotificacionesUsuarios", 'DateTime'>
    readonly recibidoEn: FieldRef<"NotificacionesUsuarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * NotificacionesUsuarios findUnique
   */
  export type NotificacionesUsuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which NotificacionesUsuarios to fetch.
     */
    where: NotificacionesUsuariosWhereUniqueInput
  }

  /**
   * NotificacionesUsuarios findUniqueOrThrow
   */
  export type NotificacionesUsuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which NotificacionesUsuarios to fetch.
     */
    where: NotificacionesUsuariosWhereUniqueInput
  }

  /**
   * NotificacionesUsuarios findFirst
   */
  export type NotificacionesUsuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which NotificacionesUsuarios to fetch.
     */
    where?: NotificacionesUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificacionesUsuarios to fetch.
     */
    orderBy?: NotificacionesUsuariosOrderByWithRelationInput | NotificacionesUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotificacionesUsuarios.
     */
    cursor?: NotificacionesUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificacionesUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificacionesUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotificacionesUsuarios.
     */
    distinct?: NotificacionesUsuariosScalarFieldEnum | NotificacionesUsuariosScalarFieldEnum[]
  }

  /**
   * NotificacionesUsuarios findFirstOrThrow
   */
  export type NotificacionesUsuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which NotificacionesUsuarios to fetch.
     */
    where?: NotificacionesUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificacionesUsuarios to fetch.
     */
    orderBy?: NotificacionesUsuariosOrderByWithRelationInput | NotificacionesUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotificacionesUsuarios.
     */
    cursor?: NotificacionesUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificacionesUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificacionesUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotificacionesUsuarios.
     */
    distinct?: NotificacionesUsuariosScalarFieldEnum | NotificacionesUsuariosScalarFieldEnum[]
  }

  /**
   * NotificacionesUsuarios findMany
   */
  export type NotificacionesUsuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which NotificacionesUsuarios to fetch.
     */
    where?: NotificacionesUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificacionesUsuarios to fetch.
     */
    orderBy?: NotificacionesUsuariosOrderByWithRelationInput | NotificacionesUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NotificacionesUsuarios.
     */
    cursor?: NotificacionesUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificacionesUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificacionesUsuarios.
     */
    skip?: number
    distinct?: NotificacionesUsuariosScalarFieldEnum | NotificacionesUsuariosScalarFieldEnum[]
  }

  /**
   * NotificacionesUsuarios create
   */
  export type NotificacionesUsuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a NotificacionesUsuarios.
     */
    data: XOR<NotificacionesUsuariosCreateInput, NotificacionesUsuariosUncheckedCreateInput>
  }

  /**
   * NotificacionesUsuarios createMany
   */
  export type NotificacionesUsuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NotificacionesUsuarios.
     */
    data: NotificacionesUsuariosCreateManyInput | NotificacionesUsuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NotificacionesUsuarios createManyAndReturn
   */
  export type NotificacionesUsuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many NotificacionesUsuarios.
     */
    data: NotificacionesUsuariosCreateManyInput | NotificacionesUsuariosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * NotificacionesUsuarios update
   */
  export type NotificacionesUsuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a NotificacionesUsuarios.
     */
    data: XOR<NotificacionesUsuariosUpdateInput, NotificacionesUsuariosUncheckedUpdateInput>
    /**
     * Choose, which NotificacionesUsuarios to update.
     */
    where: NotificacionesUsuariosWhereUniqueInput
  }

  /**
   * NotificacionesUsuarios updateMany
   */
  export type NotificacionesUsuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NotificacionesUsuarios.
     */
    data: XOR<NotificacionesUsuariosUpdateManyMutationInput, NotificacionesUsuariosUncheckedUpdateManyInput>
    /**
     * Filter which NotificacionesUsuarios to update
     */
    where?: NotificacionesUsuariosWhereInput
  }

  /**
   * NotificacionesUsuarios upsert
   */
  export type NotificacionesUsuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the NotificacionesUsuarios to update in case it exists.
     */
    where: NotificacionesUsuariosWhereUniqueInput
    /**
     * In case the NotificacionesUsuarios found by the `where` argument doesn't exist, create a new NotificacionesUsuarios with this data.
     */
    create: XOR<NotificacionesUsuariosCreateInput, NotificacionesUsuariosUncheckedCreateInput>
    /**
     * In case the NotificacionesUsuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacionesUsuariosUpdateInput, NotificacionesUsuariosUncheckedUpdateInput>
  }

  /**
   * NotificacionesUsuarios delete
   */
  export type NotificacionesUsuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    /**
     * Filter which NotificacionesUsuarios to delete.
     */
    where: NotificacionesUsuariosWhereUniqueInput
  }

  /**
   * NotificacionesUsuarios deleteMany
   */
  export type NotificacionesUsuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NotificacionesUsuarios to delete
     */
    where?: NotificacionesUsuariosWhereInput
  }

  /**
   * NotificacionesUsuarios without action
   */
  export type NotificacionesUsuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
  }


  /**
   * Model SolicitudPrecio
   */

  export type AggregateSolicitudPrecio = {
    _count: SolicitudPrecioCountAggregateOutputType | null
    _avg: SolicitudPrecioAvgAggregateOutputType | null
    _sum: SolicitudPrecioSumAggregateOutputType | null
    _min: SolicitudPrecioMinAggregateOutputType | null
    _max: SolicitudPrecioMaxAggregateOutputType | null
  }

  export type SolicitudPrecioAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioSolicitado: number | null
    solicitadoPorId: number | null
    aprobadoPorId: number | null
  }

  export type SolicitudPrecioSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioSolicitado: number | null
    solicitadoPorId: number | null
    aprobadoPorId: number | null
  }

  export type SolicitudPrecioMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioSolicitado: number | null
    solicitadoPorId: number | null
    estado: $Enums.EstadoSolicitud | null
    aprobadoPorId: number | null
    fechaSolicitud: Date | null
    fechaRespuesta: Date | null
  }

  export type SolicitudPrecioMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioSolicitado: number | null
    solicitadoPorId: number | null
    estado: $Enums.EstadoSolicitud | null
    aprobadoPorId: number | null
    fechaSolicitud: Date | null
    fechaRespuesta: Date | null
  }

  export type SolicitudPrecioCountAggregateOutputType = {
    id: number
    productoId: number
    precioSolicitado: number
    solicitadoPorId: number
    estado: number
    aprobadoPorId: number
    fechaSolicitud: number
    fechaRespuesta: number
    _all: number
  }


  export type SolicitudPrecioAvgAggregateInputType = {
    id?: true
    productoId?: true
    precioSolicitado?: true
    solicitadoPorId?: true
    aprobadoPorId?: true
  }

  export type SolicitudPrecioSumAggregateInputType = {
    id?: true
    productoId?: true
    precioSolicitado?: true
    solicitadoPorId?: true
    aprobadoPorId?: true
  }

  export type SolicitudPrecioMinAggregateInputType = {
    id?: true
    productoId?: true
    precioSolicitado?: true
    solicitadoPorId?: true
    estado?: true
    aprobadoPorId?: true
    fechaSolicitud?: true
    fechaRespuesta?: true
  }

  export type SolicitudPrecioMaxAggregateInputType = {
    id?: true
    productoId?: true
    precioSolicitado?: true
    solicitadoPorId?: true
    estado?: true
    aprobadoPorId?: true
    fechaSolicitud?: true
    fechaRespuesta?: true
  }

  export type SolicitudPrecioCountAggregateInputType = {
    id?: true
    productoId?: true
    precioSolicitado?: true
    solicitadoPorId?: true
    estado?: true
    aprobadoPorId?: true
    fechaSolicitud?: true
    fechaRespuesta?: true
    _all?: true
  }

  export type SolicitudPrecioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitudPrecio to aggregate.
     */
    where?: SolicitudPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudPrecios to fetch.
     */
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SolicitudPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SolicitudPrecios
    **/
    _count?: true | SolicitudPrecioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SolicitudPrecioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SolicitudPrecioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SolicitudPrecioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SolicitudPrecioMaxAggregateInputType
  }

  export type GetSolicitudPrecioAggregateType<T extends SolicitudPrecioAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitudPrecio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitudPrecio[P]>
      : GetScalarType<T[P], AggregateSolicitudPrecio[P]>
  }




  export type SolicitudPrecioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudPrecioWhereInput
    orderBy?: SolicitudPrecioOrderByWithAggregationInput | SolicitudPrecioOrderByWithAggregationInput[]
    by: SolicitudPrecioScalarFieldEnum[] | SolicitudPrecioScalarFieldEnum
    having?: SolicitudPrecioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SolicitudPrecioCountAggregateInputType | true
    _avg?: SolicitudPrecioAvgAggregateInputType
    _sum?: SolicitudPrecioSumAggregateInputType
    _min?: SolicitudPrecioMinAggregateInputType
    _max?: SolicitudPrecioMaxAggregateInputType
  }

  export type SolicitudPrecioGroupByOutputType = {
    id: number
    productoId: number
    precioSolicitado: number
    solicitadoPorId: number
    estado: $Enums.EstadoSolicitud
    aprobadoPorId: number | null
    fechaSolicitud: Date
    fechaRespuesta: Date | null
    _count: SolicitudPrecioCountAggregateOutputType | null
    _avg: SolicitudPrecioAvgAggregateOutputType | null
    _sum: SolicitudPrecioSumAggregateOutputType | null
    _min: SolicitudPrecioMinAggregateOutputType | null
    _max: SolicitudPrecioMaxAggregateOutputType | null
  }

  type GetSolicitudPrecioGroupByPayload<T extends SolicitudPrecioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SolicitudPrecioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SolicitudPrecioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SolicitudPrecioGroupByOutputType[P]>
            : GetScalarType<T[P], SolicitudPrecioGroupByOutputType[P]>
        }
      >
    >


  export type SolicitudPrecioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precioSolicitado?: boolean
    solicitadoPorId?: boolean
    estado?: boolean
    aprobadoPorId?: boolean
    fechaSolicitud?: boolean
    fechaRespuesta?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    solicitadoPor?: boolean | UsuarioDefaultArgs<ExtArgs>
    aprobadoPor?: boolean | SolicitudPrecio$aprobadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["solicitudPrecio"]>

  export type SolicitudPrecioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precioSolicitado?: boolean
    solicitadoPorId?: boolean
    estado?: boolean
    aprobadoPorId?: boolean
    fechaSolicitud?: boolean
    fechaRespuesta?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    solicitadoPor?: boolean | UsuarioDefaultArgs<ExtArgs>
    aprobadoPor?: boolean | SolicitudPrecio$aprobadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["solicitudPrecio"]>

  export type SolicitudPrecioSelectScalar = {
    id?: boolean
    productoId?: boolean
    precioSolicitado?: boolean
    solicitadoPorId?: boolean
    estado?: boolean
    aprobadoPorId?: boolean
    fechaSolicitud?: boolean
    fechaRespuesta?: boolean
  }

  export type SolicitudPrecioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    solicitadoPor?: boolean | UsuarioDefaultArgs<ExtArgs>
    aprobadoPor?: boolean | SolicitudPrecio$aprobadoPorArgs<ExtArgs>
  }
  export type SolicitudPrecioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    solicitadoPor?: boolean | UsuarioDefaultArgs<ExtArgs>
    aprobadoPor?: boolean | SolicitudPrecio$aprobadoPorArgs<ExtArgs>
  }

  export type $SolicitudPrecioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SolicitudPrecio"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      solicitadoPor: Prisma.$UsuarioPayload<ExtArgs>
      aprobadoPor: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      precioSolicitado: number
      solicitadoPorId: number
      estado: $Enums.EstadoSolicitud
      aprobadoPorId: number | null
      fechaSolicitud: Date
      fechaRespuesta: Date | null
    }, ExtArgs["result"]["solicitudPrecio"]>
    composites: {}
  }

  type SolicitudPrecioGetPayload<S extends boolean | null | undefined | SolicitudPrecioDefaultArgs> = $Result.GetResult<Prisma.$SolicitudPrecioPayload, S>

  type SolicitudPrecioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SolicitudPrecioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SolicitudPrecioCountAggregateInputType | true
    }

  export interface SolicitudPrecioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SolicitudPrecio'], meta: { name: 'SolicitudPrecio' } }
    /**
     * Find zero or one SolicitudPrecio that matches the filter.
     * @param {SolicitudPrecioFindUniqueArgs} args - Arguments to find a SolicitudPrecio
     * @example
     * // Get one SolicitudPrecio
     * const solicitudPrecio = await prisma.solicitudPrecio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SolicitudPrecioFindUniqueArgs>(args: SelectSubset<T, SolicitudPrecioFindUniqueArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SolicitudPrecio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SolicitudPrecioFindUniqueOrThrowArgs} args - Arguments to find a SolicitudPrecio
     * @example
     * // Get one SolicitudPrecio
     * const solicitudPrecio = await prisma.solicitudPrecio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SolicitudPrecioFindUniqueOrThrowArgs>(args: SelectSubset<T, SolicitudPrecioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SolicitudPrecio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioFindFirstArgs} args - Arguments to find a SolicitudPrecio
     * @example
     * // Get one SolicitudPrecio
     * const solicitudPrecio = await prisma.solicitudPrecio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SolicitudPrecioFindFirstArgs>(args?: SelectSubset<T, SolicitudPrecioFindFirstArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SolicitudPrecio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioFindFirstOrThrowArgs} args - Arguments to find a SolicitudPrecio
     * @example
     * // Get one SolicitudPrecio
     * const solicitudPrecio = await prisma.solicitudPrecio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SolicitudPrecioFindFirstOrThrowArgs>(args?: SelectSubset<T, SolicitudPrecioFindFirstOrThrowArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SolicitudPrecios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SolicitudPrecios
     * const solicitudPrecios = await prisma.solicitudPrecio.findMany()
     * 
     * // Get first 10 SolicitudPrecios
     * const solicitudPrecios = await prisma.solicitudPrecio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitudPrecioWithIdOnly = await prisma.solicitudPrecio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SolicitudPrecioFindManyArgs>(args?: SelectSubset<T, SolicitudPrecioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SolicitudPrecio.
     * @param {SolicitudPrecioCreateArgs} args - Arguments to create a SolicitudPrecio.
     * @example
     * // Create one SolicitudPrecio
     * const SolicitudPrecio = await prisma.solicitudPrecio.create({
     *   data: {
     *     // ... data to create a SolicitudPrecio
     *   }
     * })
     * 
     */
    create<T extends SolicitudPrecioCreateArgs>(args: SelectSubset<T, SolicitudPrecioCreateArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SolicitudPrecios.
     * @param {SolicitudPrecioCreateManyArgs} args - Arguments to create many SolicitudPrecios.
     * @example
     * // Create many SolicitudPrecios
     * const solicitudPrecio = await prisma.solicitudPrecio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SolicitudPrecioCreateManyArgs>(args?: SelectSubset<T, SolicitudPrecioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SolicitudPrecios and returns the data saved in the database.
     * @param {SolicitudPrecioCreateManyAndReturnArgs} args - Arguments to create many SolicitudPrecios.
     * @example
     * // Create many SolicitudPrecios
     * const solicitudPrecio = await prisma.solicitudPrecio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SolicitudPrecios and only return the `id`
     * const solicitudPrecioWithIdOnly = await prisma.solicitudPrecio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SolicitudPrecioCreateManyAndReturnArgs>(args?: SelectSubset<T, SolicitudPrecioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SolicitudPrecio.
     * @param {SolicitudPrecioDeleteArgs} args - Arguments to delete one SolicitudPrecio.
     * @example
     * // Delete one SolicitudPrecio
     * const SolicitudPrecio = await prisma.solicitudPrecio.delete({
     *   where: {
     *     // ... filter to delete one SolicitudPrecio
     *   }
     * })
     * 
     */
    delete<T extends SolicitudPrecioDeleteArgs>(args: SelectSubset<T, SolicitudPrecioDeleteArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SolicitudPrecio.
     * @param {SolicitudPrecioUpdateArgs} args - Arguments to update one SolicitudPrecio.
     * @example
     * // Update one SolicitudPrecio
     * const solicitudPrecio = await prisma.solicitudPrecio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SolicitudPrecioUpdateArgs>(args: SelectSubset<T, SolicitudPrecioUpdateArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SolicitudPrecios.
     * @param {SolicitudPrecioDeleteManyArgs} args - Arguments to filter SolicitudPrecios to delete.
     * @example
     * // Delete a few SolicitudPrecios
     * const { count } = await prisma.solicitudPrecio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SolicitudPrecioDeleteManyArgs>(args?: SelectSubset<T, SolicitudPrecioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SolicitudPrecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SolicitudPrecios
     * const solicitudPrecio = await prisma.solicitudPrecio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SolicitudPrecioUpdateManyArgs>(args: SelectSubset<T, SolicitudPrecioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SolicitudPrecio.
     * @param {SolicitudPrecioUpsertArgs} args - Arguments to update or create a SolicitudPrecio.
     * @example
     * // Update or create a SolicitudPrecio
     * const solicitudPrecio = await prisma.solicitudPrecio.upsert({
     *   create: {
     *     // ... data to create a SolicitudPrecio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SolicitudPrecio we want to update
     *   }
     * })
     */
    upsert<T extends SolicitudPrecioUpsertArgs>(args: SelectSubset<T, SolicitudPrecioUpsertArgs<ExtArgs>>): Prisma__SolicitudPrecioClient<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SolicitudPrecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioCountArgs} args - Arguments to filter SolicitudPrecios to count.
     * @example
     * // Count the number of SolicitudPrecios
     * const count = await prisma.solicitudPrecio.count({
     *   where: {
     *     // ... the filter for the SolicitudPrecios we want to count
     *   }
     * })
    **/
    count<T extends SolicitudPrecioCountArgs>(
      args?: Subset<T, SolicitudPrecioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SolicitudPrecioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SolicitudPrecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SolicitudPrecioAggregateArgs>(args: Subset<T, SolicitudPrecioAggregateArgs>): Prisma.PrismaPromise<GetSolicitudPrecioAggregateType<T>>

    /**
     * Group by SolicitudPrecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudPrecioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SolicitudPrecioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SolicitudPrecioGroupByArgs['orderBy'] }
        : { orderBy?: SolicitudPrecioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SolicitudPrecioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitudPrecioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SolicitudPrecio model
   */
  readonly fields: SolicitudPrecioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SolicitudPrecio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SolicitudPrecioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    solicitadoPor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    aprobadoPor<T extends SolicitudPrecio$aprobadoPorArgs<ExtArgs> = {}>(args?: Subset<T, SolicitudPrecio$aprobadoPorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SolicitudPrecio model
   */ 
  interface SolicitudPrecioFieldRefs {
    readonly id: FieldRef<"SolicitudPrecio", 'Int'>
    readonly productoId: FieldRef<"SolicitudPrecio", 'Int'>
    readonly precioSolicitado: FieldRef<"SolicitudPrecio", 'Float'>
    readonly solicitadoPorId: FieldRef<"SolicitudPrecio", 'Int'>
    readonly estado: FieldRef<"SolicitudPrecio", 'EstadoSolicitud'>
    readonly aprobadoPorId: FieldRef<"SolicitudPrecio", 'Int'>
    readonly fechaSolicitud: FieldRef<"SolicitudPrecio", 'DateTime'>
    readonly fechaRespuesta: FieldRef<"SolicitudPrecio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SolicitudPrecio findUnique
   */
  export type SolicitudPrecioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudPrecio to fetch.
     */
    where: SolicitudPrecioWhereUniqueInput
  }

  /**
   * SolicitudPrecio findUniqueOrThrow
   */
  export type SolicitudPrecioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudPrecio to fetch.
     */
    where: SolicitudPrecioWhereUniqueInput
  }

  /**
   * SolicitudPrecio findFirst
   */
  export type SolicitudPrecioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudPrecio to fetch.
     */
    where?: SolicitudPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudPrecios to fetch.
     */
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitudPrecios.
     */
    cursor?: SolicitudPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitudPrecios.
     */
    distinct?: SolicitudPrecioScalarFieldEnum | SolicitudPrecioScalarFieldEnum[]
  }

  /**
   * SolicitudPrecio findFirstOrThrow
   */
  export type SolicitudPrecioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudPrecio to fetch.
     */
    where?: SolicitudPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudPrecios to fetch.
     */
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitudPrecios.
     */
    cursor?: SolicitudPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitudPrecios.
     */
    distinct?: SolicitudPrecioScalarFieldEnum | SolicitudPrecioScalarFieldEnum[]
  }

  /**
   * SolicitudPrecio findMany
   */
  export type SolicitudPrecioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudPrecios to fetch.
     */
    where?: SolicitudPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudPrecios to fetch.
     */
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SolicitudPrecios.
     */
    cursor?: SolicitudPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudPrecios.
     */
    skip?: number
    distinct?: SolicitudPrecioScalarFieldEnum | SolicitudPrecioScalarFieldEnum[]
  }

  /**
   * SolicitudPrecio create
   */
  export type SolicitudPrecioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * The data needed to create a SolicitudPrecio.
     */
    data: XOR<SolicitudPrecioCreateInput, SolicitudPrecioUncheckedCreateInput>
  }

  /**
   * SolicitudPrecio createMany
   */
  export type SolicitudPrecioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SolicitudPrecios.
     */
    data: SolicitudPrecioCreateManyInput | SolicitudPrecioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SolicitudPrecio createManyAndReturn
   */
  export type SolicitudPrecioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SolicitudPrecios.
     */
    data: SolicitudPrecioCreateManyInput | SolicitudPrecioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SolicitudPrecio update
   */
  export type SolicitudPrecioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * The data needed to update a SolicitudPrecio.
     */
    data: XOR<SolicitudPrecioUpdateInput, SolicitudPrecioUncheckedUpdateInput>
    /**
     * Choose, which SolicitudPrecio to update.
     */
    where: SolicitudPrecioWhereUniqueInput
  }

  /**
   * SolicitudPrecio updateMany
   */
  export type SolicitudPrecioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SolicitudPrecios.
     */
    data: XOR<SolicitudPrecioUpdateManyMutationInput, SolicitudPrecioUncheckedUpdateManyInput>
    /**
     * Filter which SolicitudPrecios to update
     */
    where?: SolicitudPrecioWhereInput
  }

  /**
   * SolicitudPrecio upsert
   */
  export type SolicitudPrecioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * The filter to search for the SolicitudPrecio to update in case it exists.
     */
    where: SolicitudPrecioWhereUniqueInput
    /**
     * In case the SolicitudPrecio found by the `where` argument doesn't exist, create a new SolicitudPrecio with this data.
     */
    create: XOR<SolicitudPrecioCreateInput, SolicitudPrecioUncheckedCreateInput>
    /**
     * In case the SolicitudPrecio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SolicitudPrecioUpdateInput, SolicitudPrecioUncheckedUpdateInput>
  }

  /**
   * SolicitudPrecio delete
   */
  export type SolicitudPrecioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    /**
     * Filter which SolicitudPrecio to delete.
     */
    where: SolicitudPrecioWhereUniqueInput
  }

  /**
   * SolicitudPrecio deleteMany
   */
  export type SolicitudPrecioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitudPrecios to delete
     */
    where?: SolicitudPrecioWhereInput
  }

  /**
   * SolicitudPrecio.aprobadoPor
   */
  export type SolicitudPrecio$aprobadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * SolicitudPrecio without action
   */
  export type SolicitudPrecioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id: number | null
    precioCostoActual: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id: number | null
    precioCostoActual: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    codigoProducto: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    precioCostoActual: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    codigoProducto: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    precioCostoActual: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    codigoProducto: number
    creadoEn: number
    actualizadoEn: number
    precioCostoActual: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id?: true
    precioCostoActual?: true
  }

  export type ProductoSumAggregateInputType = {
    id?: true
    precioCostoActual?: true
  }

  export type ProductoMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    codigoProducto?: true
    creadoEn?: true
    actualizadoEn?: true
    precioCostoActual?: true
  }

  export type ProductoMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    codigoProducto?: true
    creadoEn?: true
    actualizadoEn?: true
    precioCostoActual?: true
  }

  export type ProductoCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    codigoProducto?: true
    creadoEn?: true
    actualizadoEn?: true
    precioCostoActual?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    codigoProducto: string
    creadoEn: Date
    actualizadoEn: Date
    precioCostoActual: number | null
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    codigoProducto?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    precioCostoActual?: boolean
    stock?: boolean | Producto$stockArgs<ExtArgs>
    categorias?: boolean | Producto$categoriasArgs<ExtArgs>
    ventas?: boolean | Producto$ventasArgs<ExtArgs>
    HistorialStock?: boolean | Producto$HistorialStockArgs<ExtArgs>
    HistorialPrecio?: boolean | Producto$HistorialPrecioArgs<ExtArgs>
    TransferenciaProducto?: boolean | Producto$TransferenciaProductoArgs<ExtArgs>
    precios?: boolean | Producto$preciosArgs<ExtArgs>
    SolicitudPrecio?: boolean | Producto$SolicitudPrecioArgs<ExtArgs>
    solicitudesTransferencia?: boolean | Producto$solicitudesTransferenciaArgs<ExtArgs>
    HistorialPrecioCosto?: boolean | Producto$HistorialPrecioCostoArgs<ExtArgs>
    AjusteStock?: boolean | Producto$AjusteStockArgs<ExtArgs>
    EliminacionProducto?: boolean | Producto$EliminacionProductoArgs<ExtArgs>
    EliminacionStock?: boolean | Producto$EliminacionStockArgs<ExtArgs>
    Garantia?: boolean | Producto$GarantiaArgs<ExtArgs>
    RegistroGarantia?: boolean | Producto$RegistroGarantiaArgs<ExtArgs>
    VentaEliminadaProducto?: boolean | Producto$VentaEliminadaProductoArgs<ExtArgs>
    Reparacion?: boolean | Producto$ReparacionArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    codigoProducto?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    precioCostoActual?: boolean
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    codigoProducto?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    precioCostoActual?: boolean
  }

  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock?: boolean | Producto$stockArgs<ExtArgs>
    categorias?: boolean | Producto$categoriasArgs<ExtArgs>
    ventas?: boolean | Producto$ventasArgs<ExtArgs>
    HistorialStock?: boolean | Producto$HistorialStockArgs<ExtArgs>
    HistorialPrecio?: boolean | Producto$HistorialPrecioArgs<ExtArgs>
    TransferenciaProducto?: boolean | Producto$TransferenciaProductoArgs<ExtArgs>
    precios?: boolean | Producto$preciosArgs<ExtArgs>
    SolicitudPrecio?: boolean | Producto$SolicitudPrecioArgs<ExtArgs>
    solicitudesTransferencia?: boolean | Producto$solicitudesTransferenciaArgs<ExtArgs>
    HistorialPrecioCosto?: boolean | Producto$HistorialPrecioCostoArgs<ExtArgs>
    AjusteStock?: boolean | Producto$AjusteStockArgs<ExtArgs>
    EliminacionProducto?: boolean | Producto$EliminacionProductoArgs<ExtArgs>
    EliminacionStock?: boolean | Producto$EliminacionStockArgs<ExtArgs>
    Garantia?: boolean | Producto$GarantiaArgs<ExtArgs>
    RegistroGarantia?: boolean | Producto$RegistroGarantiaArgs<ExtArgs>
    VentaEliminadaProducto?: boolean | Producto$VentaEliminadaProductoArgs<ExtArgs>
    Reparacion?: boolean | Producto$ReparacionArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      stock: Prisma.$StockPayload<ExtArgs>[]
      categorias: Prisma.$CategoriaPayload<ExtArgs>[]
      ventas: Prisma.$VentaProductoPayload<ExtArgs>[]
      HistorialStock: Prisma.$HistorialStockPayload<ExtArgs>[]
      HistorialPrecio: Prisma.$HistorialPrecioPayload<ExtArgs>[]
      TransferenciaProducto: Prisma.$TransferenciaProductoPayload<ExtArgs>[]
      precios: Prisma.$PrecioProductoPayload<ExtArgs>[]
      SolicitudPrecio: Prisma.$SolicitudPrecioPayload<ExtArgs>[]
      solicitudesTransferencia: Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>[]
      HistorialPrecioCosto: Prisma.$HistorialPrecioCostoPayload<ExtArgs>[]
      AjusteStock: Prisma.$AjusteStockPayload<ExtArgs>[]
      EliminacionProducto: Prisma.$EliminacionProductoPayload<ExtArgs>[]
      EliminacionStock: Prisma.$EliminacionStockPayload<ExtArgs>[]
      Garantia: Prisma.$GarantiaPayload<ExtArgs>[]
      RegistroGarantia: Prisma.$RegistroGarantiaPayload<ExtArgs>[]
      VentaEliminadaProducto: Prisma.$VentaEliminadaProductoPayload<ExtArgs>[]
      Reparacion: Prisma.$ReparacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      codigoProducto: string
      creadoEn: Date
      actualizadoEn: Date
      precioCostoActual: number | null
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productoWithIdOnly = await prisma.producto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    stock<T extends Producto$stockArgs<ExtArgs> = {}>(args?: Subset<T, Producto$stockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany"> | Null>
    categorias<T extends Producto$categoriasArgs<ExtArgs> = {}>(args?: Subset<T, Producto$categoriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany"> | Null>
    ventas<T extends Producto$ventasArgs<ExtArgs> = {}>(args?: Subset<T, Producto$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    HistorialStock<T extends Producto$HistorialStockArgs<ExtArgs> = {}>(args?: Subset<T, Producto$HistorialStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "findMany"> | Null>
    HistorialPrecio<T extends Producto$HistorialPrecioArgs<ExtArgs> = {}>(args?: Subset<T, Producto$HistorialPrecioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany"> | Null>
    TransferenciaProducto<T extends Producto$TransferenciaProductoArgs<ExtArgs> = {}>(args?: Subset<T, Producto$TransferenciaProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    precios<T extends Producto$preciosArgs<ExtArgs> = {}>(args?: Subset<T, Producto$preciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findMany"> | Null>
    SolicitudPrecio<T extends Producto$SolicitudPrecioArgs<ExtArgs> = {}>(args?: Subset<T, Producto$SolicitudPrecioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesTransferencia<T extends Producto$solicitudesTransferenciaArgs<ExtArgs> = {}>(args?: Subset<T, Producto$solicitudesTransferenciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    HistorialPrecioCosto<T extends Producto$HistorialPrecioCostoArgs<ExtArgs> = {}>(args?: Subset<T, Producto$HistorialPrecioCostoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findMany"> | Null>
    AjusteStock<T extends Producto$AjusteStockArgs<ExtArgs> = {}>(args?: Subset<T, Producto$AjusteStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findMany"> | Null>
    EliminacionProducto<T extends Producto$EliminacionProductoArgs<ExtArgs> = {}>(args?: Subset<T, Producto$EliminacionProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findMany"> | Null>
    EliminacionStock<T extends Producto$EliminacionStockArgs<ExtArgs> = {}>(args?: Subset<T, Producto$EliminacionStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findMany"> | Null>
    Garantia<T extends Producto$GarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Producto$GarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    RegistroGarantia<T extends Producto$RegistroGarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Producto$RegistroGarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    VentaEliminadaProducto<T extends Producto$VentaEliminadaProductoArgs<ExtArgs> = {}>(args?: Subset<T, Producto$VentaEliminadaProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    Reparacion<T extends Producto$ReparacionArgs<ExtArgs> = {}>(args?: Subset<T, Producto$ReparacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */ 
  interface ProductoFieldRefs {
    readonly id: FieldRef<"Producto", 'Int'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly descripcion: FieldRef<"Producto", 'String'>
    readonly codigoProducto: FieldRef<"Producto", 'String'>
    readonly creadoEn: FieldRef<"Producto", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Producto", 'DateTime'>
    readonly precioCostoActual: FieldRef<"Producto", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto createManyAndReturn
   */
  export type ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
  }

  /**
   * Producto.stock
   */
  export type Producto$stockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Producto.categorias
   */
  export type Producto$categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    cursor?: CategoriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Producto.ventas
   */
  export type Producto$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    where?: VentaProductoWhereInput
    orderBy?: VentaProductoOrderByWithRelationInput | VentaProductoOrderByWithRelationInput[]
    cursor?: VentaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaProductoScalarFieldEnum | VentaProductoScalarFieldEnum[]
  }

  /**
   * Producto.HistorialStock
   */
  export type Producto$HistorialStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    where?: HistorialStockWhereInput
    orderBy?: HistorialStockOrderByWithRelationInput | HistorialStockOrderByWithRelationInput[]
    cursor?: HistorialStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialStockScalarFieldEnum | HistorialStockScalarFieldEnum[]
  }

  /**
   * Producto.HistorialPrecio
   */
  export type Producto$HistorialPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    cursor?: HistorialPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * Producto.TransferenciaProducto
   */
  export type Producto$TransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    where?: TransferenciaProductoWhereInput
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    cursor?: TransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Producto.precios
   */
  export type Producto$preciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    where?: PrecioProductoWhereInput
    orderBy?: PrecioProductoOrderByWithRelationInput | PrecioProductoOrderByWithRelationInput[]
    cursor?: PrecioProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PrecioProductoScalarFieldEnum | PrecioProductoScalarFieldEnum[]
  }

  /**
   * Producto.SolicitudPrecio
   */
  export type Producto$SolicitudPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    where?: SolicitudPrecioWhereInput
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    cursor?: SolicitudPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudPrecioScalarFieldEnum | SolicitudPrecioScalarFieldEnum[]
  }

  /**
   * Producto.solicitudesTransferencia
   */
  export type Producto$solicitudesTransferenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    where?: SolicitudTransferenciaProductoWhereInput
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Producto.HistorialPrecioCosto
   */
  export type Producto$HistorialPrecioCostoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    where?: HistorialPrecioCostoWhereInput
    orderBy?: HistorialPrecioCostoOrderByWithRelationInput | HistorialPrecioCostoOrderByWithRelationInput[]
    cursor?: HistorialPrecioCostoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioCostoScalarFieldEnum | HistorialPrecioCostoScalarFieldEnum[]
  }

  /**
   * Producto.AjusteStock
   */
  export type Producto$AjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    where?: AjusteStockWhereInput
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    cursor?: AjusteStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AjusteStockScalarFieldEnum | AjusteStockScalarFieldEnum[]
  }

  /**
   * Producto.EliminacionProducto
   */
  export type Producto$EliminacionProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    where?: EliminacionProductoWhereInput
    orderBy?: EliminacionProductoOrderByWithRelationInput | EliminacionProductoOrderByWithRelationInput[]
    cursor?: EliminacionProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionProductoScalarFieldEnum | EliminacionProductoScalarFieldEnum[]
  }

  /**
   * Producto.EliminacionStock
   */
  export type Producto$EliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    where?: EliminacionStockWhereInput
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    cursor?: EliminacionStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionStockScalarFieldEnum | EliminacionStockScalarFieldEnum[]
  }

  /**
   * Producto.Garantia
   */
  export type Producto$GarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    where?: GarantiaWhereInput
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    cursor?: GarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Producto.RegistroGarantia
   */
  export type Producto$RegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    where?: RegistroGarantiaWhereInput
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    cursor?: RegistroGarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * Producto.VentaEliminadaProducto
   */
  export type Producto$VentaEliminadaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminadaProducto
     */
    select?: VentaEliminadaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaProductoInclude<ExtArgs> | null
    where?: VentaEliminadaProductoWhereInput
    orderBy?: VentaEliminadaProductoOrderByWithRelationInput | VentaEliminadaProductoOrderByWithRelationInput[]
    cursor?: VentaEliminadaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaEliminadaProductoScalarFieldEnum | VentaEliminadaProductoScalarFieldEnum[]
  }

  /**
   * Producto.Reparacion
   */
  export type Producto$ReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    where?: ReparacionWhereInput
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    cursor?: ReparacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model HistorialPrecioCosto
   */

  export type AggregateHistorialPrecioCosto = {
    _count: HistorialPrecioCostoCountAggregateOutputType | null
    _avg: HistorialPrecioCostoAvgAggregateOutputType | null
    _sum: HistorialPrecioCostoSumAggregateOutputType | null
    _min: HistorialPrecioCostoMinAggregateOutputType | null
    _max: HistorialPrecioCostoMaxAggregateOutputType | null
  }

  export type HistorialPrecioCostoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioCostoAnterior: number | null
    precioCostoNuevo: number | null
    modificadoPorId: number | null
  }

  export type HistorialPrecioCostoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioCostoAnterior: number | null
    precioCostoNuevo: number | null
    modificadoPorId: number | null
  }

  export type HistorialPrecioCostoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioCostoAnterior: number | null
    precioCostoNuevo: number | null
    fechaCambio: Date | null
    modificadoPorId: number | null
  }

  export type HistorialPrecioCostoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioCostoAnterior: number | null
    precioCostoNuevo: number | null
    fechaCambio: Date | null
    modificadoPorId: number | null
  }

  export type HistorialPrecioCostoCountAggregateOutputType = {
    id: number
    productoId: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio: number
    modificadoPorId: number
    _all: number
  }


  export type HistorialPrecioCostoAvgAggregateInputType = {
    id?: true
    productoId?: true
    precioCostoAnterior?: true
    precioCostoNuevo?: true
    modificadoPorId?: true
  }

  export type HistorialPrecioCostoSumAggregateInputType = {
    id?: true
    productoId?: true
    precioCostoAnterior?: true
    precioCostoNuevo?: true
    modificadoPorId?: true
  }

  export type HistorialPrecioCostoMinAggregateInputType = {
    id?: true
    productoId?: true
    precioCostoAnterior?: true
    precioCostoNuevo?: true
    fechaCambio?: true
    modificadoPorId?: true
  }

  export type HistorialPrecioCostoMaxAggregateInputType = {
    id?: true
    productoId?: true
    precioCostoAnterior?: true
    precioCostoNuevo?: true
    fechaCambio?: true
    modificadoPorId?: true
  }

  export type HistorialPrecioCostoCountAggregateInputType = {
    id?: true
    productoId?: true
    precioCostoAnterior?: true
    precioCostoNuevo?: true
    fechaCambio?: true
    modificadoPorId?: true
    _all?: true
  }

  export type HistorialPrecioCostoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialPrecioCosto to aggregate.
     */
    where?: HistorialPrecioCostoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecioCostos to fetch.
     */
    orderBy?: HistorialPrecioCostoOrderByWithRelationInput | HistorialPrecioCostoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialPrecioCostoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecioCostos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecioCostos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialPrecioCostos
    **/
    _count?: true | HistorialPrecioCostoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialPrecioCostoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialPrecioCostoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialPrecioCostoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialPrecioCostoMaxAggregateInputType
  }

  export type GetHistorialPrecioCostoAggregateType<T extends HistorialPrecioCostoAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialPrecioCosto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialPrecioCosto[P]>
      : GetScalarType<T[P], AggregateHistorialPrecioCosto[P]>
  }




  export type HistorialPrecioCostoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioCostoWhereInput
    orderBy?: HistorialPrecioCostoOrderByWithAggregationInput | HistorialPrecioCostoOrderByWithAggregationInput[]
    by: HistorialPrecioCostoScalarFieldEnum[] | HistorialPrecioCostoScalarFieldEnum
    having?: HistorialPrecioCostoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialPrecioCostoCountAggregateInputType | true
    _avg?: HistorialPrecioCostoAvgAggregateInputType
    _sum?: HistorialPrecioCostoSumAggregateInputType
    _min?: HistorialPrecioCostoMinAggregateInputType
    _max?: HistorialPrecioCostoMaxAggregateInputType
  }

  export type HistorialPrecioCostoGroupByOutputType = {
    id: number
    productoId: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio: Date
    modificadoPorId: number | null
    _count: HistorialPrecioCostoCountAggregateOutputType | null
    _avg: HistorialPrecioCostoAvgAggregateOutputType | null
    _sum: HistorialPrecioCostoSumAggregateOutputType | null
    _min: HistorialPrecioCostoMinAggregateOutputType | null
    _max: HistorialPrecioCostoMaxAggregateOutputType | null
  }

  type GetHistorialPrecioCostoGroupByPayload<T extends HistorialPrecioCostoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialPrecioCostoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialPrecioCostoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialPrecioCostoGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialPrecioCostoGroupByOutputType[P]>
        }
      >
    >


  export type HistorialPrecioCostoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precioCostoAnterior?: boolean
    precioCostoNuevo?: boolean
    fechaCambio?: boolean
    modificadoPorId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    modificadoPor?: boolean | HistorialPrecioCosto$modificadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecioCosto"]>

  export type HistorialPrecioCostoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precioCostoAnterior?: boolean
    precioCostoNuevo?: boolean
    fechaCambio?: boolean
    modificadoPorId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    modificadoPor?: boolean | HistorialPrecioCosto$modificadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecioCosto"]>

  export type HistorialPrecioCostoSelectScalar = {
    id?: boolean
    productoId?: boolean
    precioCostoAnterior?: boolean
    precioCostoNuevo?: boolean
    fechaCambio?: boolean
    modificadoPorId?: boolean
  }

  export type HistorialPrecioCostoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    modificadoPor?: boolean | HistorialPrecioCosto$modificadoPorArgs<ExtArgs>
  }
  export type HistorialPrecioCostoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    modificadoPor?: boolean | HistorialPrecioCosto$modificadoPorArgs<ExtArgs>
  }

  export type $HistorialPrecioCostoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialPrecioCosto"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      modificadoPor: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      precioCostoAnterior: number
      precioCostoNuevo: number
      fechaCambio: Date
      modificadoPorId: number | null
    }, ExtArgs["result"]["historialPrecioCosto"]>
    composites: {}
  }

  type HistorialPrecioCostoGetPayload<S extends boolean | null | undefined | HistorialPrecioCostoDefaultArgs> = $Result.GetResult<Prisma.$HistorialPrecioCostoPayload, S>

  type HistorialPrecioCostoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HistorialPrecioCostoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialPrecioCostoCountAggregateInputType | true
    }

  export interface HistorialPrecioCostoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialPrecioCosto'], meta: { name: 'HistorialPrecioCosto' } }
    /**
     * Find zero or one HistorialPrecioCosto that matches the filter.
     * @param {HistorialPrecioCostoFindUniqueArgs} args - Arguments to find a HistorialPrecioCosto
     * @example
     * // Get one HistorialPrecioCosto
     * const historialPrecioCosto = await prisma.historialPrecioCosto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialPrecioCostoFindUniqueArgs>(args: SelectSubset<T, HistorialPrecioCostoFindUniqueArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one HistorialPrecioCosto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HistorialPrecioCostoFindUniqueOrThrowArgs} args - Arguments to find a HistorialPrecioCosto
     * @example
     * // Get one HistorialPrecioCosto
     * const historialPrecioCosto = await prisma.historialPrecioCosto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialPrecioCostoFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialPrecioCostoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first HistorialPrecioCosto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoFindFirstArgs} args - Arguments to find a HistorialPrecioCosto
     * @example
     * // Get one HistorialPrecioCosto
     * const historialPrecioCosto = await prisma.historialPrecioCosto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialPrecioCostoFindFirstArgs>(args?: SelectSubset<T, HistorialPrecioCostoFindFirstArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first HistorialPrecioCosto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoFindFirstOrThrowArgs} args - Arguments to find a HistorialPrecioCosto
     * @example
     * // Get one HistorialPrecioCosto
     * const historialPrecioCosto = await prisma.historialPrecioCosto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialPrecioCostoFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialPrecioCostoFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more HistorialPrecioCostos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialPrecioCostos
     * const historialPrecioCostos = await prisma.historialPrecioCosto.findMany()
     * 
     * // Get first 10 HistorialPrecioCostos
     * const historialPrecioCostos = await prisma.historialPrecioCosto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialPrecioCostoWithIdOnly = await prisma.historialPrecioCosto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialPrecioCostoFindManyArgs>(args?: SelectSubset<T, HistorialPrecioCostoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a HistorialPrecioCosto.
     * @param {HistorialPrecioCostoCreateArgs} args - Arguments to create a HistorialPrecioCosto.
     * @example
     * // Create one HistorialPrecioCosto
     * const HistorialPrecioCosto = await prisma.historialPrecioCosto.create({
     *   data: {
     *     // ... data to create a HistorialPrecioCosto
     *   }
     * })
     * 
     */
    create<T extends HistorialPrecioCostoCreateArgs>(args: SelectSubset<T, HistorialPrecioCostoCreateArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many HistorialPrecioCostos.
     * @param {HistorialPrecioCostoCreateManyArgs} args - Arguments to create many HistorialPrecioCostos.
     * @example
     * // Create many HistorialPrecioCostos
     * const historialPrecioCosto = await prisma.historialPrecioCosto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialPrecioCostoCreateManyArgs>(args?: SelectSubset<T, HistorialPrecioCostoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialPrecioCostos and returns the data saved in the database.
     * @param {HistorialPrecioCostoCreateManyAndReturnArgs} args - Arguments to create many HistorialPrecioCostos.
     * @example
     * // Create many HistorialPrecioCostos
     * const historialPrecioCosto = await prisma.historialPrecioCosto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialPrecioCostos and only return the `id`
     * const historialPrecioCostoWithIdOnly = await prisma.historialPrecioCosto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialPrecioCostoCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialPrecioCostoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a HistorialPrecioCosto.
     * @param {HistorialPrecioCostoDeleteArgs} args - Arguments to delete one HistorialPrecioCosto.
     * @example
     * // Delete one HistorialPrecioCosto
     * const HistorialPrecioCosto = await prisma.historialPrecioCosto.delete({
     *   where: {
     *     // ... filter to delete one HistorialPrecioCosto
     *   }
     * })
     * 
     */
    delete<T extends HistorialPrecioCostoDeleteArgs>(args: SelectSubset<T, HistorialPrecioCostoDeleteArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one HistorialPrecioCosto.
     * @param {HistorialPrecioCostoUpdateArgs} args - Arguments to update one HistorialPrecioCosto.
     * @example
     * // Update one HistorialPrecioCosto
     * const historialPrecioCosto = await prisma.historialPrecioCosto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialPrecioCostoUpdateArgs>(args: SelectSubset<T, HistorialPrecioCostoUpdateArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more HistorialPrecioCostos.
     * @param {HistorialPrecioCostoDeleteManyArgs} args - Arguments to filter HistorialPrecioCostos to delete.
     * @example
     * // Delete a few HistorialPrecioCostos
     * const { count } = await prisma.historialPrecioCosto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialPrecioCostoDeleteManyArgs>(args?: SelectSubset<T, HistorialPrecioCostoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialPrecioCostos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialPrecioCostos
     * const historialPrecioCosto = await prisma.historialPrecioCosto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialPrecioCostoUpdateManyArgs>(args: SelectSubset<T, HistorialPrecioCostoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialPrecioCosto.
     * @param {HistorialPrecioCostoUpsertArgs} args - Arguments to update or create a HistorialPrecioCosto.
     * @example
     * // Update or create a HistorialPrecioCosto
     * const historialPrecioCosto = await prisma.historialPrecioCosto.upsert({
     *   create: {
     *     // ... data to create a HistorialPrecioCosto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialPrecioCosto we want to update
     *   }
     * })
     */
    upsert<T extends HistorialPrecioCostoUpsertArgs>(args: SelectSubset<T, HistorialPrecioCostoUpsertArgs<ExtArgs>>): Prisma__HistorialPrecioCostoClient<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of HistorialPrecioCostos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoCountArgs} args - Arguments to filter HistorialPrecioCostos to count.
     * @example
     * // Count the number of HistorialPrecioCostos
     * const count = await prisma.historialPrecioCosto.count({
     *   where: {
     *     // ... the filter for the HistorialPrecioCostos we want to count
     *   }
     * })
    **/
    count<T extends HistorialPrecioCostoCountArgs>(
      args?: Subset<T, HistorialPrecioCostoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialPrecioCostoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialPrecioCosto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialPrecioCostoAggregateArgs>(args: Subset<T, HistorialPrecioCostoAggregateArgs>): Prisma.PrismaPromise<GetHistorialPrecioCostoAggregateType<T>>

    /**
     * Group by HistorialPrecioCosto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCostoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialPrecioCostoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialPrecioCostoGroupByArgs['orderBy'] }
        : { orderBy?: HistorialPrecioCostoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialPrecioCostoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialPrecioCostoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialPrecioCosto model
   */
  readonly fields: HistorialPrecioCostoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialPrecioCosto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialPrecioCostoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modificadoPor<T extends HistorialPrecioCosto$modificadoPorArgs<ExtArgs> = {}>(args?: Subset<T, HistorialPrecioCosto$modificadoPorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialPrecioCosto model
   */ 
  interface HistorialPrecioCostoFieldRefs {
    readonly id: FieldRef<"HistorialPrecioCosto", 'Int'>
    readonly productoId: FieldRef<"HistorialPrecioCosto", 'Int'>
    readonly precioCostoAnterior: FieldRef<"HistorialPrecioCosto", 'Float'>
    readonly precioCostoNuevo: FieldRef<"HistorialPrecioCosto", 'Float'>
    readonly fechaCambio: FieldRef<"HistorialPrecioCosto", 'DateTime'>
    readonly modificadoPorId: FieldRef<"HistorialPrecioCosto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * HistorialPrecioCosto findUnique
   */
  export type HistorialPrecioCostoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecioCosto to fetch.
     */
    where: HistorialPrecioCostoWhereUniqueInput
  }

  /**
   * HistorialPrecioCosto findUniqueOrThrow
   */
  export type HistorialPrecioCostoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecioCosto to fetch.
     */
    where: HistorialPrecioCostoWhereUniqueInput
  }

  /**
   * HistorialPrecioCosto findFirst
   */
  export type HistorialPrecioCostoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecioCosto to fetch.
     */
    where?: HistorialPrecioCostoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecioCostos to fetch.
     */
    orderBy?: HistorialPrecioCostoOrderByWithRelationInput | HistorialPrecioCostoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialPrecioCostos.
     */
    cursor?: HistorialPrecioCostoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecioCostos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecioCostos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialPrecioCostos.
     */
    distinct?: HistorialPrecioCostoScalarFieldEnum | HistorialPrecioCostoScalarFieldEnum[]
  }

  /**
   * HistorialPrecioCosto findFirstOrThrow
   */
  export type HistorialPrecioCostoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecioCosto to fetch.
     */
    where?: HistorialPrecioCostoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecioCostos to fetch.
     */
    orderBy?: HistorialPrecioCostoOrderByWithRelationInput | HistorialPrecioCostoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialPrecioCostos.
     */
    cursor?: HistorialPrecioCostoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecioCostos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecioCostos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialPrecioCostos.
     */
    distinct?: HistorialPrecioCostoScalarFieldEnum | HistorialPrecioCostoScalarFieldEnum[]
  }

  /**
   * HistorialPrecioCosto findMany
   */
  export type HistorialPrecioCostoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecioCostos to fetch.
     */
    where?: HistorialPrecioCostoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecioCostos to fetch.
     */
    orderBy?: HistorialPrecioCostoOrderByWithRelationInput | HistorialPrecioCostoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialPrecioCostos.
     */
    cursor?: HistorialPrecioCostoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecioCostos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecioCostos.
     */
    skip?: number
    distinct?: HistorialPrecioCostoScalarFieldEnum | HistorialPrecioCostoScalarFieldEnum[]
  }

  /**
   * HistorialPrecioCosto create
   */
  export type HistorialPrecioCostoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialPrecioCosto.
     */
    data: XOR<HistorialPrecioCostoCreateInput, HistorialPrecioCostoUncheckedCreateInput>
  }

  /**
   * HistorialPrecioCosto createMany
   */
  export type HistorialPrecioCostoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialPrecioCostos.
     */
    data: HistorialPrecioCostoCreateManyInput | HistorialPrecioCostoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialPrecioCosto createManyAndReturn
   */
  export type HistorialPrecioCostoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many HistorialPrecioCostos.
     */
    data: HistorialPrecioCostoCreateManyInput | HistorialPrecioCostoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialPrecioCosto update
   */
  export type HistorialPrecioCostoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialPrecioCosto.
     */
    data: XOR<HistorialPrecioCostoUpdateInput, HistorialPrecioCostoUncheckedUpdateInput>
    /**
     * Choose, which HistorialPrecioCosto to update.
     */
    where: HistorialPrecioCostoWhereUniqueInput
  }

  /**
   * HistorialPrecioCosto updateMany
   */
  export type HistorialPrecioCostoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialPrecioCostos.
     */
    data: XOR<HistorialPrecioCostoUpdateManyMutationInput, HistorialPrecioCostoUncheckedUpdateManyInput>
    /**
     * Filter which HistorialPrecioCostos to update
     */
    where?: HistorialPrecioCostoWhereInput
  }

  /**
   * HistorialPrecioCosto upsert
   */
  export type HistorialPrecioCostoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialPrecioCosto to update in case it exists.
     */
    where: HistorialPrecioCostoWhereUniqueInput
    /**
     * In case the HistorialPrecioCosto found by the `where` argument doesn't exist, create a new HistorialPrecioCosto with this data.
     */
    create: XOR<HistorialPrecioCostoCreateInput, HistorialPrecioCostoUncheckedCreateInput>
    /**
     * In case the HistorialPrecioCosto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialPrecioCostoUpdateInput, HistorialPrecioCostoUncheckedUpdateInput>
  }

  /**
   * HistorialPrecioCosto delete
   */
  export type HistorialPrecioCostoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    /**
     * Filter which HistorialPrecioCosto to delete.
     */
    where: HistorialPrecioCostoWhereUniqueInput
  }

  /**
   * HistorialPrecioCosto deleteMany
   */
  export type HistorialPrecioCostoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialPrecioCostos to delete
     */
    where?: HistorialPrecioCostoWhereInput
  }

  /**
   * HistorialPrecioCosto.modificadoPor
   */
  export type HistorialPrecioCosto$modificadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * HistorialPrecioCosto without action
   */
  export type HistorialPrecioCostoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
  }


  /**
   * Model PrecioProducto
   */

  export type AggregatePrecioProducto = {
    _count: PrecioProductoCountAggregateOutputType | null
    _avg: PrecioProductoAvgAggregateOutputType | null
    _sum: PrecioProductoSumAggregateOutputType | null
    _min: PrecioProductoMinAggregateOutputType | null
    _max: PrecioProductoMaxAggregateOutputType | null
  }

  export type PrecioProductoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    precio: number | null
    creadoPorId: number | null
  }

  export type PrecioProductoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    precio: number | null
    creadoPorId: number | null
  }

  export type PrecioProductoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    precio: number | null
    creadoPorId: number | null
    fechaCreacion: Date | null
    estado: $Enums.EstadoPrecio | null
    usado: boolean | null
    tipo: $Enums.TipoPrecio | null
  }

  export type PrecioProductoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    precio: number | null
    creadoPorId: number | null
    fechaCreacion: Date | null
    estado: $Enums.EstadoPrecio | null
    usado: boolean | null
    tipo: $Enums.TipoPrecio | null
  }

  export type PrecioProductoCountAggregateOutputType = {
    id: number
    productoId: number
    precio: number
    creadoPorId: number
    fechaCreacion: number
    estado: number
    usado: number
    tipo: number
    _all: number
  }


  export type PrecioProductoAvgAggregateInputType = {
    id?: true
    productoId?: true
    precio?: true
    creadoPorId?: true
  }

  export type PrecioProductoSumAggregateInputType = {
    id?: true
    productoId?: true
    precio?: true
    creadoPorId?: true
  }

  export type PrecioProductoMinAggregateInputType = {
    id?: true
    productoId?: true
    precio?: true
    creadoPorId?: true
    fechaCreacion?: true
    estado?: true
    usado?: true
    tipo?: true
  }

  export type PrecioProductoMaxAggregateInputType = {
    id?: true
    productoId?: true
    precio?: true
    creadoPorId?: true
    fechaCreacion?: true
    estado?: true
    usado?: true
    tipo?: true
  }

  export type PrecioProductoCountAggregateInputType = {
    id?: true
    productoId?: true
    precio?: true
    creadoPorId?: true
    fechaCreacion?: true
    estado?: true
    usado?: true
    tipo?: true
    _all?: true
  }

  export type PrecioProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PrecioProducto to aggregate.
     */
    where?: PrecioProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecioProductos to fetch.
     */
    orderBy?: PrecioProductoOrderByWithRelationInput | PrecioProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PrecioProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecioProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecioProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PrecioProductos
    **/
    _count?: true | PrecioProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PrecioProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PrecioProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PrecioProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PrecioProductoMaxAggregateInputType
  }

  export type GetPrecioProductoAggregateType<T extends PrecioProductoAggregateArgs> = {
        [P in keyof T & keyof AggregatePrecioProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrecioProducto[P]>
      : GetScalarType<T[P], AggregatePrecioProducto[P]>
  }




  export type PrecioProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrecioProductoWhereInput
    orderBy?: PrecioProductoOrderByWithAggregationInput | PrecioProductoOrderByWithAggregationInput[]
    by: PrecioProductoScalarFieldEnum[] | PrecioProductoScalarFieldEnum
    having?: PrecioProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PrecioProductoCountAggregateInputType | true
    _avg?: PrecioProductoAvgAggregateInputType
    _sum?: PrecioProductoSumAggregateInputType
    _min?: PrecioProductoMinAggregateInputType
    _max?: PrecioProductoMaxAggregateInputType
  }

  export type PrecioProductoGroupByOutputType = {
    id: number
    productoId: number | null
    precio: number
    creadoPorId: number | null
    fechaCreacion: Date
    estado: $Enums.EstadoPrecio
    usado: boolean
    tipo: $Enums.TipoPrecio
    _count: PrecioProductoCountAggregateOutputType | null
    _avg: PrecioProductoAvgAggregateOutputType | null
    _sum: PrecioProductoSumAggregateOutputType | null
    _min: PrecioProductoMinAggregateOutputType | null
    _max: PrecioProductoMaxAggregateOutputType | null
  }

  type GetPrecioProductoGroupByPayload<T extends PrecioProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PrecioProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PrecioProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PrecioProductoGroupByOutputType[P]>
            : GetScalarType<T[P], PrecioProductoGroupByOutputType[P]>
        }
      >
    >


  export type PrecioProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precio?: boolean
    creadoPorId?: boolean
    fechaCreacion?: boolean
    estado?: boolean
    usado?: boolean
    tipo?: boolean
    producto?: boolean | PrecioProducto$productoArgs<ExtArgs>
    creadoPor?: boolean | PrecioProducto$creadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["precioProducto"]>

  export type PrecioProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precio?: boolean
    creadoPorId?: boolean
    fechaCreacion?: boolean
    estado?: boolean
    usado?: boolean
    tipo?: boolean
    producto?: boolean | PrecioProducto$productoArgs<ExtArgs>
    creadoPor?: boolean | PrecioProducto$creadoPorArgs<ExtArgs>
  }, ExtArgs["result"]["precioProducto"]>

  export type PrecioProductoSelectScalar = {
    id?: boolean
    productoId?: boolean
    precio?: boolean
    creadoPorId?: boolean
    fechaCreacion?: boolean
    estado?: boolean
    usado?: boolean
    tipo?: boolean
  }

  export type PrecioProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | PrecioProducto$productoArgs<ExtArgs>
    creadoPor?: boolean | PrecioProducto$creadoPorArgs<ExtArgs>
  }
  export type PrecioProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | PrecioProducto$productoArgs<ExtArgs>
    creadoPor?: boolean | PrecioProducto$creadoPorArgs<ExtArgs>
  }

  export type $PrecioProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PrecioProducto"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs> | null
      creadoPor: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number | null
      precio: number
      creadoPorId: number | null
      fechaCreacion: Date
      estado: $Enums.EstadoPrecio
      usado: boolean
      tipo: $Enums.TipoPrecio
    }, ExtArgs["result"]["precioProducto"]>
    composites: {}
  }

  type PrecioProductoGetPayload<S extends boolean | null | undefined | PrecioProductoDefaultArgs> = $Result.GetResult<Prisma.$PrecioProductoPayload, S>

  type PrecioProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PrecioProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PrecioProductoCountAggregateInputType | true
    }

  export interface PrecioProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PrecioProducto'], meta: { name: 'PrecioProducto' } }
    /**
     * Find zero or one PrecioProducto that matches the filter.
     * @param {PrecioProductoFindUniqueArgs} args - Arguments to find a PrecioProducto
     * @example
     * // Get one PrecioProducto
     * const precioProducto = await prisma.precioProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PrecioProductoFindUniqueArgs>(args: SelectSubset<T, PrecioProductoFindUniqueArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PrecioProducto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PrecioProductoFindUniqueOrThrowArgs} args - Arguments to find a PrecioProducto
     * @example
     * // Get one PrecioProducto
     * const precioProducto = await prisma.precioProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PrecioProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, PrecioProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PrecioProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoFindFirstArgs} args - Arguments to find a PrecioProducto
     * @example
     * // Get one PrecioProducto
     * const precioProducto = await prisma.precioProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PrecioProductoFindFirstArgs>(args?: SelectSubset<T, PrecioProductoFindFirstArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PrecioProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoFindFirstOrThrowArgs} args - Arguments to find a PrecioProducto
     * @example
     * // Get one PrecioProducto
     * const precioProducto = await prisma.precioProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PrecioProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, PrecioProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PrecioProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PrecioProductos
     * const precioProductos = await prisma.precioProducto.findMany()
     * 
     * // Get first 10 PrecioProductos
     * const precioProductos = await prisma.precioProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const precioProductoWithIdOnly = await prisma.precioProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PrecioProductoFindManyArgs>(args?: SelectSubset<T, PrecioProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PrecioProducto.
     * @param {PrecioProductoCreateArgs} args - Arguments to create a PrecioProducto.
     * @example
     * // Create one PrecioProducto
     * const PrecioProducto = await prisma.precioProducto.create({
     *   data: {
     *     // ... data to create a PrecioProducto
     *   }
     * })
     * 
     */
    create<T extends PrecioProductoCreateArgs>(args: SelectSubset<T, PrecioProductoCreateArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PrecioProductos.
     * @param {PrecioProductoCreateManyArgs} args - Arguments to create many PrecioProductos.
     * @example
     * // Create many PrecioProductos
     * const precioProducto = await prisma.precioProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PrecioProductoCreateManyArgs>(args?: SelectSubset<T, PrecioProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PrecioProductos and returns the data saved in the database.
     * @param {PrecioProductoCreateManyAndReturnArgs} args - Arguments to create many PrecioProductos.
     * @example
     * // Create many PrecioProductos
     * const precioProducto = await prisma.precioProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PrecioProductos and only return the `id`
     * const precioProductoWithIdOnly = await prisma.precioProducto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PrecioProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, PrecioProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PrecioProducto.
     * @param {PrecioProductoDeleteArgs} args - Arguments to delete one PrecioProducto.
     * @example
     * // Delete one PrecioProducto
     * const PrecioProducto = await prisma.precioProducto.delete({
     *   where: {
     *     // ... filter to delete one PrecioProducto
     *   }
     * })
     * 
     */
    delete<T extends PrecioProductoDeleteArgs>(args: SelectSubset<T, PrecioProductoDeleteArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PrecioProducto.
     * @param {PrecioProductoUpdateArgs} args - Arguments to update one PrecioProducto.
     * @example
     * // Update one PrecioProducto
     * const precioProducto = await prisma.precioProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PrecioProductoUpdateArgs>(args: SelectSubset<T, PrecioProductoUpdateArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PrecioProductos.
     * @param {PrecioProductoDeleteManyArgs} args - Arguments to filter PrecioProductos to delete.
     * @example
     * // Delete a few PrecioProductos
     * const { count } = await prisma.precioProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PrecioProductoDeleteManyArgs>(args?: SelectSubset<T, PrecioProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PrecioProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PrecioProductos
     * const precioProducto = await prisma.precioProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PrecioProductoUpdateManyArgs>(args: SelectSubset<T, PrecioProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PrecioProducto.
     * @param {PrecioProductoUpsertArgs} args - Arguments to update or create a PrecioProducto.
     * @example
     * // Update or create a PrecioProducto
     * const precioProducto = await prisma.precioProducto.upsert({
     *   create: {
     *     // ... data to create a PrecioProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PrecioProducto we want to update
     *   }
     * })
     */
    upsert<T extends PrecioProductoUpsertArgs>(args: SelectSubset<T, PrecioProductoUpsertArgs<ExtArgs>>): Prisma__PrecioProductoClient<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PrecioProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoCountArgs} args - Arguments to filter PrecioProductos to count.
     * @example
     * // Count the number of PrecioProductos
     * const count = await prisma.precioProducto.count({
     *   where: {
     *     // ... the filter for the PrecioProductos we want to count
     *   }
     * })
    **/
    count<T extends PrecioProductoCountArgs>(
      args?: Subset<T, PrecioProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PrecioProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PrecioProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PrecioProductoAggregateArgs>(args: Subset<T, PrecioProductoAggregateArgs>): Prisma.PrismaPromise<GetPrecioProductoAggregateType<T>>

    /**
     * Group by PrecioProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecioProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PrecioProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PrecioProductoGroupByArgs['orderBy'] }
        : { orderBy?: PrecioProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PrecioProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrecioProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PrecioProducto model
   */
  readonly fields: PrecioProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PrecioProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PrecioProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends PrecioProducto$productoArgs<ExtArgs> = {}>(args?: Subset<T, PrecioProducto$productoArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    creadoPor<T extends PrecioProducto$creadoPorArgs<ExtArgs> = {}>(args?: Subset<T, PrecioProducto$creadoPorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PrecioProducto model
   */ 
  interface PrecioProductoFieldRefs {
    readonly id: FieldRef<"PrecioProducto", 'Int'>
    readonly productoId: FieldRef<"PrecioProducto", 'Int'>
    readonly precio: FieldRef<"PrecioProducto", 'Float'>
    readonly creadoPorId: FieldRef<"PrecioProducto", 'Int'>
    readonly fechaCreacion: FieldRef<"PrecioProducto", 'DateTime'>
    readonly estado: FieldRef<"PrecioProducto", 'EstadoPrecio'>
    readonly usado: FieldRef<"PrecioProducto", 'Boolean'>
    readonly tipo: FieldRef<"PrecioProducto", 'TipoPrecio'>
  }
    

  // Custom InputTypes
  /**
   * PrecioProducto findUnique
   */
  export type PrecioProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * Filter, which PrecioProducto to fetch.
     */
    where: PrecioProductoWhereUniqueInput
  }

  /**
   * PrecioProducto findUniqueOrThrow
   */
  export type PrecioProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * Filter, which PrecioProducto to fetch.
     */
    where: PrecioProductoWhereUniqueInput
  }

  /**
   * PrecioProducto findFirst
   */
  export type PrecioProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * Filter, which PrecioProducto to fetch.
     */
    where?: PrecioProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecioProductos to fetch.
     */
    orderBy?: PrecioProductoOrderByWithRelationInput | PrecioProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PrecioProductos.
     */
    cursor?: PrecioProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecioProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecioProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PrecioProductos.
     */
    distinct?: PrecioProductoScalarFieldEnum | PrecioProductoScalarFieldEnum[]
  }

  /**
   * PrecioProducto findFirstOrThrow
   */
  export type PrecioProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * Filter, which PrecioProducto to fetch.
     */
    where?: PrecioProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecioProductos to fetch.
     */
    orderBy?: PrecioProductoOrderByWithRelationInput | PrecioProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PrecioProductos.
     */
    cursor?: PrecioProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecioProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecioProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PrecioProductos.
     */
    distinct?: PrecioProductoScalarFieldEnum | PrecioProductoScalarFieldEnum[]
  }

  /**
   * PrecioProducto findMany
   */
  export type PrecioProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * Filter, which PrecioProductos to fetch.
     */
    where?: PrecioProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecioProductos to fetch.
     */
    orderBy?: PrecioProductoOrderByWithRelationInput | PrecioProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PrecioProductos.
     */
    cursor?: PrecioProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecioProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecioProductos.
     */
    skip?: number
    distinct?: PrecioProductoScalarFieldEnum | PrecioProductoScalarFieldEnum[]
  }

  /**
   * PrecioProducto create
   */
  export type PrecioProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a PrecioProducto.
     */
    data: XOR<PrecioProductoCreateInput, PrecioProductoUncheckedCreateInput>
  }

  /**
   * PrecioProducto createMany
   */
  export type PrecioProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PrecioProductos.
     */
    data: PrecioProductoCreateManyInput | PrecioProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PrecioProducto createManyAndReturn
   */
  export type PrecioProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PrecioProductos.
     */
    data: PrecioProductoCreateManyInput | PrecioProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PrecioProducto update
   */
  export type PrecioProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a PrecioProducto.
     */
    data: XOR<PrecioProductoUpdateInput, PrecioProductoUncheckedUpdateInput>
    /**
     * Choose, which PrecioProducto to update.
     */
    where: PrecioProductoWhereUniqueInput
  }

  /**
   * PrecioProducto updateMany
   */
  export type PrecioProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PrecioProductos.
     */
    data: XOR<PrecioProductoUpdateManyMutationInput, PrecioProductoUncheckedUpdateManyInput>
    /**
     * Filter which PrecioProductos to update
     */
    where?: PrecioProductoWhereInput
  }

  /**
   * PrecioProducto upsert
   */
  export type PrecioProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the PrecioProducto to update in case it exists.
     */
    where: PrecioProductoWhereUniqueInput
    /**
     * In case the PrecioProducto found by the `where` argument doesn't exist, create a new PrecioProducto with this data.
     */
    create: XOR<PrecioProductoCreateInput, PrecioProductoUncheckedCreateInput>
    /**
     * In case the PrecioProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PrecioProductoUpdateInput, PrecioProductoUncheckedUpdateInput>
  }

  /**
   * PrecioProducto delete
   */
  export type PrecioProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    /**
     * Filter which PrecioProducto to delete.
     */
    where: PrecioProductoWhereUniqueInput
  }

  /**
   * PrecioProducto deleteMany
   */
  export type PrecioProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PrecioProductos to delete
     */
    where?: PrecioProductoWhereInput
  }

  /**
   * PrecioProducto.producto
   */
  export type PrecioProducto$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
  }

  /**
   * PrecioProducto.creadoPor
   */
  export type PrecioProducto$creadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * PrecioProducto without action
   */
  export type PrecioProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
  }


  /**
   * Model HistorialPrecio
   */

  export type AggregateHistorialPrecio = {
    _count: HistorialPrecioCountAggregateOutputType | null
    _avg: HistorialPrecioAvgAggregateOutputType | null
    _sum: HistorialPrecioSumAggregateOutputType | null
    _min: HistorialPrecioMinAggregateOutputType | null
    _max: HistorialPrecioMaxAggregateOutputType | null
  }

  export type HistorialPrecioAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioAnterior: number | null
    precioNuevo: number | null
  }

  export type HistorialPrecioSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioAnterior: number | null
    precioNuevo: number | null
  }

  export type HistorialPrecioMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioAnterior: number | null
    precioNuevo: number | null
    fechaCambio: Date | null
  }

  export type HistorialPrecioMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    precioAnterior: number | null
    precioNuevo: number | null
    fechaCambio: Date | null
  }

  export type HistorialPrecioCountAggregateOutputType = {
    id: number
    productoId: number
    precioAnterior: number
    precioNuevo: number
    fechaCambio: number
    _all: number
  }


  export type HistorialPrecioAvgAggregateInputType = {
    id?: true
    productoId?: true
    precioAnterior?: true
    precioNuevo?: true
  }

  export type HistorialPrecioSumAggregateInputType = {
    id?: true
    productoId?: true
    precioAnterior?: true
    precioNuevo?: true
  }

  export type HistorialPrecioMinAggregateInputType = {
    id?: true
    productoId?: true
    precioAnterior?: true
    precioNuevo?: true
    fechaCambio?: true
  }

  export type HistorialPrecioMaxAggregateInputType = {
    id?: true
    productoId?: true
    precioAnterior?: true
    precioNuevo?: true
    fechaCambio?: true
  }

  export type HistorialPrecioCountAggregateInputType = {
    id?: true
    productoId?: true
    precioAnterior?: true
    precioNuevo?: true
    fechaCambio?: true
    _all?: true
  }

  export type HistorialPrecioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialPrecio to aggregate.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialPrecios
    **/
    _count?: true | HistorialPrecioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialPrecioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialPrecioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialPrecioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialPrecioMaxAggregateInputType
  }

  export type GetHistorialPrecioAggregateType<T extends HistorialPrecioAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialPrecio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialPrecio[P]>
      : GetScalarType<T[P], AggregateHistorialPrecio[P]>
  }




  export type HistorialPrecioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithAggregationInput | HistorialPrecioOrderByWithAggregationInput[]
    by: HistorialPrecioScalarFieldEnum[] | HistorialPrecioScalarFieldEnum
    having?: HistorialPrecioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialPrecioCountAggregateInputType | true
    _avg?: HistorialPrecioAvgAggregateInputType
    _sum?: HistorialPrecioSumAggregateInputType
    _min?: HistorialPrecioMinAggregateInputType
    _max?: HistorialPrecioMaxAggregateInputType
  }

  export type HistorialPrecioGroupByOutputType = {
    id: number
    productoId: number
    precioAnterior: number
    precioNuevo: number
    fechaCambio: Date
    _count: HistorialPrecioCountAggregateOutputType | null
    _avg: HistorialPrecioAvgAggregateOutputType | null
    _sum: HistorialPrecioSumAggregateOutputType | null
    _min: HistorialPrecioMinAggregateOutputType | null
    _max: HistorialPrecioMaxAggregateOutputType | null
  }

  type GetHistorialPrecioGroupByPayload<T extends HistorialPrecioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialPrecioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialPrecioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialPrecioGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialPrecioGroupByOutputType[P]>
        }
      >
    >


  export type HistorialPrecioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precioAnterior?: boolean
    precioNuevo?: boolean
    fechaCambio?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecio"]>

  export type HistorialPrecioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    precioAnterior?: boolean
    precioNuevo?: boolean
    fechaCambio?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecio"]>

  export type HistorialPrecioSelectScalar = {
    id?: boolean
    productoId?: boolean
    precioAnterior?: boolean
    precioNuevo?: boolean
    fechaCambio?: boolean
  }

  export type HistorialPrecioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type HistorialPrecioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $HistorialPrecioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialPrecio"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      precioAnterior: number
      precioNuevo: number
      fechaCambio: Date
    }, ExtArgs["result"]["historialPrecio"]>
    composites: {}
  }

  type HistorialPrecioGetPayload<S extends boolean | null | undefined | HistorialPrecioDefaultArgs> = $Result.GetResult<Prisma.$HistorialPrecioPayload, S>

  type HistorialPrecioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HistorialPrecioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialPrecioCountAggregateInputType | true
    }

  export interface HistorialPrecioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialPrecio'], meta: { name: 'HistorialPrecio' } }
    /**
     * Find zero or one HistorialPrecio that matches the filter.
     * @param {HistorialPrecioFindUniqueArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialPrecioFindUniqueArgs>(args: SelectSubset<T, HistorialPrecioFindUniqueArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one HistorialPrecio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HistorialPrecioFindUniqueOrThrowArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialPrecioFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialPrecioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first HistorialPrecio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioFindFirstArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialPrecioFindFirstArgs>(args?: SelectSubset<T, HistorialPrecioFindFirstArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first HistorialPrecio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioFindFirstOrThrowArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialPrecioFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialPrecioFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more HistorialPrecios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialPrecios
     * const historialPrecios = await prisma.historialPrecio.findMany()
     * 
     * // Get first 10 HistorialPrecios
     * const historialPrecios = await prisma.historialPrecio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialPrecioWithIdOnly = await prisma.historialPrecio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialPrecioFindManyArgs>(args?: SelectSubset<T, HistorialPrecioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a HistorialPrecio.
     * @param {HistorialPrecioCreateArgs} args - Arguments to create a HistorialPrecio.
     * @example
     * // Create one HistorialPrecio
     * const HistorialPrecio = await prisma.historialPrecio.create({
     *   data: {
     *     // ... data to create a HistorialPrecio
     *   }
     * })
     * 
     */
    create<T extends HistorialPrecioCreateArgs>(args: SelectSubset<T, HistorialPrecioCreateArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many HistorialPrecios.
     * @param {HistorialPrecioCreateManyArgs} args - Arguments to create many HistorialPrecios.
     * @example
     * // Create many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialPrecioCreateManyArgs>(args?: SelectSubset<T, HistorialPrecioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialPrecios and returns the data saved in the database.
     * @param {HistorialPrecioCreateManyAndReturnArgs} args - Arguments to create many HistorialPrecios.
     * @example
     * // Create many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialPrecios and only return the `id`
     * const historialPrecioWithIdOnly = await prisma.historialPrecio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialPrecioCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialPrecioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a HistorialPrecio.
     * @param {HistorialPrecioDeleteArgs} args - Arguments to delete one HistorialPrecio.
     * @example
     * // Delete one HistorialPrecio
     * const HistorialPrecio = await prisma.historialPrecio.delete({
     *   where: {
     *     // ... filter to delete one HistorialPrecio
     *   }
     * })
     * 
     */
    delete<T extends HistorialPrecioDeleteArgs>(args: SelectSubset<T, HistorialPrecioDeleteArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one HistorialPrecio.
     * @param {HistorialPrecioUpdateArgs} args - Arguments to update one HistorialPrecio.
     * @example
     * // Update one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialPrecioUpdateArgs>(args: SelectSubset<T, HistorialPrecioUpdateArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more HistorialPrecios.
     * @param {HistorialPrecioDeleteManyArgs} args - Arguments to filter HistorialPrecios to delete.
     * @example
     * // Delete a few HistorialPrecios
     * const { count } = await prisma.historialPrecio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialPrecioDeleteManyArgs>(args?: SelectSubset<T, HistorialPrecioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialPrecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialPrecioUpdateManyArgs>(args: SelectSubset<T, HistorialPrecioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialPrecio.
     * @param {HistorialPrecioUpsertArgs} args - Arguments to update or create a HistorialPrecio.
     * @example
     * // Update or create a HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.upsert({
     *   create: {
     *     // ... data to create a HistorialPrecio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialPrecio we want to update
     *   }
     * })
     */
    upsert<T extends HistorialPrecioUpsertArgs>(args: SelectSubset<T, HistorialPrecioUpsertArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of HistorialPrecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCountArgs} args - Arguments to filter HistorialPrecios to count.
     * @example
     * // Count the number of HistorialPrecios
     * const count = await prisma.historialPrecio.count({
     *   where: {
     *     // ... the filter for the HistorialPrecios we want to count
     *   }
     * })
    **/
    count<T extends HistorialPrecioCountArgs>(
      args?: Subset<T, HistorialPrecioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialPrecioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialPrecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialPrecioAggregateArgs>(args: Subset<T, HistorialPrecioAggregateArgs>): Prisma.PrismaPromise<GetHistorialPrecioAggregateType<T>>

    /**
     * Group by HistorialPrecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialPrecioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialPrecioGroupByArgs['orderBy'] }
        : { orderBy?: HistorialPrecioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialPrecioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialPrecioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialPrecio model
   */
  readonly fields: HistorialPrecioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialPrecio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialPrecioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialPrecio model
   */ 
  interface HistorialPrecioFieldRefs {
    readonly id: FieldRef<"HistorialPrecio", 'Int'>
    readonly productoId: FieldRef<"HistorialPrecio", 'Int'>
    readonly precioAnterior: FieldRef<"HistorialPrecio", 'Float'>
    readonly precioNuevo: FieldRef<"HistorialPrecio", 'Float'>
    readonly fechaCambio: FieldRef<"HistorialPrecio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HistorialPrecio findUnique
   */
  export type HistorialPrecioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio findUniqueOrThrow
   */
  export type HistorialPrecioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio findFirst
   */
  export type HistorialPrecioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialPrecios.
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialPrecios.
     */
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * HistorialPrecio findFirstOrThrow
   */
  export type HistorialPrecioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialPrecios.
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialPrecios.
     */
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * HistorialPrecio findMany
   */
  export type HistorialPrecioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecios to fetch.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialPrecios.
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * HistorialPrecio create
   */
  export type HistorialPrecioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialPrecio.
     */
    data: XOR<HistorialPrecioCreateInput, HistorialPrecioUncheckedCreateInput>
  }

  /**
   * HistorialPrecio createMany
   */
  export type HistorialPrecioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialPrecios.
     */
    data: HistorialPrecioCreateManyInput | HistorialPrecioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialPrecio createManyAndReturn
   */
  export type HistorialPrecioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many HistorialPrecios.
     */
    data: HistorialPrecioCreateManyInput | HistorialPrecioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialPrecio update
   */
  export type HistorialPrecioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialPrecio.
     */
    data: XOR<HistorialPrecioUpdateInput, HistorialPrecioUncheckedUpdateInput>
    /**
     * Choose, which HistorialPrecio to update.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio updateMany
   */
  export type HistorialPrecioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialPrecios.
     */
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyInput>
    /**
     * Filter which HistorialPrecios to update
     */
    where?: HistorialPrecioWhereInput
  }

  /**
   * HistorialPrecio upsert
   */
  export type HistorialPrecioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialPrecio to update in case it exists.
     */
    where: HistorialPrecioWhereUniqueInput
    /**
     * In case the HistorialPrecio found by the `where` argument doesn't exist, create a new HistorialPrecio with this data.
     */
    create: XOR<HistorialPrecioCreateInput, HistorialPrecioUncheckedCreateInput>
    /**
     * In case the HistorialPrecio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialPrecioUpdateInput, HistorialPrecioUncheckedUpdateInput>
  }

  /**
   * HistorialPrecio delete
   */
  export type HistorialPrecioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter which HistorialPrecio to delete.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio deleteMany
   */
  export type HistorialPrecioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialPrecios to delete
     */
    where?: HistorialPrecioWhereInput
  }

  /**
   * HistorialPrecio without action
   */
  export type HistorialPrecioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
  }


  /**
   * Model AjusteStock
   */

  export type AggregateAjusteStock = {
    _count: AjusteStockCountAggregateOutputType | null
    _avg: AjusteStockAvgAggregateOutputType | null
    _sum: AjusteStockSumAggregateOutputType | null
    _min: AjusteStockMinAggregateOutputType | null
    _max: AjusteStockMaxAggregateOutputType | null
  }

  export type AjusteStockAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    stockId: number | null
    cantidadAjustada: number | null
    usuarioId: number | null
  }

  export type AjusteStockSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    stockId: number | null
    cantidadAjustada: number | null
    usuarioId: number | null
  }

  export type AjusteStockMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    stockId: number | null
    cantidadAjustada: number | null
    tipoAjuste: $Enums.TipoAjuste | null
    fechaHora: Date | null
    usuarioId: number | null
    descripcion: string | null
  }

  export type AjusteStockMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    stockId: number | null
    cantidadAjustada: number | null
    tipoAjuste: $Enums.TipoAjuste | null
    fechaHora: Date | null
    usuarioId: number | null
    descripcion: string | null
  }

  export type AjusteStockCountAggregateOutputType = {
    id: number
    productoId: number
    stockId: number
    cantidadAjustada: number
    tipoAjuste: number
    fechaHora: number
    usuarioId: number
    descripcion: number
    _all: number
  }


  export type AjusteStockAvgAggregateInputType = {
    id?: true
    productoId?: true
    stockId?: true
    cantidadAjustada?: true
    usuarioId?: true
  }

  export type AjusteStockSumAggregateInputType = {
    id?: true
    productoId?: true
    stockId?: true
    cantidadAjustada?: true
    usuarioId?: true
  }

  export type AjusteStockMinAggregateInputType = {
    id?: true
    productoId?: true
    stockId?: true
    cantidadAjustada?: true
    tipoAjuste?: true
    fechaHora?: true
    usuarioId?: true
    descripcion?: true
  }

  export type AjusteStockMaxAggregateInputType = {
    id?: true
    productoId?: true
    stockId?: true
    cantidadAjustada?: true
    tipoAjuste?: true
    fechaHora?: true
    usuarioId?: true
    descripcion?: true
  }

  export type AjusteStockCountAggregateInputType = {
    id?: true
    productoId?: true
    stockId?: true
    cantidadAjustada?: true
    tipoAjuste?: true
    fechaHora?: true
    usuarioId?: true
    descripcion?: true
    _all?: true
  }

  export type AjusteStockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AjusteStock to aggregate.
     */
    where?: AjusteStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AjusteStocks to fetch.
     */
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AjusteStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AjusteStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AjusteStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AjusteStocks
    **/
    _count?: true | AjusteStockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AjusteStockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AjusteStockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AjusteStockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AjusteStockMaxAggregateInputType
  }

  export type GetAjusteStockAggregateType<T extends AjusteStockAggregateArgs> = {
        [P in keyof T & keyof AggregateAjusteStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAjusteStock[P]>
      : GetScalarType<T[P], AggregateAjusteStock[P]>
  }




  export type AjusteStockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AjusteStockWhereInput
    orderBy?: AjusteStockOrderByWithAggregationInput | AjusteStockOrderByWithAggregationInput[]
    by: AjusteStockScalarFieldEnum[] | AjusteStockScalarFieldEnum
    having?: AjusteStockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AjusteStockCountAggregateInputType | true
    _avg?: AjusteStockAvgAggregateInputType
    _sum?: AjusteStockSumAggregateInputType
    _min?: AjusteStockMinAggregateInputType
    _max?: AjusteStockMaxAggregateInputType
  }

  export type AjusteStockGroupByOutputType = {
    id: number
    productoId: number
    stockId: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora: Date
    usuarioId: number | null
    descripcion: string | null
    _count: AjusteStockCountAggregateOutputType | null
    _avg: AjusteStockAvgAggregateOutputType | null
    _sum: AjusteStockSumAggregateOutputType | null
    _min: AjusteStockMinAggregateOutputType | null
    _max: AjusteStockMaxAggregateOutputType | null
  }

  type GetAjusteStockGroupByPayload<T extends AjusteStockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AjusteStockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AjusteStockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AjusteStockGroupByOutputType[P]>
            : GetScalarType<T[P], AjusteStockGroupByOutputType[P]>
        }
      >
    >


  export type AjusteStockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    stockId?: boolean
    cantidadAjustada?: boolean
    tipoAjuste?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    descripcion?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    stock?: boolean | AjusteStock$stockArgs<ExtArgs>
    usuario?: boolean | AjusteStock$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["ajusteStock"]>

  export type AjusteStockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    stockId?: boolean
    cantidadAjustada?: boolean
    tipoAjuste?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    descripcion?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    stock?: boolean | AjusteStock$stockArgs<ExtArgs>
    usuario?: boolean | AjusteStock$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["ajusteStock"]>

  export type AjusteStockSelectScalar = {
    id?: boolean
    productoId?: boolean
    stockId?: boolean
    cantidadAjustada?: boolean
    tipoAjuste?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    descripcion?: boolean
  }

  export type AjusteStockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    stock?: boolean | AjusteStock$stockArgs<ExtArgs>
    usuario?: boolean | AjusteStock$usuarioArgs<ExtArgs>
  }
  export type AjusteStockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    stock?: boolean | AjusteStock$stockArgs<ExtArgs>
    usuario?: boolean | AjusteStock$usuarioArgs<ExtArgs>
  }

  export type $AjusteStockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AjusteStock"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      stock: Prisma.$StockPayload<ExtArgs> | null
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      stockId: number | null
      cantidadAjustada: number
      tipoAjuste: $Enums.TipoAjuste
      fechaHora: Date
      usuarioId: number | null
      descripcion: string | null
    }, ExtArgs["result"]["ajusteStock"]>
    composites: {}
  }

  type AjusteStockGetPayload<S extends boolean | null | undefined | AjusteStockDefaultArgs> = $Result.GetResult<Prisma.$AjusteStockPayload, S>

  type AjusteStockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AjusteStockFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AjusteStockCountAggregateInputType | true
    }

  export interface AjusteStockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AjusteStock'], meta: { name: 'AjusteStock' } }
    /**
     * Find zero or one AjusteStock that matches the filter.
     * @param {AjusteStockFindUniqueArgs} args - Arguments to find a AjusteStock
     * @example
     * // Get one AjusteStock
     * const ajusteStock = await prisma.ajusteStock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AjusteStockFindUniqueArgs>(args: SelectSubset<T, AjusteStockFindUniqueArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AjusteStock that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AjusteStockFindUniqueOrThrowArgs} args - Arguments to find a AjusteStock
     * @example
     * // Get one AjusteStock
     * const ajusteStock = await prisma.ajusteStock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AjusteStockFindUniqueOrThrowArgs>(args: SelectSubset<T, AjusteStockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AjusteStock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockFindFirstArgs} args - Arguments to find a AjusteStock
     * @example
     * // Get one AjusteStock
     * const ajusteStock = await prisma.ajusteStock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AjusteStockFindFirstArgs>(args?: SelectSubset<T, AjusteStockFindFirstArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AjusteStock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockFindFirstOrThrowArgs} args - Arguments to find a AjusteStock
     * @example
     * // Get one AjusteStock
     * const ajusteStock = await prisma.ajusteStock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AjusteStockFindFirstOrThrowArgs>(args?: SelectSubset<T, AjusteStockFindFirstOrThrowArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AjusteStocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AjusteStocks
     * const ajusteStocks = await prisma.ajusteStock.findMany()
     * 
     * // Get first 10 AjusteStocks
     * const ajusteStocks = await prisma.ajusteStock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ajusteStockWithIdOnly = await prisma.ajusteStock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AjusteStockFindManyArgs>(args?: SelectSubset<T, AjusteStockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AjusteStock.
     * @param {AjusteStockCreateArgs} args - Arguments to create a AjusteStock.
     * @example
     * // Create one AjusteStock
     * const AjusteStock = await prisma.ajusteStock.create({
     *   data: {
     *     // ... data to create a AjusteStock
     *   }
     * })
     * 
     */
    create<T extends AjusteStockCreateArgs>(args: SelectSubset<T, AjusteStockCreateArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AjusteStocks.
     * @param {AjusteStockCreateManyArgs} args - Arguments to create many AjusteStocks.
     * @example
     * // Create many AjusteStocks
     * const ajusteStock = await prisma.ajusteStock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AjusteStockCreateManyArgs>(args?: SelectSubset<T, AjusteStockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AjusteStocks and returns the data saved in the database.
     * @param {AjusteStockCreateManyAndReturnArgs} args - Arguments to create many AjusteStocks.
     * @example
     * // Create many AjusteStocks
     * const ajusteStock = await prisma.ajusteStock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AjusteStocks and only return the `id`
     * const ajusteStockWithIdOnly = await prisma.ajusteStock.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AjusteStockCreateManyAndReturnArgs>(args?: SelectSubset<T, AjusteStockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AjusteStock.
     * @param {AjusteStockDeleteArgs} args - Arguments to delete one AjusteStock.
     * @example
     * // Delete one AjusteStock
     * const AjusteStock = await prisma.ajusteStock.delete({
     *   where: {
     *     // ... filter to delete one AjusteStock
     *   }
     * })
     * 
     */
    delete<T extends AjusteStockDeleteArgs>(args: SelectSubset<T, AjusteStockDeleteArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AjusteStock.
     * @param {AjusteStockUpdateArgs} args - Arguments to update one AjusteStock.
     * @example
     * // Update one AjusteStock
     * const ajusteStock = await prisma.ajusteStock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AjusteStockUpdateArgs>(args: SelectSubset<T, AjusteStockUpdateArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AjusteStocks.
     * @param {AjusteStockDeleteManyArgs} args - Arguments to filter AjusteStocks to delete.
     * @example
     * // Delete a few AjusteStocks
     * const { count } = await prisma.ajusteStock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AjusteStockDeleteManyArgs>(args?: SelectSubset<T, AjusteStockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AjusteStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AjusteStocks
     * const ajusteStock = await prisma.ajusteStock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AjusteStockUpdateManyArgs>(args: SelectSubset<T, AjusteStockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AjusteStock.
     * @param {AjusteStockUpsertArgs} args - Arguments to update or create a AjusteStock.
     * @example
     * // Update or create a AjusteStock
     * const ajusteStock = await prisma.ajusteStock.upsert({
     *   create: {
     *     // ... data to create a AjusteStock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AjusteStock we want to update
     *   }
     * })
     */
    upsert<T extends AjusteStockUpsertArgs>(args: SelectSubset<T, AjusteStockUpsertArgs<ExtArgs>>): Prisma__AjusteStockClient<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AjusteStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockCountArgs} args - Arguments to filter AjusteStocks to count.
     * @example
     * // Count the number of AjusteStocks
     * const count = await prisma.ajusteStock.count({
     *   where: {
     *     // ... the filter for the AjusteStocks we want to count
     *   }
     * })
    **/
    count<T extends AjusteStockCountArgs>(
      args?: Subset<T, AjusteStockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AjusteStockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AjusteStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AjusteStockAggregateArgs>(args: Subset<T, AjusteStockAggregateArgs>): Prisma.PrismaPromise<GetAjusteStockAggregateType<T>>

    /**
     * Group by AjusteStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AjusteStockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AjusteStockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AjusteStockGroupByArgs['orderBy'] }
        : { orderBy?: AjusteStockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AjusteStockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAjusteStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AjusteStock model
   */
  readonly fields: AjusteStockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AjusteStock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AjusteStockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    stock<T extends AjusteStock$stockArgs<ExtArgs> = {}>(args?: Subset<T, AjusteStock$stockArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    usuario<T extends AjusteStock$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, AjusteStock$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AjusteStock model
   */ 
  interface AjusteStockFieldRefs {
    readonly id: FieldRef<"AjusteStock", 'Int'>
    readonly productoId: FieldRef<"AjusteStock", 'Int'>
    readonly stockId: FieldRef<"AjusteStock", 'Int'>
    readonly cantidadAjustada: FieldRef<"AjusteStock", 'Int'>
    readonly tipoAjuste: FieldRef<"AjusteStock", 'TipoAjuste'>
    readonly fechaHora: FieldRef<"AjusteStock", 'DateTime'>
    readonly usuarioId: FieldRef<"AjusteStock", 'Int'>
    readonly descripcion: FieldRef<"AjusteStock", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AjusteStock findUnique
   */
  export type AjusteStockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * Filter, which AjusteStock to fetch.
     */
    where: AjusteStockWhereUniqueInput
  }

  /**
   * AjusteStock findUniqueOrThrow
   */
  export type AjusteStockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * Filter, which AjusteStock to fetch.
     */
    where: AjusteStockWhereUniqueInput
  }

  /**
   * AjusteStock findFirst
   */
  export type AjusteStockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * Filter, which AjusteStock to fetch.
     */
    where?: AjusteStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AjusteStocks to fetch.
     */
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AjusteStocks.
     */
    cursor?: AjusteStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AjusteStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AjusteStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AjusteStocks.
     */
    distinct?: AjusteStockScalarFieldEnum | AjusteStockScalarFieldEnum[]
  }

  /**
   * AjusteStock findFirstOrThrow
   */
  export type AjusteStockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * Filter, which AjusteStock to fetch.
     */
    where?: AjusteStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AjusteStocks to fetch.
     */
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AjusteStocks.
     */
    cursor?: AjusteStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AjusteStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AjusteStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AjusteStocks.
     */
    distinct?: AjusteStockScalarFieldEnum | AjusteStockScalarFieldEnum[]
  }

  /**
   * AjusteStock findMany
   */
  export type AjusteStockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * Filter, which AjusteStocks to fetch.
     */
    where?: AjusteStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AjusteStocks to fetch.
     */
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AjusteStocks.
     */
    cursor?: AjusteStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AjusteStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AjusteStocks.
     */
    skip?: number
    distinct?: AjusteStockScalarFieldEnum | AjusteStockScalarFieldEnum[]
  }

  /**
   * AjusteStock create
   */
  export type AjusteStockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * The data needed to create a AjusteStock.
     */
    data: XOR<AjusteStockCreateInput, AjusteStockUncheckedCreateInput>
  }

  /**
   * AjusteStock createMany
   */
  export type AjusteStockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AjusteStocks.
     */
    data: AjusteStockCreateManyInput | AjusteStockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AjusteStock createManyAndReturn
   */
  export type AjusteStockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AjusteStocks.
     */
    data: AjusteStockCreateManyInput | AjusteStockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AjusteStock update
   */
  export type AjusteStockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * The data needed to update a AjusteStock.
     */
    data: XOR<AjusteStockUpdateInput, AjusteStockUncheckedUpdateInput>
    /**
     * Choose, which AjusteStock to update.
     */
    where: AjusteStockWhereUniqueInput
  }

  /**
   * AjusteStock updateMany
   */
  export type AjusteStockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AjusteStocks.
     */
    data: XOR<AjusteStockUpdateManyMutationInput, AjusteStockUncheckedUpdateManyInput>
    /**
     * Filter which AjusteStocks to update
     */
    where?: AjusteStockWhereInput
  }

  /**
   * AjusteStock upsert
   */
  export type AjusteStockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * The filter to search for the AjusteStock to update in case it exists.
     */
    where: AjusteStockWhereUniqueInput
    /**
     * In case the AjusteStock found by the `where` argument doesn't exist, create a new AjusteStock with this data.
     */
    create: XOR<AjusteStockCreateInput, AjusteStockUncheckedCreateInput>
    /**
     * In case the AjusteStock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AjusteStockUpdateInput, AjusteStockUncheckedUpdateInput>
  }

  /**
   * AjusteStock delete
   */
  export type AjusteStockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    /**
     * Filter which AjusteStock to delete.
     */
    where: AjusteStockWhereUniqueInput
  }

  /**
   * AjusteStock deleteMany
   */
  export type AjusteStockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AjusteStocks to delete
     */
    where?: AjusteStockWhereInput
  }

  /**
   * AjusteStock.stock
   */
  export type AjusteStock$stockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
  }

  /**
   * AjusteStock.usuario
   */
  export type AjusteStock$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * AjusteStock without action
   */
  export type AjusteStockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
  }


  /**
   * Model EliminacionStock
   */

  export type AggregateEliminacionStock = {
    _count: EliminacionStockCountAggregateOutputType | null
    _avg: EliminacionStockAvgAggregateOutputType | null
    _sum: EliminacionStockSumAggregateOutputType | null
    _min: EliminacionStockMinAggregateOutputType | null
    _max: EliminacionStockMaxAggregateOutputType | null
  }

  export type EliminacionStockAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    usuarioId: number | null
    sucursalId: number | null
  }

  export type EliminacionStockSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    usuarioId: number | null
    sucursalId: number | null
  }

  export type EliminacionStockMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    fechaHora: Date | null
    usuarioId: number | null
    sucursalId: number | null
    motivo: string | null
  }

  export type EliminacionStockMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    fechaHora: Date | null
    usuarioId: number | null
    sucursalId: number | null
    motivo: string | null
  }

  export type EliminacionStockCountAggregateOutputType = {
    id: number
    productoId: number
    fechaHora: number
    usuarioId: number
    sucursalId: number
    motivo: number
    _all: number
  }


  export type EliminacionStockAvgAggregateInputType = {
    id?: true
    productoId?: true
    usuarioId?: true
    sucursalId?: true
  }

  export type EliminacionStockSumAggregateInputType = {
    id?: true
    productoId?: true
    usuarioId?: true
    sucursalId?: true
  }

  export type EliminacionStockMinAggregateInputType = {
    id?: true
    productoId?: true
    fechaHora?: true
    usuarioId?: true
    sucursalId?: true
    motivo?: true
  }

  export type EliminacionStockMaxAggregateInputType = {
    id?: true
    productoId?: true
    fechaHora?: true
    usuarioId?: true
    sucursalId?: true
    motivo?: true
  }

  export type EliminacionStockCountAggregateInputType = {
    id?: true
    productoId?: true
    fechaHora?: true
    usuarioId?: true
    sucursalId?: true
    motivo?: true
    _all?: true
  }

  export type EliminacionStockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EliminacionStock to aggregate.
     */
    where?: EliminacionStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionStocks to fetch.
     */
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EliminacionStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EliminacionStocks
    **/
    _count?: true | EliminacionStockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EliminacionStockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EliminacionStockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EliminacionStockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EliminacionStockMaxAggregateInputType
  }

  export type GetEliminacionStockAggregateType<T extends EliminacionStockAggregateArgs> = {
        [P in keyof T & keyof AggregateEliminacionStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEliminacionStock[P]>
      : GetScalarType<T[P], AggregateEliminacionStock[P]>
  }




  export type EliminacionStockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionStockWhereInput
    orderBy?: EliminacionStockOrderByWithAggregationInput | EliminacionStockOrderByWithAggregationInput[]
    by: EliminacionStockScalarFieldEnum[] | EliminacionStockScalarFieldEnum
    having?: EliminacionStockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EliminacionStockCountAggregateInputType | true
    _avg?: EliminacionStockAvgAggregateInputType
    _sum?: EliminacionStockSumAggregateInputType
    _min?: EliminacionStockMinAggregateInputType
    _max?: EliminacionStockMaxAggregateInputType
  }

  export type EliminacionStockGroupByOutputType = {
    id: number
    productoId: number
    fechaHora: Date
    usuarioId: number | null
    sucursalId: number | null
    motivo: string | null
    _count: EliminacionStockCountAggregateOutputType | null
    _avg: EliminacionStockAvgAggregateOutputType | null
    _sum: EliminacionStockSumAggregateOutputType | null
    _min: EliminacionStockMinAggregateOutputType | null
    _max: EliminacionStockMaxAggregateOutputType | null
  }

  type GetEliminacionStockGroupByPayload<T extends EliminacionStockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EliminacionStockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EliminacionStockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EliminacionStockGroupByOutputType[P]>
            : GetScalarType<T[P], EliminacionStockGroupByOutputType[P]>
        }
      >
    >


  export type EliminacionStockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    motivo?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionStock$usuarioArgs<ExtArgs>
    sucursal?: boolean | EliminacionStock$sucursalArgs<ExtArgs>
  }, ExtArgs["result"]["eliminacionStock"]>

  export type EliminacionStockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    motivo?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionStock$usuarioArgs<ExtArgs>
    sucursal?: boolean | EliminacionStock$sucursalArgs<ExtArgs>
  }, ExtArgs["result"]["eliminacionStock"]>

  export type EliminacionStockSelectScalar = {
    id?: boolean
    productoId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    motivo?: boolean
  }

  export type EliminacionStockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionStock$usuarioArgs<ExtArgs>
    sucursal?: boolean | EliminacionStock$sucursalArgs<ExtArgs>
  }
  export type EliminacionStockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionStock$usuarioArgs<ExtArgs>
    sucursal?: boolean | EliminacionStock$sucursalArgs<ExtArgs>
  }

  export type $EliminacionStockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EliminacionStock"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      fechaHora: Date
      usuarioId: number | null
      sucursalId: number | null
      motivo: string | null
    }, ExtArgs["result"]["eliminacionStock"]>
    composites: {}
  }

  type EliminacionStockGetPayload<S extends boolean | null | undefined | EliminacionStockDefaultArgs> = $Result.GetResult<Prisma.$EliminacionStockPayload, S>

  type EliminacionStockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EliminacionStockFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EliminacionStockCountAggregateInputType | true
    }

  export interface EliminacionStockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EliminacionStock'], meta: { name: 'EliminacionStock' } }
    /**
     * Find zero or one EliminacionStock that matches the filter.
     * @param {EliminacionStockFindUniqueArgs} args - Arguments to find a EliminacionStock
     * @example
     * // Get one EliminacionStock
     * const eliminacionStock = await prisma.eliminacionStock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EliminacionStockFindUniqueArgs>(args: SelectSubset<T, EliminacionStockFindUniqueArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EliminacionStock that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EliminacionStockFindUniqueOrThrowArgs} args - Arguments to find a EliminacionStock
     * @example
     * // Get one EliminacionStock
     * const eliminacionStock = await prisma.eliminacionStock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EliminacionStockFindUniqueOrThrowArgs>(args: SelectSubset<T, EliminacionStockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EliminacionStock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockFindFirstArgs} args - Arguments to find a EliminacionStock
     * @example
     * // Get one EliminacionStock
     * const eliminacionStock = await prisma.eliminacionStock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EliminacionStockFindFirstArgs>(args?: SelectSubset<T, EliminacionStockFindFirstArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EliminacionStock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockFindFirstOrThrowArgs} args - Arguments to find a EliminacionStock
     * @example
     * // Get one EliminacionStock
     * const eliminacionStock = await prisma.eliminacionStock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EliminacionStockFindFirstOrThrowArgs>(args?: SelectSubset<T, EliminacionStockFindFirstOrThrowArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EliminacionStocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EliminacionStocks
     * const eliminacionStocks = await prisma.eliminacionStock.findMany()
     * 
     * // Get first 10 EliminacionStocks
     * const eliminacionStocks = await prisma.eliminacionStock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eliminacionStockWithIdOnly = await prisma.eliminacionStock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EliminacionStockFindManyArgs>(args?: SelectSubset<T, EliminacionStockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EliminacionStock.
     * @param {EliminacionStockCreateArgs} args - Arguments to create a EliminacionStock.
     * @example
     * // Create one EliminacionStock
     * const EliminacionStock = await prisma.eliminacionStock.create({
     *   data: {
     *     // ... data to create a EliminacionStock
     *   }
     * })
     * 
     */
    create<T extends EliminacionStockCreateArgs>(args: SelectSubset<T, EliminacionStockCreateArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EliminacionStocks.
     * @param {EliminacionStockCreateManyArgs} args - Arguments to create many EliminacionStocks.
     * @example
     * // Create many EliminacionStocks
     * const eliminacionStock = await prisma.eliminacionStock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EliminacionStockCreateManyArgs>(args?: SelectSubset<T, EliminacionStockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EliminacionStocks and returns the data saved in the database.
     * @param {EliminacionStockCreateManyAndReturnArgs} args - Arguments to create many EliminacionStocks.
     * @example
     * // Create many EliminacionStocks
     * const eliminacionStock = await prisma.eliminacionStock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EliminacionStocks and only return the `id`
     * const eliminacionStockWithIdOnly = await prisma.eliminacionStock.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EliminacionStockCreateManyAndReturnArgs>(args?: SelectSubset<T, EliminacionStockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EliminacionStock.
     * @param {EliminacionStockDeleteArgs} args - Arguments to delete one EliminacionStock.
     * @example
     * // Delete one EliminacionStock
     * const EliminacionStock = await prisma.eliminacionStock.delete({
     *   where: {
     *     // ... filter to delete one EliminacionStock
     *   }
     * })
     * 
     */
    delete<T extends EliminacionStockDeleteArgs>(args: SelectSubset<T, EliminacionStockDeleteArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EliminacionStock.
     * @param {EliminacionStockUpdateArgs} args - Arguments to update one EliminacionStock.
     * @example
     * // Update one EliminacionStock
     * const eliminacionStock = await prisma.eliminacionStock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EliminacionStockUpdateArgs>(args: SelectSubset<T, EliminacionStockUpdateArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EliminacionStocks.
     * @param {EliminacionStockDeleteManyArgs} args - Arguments to filter EliminacionStocks to delete.
     * @example
     * // Delete a few EliminacionStocks
     * const { count } = await prisma.eliminacionStock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EliminacionStockDeleteManyArgs>(args?: SelectSubset<T, EliminacionStockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EliminacionStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EliminacionStocks
     * const eliminacionStock = await prisma.eliminacionStock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EliminacionStockUpdateManyArgs>(args: SelectSubset<T, EliminacionStockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EliminacionStock.
     * @param {EliminacionStockUpsertArgs} args - Arguments to update or create a EliminacionStock.
     * @example
     * // Update or create a EliminacionStock
     * const eliminacionStock = await prisma.eliminacionStock.upsert({
     *   create: {
     *     // ... data to create a EliminacionStock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EliminacionStock we want to update
     *   }
     * })
     */
    upsert<T extends EliminacionStockUpsertArgs>(args: SelectSubset<T, EliminacionStockUpsertArgs<ExtArgs>>): Prisma__EliminacionStockClient<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EliminacionStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockCountArgs} args - Arguments to filter EliminacionStocks to count.
     * @example
     * // Count the number of EliminacionStocks
     * const count = await prisma.eliminacionStock.count({
     *   where: {
     *     // ... the filter for the EliminacionStocks we want to count
     *   }
     * })
    **/
    count<T extends EliminacionStockCountArgs>(
      args?: Subset<T, EliminacionStockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EliminacionStockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EliminacionStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EliminacionStockAggregateArgs>(args: Subset<T, EliminacionStockAggregateArgs>): Prisma.PrismaPromise<GetEliminacionStockAggregateType<T>>

    /**
     * Group by EliminacionStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionStockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EliminacionStockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EliminacionStockGroupByArgs['orderBy'] }
        : { orderBy?: EliminacionStockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EliminacionStockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEliminacionStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EliminacionStock model
   */
  readonly fields: EliminacionStockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EliminacionStock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EliminacionStockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends EliminacionStock$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, EliminacionStock$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends EliminacionStock$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, EliminacionStock$sucursalArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EliminacionStock model
   */ 
  interface EliminacionStockFieldRefs {
    readonly id: FieldRef<"EliminacionStock", 'Int'>
    readonly productoId: FieldRef<"EliminacionStock", 'Int'>
    readonly fechaHora: FieldRef<"EliminacionStock", 'DateTime'>
    readonly usuarioId: FieldRef<"EliminacionStock", 'Int'>
    readonly sucursalId: FieldRef<"EliminacionStock", 'Int'>
    readonly motivo: FieldRef<"EliminacionStock", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EliminacionStock findUnique
   */
  export type EliminacionStockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionStock to fetch.
     */
    where: EliminacionStockWhereUniqueInput
  }

  /**
   * EliminacionStock findUniqueOrThrow
   */
  export type EliminacionStockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionStock to fetch.
     */
    where: EliminacionStockWhereUniqueInput
  }

  /**
   * EliminacionStock findFirst
   */
  export type EliminacionStockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionStock to fetch.
     */
    where?: EliminacionStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionStocks to fetch.
     */
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EliminacionStocks.
     */
    cursor?: EliminacionStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EliminacionStocks.
     */
    distinct?: EliminacionStockScalarFieldEnum | EliminacionStockScalarFieldEnum[]
  }

  /**
   * EliminacionStock findFirstOrThrow
   */
  export type EliminacionStockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionStock to fetch.
     */
    where?: EliminacionStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionStocks to fetch.
     */
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EliminacionStocks.
     */
    cursor?: EliminacionStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EliminacionStocks.
     */
    distinct?: EliminacionStockScalarFieldEnum | EliminacionStockScalarFieldEnum[]
  }

  /**
   * EliminacionStock findMany
   */
  export type EliminacionStockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionStocks to fetch.
     */
    where?: EliminacionStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionStocks to fetch.
     */
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EliminacionStocks.
     */
    cursor?: EliminacionStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionStocks.
     */
    skip?: number
    distinct?: EliminacionStockScalarFieldEnum | EliminacionStockScalarFieldEnum[]
  }

  /**
   * EliminacionStock create
   */
  export type EliminacionStockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * The data needed to create a EliminacionStock.
     */
    data: XOR<EliminacionStockCreateInput, EliminacionStockUncheckedCreateInput>
  }

  /**
   * EliminacionStock createMany
   */
  export type EliminacionStockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EliminacionStocks.
     */
    data: EliminacionStockCreateManyInput | EliminacionStockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EliminacionStock createManyAndReturn
   */
  export type EliminacionStockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EliminacionStocks.
     */
    data: EliminacionStockCreateManyInput | EliminacionStockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EliminacionStock update
   */
  export type EliminacionStockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * The data needed to update a EliminacionStock.
     */
    data: XOR<EliminacionStockUpdateInput, EliminacionStockUncheckedUpdateInput>
    /**
     * Choose, which EliminacionStock to update.
     */
    where: EliminacionStockWhereUniqueInput
  }

  /**
   * EliminacionStock updateMany
   */
  export type EliminacionStockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EliminacionStocks.
     */
    data: XOR<EliminacionStockUpdateManyMutationInput, EliminacionStockUncheckedUpdateManyInput>
    /**
     * Filter which EliminacionStocks to update
     */
    where?: EliminacionStockWhereInput
  }

  /**
   * EliminacionStock upsert
   */
  export type EliminacionStockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * The filter to search for the EliminacionStock to update in case it exists.
     */
    where: EliminacionStockWhereUniqueInput
    /**
     * In case the EliminacionStock found by the `where` argument doesn't exist, create a new EliminacionStock with this data.
     */
    create: XOR<EliminacionStockCreateInput, EliminacionStockUncheckedCreateInput>
    /**
     * In case the EliminacionStock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EliminacionStockUpdateInput, EliminacionStockUncheckedUpdateInput>
  }

  /**
   * EliminacionStock delete
   */
  export type EliminacionStockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    /**
     * Filter which EliminacionStock to delete.
     */
    where: EliminacionStockWhereUniqueInput
  }

  /**
   * EliminacionStock deleteMany
   */
  export type EliminacionStockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EliminacionStocks to delete
     */
    where?: EliminacionStockWhereInput
  }

  /**
   * EliminacionStock.usuario
   */
  export type EliminacionStock$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * EliminacionStock.sucursal
   */
  export type EliminacionStock$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    where?: SucursalWhereInput
  }

  /**
   * EliminacionStock without action
   */
  export type EliminacionStockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
  }


  /**
   * Model EliminacionProducto
   */

  export type AggregateEliminacionProducto = {
    _count: EliminacionProductoCountAggregateOutputType | null
    _avg: EliminacionProductoAvgAggregateOutputType | null
    _sum: EliminacionProductoSumAggregateOutputType | null
    _min: EliminacionProductoMinAggregateOutputType | null
    _max: EliminacionProductoMaxAggregateOutputType | null
  }

  export type EliminacionProductoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    usuarioId: number | null
  }

  export type EliminacionProductoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    usuarioId: number | null
  }

  export type EliminacionProductoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    fechaHora: Date | null
    usuarioId: number | null
    motivo: string | null
  }

  export type EliminacionProductoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    fechaHora: Date | null
    usuarioId: number | null
    motivo: string | null
  }

  export type EliminacionProductoCountAggregateOutputType = {
    id: number
    productoId: number
    fechaHora: number
    usuarioId: number
    motivo: number
    _all: number
  }


  export type EliminacionProductoAvgAggregateInputType = {
    id?: true
    productoId?: true
    usuarioId?: true
  }

  export type EliminacionProductoSumAggregateInputType = {
    id?: true
    productoId?: true
    usuarioId?: true
  }

  export type EliminacionProductoMinAggregateInputType = {
    id?: true
    productoId?: true
    fechaHora?: true
    usuarioId?: true
    motivo?: true
  }

  export type EliminacionProductoMaxAggregateInputType = {
    id?: true
    productoId?: true
    fechaHora?: true
    usuarioId?: true
    motivo?: true
  }

  export type EliminacionProductoCountAggregateInputType = {
    id?: true
    productoId?: true
    fechaHora?: true
    usuarioId?: true
    motivo?: true
    _all?: true
  }

  export type EliminacionProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EliminacionProducto to aggregate.
     */
    where?: EliminacionProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionProductos to fetch.
     */
    orderBy?: EliminacionProductoOrderByWithRelationInput | EliminacionProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EliminacionProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EliminacionProductos
    **/
    _count?: true | EliminacionProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EliminacionProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EliminacionProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EliminacionProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EliminacionProductoMaxAggregateInputType
  }

  export type GetEliminacionProductoAggregateType<T extends EliminacionProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateEliminacionProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEliminacionProducto[P]>
      : GetScalarType<T[P], AggregateEliminacionProducto[P]>
  }




  export type EliminacionProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionProductoWhereInput
    orderBy?: EliminacionProductoOrderByWithAggregationInput | EliminacionProductoOrderByWithAggregationInput[]
    by: EliminacionProductoScalarFieldEnum[] | EliminacionProductoScalarFieldEnum
    having?: EliminacionProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EliminacionProductoCountAggregateInputType | true
    _avg?: EliminacionProductoAvgAggregateInputType
    _sum?: EliminacionProductoSumAggregateInputType
    _min?: EliminacionProductoMinAggregateInputType
    _max?: EliminacionProductoMaxAggregateInputType
  }

  export type EliminacionProductoGroupByOutputType = {
    id: number
    productoId: number
    fechaHora: Date
    usuarioId: number | null
    motivo: string | null
    _count: EliminacionProductoCountAggregateOutputType | null
    _avg: EliminacionProductoAvgAggregateOutputType | null
    _sum: EliminacionProductoSumAggregateOutputType | null
    _min: EliminacionProductoMinAggregateOutputType | null
    _max: EliminacionProductoMaxAggregateOutputType | null
  }

  type GetEliminacionProductoGroupByPayload<T extends EliminacionProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EliminacionProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EliminacionProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EliminacionProductoGroupByOutputType[P]>
            : GetScalarType<T[P], EliminacionProductoGroupByOutputType[P]>
        }
      >
    >


  export type EliminacionProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    motivo?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionProducto$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["eliminacionProducto"]>

  export type EliminacionProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    motivo?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionProducto$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["eliminacionProducto"]>

  export type EliminacionProductoSelectScalar = {
    id?: boolean
    productoId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    motivo?: boolean
  }

  export type EliminacionProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionProducto$usuarioArgs<ExtArgs>
  }
  export type EliminacionProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionProducto$usuarioArgs<ExtArgs>
  }

  export type $EliminacionProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EliminacionProducto"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      fechaHora: Date
      usuarioId: number | null
      motivo: string | null
    }, ExtArgs["result"]["eliminacionProducto"]>
    composites: {}
  }

  type EliminacionProductoGetPayload<S extends boolean | null | undefined | EliminacionProductoDefaultArgs> = $Result.GetResult<Prisma.$EliminacionProductoPayload, S>

  type EliminacionProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EliminacionProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EliminacionProductoCountAggregateInputType | true
    }

  export interface EliminacionProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EliminacionProducto'], meta: { name: 'EliminacionProducto' } }
    /**
     * Find zero or one EliminacionProducto that matches the filter.
     * @param {EliminacionProductoFindUniqueArgs} args - Arguments to find a EliminacionProducto
     * @example
     * // Get one EliminacionProducto
     * const eliminacionProducto = await prisma.eliminacionProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EliminacionProductoFindUniqueArgs>(args: SelectSubset<T, EliminacionProductoFindUniqueArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EliminacionProducto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EliminacionProductoFindUniqueOrThrowArgs} args - Arguments to find a EliminacionProducto
     * @example
     * // Get one EliminacionProducto
     * const eliminacionProducto = await prisma.eliminacionProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EliminacionProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, EliminacionProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EliminacionProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoFindFirstArgs} args - Arguments to find a EliminacionProducto
     * @example
     * // Get one EliminacionProducto
     * const eliminacionProducto = await prisma.eliminacionProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EliminacionProductoFindFirstArgs>(args?: SelectSubset<T, EliminacionProductoFindFirstArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EliminacionProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoFindFirstOrThrowArgs} args - Arguments to find a EliminacionProducto
     * @example
     * // Get one EliminacionProducto
     * const eliminacionProducto = await prisma.eliminacionProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EliminacionProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, EliminacionProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EliminacionProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EliminacionProductos
     * const eliminacionProductos = await prisma.eliminacionProducto.findMany()
     * 
     * // Get first 10 EliminacionProductos
     * const eliminacionProductos = await prisma.eliminacionProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eliminacionProductoWithIdOnly = await prisma.eliminacionProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EliminacionProductoFindManyArgs>(args?: SelectSubset<T, EliminacionProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EliminacionProducto.
     * @param {EliminacionProductoCreateArgs} args - Arguments to create a EliminacionProducto.
     * @example
     * // Create one EliminacionProducto
     * const EliminacionProducto = await prisma.eliminacionProducto.create({
     *   data: {
     *     // ... data to create a EliminacionProducto
     *   }
     * })
     * 
     */
    create<T extends EliminacionProductoCreateArgs>(args: SelectSubset<T, EliminacionProductoCreateArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EliminacionProductos.
     * @param {EliminacionProductoCreateManyArgs} args - Arguments to create many EliminacionProductos.
     * @example
     * // Create many EliminacionProductos
     * const eliminacionProducto = await prisma.eliminacionProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EliminacionProductoCreateManyArgs>(args?: SelectSubset<T, EliminacionProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EliminacionProductos and returns the data saved in the database.
     * @param {EliminacionProductoCreateManyAndReturnArgs} args - Arguments to create many EliminacionProductos.
     * @example
     * // Create many EliminacionProductos
     * const eliminacionProducto = await prisma.eliminacionProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EliminacionProductos and only return the `id`
     * const eliminacionProductoWithIdOnly = await prisma.eliminacionProducto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EliminacionProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, EliminacionProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EliminacionProducto.
     * @param {EliminacionProductoDeleteArgs} args - Arguments to delete one EliminacionProducto.
     * @example
     * // Delete one EliminacionProducto
     * const EliminacionProducto = await prisma.eliminacionProducto.delete({
     *   where: {
     *     // ... filter to delete one EliminacionProducto
     *   }
     * })
     * 
     */
    delete<T extends EliminacionProductoDeleteArgs>(args: SelectSubset<T, EliminacionProductoDeleteArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EliminacionProducto.
     * @param {EliminacionProductoUpdateArgs} args - Arguments to update one EliminacionProducto.
     * @example
     * // Update one EliminacionProducto
     * const eliminacionProducto = await prisma.eliminacionProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EliminacionProductoUpdateArgs>(args: SelectSubset<T, EliminacionProductoUpdateArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EliminacionProductos.
     * @param {EliminacionProductoDeleteManyArgs} args - Arguments to filter EliminacionProductos to delete.
     * @example
     * // Delete a few EliminacionProductos
     * const { count } = await prisma.eliminacionProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EliminacionProductoDeleteManyArgs>(args?: SelectSubset<T, EliminacionProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EliminacionProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EliminacionProductos
     * const eliminacionProducto = await prisma.eliminacionProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EliminacionProductoUpdateManyArgs>(args: SelectSubset<T, EliminacionProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EliminacionProducto.
     * @param {EliminacionProductoUpsertArgs} args - Arguments to update or create a EliminacionProducto.
     * @example
     * // Update or create a EliminacionProducto
     * const eliminacionProducto = await prisma.eliminacionProducto.upsert({
     *   create: {
     *     // ... data to create a EliminacionProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EliminacionProducto we want to update
     *   }
     * })
     */
    upsert<T extends EliminacionProductoUpsertArgs>(args: SelectSubset<T, EliminacionProductoUpsertArgs<ExtArgs>>): Prisma__EliminacionProductoClient<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EliminacionProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoCountArgs} args - Arguments to filter EliminacionProductos to count.
     * @example
     * // Count the number of EliminacionProductos
     * const count = await prisma.eliminacionProducto.count({
     *   where: {
     *     // ... the filter for the EliminacionProductos we want to count
     *   }
     * })
    **/
    count<T extends EliminacionProductoCountArgs>(
      args?: Subset<T, EliminacionProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EliminacionProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EliminacionProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EliminacionProductoAggregateArgs>(args: Subset<T, EliminacionProductoAggregateArgs>): Prisma.PrismaPromise<GetEliminacionProductoAggregateType<T>>

    /**
     * Group by EliminacionProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EliminacionProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EliminacionProductoGroupByArgs['orderBy'] }
        : { orderBy?: EliminacionProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EliminacionProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEliminacionProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EliminacionProducto model
   */
  readonly fields: EliminacionProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EliminacionProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EliminacionProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends EliminacionProducto$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, EliminacionProducto$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EliminacionProducto model
   */ 
  interface EliminacionProductoFieldRefs {
    readonly id: FieldRef<"EliminacionProducto", 'Int'>
    readonly productoId: FieldRef<"EliminacionProducto", 'Int'>
    readonly fechaHora: FieldRef<"EliminacionProducto", 'DateTime'>
    readonly usuarioId: FieldRef<"EliminacionProducto", 'Int'>
    readonly motivo: FieldRef<"EliminacionProducto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EliminacionProducto findUnique
   */
  export type EliminacionProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionProducto to fetch.
     */
    where: EliminacionProductoWhereUniqueInput
  }

  /**
   * EliminacionProducto findUniqueOrThrow
   */
  export type EliminacionProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionProducto to fetch.
     */
    where: EliminacionProductoWhereUniqueInput
  }

  /**
   * EliminacionProducto findFirst
   */
  export type EliminacionProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionProducto to fetch.
     */
    where?: EliminacionProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionProductos to fetch.
     */
    orderBy?: EliminacionProductoOrderByWithRelationInput | EliminacionProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EliminacionProductos.
     */
    cursor?: EliminacionProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EliminacionProductos.
     */
    distinct?: EliminacionProductoScalarFieldEnum | EliminacionProductoScalarFieldEnum[]
  }

  /**
   * EliminacionProducto findFirstOrThrow
   */
  export type EliminacionProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionProducto to fetch.
     */
    where?: EliminacionProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionProductos to fetch.
     */
    orderBy?: EliminacionProductoOrderByWithRelationInput | EliminacionProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EliminacionProductos.
     */
    cursor?: EliminacionProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EliminacionProductos.
     */
    distinct?: EliminacionProductoScalarFieldEnum | EliminacionProductoScalarFieldEnum[]
  }

  /**
   * EliminacionProducto findMany
   */
  export type EliminacionProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionProductos to fetch.
     */
    where?: EliminacionProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionProductos to fetch.
     */
    orderBy?: EliminacionProductoOrderByWithRelationInput | EliminacionProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EliminacionProductos.
     */
    cursor?: EliminacionProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionProductos.
     */
    skip?: number
    distinct?: EliminacionProductoScalarFieldEnum | EliminacionProductoScalarFieldEnum[]
  }

  /**
   * EliminacionProducto create
   */
  export type EliminacionProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a EliminacionProducto.
     */
    data: XOR<EliminacionProductoCreateInput, EliminacionProductoUncheckedCreateInput>
  }

  /**
   * EliminacionProducto createMany
   */
  export type EliminacionProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EliminacionProductos.
     */
    data: EliminacionProductoCreateManyInput | EliminacionProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EliminacionProducto createManyAndReturn
   */
  export type EliminacionProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EliminacionProductos.
     */
    data: EliminacionProductoCreateManyInput | EliminacionProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EliminacionProducto update
   */
  export type EliminacionProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a EliminacionProducto.
     */
    data: XOR<EliminacionProductoUpdateInput, EliminacionProductoUncheckedUpdateInput>
    /**
     * Choose, which EliminacionProducto to update.
     */
    where: EliminacionProductoWhereUniqueInput
  }

  /**
   * EliminacionProducto updateMany
   */
  export type EliminacionProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EliminacionProductos.
     */
    data: XOR<EliminacionProductoUpdateManyMutationInput, EliminacionProductoUncheckedUpdateManyInput>
    /**
     * Filter which EliminacionProductos to update
     */
    where?: EliminacionProductoWhereInput
  }

  /**
   * EliminacionProducto upsert
   */
  export type EliminacionProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the EliminacionProducto to update in case it exists.
     */
    where: EliminacionProductoWhereUniqueInput
    /**
     * In case the EliminacionProducto found by the `where` argument doesn't exist, create a new EliminacionProducto with this data.
     */
    create: XOR<EliminacionProductoCreateInput, EliminacionProductoUncheckedCreateInput>
    /**
     * In case the EliminacionProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EliminacionProductoUpdateInput, EliminacionProductoUncheckedUpdateInput>
  }

  /**
   * EliminacionProducto delete
   */
  export type EliminacionProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    /**
     * Filter which EliminacionProducto to delete.
     */
    where: EliminacionProductoWhereUniqueInput
  }

  /**
   * EliminacionProducto deleteMany
   */
  export type EliminacionProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EliminacionProductos to delete
     */
    where?: EliminacionProductoWhereInput
  }

  /**
   * EliminacionProducto.usuario
   */
  export type EliminacionProducto$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * EliminacionProducto without action
   */
  export type EliminacionProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
  }


  /**
   * Model EliminacionCliente
   */

  export type AggregateEliminacionCliente = {
    _count: EliminacionClienteCountAggregateOutputType | null
    _avg: EliminacionClienteAvgAggregateOutputType | null
    _sum: EliminacionClienteSumAggregateOutputType | null
    _min: EliminacionClienteMinAggregateOutputType | null
    _max: EliminacionClienteMaxAggregateOutputType | null
  }

  export type EliminacionClienteAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
  }

  export type EliminacionClienteSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    usuarioId: number | null
  }

  export type EliminacionClienteMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    fechaHora: Date | null
    usuarioId: number | null
    motivo: string | null
  }

  export type EliminacionClienteMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    fechaHora: Date | null
    usuarioId: number | null
    motivo: string | null
  }

  export type EliminacionClienteCountAggregateOutputType = {
    id: number
    clienteId: number
    fechaHora: number
    usuarioId: number
    motivo: number
    _all: number
  }


  export type EliminacionClienteAvgAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
  }

  export type EliminacionClienteSumAggregateInputType = {
    id?: true
    clienteId?: true
    usuarioId?: true
  }

  export type EliminacionClienteMinAggregateInputType = {
    id?: true
    clienteId?: true
    fechaHora?: true
    usuarioId?: true
    motivo?: true
  }

  export type EliminacionClienteMaxAggregateInputType = {
    id?: true
    clienteId?: true
    fechaHora?: true
    usuarioId?: true
    motivo?: true
  }

  export type EliminacionClienteCountAggregateInputType = {
    id?: true
    clienteId?: true
    fechaHora?: true
    usuarioId?: true
    motivo?: true
    _all?: true
  }

  export type EliminacionClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EliminacionCliente to aggregate.
     */
    where?: EliminacionClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionClientes to fetch.
     */
    orderBy?: EliminacionClienteOrderByWithRelationInput | EliminacionClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EliminacionClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EliminacionClientes
    **/
    _count?: true | EliminacionClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EliminacionClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EliminacionClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EliminacionClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EliminacionClienteMaxAggregateInputType
  }

  export type GetEliminacionClienteAggregateType<T extends EliminacionClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateEliminacionCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEliminacionCliente[P]>
      : GetScalarType<T[P], AggregateEliminacionCliente[P]>
  }




  export type EliminacionClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EliminacionClienteWhereInput
    orderBy?: EliminacionClienteOrderByWithAggregationInput | EliminacionClienteOrderByWithAggregationInput[]
    by: EliminacionClienteScalarFieldEnum[] | EliminacionClienteScalarFieldEnum
    having?: EliminacionClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EliminacionClienteCountAggregateInputType | true
    _avg?: EliminacionClienteAvgAggregateInputType
    _sum?: EliminacionClienteSumAggregateInputType
    _min?: EliminacionClienteMinAggregateInputType
    _max?: EliminacionClienteMaxAggregateInputType
  }

  export type EliminacionClienteGroupByOutputType = {
    id: number
    clienteId: number
    fechaHora: Date
    usuarioId: number | null
    motivo: string | null
    _count: EliminacionClienteCountAggregateOutputType | null
    _avg: EliminacionClienteAvgAggregateOutputType | null
    _sum: EliminacionClienteSumAggregateOutputType | null
    _min: EliminacionClienteMinAggregateOutputType | null
    _max: EliminacionClienteMaxAggregateOutputType | null
  }

  type GetEliminacionClienteGroupByPayload<T extends EliminacionClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EliminacionClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EliminacionClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EliminacionClienteGroupByOutputType[P]>
            : GetScalarType<T[P], EliminacionClienteGroupByOutputType[P]>
        }
      >
    >


  export type EliminacionClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    motivo?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionCliente$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["eliminacionCliente"]>

  export type EliminacionClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    motivo?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionCliente$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["eliminacionCliente"]>

  export type EliminacionClienteSelectScalar = {
    id?: boolean
    clienteId?: boolean
    fechaHora?: boolean
    usuarioId?: boolean
    motivo?: boolean
  }

  export type EliminacionClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionCliente$usuarioArgs<ExtArgs>
  }
  export type EliminacionClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    usuario?: boolean | EliminacionCliente$usuarioArgs<ExtArgs>
  }

  export type $EliminacionClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EliminacionCliente"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      fechaHora: Date
      usuarioId: number | null
      motivo: string | null
    }, ExtArgs["result"]["eliminacionCliente"]>
    composites: {}
  }

  type EliminacionClienteGetPayload<S extends boolean | null | undefined | EliminacionClienteDefaultArgs> = $Result.GetResult<Prisma.$EliminacionClientePayload, S>

  type EliminacionClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EliminacionClienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EliminacionClienteCountAggregateInputType | true
    }

  export interface EliminacionClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EliminacionCliente'], meta: { name: 'EliminacionCliente' } }
    /**
     * Find zero or one EliminacionCliente that matches the filter.
     * @param {EliminacionClienteFindUniqueArgs} args - Arguments to find a EliminacionCliente
     * @example
     * // Get one EliminacionCliente
     * const eliminacionCliente = await prisma.eliminacionCliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EliminacionClienteFindUniqueArgs>(args: SelectSubset<T, EliminacionClienteFindUniqueArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EliminacionCliente that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EliminacionClienteFindUniqueOrThrowArgs} args - Arguments to find a EliminacionCliente
     * @example
     * // Get one EliminacionCliente
     * const eliminacionCliente = await prisma.eliminacionCliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EliminacionClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, EliminacionClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EliminacionCliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteFindFirstArgs} args - Arguments to find a EliminacionCliente
     * @example
     * // Get one EliminacionCliente
     * const eliminacionCliente = await prisma.eliminacionCliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EliminacionClienteFindFirstArgs>(args?: SelectSubset<T, EliminacionClienteFindFirstArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EliminacionCliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteFindFirstOrThrowArgs} args - Arguments to find a EliminacionCliente
     * @example
     * // Get one EliminacionCliente
     * const eliminacionCliente = await prisma.eliminacionCliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EliminacionClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, EliminacionClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EliminacionClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EliminacionClientes
     * const eliminacionClientes = await prisma.eliminacionCliente.findMany()
     * 
     * // Get first 10 EliminacionClientes
     * const eliminacionClientes = await prisma.eliminacionCliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eliminacionClienteWithIdOnly = await prisma.eliminacionCliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EliminacionClienteFindManyArgs>(args?: SelectSubset<T, EliminacionClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EliminacionCliente.
     * @param {EliminacionClienteCreateArgs} args - Arguments to create a EliminacionCliente.
     * @example
     * // Create one EliminacionCliente
     * const EliminacionCliente = await prisma.eliminacionCliente.create({
     *   data: {
     *     // ... data to create a EliminacionCliente
     *   }
     * })
     * 
     */
    create<T extends EliminacionClienteCreateArgs>(args: SelectSubset<T, EliminacionClienteCreateArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EliminacionClientes.
     * @param {EliminacionClienteCreateManyArgs} args - Arguments to create many EliminacionClientes.
     * @example
     * // Create many EliminacionClientes
     * const eliminacionCliente = await prisma.eliminacionCliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EliminacionClienteCreateManyArgs>(args?: SelectSubset<T, EliminacionClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EliminacionClientes and returns the data saved in the database.
     * @param {EliminacionClienteCreateManyAndReturnArgs} args - Arguments to create many EliminacionClientes.
     * @example
     * // Create many EliminacionClientes
     * const eliminacionCliente = await prisma.eliminacionCliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EliminacionClientes and only return the `id`
     * const eliminacionClienteWithIdOnly = await prisma.eliminacionCliente.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EliminacionClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, EliminacionClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EliminacionCliente.
     * @param {EliminacionClienteDeleteArgs} args - Arguments to delete one EliminacionCliente.
     * @example
     * // Delete one EliminacionCliente
     * const EliminacionCliente = await prisma.eliminacionCliente.delete({
     *   where: {
     *     // ... filter to delete one EliminacionCliente
     *   }
     * })
     * 
     */
    delete<T extends EliminacionClienteDeleteArgs>(args: SelectSubset<T, EliminacionClienteDeleteArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EliminacionCliente.
     * @param {EliminacionClienteUpdateArgs} args - Arguments to update one EliminacionCliente.
     * @example
     * // Update one EliminacionCliente
     * const eliminacionCliente = await prisma.eliminacionCliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EliminacionClienteUpdateArgs>(args: SelectSubset<T, EliminacionClienteUpdateArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EliminacionClientes.
     * @param {EliminacionClienteDeleteManyArgs} args - Arguments to filter EliminacionClientes to delete.
     * @example
     * // Delete a few EliminacionClientes
     * const { count } = await prisma.eliminacionCliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EliminacionClienteDeleteManyArgs>(args?: SelectSubset<T, EliminacionClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EliminacionClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EliminacionClientes
     * const eliminacionCliente = await prisma.eliminacionCliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EliminacionClienteUpdateManyArgs>(args: SelectSubset<T, EliminacionClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EliminacionCliente.
     * @param {EliminacionClienteUpsertArgs} args - Arguments to update or create a EliminacionCliente.
     * @example
     * // Update or create a EliminacionCliente
     * const eliminacionCliente = await prisma.eliminacionCliente.upsert({
     *   create: {
     *     // ... data to create a EliminacionCliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EliminacionCliente we want to update
     *   }
     * })
     */
    upsert<T extends EliminacionClienteUpsertArgs>(args: SelectSubset<T, EliminacionClienteUpsertArgs<ExtArgs>>): Prisma__EliminacionClienteClient<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EliminacionClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteCountArgs} args - Arguments to filter EliminacionClientes to count.
     * @example
     * // Count the number of EliminacionClientes
     * const count = await prisma.eliminacionCliente.count({
     *   where: {
     *     // ... the filter for the EliminacionClientes we want to count
     *   }
     * })
    **/
    count<T extends EliminacionClienteCountArgs>(
      args?: Subset<T, EliminacionClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EliminacionClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EliminacionCliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EliminacionClienteAggregateArgs>(args: Subset<T, EliminacionClienteAggregateArgs>): Prisma.PrismaPromise<GetEliminacionClienteAggregateType<T>>

    /**
     * Group by EliminacionCliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EliminacionClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EliminacionClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EliminacionClienteGroupByArgs['orderBy'] }
        : { orderBy?: EliminacionClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EliminacionClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEliminacionClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EliminacionCliente model
   */
  readonly fields: EliminacionClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EliminacionCliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EliminacionClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends EliminacionCliente$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, EliminacionCliente$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EliminacionCliente model
   */ 
  interface EliminacionClienteFieldRefs {
    readonly id: FieldRef<"EliminacionCliente", 'Int'>
    readonly clienteId: FieldRef<"EliminacionCliente", 'Int'>
    readonly fechaHora: FieldRef<"EliminacionCliente", 'DateTime'>
    readonly usuarioId: FieldRef<"EliminacionCliente", 'Int'>
    readonly motivo: FieldRef<"EliminacionCliente", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EliminacionCliente findUnique
   */
  export type EliminacionClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionCliente to fetch.
     */
    where: EliminacionClienteWhereUniqueInput
  }

  /**
   * EliminacionCliente findUniqueOrThrow
   */
  export type EliminacionClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionCliente to fetch.
     */
    where: EliminacionClienteWhereUniqueInput
  }

  /**
   * EliminacionCliente findFirst
   */
  export type EliminacionClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionCliente to fetch.
     */
    where?: EliminacionClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionClientes to fetch.
     */
    orderBy?: EliminacionClienteOrderByWithRelationInput | EliminacionClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EliminacionClientes.
     */
    cursor?: EliminacionClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EliminacionClientes.
     */
    distinct?: EliminacionClienteScalarFieldEnum | EliminacionClienteScalarFieldEnum[]
  }

  /**
   * EliminacionCliente findFirstOrThrow
   */
  export type EliminacionClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionCliente to fetch.
     */
    where?: EliminacionClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionClientes to fetch.
     */
    orderBy?: EliminacionClienteOrderByWithRelationInput | EliminacionClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EliminacionClientes.
     */
    cursor?: EliminacionClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EliminacionClientes.
     */
    distinct?: EliminacionClienteScalarFieldEnum | EliminacionClienteScalarFieldEnum[]
  }

  /**
   * EliminacionCliente findMany
   */
  export type EliminacionClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * Filter, which EliminacionClientes to fetch.
     */
    where?: EliminacionClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EliminacionClientes to fetch.
     */
    orderBy?: EliminacionClienteOrderByWithRelationInput | EliminacionClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EliminacionClientes.
     */
    cursor?: EliminacionClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EliminacionClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EliminacionClientes.
     */
    skip?: number
    distinct?: EliminacionClienteScalarFieldEnum | EliminacionClienteScalarFieldEnum[]
  }

  /**
   * EliminacionCliente create
   */
  export type EliminacionClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a EliminacionCliente.
     */
    data: XOR<EliminacionClienteCreateInput, EliminacionClienteUncheckedCreateInput>
  }

  /**
   * EliminacionCliente createMany
   */
  export type EliminacionClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EliminacionClientes.
     */
    data: EliminacionClienteCreateManyInput | EliminacionClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EliminacionCliente createManyAndReturn
   */
  export type EliminacionClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EliminacionClientes.
     */
    data: EliminacionClienteCreateManyInput | EliminacionClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EliminacionCliente update
   */
  export type EliminacionClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a EliminacionCliente.
     */
    data: XOR<EliminacionClienteUpdateInput, EliminacionClienteUncheckedUpdateInput>
    /**
     * Choose, which EliminacionCliente to update.
     */
    where: EliminacionClienteWhereUniqueInput
  }

  /**
   * EliminacionCliente updateMany
   */
  export type EliminacionClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EliminacionClientes.
     */
    data: XOR<EliminacionClienteUpdateManyMutationInput, EliminacionClienteUncheckedUpdateManyInput>
    /**
     * Filter which EliminacionClientes to update
     */
    where?: EliminacionClienteWhereInput
  }

  /**
   * EliminacionCliente upsert
   */
  export type EliminacionClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the EliminacionCliente to update in case it exists.
     */
    where: EliminacionClienteWhereUniqueInput
    /**
     * In case the EliminacionCliente found by the `where` argument doesn't exist, create a new EliminacionCliente with this data.
     */
    create: XOR<EliminacionClienteCreateInput, EliminacionClienteUncheckedCreateInput>
    /**
     * In case the EliminacionCliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EliminacionClienteUpdateInput, EliminacionClienteUncheckedUpdateInput>
  }

  /**
   * EliminacionCliente delete
   */
  export type EliminacionClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    /**
     * Filter which EliminacionCliente to delete.
     */
    where: EliminacionClienteWhereUniqueInput
  }

  /**
   * EliminacionCliente deleteMany
   */
  export type EliminacionClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EliminacionClientes to delete
     */
    where?: EliminacionClienteWhereInput
  }

  /**
   * EliminacionCliente.usuario
   */
  export type EliminacionCliente$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * EliminacionCliente without action
   */
  export type EliminacionClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
  }


  /**
   * Model Stock
   */

  export type AggregateStock = {
    _count: StockCountAggregateOutputType | null
    _avg: StockAvgAggregateOutputType | null
    _sum: StockSumAggregateOutputType | null
    _min: StockMinAggregateOutputType | null
    _max: StockMaxAggregateOutputType | null
  }

  export type StockAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    costoTotal: number | null
    precioCosto: number | null
    entregaStockId: number | null
    sucursalId: number | null
  }

  export type StockSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    costoTotal: number | null
    precioCosto: number | null
    entregaStockId: number | null
    sucursalId: number | null
  }

  export type StockMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    costoTotal: number | null
    creadoEn: Date | null
    fechaIngreso: Date | null
    fechaVencimiento: Date | null
    precioCosto: number | null
    entregaStockId: number | null
    sucursalId: number | null
  }

  export type StockMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    costoTotal: number | null
    creadoEn: Date | null
    fechaIngreso: Date | null
    fechaVencimiento: Date | null
    precioCosto: number | null
    entregaStockId: number | null
    sucursalId: number | null
  }

  export type StockCountAggregateOutputType = {
    id: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn: number
    fechaIngreso: number
    fechaVencimiento: number
    precioCosto: number
    entregaStockId: number
    sucursalId: number
    _all: number
  }


  export type StockAvgAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    costoTotal?: true
    precioCosto?: true
    entregaStockId?: true
    sucursalId?: true
  }

  export type StockSumAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    costoTotal?: true
    precioCosto?: true
    entregaStockId?: true
    sucursalId?: true
  }

  export type StockMinAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    costoTotal?: true
    creadoEn?: true
    fechaIngreso?: true
    fechaVencimiento?: true
    precioCosto?: true
    entregaStockId?: true
    sucursalId?: true
  }

  export type StockMaxAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    costoTotal?: true
    creadoEn?: true
    fechaIngreso?: true
    fechaVencimiento?: true
    precioCosto?: true
    entregaStockId?: true
    sucursalId?: true
  }

  export type StockCountAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    costoTotal?: true
    creadoEn?: true
    fechaIngreso?: true
    fechaVencimiento?: true
    precioCosto?: true
    entregaStockId?: true
    sucursalId?: true
    _all?: true
  }

  export type StockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stock to aggregate.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stocks
    **/
    _count?: true | StockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockMaxAggregateInputType
  }

  export type GetStockAggregateType<T extends StockAggregateArgs> = {
        [P in keyof T & keyof AggregateStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock[P]>
      : GetScalarType<T[P], AggregateStock[P]>
  }




  export type StockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
    orderBy?: StockOrderByWithAggregationInput | StockOrderByWithAggregationInput[]
    by: StockScalarFieldEnum[] | StockScalarFieldEnum
    having?: StockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockCountAggregateInputType | true
    _avg?: StockAvgAggregateInputType
    _sum?: StockSumAggregateInputType
    _min?: StockMinAggregateInputType
    _max?: StockMaxAggregateInputType
  }

  export type StockGroupByOutputType = {
    id: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn: Date
    fechaIngreso: Date
    fechaVencimiento: Date | null
    precioCosto: number
    entregaStockId: number | null
    sucursalId: number
    _count: StockCountAggregateOutputType | null
    _avg: StockAvgAggregateOutputType | null
    _sum: StockSumAggregateOutputType | null
    _min: StockMinAggregateOutputType | null
    _max: StockMaxAggregateOutputType | null
  }

  type GetStockGroupByPayload<T extends StockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockGroupByOutputType[P]>
            : GetScalarType<T[P], StockGroupByOutputType[P]>
        }
      >
    >


  export type StockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    costoTotal?: boolean
    creadoEn?: boolean
    fechaIngreso?: boolean
    fechaVencimiento?: boolean
    precioCosto?: boolean
    entregaStockId?: boolean
    sucursalId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    entregaStock?: boolean | Stock$entregaStockArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    Vencimiento?: boolean | Stock$VencimientoArgs<ExtArgs>
    AjusteStock?: boolean | Stock$AjusteStockArgs<ExtArgs>
    _count?: boolean | StockCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock"]>

  export type StockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    costoTotal?: boolean
    creadoEn?: boolean
    fechaIngreso?: boolean
    fechaVencimiento?: boolean
    precioCosto?: boolean
    entregaStockId?: boolean
    sucursalId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    entregaStock?: boolean | Stock$entregaStockArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock"]>

  export type StockSelectScalar = {
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    costoTotal?: boolean
    creadoEn?: boolean
    fechaIngreso?: boolean
    fechaVencimiento?: boolean
    precioCosto?: boolean
    entregaStockId?: boolean
    sucursalId?: boolean
  }

  export type StockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    entregaStock?: boolean | Stock$entregaStockArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    Vencimiento?: boolean | Stock$VencimientoArgs<ExtArgs>
    AjusteStock?: boolean | Stock$AjusteStockArgs<ExtArgs>
    _count?: boolean | StockCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    entregaStock?: boolean | Stock$entregaStockArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $StockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Stock"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      entregaStock: Prisma.$EntregaStockPayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      Vencimiento: Prisma.$VencimientoPayload<ExtArgs>[]
      AjusteStock: Prisma.$AjusteStockPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      cantidad: number
      costoTotal: number
      creadoEn: Date
      fechaIngreso: Date
      fechaVencimiento: Date | null
      precioCosto: number
      entregaStockId: number | null
      sucursalId: number
    }, ExtArgs["result"]["stock"]>
    composites: {}
  }

  type StockGetPayload<S extends boolean | null | undefined | StockDefaultArgs> = $Result.GetResult<Prisma.$StockPayload, S>

  type StockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StockFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StockCountAggregateInputType | true
    }

  export interface StockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Stock'], meta: { name: 'Stock' } }
    /**
     * Find zero or one Stock that matches the filter.
     * @param {StockFindUniqueArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockFindUniqueArgs>(args: SelectSubset<T, StockFindUniqueArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Stock that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StockFindUniqueOrThrowArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockFindUniqueOrThrowArgs>(args: SelectSubset<T, StockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Stock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockFindFirstArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockFindFirstArgs>(args?: SelectSubset<T, StockFindFirstArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Stock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockFindFirstOrThrowArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockFindFirstOrThrowArgs>(args?: SelectSubset<T, StockFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Stocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stocks
     * const stocks = await prisma.stock.findMany()
     * 
     * // Get first 10 Stocks
     * const stocks = await prisma.stock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockWithIdOnly = await prisma.stock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockFindManyArgs>(args?: SelectSubset<T, StockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Stock.
     * @param {StockCreateArgs} args - Arguments to create a Stock.
     * @example
     * // Create one Stock
     * const Stock = await prisma.stock.create({
     *   data: {
     *     // ... data to create a Stock
     *   }
     * })
     * 
     */
    create<T extends StockCreateArgs>(args: SelectSubset<T, StockCreateArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Stocks.
     * @param {StockCreateManyArgs} args - Arguments to create many Stocks.
     * @example
     * // Create many Stocks
     * const stock = await prisma.stock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockCreateManyArgs>(args?: SelectSubset<T, StockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stocks and returns the data saved in the database.
     * @param {StockCreateManyAndReturnArgs} args - Arguments to create many Stocks.
     * @example
     * // Create many Stocks
     * const stock = await prisma.stock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stocks and only return the `id`
     * const stockWithIdOnly = await prisma.stock.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockCreateManyAndReturnArgs>(args?: SelectSubset<T, StockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Stock.
     * @param {StockDeleteArgs} args - Arguments to delete one Stock.
     * @example
     * // Delete one Stock
     * const Stock = await prisma.stock.delete({
     *   where: {
     *     // ... filter to delete one Stock
     *   }
     * })
     * 
     */
    delete<T extends StockDeleteArgs>(args: SelectSubset<T, StockDeleteArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Stock.
     * @param {StockUpdateArgs} args - Arguments to update one Stock.
     * @example
     * // Update one Stock
     * const stock = await prisma.stock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockUpdateArgs>(args: SelectSubset<T, StockUpdateArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Stocks.
     * @param {StockDeleteManyArgs} args - Arguments to filter Stocks to delete.
     * @example
     * // Delete a few Stocks
     * const { count } = await prisma.stock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockDeleteManyArgs>(args?: SelectSubset<T, StockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stocks
     * const stock = await prisma.stock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockUpdateManyArgs>(args: SelectSubset<T, StockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Stock.
     * @param {StockUpsertArgs} args - Arguments to update or create a Stock.
     * @example
     * // Update or create a Stock
     * const stock = await prisma.stock.upsert({
     *   create: {
     *     // ... data to create a Stock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock we want to update
     *   }
     * })
     */
    upsert<T extends StockUpsertArgs>(args: SelectSubset<T, StockUpsertArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Stocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockCountArgs} args - Arguments to filter Stocks to count.
     * @example
     * // Count the number of Stocks
     * const count = await prisma.stock.count({
     *   where: {
     *     // ... the filter for the Stocks we want to count
     *   }
     * })
    **/
    count<T extends StockCountArgs>(
      args?: Subset<T, StockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockAggregateArgs>(args: Subset<T, StockAggregateArgs>): Prisma.PrismaPromise<GetStockAggregateType<T>>

    /**
     * Group by Stock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockGroupByArgs['orderBy'] }
        : { orderBy?: StockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Stock model
   */
  readonly fields: StockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Stock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    entregaStock<T extends Stock$entregaStockArgs<ExtArgs> = {}>(args?: Subset<T, Stock$entregaStockArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Vencimiento<T extends Stock$VencimientoArgs<ExtArgs> = {}>(args?: Subset<T, Stock$VencimientoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VencimientoPayload<ExtArgs>, T, "findMany"> | Null>
    AjusteStock<T extends Stock$AjusteStockArgs<ExtArgs> = {}>(args?: Subset<T, Stock$AjusteStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Stock model
   */ 
  interface StockFieldRefs {
    readonly id: FieldRef<"Stock", 'Int'>
    readonly productoId: FieldRef<"Stock", 'Int'>
    readonly cantidad: FieldRef<"Stock", 'Int'>
    readonly costoTotal: FieldRef<"Stock", 'Float'>
    readonly creadoEn: FieldRef<"Stock", 'DateTime'>
    readonly fechaIngreso: FieldRef<"Stock", 'DateTime'>
    readonly fechaVencimiento: FieldRef<"Stock", 'DateTime'>
    readonly precioCosto: FieldRef<"Stock", 'Float'>
    readonly entregaStockId: FieldRef<"Stock", 'Int'>
    readonly sucursalId: FieldRef<"Stock", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Stock findUnique
   */
  export type StockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock findUniqueOrThrow
   */
  export type StockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock findFirst
   */
  export type StockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stocks.
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stocks.
     */
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Stock findFirstOrThrow
   */
  export type StockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stocks.
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stocks.
     */
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Stock findMany
   */
  export type StockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stocks to fetch.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stocks.
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Stock create
   */
  export type StockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * The data needed to create a Stock.
     */
    data: XOR<StockCreateInput, StockUncheckedCreateInput>
  }

  /**
   * Stock createMany
   */
  export type StockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stocks.
     */
    data: StockCreateManyInput | StockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Stock createManyAndReturn
   */
  export type StockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Stocks.
     */
    data: StockCreateManyInput | StockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Stock update
   */
  export type StockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * The data needed to update a Stock.
     */
    data: XOR<StockUpdateInput, StockUncheckedUpdateInput>
    /**
     * Choose, which Stock to update.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock updateMany
   */
  export type StockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stocks.
     */
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyInput>
    /**
     * Filter which Stocks to update
     */
    where?: StockWhereInput
  }

  /**
   * Stock upsert
   */
  export type StockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * The filter to search for the Stock to update in case it exists.
     */
    where: StockWhereUniqueInput
    /**
     * In case the Stock found by the `where` argument doesn't exist, create a new Stock with this data.
     */
    create: XOR<StockCreateInput, StockUncheckedCreateInput>
    /**
     * In case the Stock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockUpdateInput, StockUncheckedUpdateInput>
  }

  /**
   * Stock delete
   */
  export type StockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter which Stock to delete.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock deleteMany
   */
  export type StockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stocks to delete
     */
    where?: StockWhereInput
  }

  /**
   * Stock.entregaStock
   */
  export type Stock$entregaStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    where?: EntregaStockWhereInput
  }

  /**
   * Stock.Vencimiento
   */
  export type Stock$VencimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vencimiento
     */
    select?: VencimientoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VencimientoInclude<ExtArgs> | null
    where?: VencimientoWhereInput
    orderBy?: VencimientoOrderByWithRelationInput | VencimientoOrderByWithRelationInput[]
    cursor?: VencimientoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VencimientoScalarFieldEnum | VencimientoScalarFieldEnum[]
  }

  /**
   * Stock.AjusteStock
   */
  export type Stock$AjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    where?: AjusteStockWhereInput
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    cursor?: AjusteStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AjusteStockScalarFieldEnum | AjusteStockScalarFieldEnum[]
  }

  /**
   * Stock without action
   */
  export type StockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
  }


  /**
   * Model Sucursal
   */

  export type AggregateSucursal = {
    _count: SucursalCountAggregateOutputType | null
    _avg: SucursalAvgAggregateOutputType | null
    _sum: SucursalSumAggregateOutputType | null
    _min: SucursalMinAggregateOutputType | null
    _max: SucursalMaxAggregateOutputType | null
  }

  export type SucursalAvgAggregateOutputType = {
    id: number | null
  }

  export type SucursalSumAggregateOutputType = {
    id: number | null
  }

  export type SucursalMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    direccion: string | null
    telefono: string | null
    pbx: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    tipoSucursal: $Enums.TipoSucursal | null
    estadoOperacion: boolean | null
  }

  export type SucursalMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    direccion: string | null
    telefono: string | null
    pbx: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    tipoSucursal: $Enums.TipoSucursal | null
    estadoOperacion: boolean | null
  }

  export type SucursalCountAggregateOutputType = {
    id: number
    nombre: number
    direccion: number
    telefono: number
    pbx: number
    creadoEn: number
    actualizadoEn: number
    tipoSucursal: number
    estadoOperacion: number
    _all: number
  }


  export type SucursalAvgAggregateInputType = {
    id?: true
  }

  export type SucursalSumAggregateInputType = {
    id?: true
  }

  export type SucursalMinAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    telefono?: true
    pbx?: true
    creadoEn?: true
    actualizadoEn?: true
    tipoSucursal?: true
    estadoOperacion?: true
  }

  export type SucursalMaxAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    telefono?: true
    pbx?: true
    creadoEn?: true
    actualizadoEn?: true
    tipoSucursal?: true
    estadoOperacion?: true
  }

  export type SucursalCountAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    telefono?: true
    pbx?: true
    creadoEn?: true
    actualizadoEn?: true
    tipoSucursal?: true
    estadoOperacion?: true
    _all?: true
  }

  export type SucursalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sucursal to aggregate.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sucursals
    **/
    _count?: true | SucursalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SucursalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SucursalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SucursalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SucursalMaxAggregateInputType
  }

  export type GetSucursalAggregateType<T extends SucursalAggregateArgs> = {
        [P in keyof T & keyof AggregateSucursal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSucursal[P]>
      : GetScalarType<T[P], AggregateSucursal[P]>
  }




  export type SucursalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SucursalWhereInput
    orderBy?: SucursalOrderByWithAggregationInput | SucursalOrderByWithAggregationInput[]
    by: SucursalScalarFieldEnum[] | SucursalScalarFieldEnum
    having?: SucursalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SucursalCountAggregateInputType | true
    _avg?: SucursalAvgAggregateInputType
    _sum?: SucursalSumAggregateInputType
    _min?: SucursalMinAggregateInputType
    _max?: SucursalMaxAggregateInputType
  }

  export type SucursalGroupByOutputType = {
    id: number
    nombre: string
    direccion: string | null
    telefono: string | null
    pbx: string | null
    creadoEn: Date
    actualizadoEn: Date
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion: boolean
    _count: SucursalCountAggregateOutputType | null
    _avg: SucursalAvgAggregateOutputType | null
    _sum: SucursalSumAggregateOutputType | null
    _min: SucursalMinAggregateOutputType | null
    _max: SucursalMaxAggregateOutputType | null
  }

  type GetSucursalGroupByPayload<T extends SucursalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SucursalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SucursalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SucursalGroupByOutputType[P]>
            : GetScalarType<T[P], SucursalGroupByOutputType[P]>
        }
      >
    >


  export type SucursalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    pbx?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    tipoSucursal?: boolean
    estadoOperacion?: boolean
    productos?: boolean | Sucursal$productosArgs<ExtArgs>
    usuarios?: boolean | Sucursal$usuariosArgs<ExtArgs>
    Venta?: boolean | Sucursal$VentaArgs<ExtArgs>
    TransferenciaProducto?: boolean | Sucursal$TransferenciaProductoArgs<ExtArgs>
    TransferenciaProductoDestino?: boolean | Sucursal$TransferenciaProductoDestinoArgs<ExtArgs>
    EntregaStock?: boolean | Sucursal$EntregaStockArgs<ExtArgs>
    solicitudesOrigen?: boolean | Sucursal$solicitudesOrigenArgs<ExtArgs>
    solicitudesDestino?: boolean | Sucursal$solicitudesDestinoArgs<ExtArgs>
    EliminacionStock?: boolean | Sucursal$EliminacionStockArgs<ExtArgs>
    RegistroCaja?: boolean | Sucursal$RegistroCajaArgs<ExtArgs>
    Deposito?: boolean | Sucursal$DepositoArgs<ExtArgs>
    Egreso?: boolean | Sucursal$EgresoArgs<ExtArgs>
    SucursalSaldo?: boolean | Sucursal$SucursalSaldoArgs<ExtArgs>
    VentaEliminada?: boolean | Sucursal$VentaEliminadaArgs<ExtArgs>
    VentaCuota?: boolean | Sucursal$VentaCuotaArgs<ExtArgs>
    PlantillaComprobante?: boolean | Sucursal$PlantillaComprobanteArgs<ExtArgs>
    Reparacion?: boolean | Sucursal$ReparacionArgs<ExtArgs>
    MetaUsuario?: boolean | Sucursal$MetaUsuarioArgs<ExtArgs>
    MetaCobros?: boolean | Sucursal$MetaCobrosArgs<ExtArgs>
    DepositoCobro?: boolean | Sucursal$DepositoCobroArgs<ExtArgs>
    _count?: boolean | SucursalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sucursal"]>

  export type SucursalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    pbx?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    tipoSucursal?: boolean
    estadoOperacion?: boolean
  }, ExtArgs["result"]["sucursal"]>

  export type SucursalSelectScalar = {
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    pbx?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    tipoSucursal?: boolean
    estadoOperacion?: boolean
  }

  export type SucursalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Sucursal$productosArgs<ExtArgs>
    usuarios?: boolean | Sucursal$usuariosArgs<ExtArgs>
    Venta?: boolean | Sucursal$VentaArgs<ExtArgs>
    TransferenciaProducto?: boolean | Sucursal$TransferenciaProductoArgs<ExtArgs>
    TransferenciaProductoDestino?: boolean | Sucursal$TransferenciaProductoDestinoArgs<ExtArgs>
    EntregaStock?: boolean | Sucursal$EntregaStockArgs<ExtArgs>
    solicitudesOrigen?: boolean | Sucursal$solicitudesOrigenArgs<ExtArgs>
    solicitudesDestino?: boolean | Sucursal$solicitudesDestinoArgs<ExtArgs>
    EliminacionStock?: boolean | Sucursal$EliminacionStockArgs<ExtArgs>
    RegistroCaja?: boolean | Sucursal$RegistroCajaArgs<ExtArgs>
    Deposito?: boolean | Sucursal$DepositoArgs<ExtArgs>
    Egreso?: boolean | Sucursal$EgresoArgs<ExtArgs>
    SucursalSaldo?: boolean | Sucursal$SucursalSaldoArgs<ExtArgs>
    VentaEliminada?: boolean | Sucursal$VentaEliminadaArgs<ExtArgs>
    VentaCuota?: boolean | Sucursal$VentaCuotaArgs<ExtArgs>
    PlantillaComprobante?: boolean | Sucursal$PlantillaComprobanteArgs<ExtArgs>
    Reparacion?: boolean | Sucursal$ReparacionArgs<ExtArgs>
    MetaUsuario?: boolean | Sucursal$MetaUsuarioArgs<ExtArgs>
    MetaCobros?: boolean | Sucursal$MetaCobrosArgs<ExtArgs>
    DepositoCobro?: boolean | Sucursal$DepositoCobroArgs<ExtArgs>
    _count?: boolean | SucursalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SucursalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SucursalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sucursal"
    objects: {
      productos: Prisma.$StockPayload<ExtArgs>[]
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
      Venta: Prisma.$VentaPayload<ExtArgs>[]
      TransferenciaProducto: Prisma.$TransferenciaProductoPayload<ExtArgs>[]
      TransferenciaProductoDestino: Prisma.$TransferenciaProductoPayload<ExtArgs>[]
      EntregaStock: Prisma.$EntregaStockPayload<ExtArgs>[]
      solicitudesOrigen: Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>[]
      solicitudesDestino: Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>[]
      EliminacionStock: Prisma.$EliminacionStockPayload<ExtArgs>[]
      RegistroCaja: Prisma.$RegistroCajaPayload<ExtArgs>[]
      Deposito: Prisma.$DepositoPayload<ExtArgs>[]
      Egreso: Prisma.$EgresoPayload<ExtArgs>[]
      SucursalSaldo: Prisma.$SucursalSaldoPayload<ExtArgs> | null
      VentaEliminada: Prisma.$VentaEliminadaPayload<ExtArgs>[]
      VentaCuota: Prisma.$VentaCuotaPayload<ExtArgs>[]
      PlantillaComprobante: Prisma.$PlantillaComprobantePayload<ExtArgs>[]
      Reparacion: Prisma.$ReparacionPayload<ExtArgs>[]
      MetaUsuario: Prisma.$MetaUsuarioPayload<ExtArgs>[]
      MetaCobros: Prisma.$MetaCobrosPayload<ExtArgs>[]
      DepositoCobro: Prisma.$DepositoCobroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      direccion: string | null
      telefono: string | null
      pbx: string | null
      creadoEn: Date
      actualizadoEn: Date
      tipoSucursal: $Enums.TipoSucursal
      estadoOperacion: boolean
    }, ExtArgs["result"]["sucursal"]>
    composites: {}
  }

  type SucursalGetPayload<S extends boolean | null | undefined | SucursalDefaultArgs> = $Result.GetResult<Prisma.$SucursalPayload, S>

  type SucursalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SucursalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SucursalCountAggregateInputType | true
    }

  export interface SucursalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sucursal'], meta: { name: 'Sucursal' } }
    /**
     * Find zero or one Sucursal that matches the filter.
     * @param {SucursalFindUniqueArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SucursalFindUniqueArgs>(args: SelectSubset<T, SucursalFindUniqueArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sucursal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SucursalFindUniqueOrThrowArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SucursalFindUniqueOrThrowArgs>(args: SelectSubset<T, SucursalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sucursal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalFindFirstArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SucursalFindFirstArgs>(args?: SelectSubset<T, SucursalFindFirstArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sucursal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalFindFirstOrThrowArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SucursalFindFirstOrThrowArgs>(args?: SelectSubset<T, SucursalFindFirstOrThrowArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sucursals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sucursals
     * const sucursals = await prisma.sucursal.findMany()
     * 
     * // Get first 10 Sucursals
     * const sucursals = await prisma.sucursal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sucursalWithIdOnly = await prisma.sucursal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SucursalFindManyArgs>(args?: SelectSubset<T, SucursalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sucursal.
     * @param {SucursalCreateArgs} args - Arguments to create a Sucursal.
     * @example
     * // Create one Sucursal
     * const Sucursal = await prisma.sucursal.create({
     *   data: {
     *     // ... data to create a Sucursal
     *   }
     * })
     * 
     */
    create<T extends SucursalCreateArgs>(args: SelectSubset<T, SucursalCreateArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sucursals.
     * @param {SucursalCreateManyArgs} args - Arguments to create many Sucursals.
     * @example
     * // Create many Sucursals
     * const sucursal = await prisma.sucursal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SucursalCreateManyArgs>(args?: SelectSubset<T, SucursalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sucursals and returns the data saved in the database.
     * @param {SucursalCreateManyAndReturnArgs} args - Arguments to create many Sucursals.
     * @example
     * // Create many Sucursals
     * const sucursal = await prisma.sucursal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sucursals and only return the `id`
     * const sucursalWithIdOnly = await prisma.sucursal.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SucursalCreateManyAndReturnArgs>(args?: SelectSubset<T, SucursalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Sucursal.
     * @param {SucursalDeleteArgs} args - Arguments to delete one Sucursal.
     * @example
     * // Delete one Sucursal
     * const Sucursal = await prisma.sucursal.delete({
     *   where: {
     *     // ... filter to delete one Sucursal
     *   }
     * })
     * 
     */
    delete<T extends SucursalDeleteArgs>(args: SelectSubset<T, SucursalDeleteArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sucursal.
     * @param {SucursalUpdateArgs} args - Arguments to update one Sucursal.
     * @example
     * // Update one Sucursal
     * const sucursal = await prisma.sucursal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SucursalUpdateArgs>(args: SelectSubset<T, SucursalUpdateArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sucursals.
     * @param {SucursalDeleteManyArgs} args - Arguments to filter Sucursals to delete.
     * @example
     * // Delete a few Sucursals
     * const { count } = await prisma.sucursal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SucursalDeleteManyArgs>(args?: SelectSubset<T, SucursalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sucursals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sucursals
     * const sucursal = await prisma.sucursal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SucursalUpdateManyArgs>(args: SelectSubset<T, SucursalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sucursal.
     * @param {SucursalUpsertArgs} args - Arguments to update or create a Sucursal.
     * @example
     * // Update or create a Sucursal
     * const sucursal = await prisma.sucursal.upsert({
     *   create: {
     *     // ... data to create a Sucursal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sucursal we want to update
     *   }
     * })
     */
    upsert<T extends SucursalUpsertArgs>(args: SelectSubset<T, SucursalUpsertArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sucursals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalCountArgs} args - Arguments to filter Sucursals to count.
     * @example
     * // Count the number of Sucursals
     * const count = await prisma.sucursal.count({
     *   where: {
     *     // ... the filter for the Sucursals we want to count
     *   }
     * })
    **/
    count<T extends SucursalCountArgs>(
      args?: Subset<T, SucursalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SucursalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sucursal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SucursalAggregateArgs>(args: Subset<T, SucursalAggregateArgs>): Prisma.PrismaPromise<GetSucursalAggregateType<T>>

    /**
     * Group by Sucursal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SucursalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SucursalGroupByArgs['orderBy'] }
        : { orderBy?: SucursalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SucursalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSucursalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sucursal model
   */
  readonly fields: SucursalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sucursal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SucursalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Sucursal$productosArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany"> | Null>
    usuarios<T extends Sucursal$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    Venta<T extends Sucursal$VentaArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$VentaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany"> | Null>
    TransferenciaProducto<T extends Sucursal$TransferenciaProductoArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$TransferenciaProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    TransferenciaProductoDestino<T extends Sucursal$TransferenciaProductoDestinoArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$TransferenciaProductoDestinoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    EntregaStock<T extends Sucursal$EntregaStockArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$EntregaStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesOrigen<T extends Sucursal$solicitudesOrigenArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$solicitudesOrigenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesDestino<T extends Sucursal$solicitudesDestinoArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$solicitudesDestinoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    EliminacionStock<T extends Sucursal$EliminacionStockArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$EliminacionStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findMany"> | Null>
    RegistroCaja<T extends Sucursal$RegistroCajaArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$RegistroCajaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findMany"> | Null>
    Deposito<T extends Sucursal$DepositoArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$DepositoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findMany"> | Null>
    Egreso<T extends Sucursal$EgresoArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$EgresoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findMany"> | Null>
    SucursalSaldo<T extends Sucursal$SucursalSaldoArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$SucursalSaldoArgs<ExtArgs>>): Prisma__SucursalSaldoClient<$Result.GetResult<Prisma.$SucursalSaldoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    VentaEliminada<T extends Sucursal$VentaEliminadaArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$VentaEliminadaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findMany"> | Null>
    VentaCuota<T extends Sucursal$VentaCuotaArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$VentaCuotaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findMany"> | Null>
    PlantillaComprobante<T extends Sucursal$PlantillaComprobanteArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$PlantillaComprobanteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlantillaComprobantePayload<ExtArgs>, T, "findMany"> | Null>
    Reparacion<T extends Sucursal$ReparacionArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$ReparacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findMany"> | Null>
    MetaUsuario<T extends Sucursal$MetaUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$MetaUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    MetaCobros<T extends Sucursal$MetaCobrosArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$MetaCobrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findMany"> | Null>
    DepositoCobro<T extends Sucursal$DepositoCobroArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$DepositoCobroArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sucursal model
   */ 
  interface SucursalFieldRefs {
    readonly id: FieldRef<"Sucursal", 'Int'>
    readonly nombre: FieldRef<"Sucursal", 'String'>
    readonly direccion: FieldRef<"Sucursal", 'String'>
    readonly telefono: FieldRef<"Sucursal", 'String'>
    readonly pbx: FieldRef<"Sucursal", 'String'>
    readonly creadoEn: FieldRef<"Sucursal", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Sucursal", 'DateTime'>
    readonly tipoSucursal: FieldRef<"Sucursal", 'TipoSucursal'>
    readonly estadoOperacion: FieldRef<"Sucursal", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Sucursal findUnique
   */
  export type SucursalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal findUniqueOrThrow
   */
  export type SucursalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal findFirst
   */
  export type SucursalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sucursals.
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sucursals.
     */
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * Sucursal findFirstOrThrow
   */
  export type SucursalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sucursals.
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sucursals.
     */
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * Sucursal findMany
   */
  export type SucursalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursals to fetch.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sucursals.
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * Sucursal create
   */
  export type SucursalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * The data needed to create a Sucursal.
     */
    data: XOR<SucursalCreateInput, SucursalUncheckedCreateInput>
  }

  /**
   * Sucursal createMany
   */
  export type SucursalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sucursals.
     */
    data: SucursalCreateManyInput | SucursalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sucursal createManyAndReturn
   */
  export type SucursalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Sucursals.
     */
    data: SucursalCreateManyInput | SucursalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sucursal update
   */
  export type SucursalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * The data needed to update a Sucursal.
     */
    data: XOR<SucursalUpdateInput, SucursalUncheckedUpdateInput>
    /**
     * Choose, which Sucursal to update.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal updateMany
   */
  export type SucursalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sucursals.
     */
    data: XOR<SucursalUpdateManyMutationInput, SucursalUncheckedUpdateManyInput>
    /**
     * Filter which Sucursals to update
     */
    where?: SucursalWhereInput
  }

  /**
   * Sucursal upsert
   */
  export type SucursalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * The filter to search for the Sucursal to update in case it exists.
     */
    where: SucursalWhereUniqueInput
    /**
     * In case the Sucursal found by the `where` argument doesn't exist, create a new Sucursal with this data.
     */
    create: XOR<SucursalCreateInput, SucursalUncheckedCreateInput>
    /**
     * In case the Sucursal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SucursalUpdateInput, SucursalUncheckedUpdateInput>
  }

  /**
   * Sucursal delete
   */
  export type SucursalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter which Sucursal to delete.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal deleteMany
   */
  export type SucursalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sucursals to delete
     */
    where?: SucursalWhereInput
  }

  /**
   * Sucursal.productos
   */
  export type Sucursal$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Sucursal.usuarios
   */
  export type Sucursal$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Sucursal.Venta
   */
  export type Sucursal$VentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Sucursal.TransferenciaProducto
   */
  export type Sucursal$TransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    where?: TransferenciaProductoWhereInput
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    cursor?: TransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Sucursal.TransferenciaProductoDestino
   */
  export type Sucursal$TransferenciaProductoDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    where?: TransferenciaProductoWhereInput
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    cursor?: TransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Sucursal.EntregaStock
   */
  export type Sucursal$EntregaStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    where?: EntregaStockWhereInput
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    cursor?: EntregaStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntregaStockScalarFieldEnum | EntregaStockScalarFieldEnum[]
  }

  /**
   * Sucursal.solicitudesOrigen
   */
  export type Sucursal$solicitudesOrigenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    where?: SolicitudTransferenciaProductoWhereInput
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Sucursal.solicitudesDestino
   */
  export type Sucursal$solicitudesDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    where?: SolicitudTransferenciaProductoWhereInput
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Sucursal.EliminacionStock
   */
  export type Sucursal$EliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    where?: EliminacionStockWhereInput
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    cursor?: EliminacionStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionStockScalarFieldEnum | EliminacionStockScalarFieldEnum[]
  }

  /**
   * Sucursal.RegistroCaja
   */
  export type Sucursal$RegistroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    where?: RegistroCajaWhereInput
    orderBy?: RegistroCajaOrderByWithRelationInput | RegistroCajaOrderByWithRelationInput[]
    cursor?: RegistroCajaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroCajaScalarFieldEnum | RegistroCajaScalarFieldEnum[]
  }

  /**
   * Sucursal.Deposito
   */
  export type Sucursal$DepositoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    where?: DepositoWhereInput
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    cursor?: DepositoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositoScalarFieldEnum | DepositoScalarFieldEnum[]
  }

  /**
   * Sucursal.Egreso
   */
  export type Sucursal$EgresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    where?: EgresoWhereInput
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    cursor?: EgresoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * Sucursal.SucursalSaldo
   */
  export type Sucursal$SucursalSaldoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalSaldo
     */
    select?: SucursalSaldoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalSaldoInclude<ExtArgs> | null
    where?: SucursalSaldoWhereInput
  }

  /**
   * Sucursal.VentaEliminada
   */
  export type Sucursal$VentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    where?: VentaEliminadaWhereInput
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    cursor?: VentaEliminadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaEliminadaScalarFieldEnum | VentaEliminadaScalarFieldEnum[]
  }

  /**
   * Sucursal.VentaCuota
   */
  export type Sucursal$VentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    where?: VentaCuotaWhereInput
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    cursor?: VentaCuotaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaCuotaScalarFieldEnum | VentaCuotaScalarFieldEnum[]
  }

  /**
   * Sucursal.PlantillaComprobante
   */
  export type Sucursal$PlantillaComprobanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlantillaComprobante
     */
    select?: PlantillaComprobanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlantillaComprobanteInclude<ExtArgs> | null
    where?: PlantillaComprobanteWhereInput
    orderBy?: PlantillaComprobanteOrderByWithRelationInput | PlantillaComprobanteOrderByWithRelationInput[]
    cursor?: PlantillaComprobanteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlantillaComprobanteScalarFieldEnum | PlantillaComprobanteScalarFieldEnum[]
  }

  /**
   * Sucursal.Reparacion
   */
  export type Sucursal$ReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    where?: ReparacionWhereInput
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    cursor?: ReparacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Sucursal.MetaUsuario
   */
  export type Sucursal$MetaUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    where?: MetaUsuarioWhereInput
    orderBy?: MetaUsuarioOrderByWithRelationInput | MetaUsuarioOrderByWithRelationInput[]
    cursor?: MetaUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MetaUsuarioScalarFieldEnum | MetaUsuarioScalarFieldEnum[]
  }

  /**
   * Sucursal.MetaCobros
   */
  export type Sucursal$MetaCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    where?: MetaCobrosWhereInput
    orderBy?: MetaCobrosOrderByWithRelationInput | MetaCobrosOrderByWithRelationInput[]
    cursor?: MetaCobrosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MetaCobrosScalarFieldEnum | MetaCobrosScalarFieldEnum[]
  }

  /**
   * Sucursal.DepositoCobro
   */
  export type Sucursal$DepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    where?: DepositoCobroWhereInput
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    cursor?: DepositoCobroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositoCobroScalarFieldEnum | DepositoCobroScalarFieldEnum[]
  }

  /**
   * Sucursal without action
   */
  export type SucursalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
  }


  /**
   * Model EntregaStock
   */

  export type AggregateEntregaStock = {
    _count: EntregaStockCountAggregateOutputType | null
    _avg: EntregaStockAvgAggregateOutputType | null
    _sum: EntregaStockSumAggregateOutputType | null
    _min: EntregaStockMinAggregateOutputType | null
    _max: EntregaStockMaxAggregateOutputType | null
  }

  export type EntregaStockAvgAggregateOutputType = {
    id: number | null
    proveedorId: number | null
    montoTotal: number | null
    recibidoPorId: number | null
    sucursalId: number | null
  }

  export type EntregaStockSumAggregateOutputType = {
    id: number | null
    proveedorId: number | null
    montoTotal: number | null
    recibidoPorId: number | null
    sucursalId: number | null
  }

  export type EntregaStockMinAggregateOutputType = {
    id: number | null
    proveedorId: number | null
    montoTotal: number | null
    fechaEntrega: Date | null
    recibidoPorId: number | null
    sucursalId: number | null
  }

  export type EntregaStockMaxAggregateOutputType = {
    id: number | null
    proveedorId: number | null
    montoTotal: number | null
    fechaEntrega: Date | null
    recibidoPorId: number | null
    sucursalId: number | null
  }

  export type EntregaStockCountAggregateOutputType = {
    id: number
    proveedorId: number
    montoTotal: number
    fechaEntrega: number
    recibidoPorId: number
    sucursalId: number
    _all: number
  }


  export type EntregaStockAvgAggregateInputType = {
    id?: true
    proveedorId?: true
    montoTotal?: true
    recibidoPorId?: true
    sucursalId?: true
  }

  export type EntregaStockSumAggregateInputType = {
    id?: true
    proveedorId?: true
    montoTotal?: true
    recibidoPorId?: true
    sucursalId?: true
  }

  export type EntregaStockMinAggregateInputType = {
    id?: true
    proveedorId?: true
    montoTotal?: true
    fechaEntrega?: true
    recibidoPorId?: true
    sucursalId?: true
  }

  export type EntregaStockMaxAggregateInputType = {
    id?: true
    proveedorId?: true
    montoTotal?: true
    fechaEntrega?: true
    recibidoPorId?: true
    sucursalId?: true
  }

  export type EntregaStockCountAggregateInputType = {
    id?: true
    proveedorId?: true
    montoTotal?: true
    fechaEntrega?: true
    recibidoPorId?: true
    sucursalId?: true
    _all?: true
  }

  export type EntregaStockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EntregaStock to aggregate.
     */
    where?: EntregaStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntregaStocks to fetch.
     */
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EntregaStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntregaStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntregaStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EntregaStocks
    **/
    _count?: true | EntregaStockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntregaStockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntregaStockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntregaStockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntregaStockMaxAggregateInputType
  }

  export type GetEntregaStockAggregateType<T extends EntregaStockAggregateArgs> = {
        [P in keyof T & keyof AggregateEntregaStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntregaStock[P]>
      : GetScalarType<T[P], AggregateEntregaStock[P]>
  }




  export type EntregaStockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EntregaStockWhereInput
    orderBy?: EntregaStockOrderByWithAggregationInput | EntregaStockOrderByWithAggregationInput[]
    by: EntregaStockScalarFieldEnum[] | EntregaStockScalarFieldEnum
    having?: EntregaStockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntregaStockCountAggregateInputType | true
    _avg?: EntregaStockAvgAggregateInputType
    _sum?: EntregaStockSumAggregateInputType
    _min?: EntregaStockMinAggregateInputType
    _max?: EntregaStockMaxAggregateInputType
  }

  export type EntregaStockGroupByOutputType = {
    id: number
    proveedorId: number | null
    montoTotal: number
    fechaEntrega: Date
    recibidoPorId: number | null
    sucursalId: number | null
    _count: EntregaStockCountAggregateOutputType | null
    _avg: EntregaStockAvgAggregateOutputType | null
    _sum: EntregaStockSumAggregateOutputType | null
    _min: EntregaStockMinAggregateOutputType | null
    _max: EntregaStockMaxAggregateOutputType | null
  }

  type GetEntregaStockGroupByPayload<T extends EntregaStockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntregaStockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntregaStockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntregaStockGroupByOutputType[P]>
            : GetScalarType<T[P], EntregaStockGroupByOutputType[P]>
        }
      >
    >


  export type EntregaStockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedorId?: boolean
    montoTotal?: boolean
    fechaEntrega?: boolean
    recibidoPorId?: boolean
    sucursalId?: boolean
    proveedor?: boolean | EntregaStock$proveedorArgs<ExtArgs>
    stockEntregado?: boolean | EntregaStock$stockEntregadoArgs<ExtArgs>
    usuarioRecibido?: boolean | EntregaStock$usuarioRecibidoArgs<ExtArgs>
    sucursal?: boolean | EntregaStock$sucursalArgs<ExtArgs>
    _count?: boolean | EntregaStockCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entregaStock"]>

  export type EntregaStockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedorId?: boolean
    montoTotal?: boolean
    fechaEntrega?: boolean
    recibidoPorId?: boolean
    sucursalId?: boolean
    proveedor?: boolean | EntregaStock$proveedorArgs<ExtArgs>
    usuarioRecibido?: boolean | EntregaStock$usuarioRecibidoArgs<ExtArgs>
    sucursal?: boolean | EntregaStock$sucursalArgs<ExtArgs>
  }, ExtArgs["result"]["entregaStock"]>

  export type EntregaStockSelectScalar = {
    id?: boolean
    proveedorId?: boolean
    montoTotal?: boolean
    fechaEntrega?: boolean
    recibidoPorId?: boolean
    sucursalId?: boolean
  }

  export type EntregaStockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedor?: boolean | EntregaStock$proveedorArgs<ExtArgs>
    stockEntregado?: boolean | EntregaStock$stockEntregadoArgs<ExtArgs>
    usuarioRecibido?: boolean | EntregaStock$usuarioRecibidoArgs<ExtArgs>
    sucursal?: boolean | EntregaStock$sucursalArgs<ExtArgs>
    _count?: boolean | EntregaStockCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EntregaStockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedor?: boolean | EntregaStock$proveedorArgs<ExtArgs>
    usuarioRecibido?: boolean | EntregaStock$usuarioRecibidoArgs<ExtArgs>
    sucursal?: boolean | EntregaStock$sucursalArgs<ExtArgs>
  }

  export type $EntregaStockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EntregaStock"
    objects: {
      proveedor: Prisma.$ProveedorPayload<ExtArgs> | null
      stockEntregado: Prisma.$StockPayload<ExtArgs>[]
      usuarioRecibido: Prisma.$UsuarioPayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      proveedorId: number | null
      montoTotal: number
      fechaEntrega: Date
      recibidoPorId: number | null
      sucursalId: number | null
    }, ExtArgs["result"]["entregaStock"]>
    composites: {}
  }

  type EntregaStockGetPayload<S extends boolean | null | undefined | EntregaStockDefaultArgs> = $Result.GetResult<Prisma.$EntregaStockPayload, S>

  type EntregaStockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EntregaStockFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EntregaStockCountAggregateInputType | true
    }

  export interface EntregaStockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EntregaStock'], meta: { name: 'EntregaStock' } }
    /**
     * Find zero or one EntregaStock that matches the filter.
     * @param {EntregaStockFindUniqueArgs} args - Arguments to find a EntregaStock
     * @example
     * // Get one EntregaStock
     * const entregaStock = await prisma.entregaStock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EntregaStockFindUniqueArgs>(args: SelectSubset<T, EntregaStockFindUniqueArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EntregaStock that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EntregaStockFindUniqueOrThrowArgs} args - Arguments to find a EntregaStock
     * @example
     * // Get one EntregaStock
     * const entregaStock = await prisma.entregaStock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EntregaStockFindUniqueOrThrowArgs>(args: SelectSubset<T, EntregaStockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EntregaStock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockFindFirstArgs} args - Arguments to find a EntregaStock
     * @example
     * // Get one EntregaStock
     * const entregaStock = await prisma.entregaStock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EntregaStockFindFirstArgs>(args?: SelectSubset<T, EntregaStockFindFirstArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EntregaStock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockFindFirstOrThrowArgs} args - Arguments to find a EntregaStock
     * @example
     * // Get one EntregaStock
     * const entregaStock = await prisma.entregaStock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EntregaStockFindFirstOrThrowArgs>(args?: SelectSubset<T, EntregaStockFindFirstOrThrowArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EntregaStocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EntregaStocks
     * const entregaStocks = await prisma.entregaStock.findMany()
     * 
     * // Get first 10 EntregaStocks
     * const entregaStocks = await prisma.entregaStock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entregaStockWithIdOnly = await prisma.entregaStock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EntregaStockFindManyArgs>(args?: SelectSubset<T, EntregaStockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EntregaStock.
     * @param {EntregaStockCreateArgs} args - Arguments to create a EntregaStock.
     * @example
     * // Create one EntregaStock
     * const EntregaStock = await prisma.entregaStock.create({
     *   data: {
     *     // ... data to create a EntregaStock
     *   }
     * })
     * 
     */
    create<T extends EntregaStockCreateArgs>(args: SelectSubset<T, EntregaStockCreateArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EntregaStocks.
     * @param {EntregaStockCreateManyArgs} args - Arguments to create many EntregaStocks.
     * @example
     * // Create many EntregaStocks
     * const entregaStock = await prisma.entregaStock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EntregaStockCreateManyArgs>(args?: SelectSubset<T, EntregaStockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EntregaStocks and returns the data saved in the database.
     * @param {EntregaStockCreateManyAndReturnArgs} args - Arguments to create many EntregaStocks.
     * @example
     * // Create many EntregaStocks
     * const entregaStock = await prisma.entregaStock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EntregaStocks and only return the `id`
     * const entregaStockWithIdOnly = await prisma.entregaStock.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EntregaStockCreateManyAndReturnArgs>(args?: SelectSubset<T, EntregaStockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EntregaStock.
     * @param {EntregaStockDeleteArgs} args - Arguments to delete one EntregaStock.
     * @example
     * // Delete one EntregaStock
     * const EntregaStock = await prisma.entregaStock.delete({
     *   where: {
     *     // ... filter to delete one EntregaStock
     *   }
     * })
     * 
     */
    delete<T extends EntregaStockDeleteArgs>(args: SelectSubset<T, EntregaStockDeleteArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EntregaStock.
     * @param {EntregaStockUpdateArgs} args - Arguments to update one EntregaStock.
     * @example
     * // Update one EntregaStock
     * const entregaStock = await prisma.entregaStock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EntregaStockUpdateArgs>(args: SelectSubset<T, EntregaStockUpdateArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EntregaStocks.
     * @param {EntregaStockDeleteManyArgs} args - Arguments to filter EntregaStocks to delete.
     * @example
     * // Delete a few EntregaStocks
     * const { count } = await prisma.entregaStock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EntregaStockDeleteManyArgs>(args?: SelectSubset<T, EntregaStockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EntregaStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EntregaStocks
     * const entregaStock = await prisma.entregaStock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EntregaStockUpdateManyArgs>(args: SelectSubset<T, EntregaStockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EntregaStock.
     * @param {EntregaStockUpsertArgs} args - Arguments to update or create a EntregaStock.
     * @example
     * // Update or create a EntregaStock
     * const entregaStock = await prisma.entregaStock.upsert({
     *   create: {
     *     // ... data to create a EntregaStock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EntregaStock we want to update
     *   }
     * })
     */
    upsert<T extends EntregaStockUpsertArgs>(args: SelectSubset<T, EntregaStockUpsertArgs<ExtArgs>>): Prisma__EntregaStockClient<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EntregaStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockCountArgs} args - Arguments to filter EntregaStocks to count.
     * @example
     * // Count the number of EntregaStocks
     * const count = await prisma.entregaStock.count({
     *   where: {
     *     // ... the filter for the EntregaStocks we want to count
     *   }
     * })
    **/
    count<T extends EntregaStockCountArgs>(
      args?: Subset<T, EntregaStockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntregaStockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EntregaStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntregaStockAggregateArgs>(args: Subset<T, EntregaStockAggregateArgs>): Prisma.PrismaPromise<GetEntregaStockAggregateType<T>>

    /**
     * Group by EntregaStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntregaStockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EntregaStockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EntregaStockGroupByArgs['orderBy'] }
        : { orderBy?: EntregaStockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EntregaStockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntregaStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EntregaStock model
   */
  readonly fields: EntregaStockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EntregaStock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EntregaStockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    proveedor<T extends EntregaStock$proveedorArgs<ExtArgs> = {}>(args?: Subset<T, EntregaStock$proveedorArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    stockEntregado<T extends EntregaStock$stockEntregadoArgs<ExtArgs> = {}>(args?: Subset<T, EntregaStock$stockEntregadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany"> | Null>
    usuarioRecibido<T extends EntregaStock$usuarioRecibidoArgs<ExtArgs> = {}>(args?: Subset<T, EntregaStock$usuarioRecibidoArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends EntregaStock$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, EntregaStock$sucursalArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EntregaStock model
   */ 
  interface EntregaStockFieldRefs {
    readonly id: FieldRef<"EntregaStock", 'Int'>
    readonly proveedorId: FieldRef<"EntregaStock", 'Int'>
    readonly montoTotal: FieldRef<"EntregaStock", 'Float'>
    readonly fechaEntrega: FieldRef<"EntregaStock", 'DateTime'>
    readonly recibidoPorId: FieldRef<"EntregaStock", 'Int'>
    readonly sucursalId: FieldRef<"EntregaStock", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EntregaStock findUnique
   */
  export type EntregaStockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * Filter, which EntregaStock to fetch.
     */
    where: EntregaStockWhereUniqueInput
  }

  /**
   * EntregaStock findUniqueOrThrow
   */
  export type EntregaStockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * Filter, which EntregaStock to fetch.
     */
    where: EntregaStockWhereUniqueInput
  }

  /**
   * EntregaStock findFirst
   */
  export type EntregaStockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * Filter, which EntregaStock to fetch.
     */
    where?: EntregaStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntregaStocks to fetch.
     */
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EntregaStocks.
     */
    cursor?: EntregaStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntregaStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntregaStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EntregaStocks.
     */
    distinct?: EntregaStockScalarFieldEnum | EntregaStockScalarFieldEnum[]
  }

  /**
   * EntregaStock findFirstOrThrow
   */
  export type EntregaStockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * Filter, which EntregaStock to fetch.
     */
    where?: EntregaStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntregaStocks to fetch.
     */
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EntregaStocks.
     */
    cursor?: EntregaStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntregaStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntregaStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EntregaStocks.
     */
    distinct?: EntregaStockScalarFieldEnum | EntregaStockScalarFieldEnum[]
  }

  /**
   * EntregaStock findMany
   */
  export type EntregaStockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * Filter, which EntregaStocks to fetch.
     */
    where?: EntregaStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EntregaStocks to fetch.
     */
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EntregaStocks.
     */
    cursor?: EntregaStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EntregaStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EntregaStocks.
     */
    skip?: number
    distinct?: EntregaStockScalarFieldEnum | EntregaStockScalarFieldEnum[]
  }

  /**
   * EntregaStock create
   */
  export type EntregaStockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * The data needed to create a EntregaStock.
     */
    data: XOR<EntregaStockCreateInput, EntregaStockUncheckedCreateInput>
  }

  /**
   * EntregaStock createMany
   */
  export type EntregaStockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EntregaStocks.
     */
    data: EntregaStockCreateManyInput | EntregaStockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EntregaStock createManyAndReturn
   */
  export type EntregaStockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EntregaStocks.
     */
    data: EntregaStockCreateManyInput | EntregaStockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EntregaStock update
   */
  export type EntregaStockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * The data needed to update a EntregaStock.
     */
    data: XOR<EntregaStockUpdateInput, EntregaStockUncheckedUpdateInput>
    /**
     * Choose, which EntregaStock to update.
     */
    where: EntregaStockWhereUniqueInput
  }

  /**
   * EntregaStock updateMany
   */
  export type EntregaStockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EntregaStocks.
     */
    data: XOR<EntregaStockUpdateManyMutationInput, EntregaStockUncheckedUpdateManyInput>
    /**
     * Filter which EntregaStocks to update
     */
    where?: EntregaStockWhereInput
  }

  /**
   * EntregaStock upsert
   */
  export type EntregaStockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * The filter to search for the EntregaStock to update in case it exists.
     */
    where: EntregaStockWhereUniqueInput
    /**
     * In case the EntregaStock found by the `where` argument doesn't exist, create a new EntregaStock with this data.
     */
    create: XOR<EntregaStockCreateInput, EntregaStockUncheckedCreateInput>
    /**
     * In case the EntregaStock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EntregaStockUpdateInput, EntregaStockUncheckedUpdateInput>
  }

  /**
   * EntregaStock delete
   */
  export type EntregaStockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    /**
     * Filter which EntregaStock to delete.
     */
    where: EntregaStockWhereUniqueInput
  }

  /**
   * EntregaStock deleteMany
   */
  export type EntregaStockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EntregaStocks to delete
     */
    where?: EntregaStockWhereInput
  }

  /**
   * EntregaStock.proveedor
   */
  export type EntregaStock$proveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    where?: ProveedorWhereInput
  }

  /**
   * EntregaStock.stockEntregado
   */
  export type EntregaStock$stockEntregadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * EntregaStock.usuarioRecibido
   */
  export type EntregaStock$usuarioRecibidoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * EntregaStock.sucursal
   */
  export type EntregaStock$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    where?: SucursalWhereInput
  }

  /**
   * EntregaStock without action
   */
  export type EntregaStockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
    sucursalId: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
    sucursalId: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    rol: $Enums.Rol | null
    contrasena: string | null
    activo: boolean | null
    correo: string | null
    sucursalId: number | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    rol: $Enums.Rol | null
    contrasena: string | null
    activo: boolean | null
    correo: string | null
    sucursalId: number | null
    fecha_creacion: Date | null
    fecha_actualizacion: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    rol: number
    contrasena: number
    activo: number
    correo: number
    sucursalId: number
    fecha_creacion: number
    fecha_actualizacion: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
    sucursalId?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
    sucursalId?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
    rol?: true
    contrasena?: true
    activo?: true
    correo?: true
    sucursalId?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    rol?: true
    contrasena?: true
    activo?: true
    correo?: true
    sucursalId?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    rol?: true
    contrasena?: true
    activo?: true
    correo?: true
    sucursalId?: true
    fecha_creacion?: true
    fecha_actualizacion?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo: boolean
    correo: string
    sucursalId: number
    fecha_creacion: Date
    fecha_actualizacion: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    rol?: boolean
    contrasena?: boolean
    activo?: boolean
    correo?: boolean
    sucursalId?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    entregasRecibidas?: boolean | Usuario$entregasRecibidasArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    TransferenciaProducto?: boolean | Usuario$TransferenciaProductoArgs<ExtArgs>
    PrecioProducto?: boolean | Usuario$PrecioProductoArgs<ExtArgs>
    solicitudesPrecio?: boolean | Usuario$solicitudesPrecioArgs<ExtArgs>
    solicitudesAprobadas?: boolean | Usuario$solicitudesAprobadasArgs<ExtArgs>
    notificacionesEnviadas?: boolean | Usuario$notificacionesEnviadasArgs<ExtArgs>
    notificacionesRecibidas?: boolean | Usuario$notificacionesRecibidasArgs<ExtArgs>
    notificacionesUsuarios?: boolean | Usuario$notificacionesUsuariosArgs<ExtArgs>
    solicitudesEnviadas?: boolean | Usuario$solicitudesEnviadasArgs<ExtArgs>
    solicitudesAprobadasTransferencia?: boolean | Usuario$solicitudesAprobadasTransferenciaArgs<ExtArgs>
    HistorialPrecioCosto?: boolean | Usuario$HistorialPrecioCostoArgs<ExtArgs>
    AjusteStock?: boolean | Usuario$AjusteStockArgs<ExtArgs>
    EliminacionProducto?: boolean | Usuario$EliminacionProductoArgs<ExtArgs>
    EliminacionCliente?: boolean | Usuario$EliminacionClienteArgs<ExtArgs>
    EliminacionStock?: boolean | Usuario$EliminacionStockArgs<ExtArgs>
    RegistroGarantia?: boolean | Usuario$RegistroGarantiaArgs<ExtArgs>
    Garantia?: boolean | Usuario$GarantiaArgs<ExtArgs>
    RegistroCaja?: boolean | Usuario$RegistroCajaArgs<ExtArgs>
    Deposito?: boolean | Usuario$DepositoArgs<ExtArgs>
    Egreso?: boolean | Usuario$EgresoArgs<ExtArgs>
    VentaEliminada?: boolean | Usuario$VentaEliminadaArgs<ExtArgs>
    VentaCuota?: boolean | Usuario$VentaCuotaArgs<ExtArgs>
    Cuota?: boolean | Usuario$CuotaArgs<ExtArgs>
    Reparacion?: boolean | Usuario$ReparacionArgs<ExtArgs>
    RegistroReparacion?: boolean | Usuario$RegistroReparacionArgs<ExtArgs>
    MetaUsuario?: boolean | Usuario$MetaUsuarioArgs<ExtArgs>
    MetaCobros?: boolean | Usuario$MetaCobrosArgs<ExtArgs>
    DepositoCobro?: boolean | Usuario$DepositoCobroArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    rol?: boolean
    contrasena?: boolean
    activo?: boolean
    correo?: boolean
    sucursalId?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    rol?: boolean
    contrasena?: boolean
    activo?: boolean
    correo?: boolean
    sucursalId?: boolean
    fecha_creacion?: boolean
    fecha_actualizacion?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entregasRecibidas?: boolean | Usuario$entregasRecibidasArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    TransferenciaProducto?: boolean | Usuario$TransferenciaProductoArgs<ExtArgs>
    PrecioProducto?: boolean | Usuario$PrecioProductoArgs<ExtArgs>
    solicitudesPrecio?: boolean | Usuario$solicitudesPrecioArgs<ExtArgs>
    solicitudesAprobadas?: boolean | Usuario$solicitudesAprobadasArgs<ExtArgs>
    notificacionesEnviadas?: boolean | Usuario$notificacionesEnviadasArgs<ExtArgs>
    notificacionesRecibidas?: boolean | Usuario$notificacionesRecibidasArgs<ExtArgs>
    notificacionesUsuarios?: boolean | Usuario$notificacionesUsuariosArgs<ExtArgs>
    solicitudesEnviadas?: boolean | Usuario$solicitudesEnviadasArgs<ExtArgs>
    solicitudesAprobadasTransferencia?: boolean | Usuario$solicitudesAprobadasTransferenciaArgs<ExtArgs>
    HistorialPrecioCosto?: boolean | Usuario$HistorialPrecioCostoArgs<ExtArgs>
    AjusteStock?: boolean | Usuario$AjusteStockArgs<ExtArgs>
    EliminacionProducto?: boolean | Usuario$EliminacionProductoArgs<ExtArgs>
    EliminacionCliente?: boolean | Usuario$EliminacionClienteArgs<ExtArgs>
    EliminacionStock?: boolean | Usuario$EliminacionStockArgs<ExtArgs>
    RegistroGarantia?: boolean | Usuario$RegistroGarantiaArgs<ExtArgs>
    Garantia?: boolean | Usuario$GarantiaArgs<ExtArgs>
    RegistroCaja?: boolean | Usuario$RegistroCajaArgs<ExtArgs>
    Deposito?: boolean | Usuario$DepositoArgs<ExtArgs>
    Egreso?: boolean | Usuario$EgresoArgs<ExtArgs>
    VentaEliminada?: boolean | Usuario$VentaEliminadaArgs<ExtArgs>
    VentaCuota?: boolean | Usuario$VentaCuotaArgs<ExtArgs>
    Cuota?: boolean | Usuario$CuotaArgs<ExtArgs>
    Reparacion?: boolean | Usuario$ReparacionArgs<ExtArgs>
    RegistroReparacion?: boolean | Usuario$RegistroReparacionArgs<ExtArgs>
    MetaUsuario?: boolean | Usuario$MetaUsuarioArgs<ExtArgs>
    MetaCobros?: boolean | Usuario$MetaCobrosArgs<ExtArgs>
    DepositoCobro?: boolean | Usuario$DepositoCobroArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      entregasRecibidas: Prisma.$EntregaStockPayload<ExtArgs>[]
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      TransferenciaProducto: Prisma.$TransferenciaProductoPayload<ExtArgs>[]
      PrecioProducto: Prisma.$PrecioProductoPayload<ExtArgs>[]
      solicitudesPrecio: Prisma.$SolicitudPrecioPayload<ExtArgs>[]
      solicitudesAprobadas: Prisma.$SolicitudPrecioPayload<ExtArgs>[]
      notificacionesEnviadas: Prisma.$NotificacionPayload<ExtArgs>[]
      notificacionesRecibidas: Prisma.$NotificacionPayload<ExtArgs>[]
      notificacionesUsuarios: Prisma.$NotificacionesUsuariosPayload<ExtArgs>[]
      solicitudesEnviadas: Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>[]
      solicitudesAprobadasTransferencia: Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>[]
      HistorialPrecioCosto: Prisma.$HistorialPrecioCostoPayload<ExtArgs>[]
      AjusteStock: Prisma.$AjusteStockPayload<ExtArgs>[]
      EliminacionProducto: Prisma.$EliminacionProductoPayload<ExtArgs>[]
      EliminacionCliente: Prisma.$EliminacionClientePayload<ExtArgs>[]
      EliminacionStock: Prisma.$EliminacionStockPayload<ExtArgs>[]
      RegistroGarantia: Prisma.$RegistroGarantiaPayload<ExtArgs>[]
      Garantia: Prisma.$GarantiaPayload<ExtArgs>[]
      RegistroCaja: Prisma.$RegistroCajaPayload<ExtArgs>[]
      Deposito: Prisma.$DepositoPayload<ExtArgs>[]
      Egreso: Prisma.$EgresoPayload<ExtArgs>[]
      VentaEliminada: Prisma.$VentaEliminadaPayload<ExtArgs>[]
      VentaCuota: Prisma.$VentaCuotaPayload<ExtArgs>[]
      Cuota: Prisma.$CuotaPayload<ExtArgs>[]
      Reparacion: Prisma.$ReparacionPayload<ExtArgs>[]
      RegistroReparacion: Prisma.$RegistroReparacionPayload<ExtArgs>[]
      MetaUsuario: Prisma.$MetaUsuarioPayload<ExtArgs>[]
      MetaCobros: Prisma.$MetaCobrosPayload<ExtArgs>[]
      DepositoCobro: Prisma.$DepositoCobroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      rol: $Enums.Rol
      contrasena: string
      activo: boolean
      correo: string
      sucursalId: number
      fecha_creacion: Date
      fecha_actualizacion: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    entregasRecibidas<T extends Usuario$entregasRecibidasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$entregasRecibidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findMany"> | Null>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    TransferenciaProducto<T extends Usuario$TransferenciaProductoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$TransferenciaProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    PrecioProducto<T extends Usuario$PrecioProductoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$PrecioProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecioProductoPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesPrecio<T extends Usuario$solicitudesPrecioArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$solicitudesPrecioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesAprobadas<T extends Usuario$solicitudesAprobadasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$solicitudesAprobadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudPrecioPayload<ExtArgs>, T, "findMany"> | Null>
    notificacionesEnviadas<T extends Usuario$notificacionesEnviadasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$notificacionesEnviadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findMany"> | Null>
    notificacionesRecibidas<T extends Usuario$notificacionesRecibidasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$notificacionesRecibidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionPayload<ExtArgs>, T, "findMany"> | Null>
    notificacionesUsuarios<T extends Usuario$notificacionesUsuariosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$notificacionesUsuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesUsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesEnviadas<T extends Usuario$solicitudesEnviadasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$solicitudesEnviadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    solicitudesAprobadasTransferencia<T extends Usuario$solicitudesAprobadasTransferenciaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$solicitudesAprobadasTransferenciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    HistorialPrecioCosto<T extends Usuario$HistorialPrecioCostoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$HistorialPrecioCostoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioCostoPayload<ExtArgs>, T, "findMany"> | Null>
    AjusteStock<T extends Usuario$AjusteStockArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$AjusteStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AjusteStockPayload<ExtArgs>, T, "findMany"> | Null>
    EliminacionProducto<T extends Usuario$EliminacionProductoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$EliminacionProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionProductoPayload<ExtArgs>, T, "findMany"> | Null>
    EliminacionCliente<T extends Usuario$EliminacionClienteArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$EliminacionClienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findMany"> | Null>
    EliminacionStock<T extends Usuario$EliminacionStockArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$EliminacionStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionStockPayload<ExtArgs>, T, "findMany"> | Null>
    RegistroGarantia<T extends Usuario$RegistroGarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$RegistroGarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    Garantia<T extends Usuario$GarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$GarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    RegistroCaja<T extends Usuario$RegistroCajaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$RegistroCajaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findMany"> | Null>
    Deposito<T extends Usuario$DepositoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$DepositoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoPayload<ExtArgs>, T, "findMany"> | Null>
    Egreso<T extends Usuario$EgresoArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$EgresoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EgresoPayload<ExtArgs>, T, "findMany"> | Null>
    VentaEliminada<T extends Usuario$VentaEliminadaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$VentaEliminadaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findMany"> | Null>
    VentaCuota<T extends Usuario$VentaCuotaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$VentaCuotaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findMany"> | Null>
    Cuota<T extends Usuario$CuotaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$CuotaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuotaPayload<ExtArgs>, T, "findMany"> | Null>
    Reparacion<T extends Usuario$ReparacionArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ReparacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findMany"> | Null>
    RegistroReparacion<T extends Usuario$RegistroReparacionArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$RegistroReparacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroReparacionPayload<ExtArgs>, T, "findMany"> | Null>
    MetaUsuario<T extends Usuario$MetaUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$MetaUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findMany"> | Null>
    MetaCobros<T extends Usuario$MetaCobrosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$MetaCobrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findMany"> | Null>
    DepositoCobro<T extends Usuario$DepositoCobroArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$DepositoCobroArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly rol: FieldRef<"Usuario", 'Rol'>
    readonly contrasena: FieldRef<"Usuario", 'String'>
    readonly activo: FieldRef<"Usuario", 'Boolean'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly sucursalId: FieldRef<"Usuario", 'Int'>
    readonly fecha_creacion: FieldRef<"Usuario", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.entregasRecibidas
   */
  export type Usuario$entregasRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    where?: EntregaStockWhereInput
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    cursor?: EntregaStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntregaStockScalarFieldEnum | EntregaStockScalarFieldEnum[]
  }

  /**
   * Usuario.TransferenciaProducto
   */
  export type Usuario$TransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    where?: TransferenciaProductoWhereInput
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    cursor?: TransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Usuario.PrecioProducto
   */
  export type Usuario$PrecioProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecioProducto
     */
    select?: PrecioProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecioProductoInclude<ExtArgs> | null
    where?: PrecioProductoWhereInput
    orderBy?: PrecioProductoOrderByWithRelationInput | PrecioProductoOrderByWithRelationInput[]
    cursor?: PrecioProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PrecioProductoScalarFieldEnum | PrecioProductoScalarFieldEnum[]
  }

  /**
   * Usuario.solicitudesPrecio
   */
  export type Usuario$solicitudesPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    where?: SolicitudPrecioWhereInput
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    cursor?: SolicitudPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudPrecioScalarFieldEnum | SolicitudPrecioScalarFieldEnum[]
  }

  /**
   * Usuario.solicitudesAprobadas
   */
  export type Usuario$solicitudesAprobadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudPrecio
     */
    select?: SolicitudPrecioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudPrecioInclude<ExtArgs> | null
    where?: SolicitudPrecioWhereInput
    orderBy?: SolicitudPrecioOrderByWithRelationInput | SolicitudPrecioOrderByWithRelationInput[]
    cursor?: SolicitudPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudPrecioScalarFieldEnum | SolicitudPrecioScalarFieldEnum[]
  }

  /**
   * Usuario.notificacionesEnviadas
   */
  export type Usuario$notificacionesEnviadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    where?: NotificacionWhereInput
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    cursor?: NotificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Usuario.notificacionesRecibidas
   */
  export type Usuario$notificacionesRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificacion
     */
    select?: NotificacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionInclude<ExtArgs> | null
    where?: NotificacionWhereInput
    orderBy?: NotificacionOrderByWithRelationInput | NotificacionOrderByWithRelationInput[]
    cursor?: NotificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionScalarFieldEnum | NotificacionScalarFieldEnum[]
  }

  /**
   * Usuario.notificacionesUsuarios
   */
  export type Usuario$notificacionesUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotificacionesUsuarios
     */
    select?: NotificacionesUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesUsuariosInclude<ExtArgs> | null
    where?: NotificacionesUsuariosWhereInput
    orderBy?: NotificacionesUsuariosOrderByWithRelationInput | NotificacionesUsuariosOrderByWithRelationInput[]
    cursor?: NotificacionesUsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionesUsuariosScalarFieldEnum | NotificacionesUsuariosScalarFieldEnum[]
  }

  /**
   * Usuario.solicitudesEnviadas
   */
  export type Usuario$solicitudesEnviadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    where?: SolicitudTransferenciaProductoWhereInput
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Usuario.solicitudesAprobadasTransferencia
   */
  export type Usuario$solicitudesAprobadasTransferenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    where?: SolicitudTransferenciaProductoWhereInput
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * Usuario.HistorialPrecioCosto
   */
  export type Usuario$HistorialPrecioCostoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecioCosto
     */
    select?: HistorialPrecioCostoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioCostoInclude<ExtArgs> | null
    where?: HistorialPrecioCostoWhereInput
    orderBy?: HistorialPrecioCostoOrderByWithRelationInput | HistorialPrecioCostoOrderByWithRelationInput[]
    cursor?: HistorialPrecioCostoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioCostoScalarFieldEnum | HistorialPrecioCostoScalarFieldEnum[]
  }

  /**
   * Usuario.AjusteStock
   */
  export type Usuario$AjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AjusteStock
     */
    select?: AjusteStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AjusteStockInclude<ExtArgs> | null
    where?: AjusteStockWhereInput
    orderBy?: AjusteStockOrderByWithRelationInput | AjusteStockOrderByWithRelationInput[]
    cursor?: AjusteStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AjusteStockScalarFieldEnum | AjusteStockScalarFieldEnum[]
  }

  /**
   * Usuario.EliminacionProducto
   */
  export type Usuario$EliminacionProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionProducto
     */
    select?: EliminacionProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionProductoInclude<ExtArgs> | null
    where?: EliminacionProductoWhereInput
    orderBy?: EliminacionProductoOrderByWithRelationInput | EliminacionProductoOrderByWithRelationInput[]
    cursor?: EliminacionProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionProductoScalarFieldEnum | EliminacionProductoScalarFieldEnum[]
  }

  /**
   * Usuario.EliminacionCliente
   */
  export type Usuario$EliminacionClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    where?: EliminacionClienteWhereInput
    orderBy?: EliminacionClienteOrderByWithRelationInput | EliminacionClienteOrderByWithRelationInput[]
    cursor?: EliminacionClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionClienteScalarFieldEnum | EliminacionClienteScalarFieldEnum[]
  }

  /**
   * Usuario.EliminacionStock
   */
  export type Usuario$EliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionStock
     */
    select?: EliminacionStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionStockInclude<ExtArgs> | null
    where?: EliminacionStockWhereInput
    orderBy?: EliminacionStockOrderByWithRelationInput | EliminacionStockOrderByWithRelationInput[]
    cursor?: EliminacionStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionStockScalarFieldEnum | EliminacionStockScalarFieldEnum[]
  }

  /**
   * Usuario.RegistroGarantia
   */
  export type Usuario$RegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    where?: RegistroGarantiaWhereInput
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    cursor?: RegistroGarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * Usuario.Garantia
   */
  export type Usuario$GarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    where?: GarantiaWhereInput
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    cursor?: GarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Usuario.RegistroCaja
   */
  export type Usuario$RegistroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    where?: RegistroCajaWhereInput
    orderBy?: RegistroCajaOrderByWithRelationInput | RegistroCajaOrderByWithRelationInput[]
    cursor?: RegistroCajaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroCajaScalarFieldEnum | RegistroCajaScalarFieldEnum[]
  }

  /**
   * Usuario.Deposito
   */
  export type Usuario$DepositoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Deposito
     */
    select?: DepositoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoInclude<ExtArgs> | null
    where?: DepositoWhereInput
    orderBy?: DepositoOrderByWithRelationInput | DepositoOrderByWithRelationInput[]
    cursor?: DepositoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositoScalarFieldEnum | DepositoScalarFieldEnum[]
  }

  /**
   * Usuario.Egreso
   */
  export type Usuario$EgresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Egreso
     */
    select?: EgresoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EgresoInclude<ExtArgs> | null
    where?: EgresoWhereInput
    orderBy?: EgresoOrderByWithRelationInput | EgresoOrderByWithRelationInput[]
    cursor?: EgresoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * Usuario.VentaEliminada
   */
  export type Usuario$VentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    where?: VentaEliminadaWhereInput
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    cursor?: VentaEliminadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaEliminadaScalarFieldEnum | VentaEliminadaScalarFieldEnum[]
  }

  /**
   * Usuario.VentaCuota
   */
  export type Usuario$VentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    where?: VentaCuotaWhereInput
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    cursor?: VentaCuotaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaCuotaScalarFieldEnum | VentaCuotaScalarFieldEnum[]
  }

  /**
   * Usuario.Cuota
   */
  export type Usuario$CuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuota
     */
    select?: CuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuotaInclude<ExtArgs> | null
    where?: CuotaWhereInput
    orderBy?: CuotaOrderByWithRelationInput | CuotaOrderByWithRelationInput[]
    cursor?: CuotaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CuotaScalarFieldEnum | CuotaScalarFieldEnum[]
  }

  /**
   * Usuario.Reparacion
   */
  export type Usuario$ReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    where?: ReparacionWhereInput
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    cursor?: ReparacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Usuario.RegistroReparacion
   */
  export type Usuario$RegistroReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroReparacion
     */
    select?: RegistroReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroReparacionInclude<ExtArgs> | null
    where?: RegistroReparacionWhereInput
    orderBy?: RegistroReparacionOrderByWithRelationInput | RegistroReparacionOrderByWithRelationInput[]
    cursor?: RegistroReparacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroReparacionScalarFieldEnum | RegistroReparacionScalarFieldEnum[]
  }

  /**
   * Usuario.MetaUsuario
   */
  export type Usuario$MetaUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    where?: MetaUsuarioWhereInput
    orderBy?: MetaUsuarioOrderByWithRelationInput | MetaUsuarioOrderByWithRelationInput[]
    cursor?: MetaUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MetaUsuarioScalarFieldEnum | MetaUsuarioScalarFieldEnum[]
  }

  /**
   * Usuario.MetaCobros
   */
  export type Usuario$MetaCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    where?: MetaCobrosWhereInput
    orderBy?: MetaCobrosOrderByWithRelationInput | MetaCobrosOrderByWithRelationInput[]
    cursor?: MetaCobrosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MetaCobrosScalarFieldEnum | MetaCobrosScalarFieldEnum[]
  }

  /**
   * Usuario.DepositoCobro
   */
  export type Usuario$DepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    where?: DepositoCobroWhereInput
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    cursor?: DepositoCobroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositoCobroScalarFieldEnum | DepositoCobroScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model MetaUsuario
   */

  export type AggregateMetaUsuario = {
    _count: MetaUsuarioCountAggregateOutputType | null
    _avg: MetaUsuarioAvgAggregateOutputType | null
    _sum: MetaUsuarioSumAggregateOutputType | null
    _min: MetaUsuarioMinAggregateOutputType | null
    _max: MetaUsuarioMaxAggregateOutputType | null
  }

  export type MetaUsuarioAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    montoMeta: number | null
    montoActual: number | null
    numeroVentas: number | null
  }

  export type MetaUsuarioSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    montoMeta: number | null
    montoActual: number | null
    numeroVentas: number | null
  }

  export type MetaUsuarioMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    fechaInicio: Date | null
    fechaFin: Date | null
    montoMeta: number | null
    montoActual: number | null
    cumplida: boolean | null
    fechaCumplida: Date | null
    numeroVentas: number | null
    tituloMeta: string | null
    estado: $Enums.EstadoMetaTienda | null
  }

  export type MetaUsuarioMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    fechaInicio: Date | null
    fechaFin: Date | null
    montoMeta: number | null
    montoActual: number | null
    cumplida: boolean | null
    fechaCumplida: Date | null
    numeroVentas: number | null
    tituloMeta: string | null
    estado: $Enums.EstadoMetaTienda | null
  }

  export type MetaUsuarioCountAggregateOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    fechaInicio: number
    fechaFin: number
    montoMeta: number
    montoActual: number
    cumplida: number
    fechaCumplida: number
    numeroVentas: number
    tituloMeta: number
    estado: number
    _all: number
  }


  export type MetaUsuarioAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    montoMeta?: true
    montoActual?: true
    numeroVentas?: true
  }

  export type MetaUsuarioSumAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    montoMeta?: true
    montoActual?: true
    numeroVentas?: true
  }

  export type MetaUsuarioMinAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    fechaInicio?: true
    fechaFin?: true
    montoMeta?: true
    montoActual?: true
    cumplida?: true
    fechaCumplida?: true
    numeroVentas?: true
    tituloMeta?: true
    estado?: true
  }

  export type MetaUsuarioMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    fechaInicio?: true
    fechaFin?: true
    montoMeta?: true
    montoActual?: true
    cumplida?: true
    fechaCumplida?: true
    numeroVentas?: true
    tituloMeta?: true
    estado?: true
  }

  export type MetaUsuarioCountAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    fechaInicio?: true
    fechaFin?: true
    montoMeta?: true
    montoActual?: true
    cumplida?: true
    fechaCumplida?: true
    numeroVentas?: true
    tituloMeta?: true
    estado?: true
    _all?: true
  }

  export type MetaUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetaUsuario to aggregate.
     */
    where?: MetaUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaUsuarios to fetch.
     */
    orderBy?: MetaUsuarioOrderByWithRelationInput | MetaUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MetaUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MetaUsuarios
    **/
    _count?: true | MetaUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MetaUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MetaUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MetaUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MetaUsuarioMaxAggregateInputType
  }

  export type GetMetaUsuarioAggregateType<T extends MetaUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateMetaUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetaUsuario[P]>
      : GetScalarType<T[P], AggregateMetaUsuario[P]>
  }




  export type MetaUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetaUsuarioWhereInput
    orderBy?: MetaUsuarioOrderByWithAggregationInput | MetaUsuarioOrderByWithAggregationInput[]
    by: MetaUsuarioScalarFieldEnum[] | MetaUsuarioScalarFieldEnum
    having?: MetaUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MetaUsuarioCountAggregateInputType | true
    _avg?: MetaUsuarioAvgAggregateInputType
    _sum?: MetaUsuarioSumAggregateInputType
    _min?: MetaUsuarioMinAggregateInputType
    _max?: MetaUsuarioMaxAggregateInputType
  }

  export type MetaUsuarioGroupByOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    fechaInicio: Date
    fechaFin: Date
    montoMeta: number
    montoActual: number
    cumplida: boolean
    fechaCumplida: Date | null
    numeroVentas: number
    tituloMeta: string | null
    estado: $Enums.EstadoMetaTienda
    _count: MetaUsuarioCountAggregateOutputType | null
    _avg: MetaUsuarioAvgAggregateOutputType | null
    _sum: MetaUsuarioSumAggregateOutputType | null
    _min: MetaUsuarioMinAggregateOutputType | null
    _max: MetaUsuarioMaxAggregateOutputType | null
  }

  type GetMetaUsuarioGroupByPayload<T extends MetaUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MetaUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MetaUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MetaUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], MetaUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type MetaUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    montoMeta?: boolean
    montoActual?: boolean
    cumplida?: boolean
    fechaCumplida?: boolean
    numeroVentas?: boolean
    tituloMeta?: boolean
    estado?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metaUsuario"]>

  export type MetaUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    montoMeta?: boolean
    montoActual?: boolean
    cumplida?: boolean
    fechaCumplida?: boolean
    numeroVentas?: boolean
    tituloMeta?: boolean
    estado?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metaUsuario"]>

  export type MetaUsuarioSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    montoMeta?: boolean
    montoActual?: boolean
    cumplida?: boolean
    fechaCumplida?: boolean
    numeroVentas?: boolean
    tituloMeta?: boolean
    estado?: boolean
  }

  export type MetaUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }
  export type MetaUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $MetaUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MetaUsuario"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      sucursal: Prisma.$SucursalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      sucursalId: number
      fechaInicio: Date
      fechaFin: Date
      montoMeta: number
      montoActual: number
      cumplida: boolean
      fechaCumplida: Date | null
      numeroVentas: number
      tituloMeta: string | null
      estado: $Enums.EstadoMetaTienda
    }, ExtArgs["result"]["metaUsuario"]>
    composites: {}
  }

  type MetaUsuarioGetPayload<S extends boolean | null | undefined | MetaUsuarioDefaultArgs> = $Result.GetResult<Prisma.$MetaUsuarioPayload, S>

  type MetaUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MetaUsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MetaUsuarioCountAggregateInputType | true
    }

  export interface MetaUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MetaUsuario'], meta: { name: 'MetaUsuario' } }
    /**
     * Find zero or one MetaUsuario that matches the filter.
     * @param {MetaUsuarioFindUniqueArgs} args - Arguments to find a MetaUsuario
     * @example
     * // Get one MetaUsuario
     * const metaUsuario = await prisma.metaUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MetaUsuarioFindUniqueArgs>(args: SelectSubset<T, MetaUsuarioFindUniqueArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MetaUsuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MetaUsuarioFindUniqueOrThrowArgs} args - Arguments to find a MetaUsuario
     * @example
     * // Get one MetaUsuario
     * const metaUsuario = await prisma.metaUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MetaUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, MetaUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MetaUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioFindFirstArgs} args - Arguments to find a MetaUsuario
     * @example
     * // Get one MetaUsuario
     * const metaUsuario = await prisma.metaUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MetaUsuarioFindFirstArgs>(args?: SelectSubset<T, MetaUsuarioFindFirstArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MetaUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioFindFirstOrThrowArgs} args - Arguments to find a MetaUsuario
     * @example
     * // Get one MetaUsuario
     * const metaUsuario = await prisma.metaUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MetaUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, MetaUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MetaUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MetaUsuarios
     * const metaUsuarios = await prisma.metaUsuario.findMany()
     * 
     * // Get first 10 MetaUsuarios
     * const metaUsuarios = await prisma.metaUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const metaUsuarioWithIdOnly = await prisma.metaUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MetaUsuarioFindManyArgs>(args?: SelectSubset<T, MetaUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MetaUsuario.
     * @param {MetaUsuarioCreateArgs} args - Arguments to create a MetaUsuario.
     * @example
     * // Create one MetaUsuario
     * const MetaUsuario = await prisma.metaUsuario.create({
     *   data: {
     *     // ... data to create a MetaUsuario
     *   }
     * })
     * 
     */
    create<T extends MetaUsuarioCreateArgs>(args: SelectSubset<T, MetaUsuarioCreateArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MetaUsuarios.
     * @param {MetaUsuarioCreateManyArgs} args - Arguments to create many MetaUsuarios.
     * @example
     * // Create many MetaUsuarios
     * const metaUsuario = await prisma.metaUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MetaUsuarioCreateManyArgs>(args?: SelectSubset<T, MetaUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MetaUsuarios and returns the data saved in the database.
     * @param {MetaUsuarioCreateManyAndReturnArgs} args - Arguments to create many MetaUsuarios.
     * @example
     * // Create many MetaUsuarios
     * const metaUsuario = await prisma.metaUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MetaUsuarios and only return the `id`
     * const metaUsuarioWithIdOnly = await prisma.metaUsuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MetaUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, MetaUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MetaUsuario.
     * @param {MetaUsuarioDeleteArgs} args - Arguments to delete one MetaUsuario.
     * @example
     * // Delete one MetaUsuario
     * const MetaUsuario = await prisma.metaUsuario.delete({
     *   where: {
     *     // ... filter to delete one MetaUsuario
     *   }
     * })
     * 
     */
    delete<T extends MetaUsuarioDeleteArgs>(args: SelectSubset<T, MetaUsuarioDeleteArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MetaUsuario.
     * @param {MetaUsuarioUpdateArgs} args - Arguments to update one MetaUsuario.
     * @example
     * // Update one MetaUsuario
     * const metaUsuario = await prisma.metaUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MetaUsuarioUpdateArgs>(args: SelectSubset<T, MetaUsuarioUpdateArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MetaUsuarios.
     * @param {MetaUsuarioDeleteManyArgs} args - Arguments to filter MetaUsuarios to delete.
     * @example
     * // Delete a few MetaUsuarios
     * const { count } = await prisma.metaUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MetaUsuarioDeleteManyArgs>(args?: SelectSubset<T, MetaUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetaUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MetaUsuarios
     * const metaUsuario = await prisma.metaUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MetaUsuarioUpdateManyArgs>(args: SelectSubset<T, MetaUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MetaUsuario.
     * @param {MetaUsuarioUpsertArgs} args - Arguments to update or create a MetaUsuario.
     * @example
     * // Update or create a MetaUsuario
     * const metaUsuario = await prisma.metaUsuario.upsert({
     *   create: {
     *     // ... data to create a MetaUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MetaUsuario we want to update
     *   }
     * })
     */
    upsert<T extends MetaUsuarioUpsertArgs>(args: SelectSubset<T, MetaUsuarioUpsertArgs<ExtArgs>>): Prisma__MetaUsuarioClient<$Result.GetResult<Prisma.$MetaUsuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MetaUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioCountArgs} args - Arguments to filter MetaUsuarios to count.
     * @example
     * // Count the number of MetaUsuarios
     * const count = await prisma.metaUsuario.count({
     *   where: {
     *     // ... the filter for the MetaUsuarios we want to count
     *   }
     * })
    **/
    count<T extends MetaUsuarioCountArgs>(
      args?: Subset<T, MetaUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MetaUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MetaUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MetaUsuarioAggregateArgs>(args: Subset<T, MetaUsuarioAggregateArgs>): Prisma.PrismaPromise<GetMetaUsuarioAggregateType<T>>

    /**
     * Group by MetaUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MetaUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MetaUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: MetaUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MetaUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetaUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MetaUsuario model
   */
  readonly fields: MetaUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MetaUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MetaUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MetaUsuario model
   */ 
  interface MetaUsuarioFieldRefs {
    readonly id: FieldRef<"MetaUsuario", 'Int'>
    readonly usuarioId: FieldRef<"MetaUsuario", 'Int'>
    readonly sucursalId: FieldRef<"MetaUsuario", 'Int'>
    readonly fechaInicio: FieldRef<"MetaUsuario", 'DateTime'>
    readonly fechaFin: FieldRef<"MetaUsuario", 'DateTime'>
    readonly montoMeta: FieldRef<"MetaUsuario", 'Float'>
    readonly montoActual: FieldRef<"MetaUsuario", 'Float'>
    readonly cumplida: FieldRef<"MetaUsuario", 'Boolean'>
    readonly fechaCumplida: FieldRef<"MetaUsuario", 'DateTime'>
    readonly numeroVentas: FieldRef<"MetaUsuario", 'Float'>
    readonly tituloMeta: FieldRef<"MetaUsuario", 'String'>
    readonly estado: FieldRef<"MetaUsuario", 'EstadoMetaTienda'>
  }
    

  // Custom InputTypes
  /**
   * MetaUsuario findUnique
   */
  export type MetaUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which MetaUsuario to fetch.
     */
    where: MetaUsuarioWhereUniqueInput
  }

  /**
   * MetaUsuario findUniqueOrThrow
   */
  export type MetaUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which MetaUsuario to fetch.
     */
    where: MetaUsuarioWhereUniqueInput
  }

  /**
   * MetaUsuario findFirst
   */
  export type MetaUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which MetaUsuario to fetch.
     */
    where?: MetaUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaUsuarios to fetch.
     */
    orderBy?: MetaUsuarioOrderByWithRelationInput | MetaUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetaUsuarios.
     */
    cursor?: MetaUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetaUsuarios.
     */
    distinct?: MetaUsuarioScalarFieldEnum | MetaUsuarioScalarFieldEnum[]
  }

  /**
   * MetaUsuario findFirstOrThrow
   */
  export type MetaUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which MetaUsuario to fetch.
     */
    where?: MetaUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaUsuarios to fetch.
     */
    orderBy?: MetaUsuarioOrderByWithRelationInput | MetaUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetaUsuarios.
     */
    cursor?: MetaUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetaUsuarios.
     */
    distinct?: MetaUsuarioScalarFieldEnum | MetaUsuarioScalarFieldEnum[]
  }

  /**
   * MetaUsuario findMany
   */
  export type MetaUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which MetaUsuarios to fetch.
     */
    where?: MetaUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaUsuarios to fetch.
     */
    orderBy?: MetaUsuarioOrderByWithRelationInput | MetaUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MetaUsuarios.
     */
    cursor?: MetaUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaUsuarios.
     */
    skip?: number
    distinct?: MetaUsuarioScalarFieldEnum | MetaUsuarioScalarFieldEnum[]
  }

  /**
   * MetaUsuario create
   */
  export type MetaUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a MetaUsuario.
     */
    data: XOR<MetaUsuarioCreateInput, MetaUsuarioUncheckedCreateInput>
  }

  /**
   * MetaUsuario createMany
   */
  export type MetaUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MetaUsuarios.
     */
    data: MetaUsuarioCreateManyInput | MetaUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetaUsuario createManyAndReturn
   */
  export type MetaUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MetaUsuarios.
     */
    data: MetaUsuarioCreateManyInput | MetaUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MetaUsuario update
   */
  export type MetaUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a MetaUsuario.
     */
    data: XOR<MetaUsuarioUpdateInput, MetaUsuarioUncheckedUpdateInput>
    /**
     * Choose, which MetaUsuario to update.
     */
    where: MetaUsuarioWhereUniqueInput
  }

  /**
   * MetaUsuario updateMany
   */
  export type MetaUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MetaUsuarios.
     */
    data: XOR<MetaUsuarioUpdateManyMutationInput, MetaUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which MetaUsuarios to update
     */
    where?: MetaUsuarioWhereInput
  }

  /**
   * MetaUsuario upsert
   */
  export type MetaUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the MetaUsuario to update in case it exists.
     */
    where: MetaUsuarioWhereUniqueInput
    /**
     * In case the MetaUsuario found by the `where` argument doesn't exist, create a new MetaUsuario with this data.
     */
    create: XOR<MetaUsuarioCreateInput, MetaUsuarioUncheckedCreateInput>
    /**
     * In case the MetaUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MetaUsuarioUpdateInput, MetaUsuarioUncheckedUpdateInput>
  }

  /**
   * MetaUsuario delete
   */
  export type MetaUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
    /**
     * Filter which MetaUsuario to delete.
     */
    where: MetaUsuarioWhereUniqueInput
  }

  /**
   * MetaUsuario deleteMany
   */
  export type MetaUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetaUsuarios to delete
     */
    where?: MetaUsuarioWhereInput
  }

  /**
   * MetaUsuario without action
   */
  export type MetaUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaUsuario
     */
    select?: MetaUsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model MetaCobros
   */

  export type AggregateMetaCobros = {
    _count: MetaCobrosCountAggregateOutputType | null
    _avg: MetaCobrosAvgAggregateOutputType | null
    _sum: MetaCobrosSumAggregateOutputType | null
    _min: MetaCobrosMinAggregateOutputType | null
    _max: MetaCobrosMaxAggregateOutputType | null
  }

  export type MetaCobrosAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    montoMeta: number | null
    montoActual: number | null
    numeroDepositos: number | null
  }

  export type MetaCobrosSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    montoMeta: number | null
    montoActual: number | null
    numeroDepositos: number | null
  }

  export type MetaCobrosMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    fechaCreado: Date | null
    fechaInicio: Date | null
    fechaFin: Date | null
    montoMeta: number | null
    montoActual: number | null
    cumplida: boolean | null
    fechaCumplida: Date | null
    numeroDepositos: number | null
    tituloMeta: string | null
    estado: $Enums.EstadoMetaCobro | null
  }

  export type MetaCobrosMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    fechaCreado: Date | null
    fechaInicio: Date | null
    fechaFin: Date | null
    montoMeta: number | null
    montoActual: number | null
    cumplida: boolean | null
    fechaCumplida: Date | null
    numeroDepositos: number | null
    tituloMeta: string | null
    estado: $Enums.EstadoMetaCobro | null
  }

  export type MetaCobrosCountAggregateOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    fechaCreado: number
    fechaInicio: number
    fechaFin: number
    montoMeta: number
    montoActual: number
    cumplida: number
    fechaCumplida: number
    numeroDepositos: number
    tituloMeta: number
    estado: number
    _all: number
  }


  export type MetaCobrosAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    montoMeta?: true
    montoActual?: true
    numeroDepositos?: true
  }

  export type MetaCobrosSumAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    montoMeta?: true
    montoActual?: true
    numeroDepositos?: true
  }

  export type MetaCobrosMinAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    fechaCreado?: true
    fechaInicio?: true
    fechaFin?: true
    montoMeta?: true
    montoActual?: true
    cumplida?: true
    fechaCumplida?: true
    numeroDepositos?: true
    tituloMeta?: true
    estado?: true
  }

  export type MetaCobrosMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    fechaCreado?: true
    fechaInicio?: true
    fechaFin?: true
    montoMeta?: true
    montoActual?: true
    cumplida?: true
    fechaCumplida?: true
    numeroDepositos?: true
    tituloMeta?: true
    estado?: true
  }

  export type MetaCobrosCountAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    fechaCreado?: true
    fechaInicio?: true
    fechaFin?: true
    montoMeta?: true
    montoActual?: true
    cumplida?: true
    fechaCumplida?: true
    numeroDepositos?: true
    tituloMeta?: true
    estado?: true
    _all?: true
  }

  export type MetaCobrosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetaCobros to aggregate.
     */
    where?: MetaCobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaCobros to fetch.
     */
    orderBy?: MetaCobrosOrderByWithRelationInput | MetaCobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MetaCobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaCobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MetaCobros
    **/
    _count?: true | MetaCobrosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MetaCobrosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MetaCobrosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MetaCobrosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MetaCobrosMaxAggregateInputType
  }

  export type GetMetaCobrosAggregateType<T extends MetaCobrosAggregateArgs> = {
        [P in keyof T & keyof AggregateMetaCobros]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetaCobros[P]>
      : GetScalarType<T[P], AggregateMetaCobros[P]>
  }




  export type MetaCobrosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetaCobrosWhereInput
    orderBy?: MetaCobrosOrderByWithAggregationInput | MetaCobrosOrderByWithAggregationInput[]
    by: MetaCobrosScalarFieldEnum[] | MetaCobrosScalarFieldEnum
    having?: MetaCobrosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MetaCobrosCountAggregateInputType | true
    _avg?: MetaCobrosAvgAggregateInputType
    _sum?: MetaCobrosSumAggregateInputType
    _min?: MetaCobrosMinAggregateInputType
    _max?: MetaCobrosMaxAggregateInputType
  }

  export type MetaCobrosGroupByOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    fechaCreado: Date
    fechaInicio: Date
    fechaFin: Date
    montoMeta: number
    montoActual: number
    cumplida: boolean
    fechaCumplida: Date | null
    numeroDepositos: number
    tituloMeta: string | null
    estado: $Enums.EstadoMetaCobro
    _count: MetaCobrosCountAggregateOutputType | null
    _avg: MetaCobrosAvgAggregateOutputType | null
    _sum: MetaCobrosSumAggregateOutputType | null
    _min: MetaCobrosMinAggregateOutputType | null
    _max: MetaCobrosMaxAggregateOutputType | null
  }

  type GetMetaCobrosGroupByPayload<T extends MetaCobrosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MetaCobrosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MetaCobrosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MetaCobrosGroupByOutputType[P]>
            : GetScalarType<T[P], MetaCobrosGroupByOutputType[P]>
        }
      >
    >


  export type MetaCobrosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    fechaCreado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    montoMeta?: boolean
    montoActual?: boolean
    cumplida?: boolean
    fechaCumplida?: boolean
    numeroDepositos?: boolean
    tituloMeta?: boolean
    estado?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    DepositoCobro?: boolean | MetaCobros$DepositoCobroArgs<ExtArgs>
    _count?: boolean | MetaCobrosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metaCobros"]>

  export type MetaCobrosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    fechaCreado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    montoMeta?: boolean
    montoActual?: boolean
    cumplida?: boolean
    fechaCumplida?: boolean
    numeroDepositos?: boolean
    tituloMeta?: boolean
    estado?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metaCobros"]>

  export type MetaCobrosSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    fechaCreado?: boolean
    fechaInicio?: boolean
    fechaFin?: boolean
    montoMeta?: boolean
    montoActual?: boolean
    cumplida?: boolean
    fechaCumplida?: boolean
    numeroDepositos?: boolean
    tituloMeta?: boolean
    estado?: boolean
  }

  export type MetaCobrosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    DepositoCobro?: boolean | MetaCobros$DepositoCobroArgs<ExtArgs>
    _count?: boolean | MetaCobrosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MetaCobrosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $MetaCobrosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MetaCobros"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      DepositoCobro: Prisma.$DepositoCobroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      sucursalId: number
      fechaCreado: Date
      fechaInicio: Date
      fechaFin: Date
      montoMeta: number
      montoActual: number
      cumplida: boolean
      fechaCumplida: Date | null
      numeroDepositos: number
      tituloMeta: string | null
      estado: $Enums.EstadoMetaCobro
    }, ExtArgs["result"]["metaCobros"]>
    composites: {}
  }

  type MetaCobrosGetPayload<S extends boolean | null | undefined | MetaCobrosDefaultArgs> = $Result.GetResult<Prisma.$MetaCobrosPayload, S>

  type MetaCobrosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MetaCobrosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MetaCobrosCountAggregateInputType | true
    }

  export interface MetaCobrosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MetaCobros'], meta: { name: 'MetaCobros' } }
    /**
     * Find zero or one MetaCobros that matches the filter.
     * @param {MetaCobrosFindUniqueArgs} args - Arguments to find a MetaCobros
     * @example
     * // Get one MetaCobros
     * const metaCobros = await prisma.metaCobros.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MetaCobrosFindUniqueArgs>(args: SelectSubset<T, MetaCobrosFindUniqueArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MetaCobros that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MetaCobrosFindUniqueOrThrowArgs} args - Arguments to find a MetaCobros
     * @example
     * // Get one MetaCobros
     * const metaCobros = await prisma.metaCobros.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MetaCobrosFindUniqueOrThrowArgs>(args: SelectSubset<T, MetaCobrosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MetaCobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosFindFirstArgs} args - Arguments to find a MetaCobros
     * @example
     * // Get one MetaCobros
     * const metaCobros = await prisma.metaCobros.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MetaCobrosFindFirstArgs>(args?: SelectSubset<T, MetaCobrosFindFirstArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MetaCobros that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosFindFirstOrThrowArgs} args - Arguments to find a MetaCobros
     * @example
     * // Get one MetaCobros
     * const metaCobros = await prisma.metaCobros.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MetaCobrosFindFirstOrThrowArgs>(args?: SelectSubset<T, MetaCobrosFindFirstOrThrowArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MetaCobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MetaCobros
     * const metaCobros = await prisma.metaCobros.findMany()
     * 
     * // Get first 10 MetaCobros
     * const metaCobros = await prisma.metaCobros.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const metaCobrosWithIdOnly = await prisma.metaCobros.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MetaCobrosFindManyArgs>(args?: SelectSubset<T, MetaCobrosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MetaCobros.
     * @param {MetaCobrosCreateArgs} args - Arguments to create a MetaCobros.
     * @example
     * // Create one MetaCobros
     * const MetaCobros = await prisma.metaCobros.create({
     *   data: {
     *     // ... data to create a MetaCobros
     *   }
     * })
     * 
     */
    create<T extends MetaCobrosCreateArgs>(args: SelectSubset<T, MetaCobrosCreateArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MetaCobros.
     * @param {MetaCobrosCreateManyArgs} args - Arguments to create many MetaCobros.
     * @example
     * // Create many MetaCobros
     * const metaCobros = await prisma.metaCobros.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MetaCobrosCreateManyArgs>(args?: SelectSubset<T, MetaCobrosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MetaCobros and returns the data saved in the database.
     * @param {MetaCobrosCreateManyAndReturnArgs} args - Arguments to create many MetaCobros.
     * @example
     * // Create many MetaCobros
     * const metaCobros = await prisma.metaCobros.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MetaCobros and only return the `id`
     * const metaCobrosWithIdOnly = await prisma.metaCobros.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MetaCobrosCreateManyAndReturnArgs>(args?: SelectSubset<T, MetaCobrosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MetaCobros.
     * @param {MetaCobrosDeleteArgs} args - Arguments to delete one MetaCobros.
     * @example
     * // Delete one MetaCobros
     * const MetaCobros = await prisma.metaCobros.delete({
     *   where: {
     *     // ... filter to delete one MetaCobros
     *   }
     * })
     * 
     */
    delete<T extends MetaCobrosDeleteArgs>(args: SelectSubset<T, MetaCobrosDeleteArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MetaCobros.
     * @param {MetaCobrosUpdateArgs} args - Arguments to update one MetaCobros.
     * @example
     * // Update one MetaCobros
     * const metaCobros = await prisma.metaCobros.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MetaCobrosUpdateArgs>(args: SelectSubset<T, MetaCobrosUpdateArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MetaCobros.
     * @param {MetaCobrosDeleteManyArgs} args - Arguments to filter MetaCobros to delete.
     * @example
     * // Delete a few MetaCobros
     * const { count } = await prisma.metaCobros.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MetaCobrosDeleteManyArgs>(args?: SelectSubset<T, MetaCobrosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetaCobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MetaCobros
     * const metaCobros = await prisma.metaCobros.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MetaCobrosUpdateManyArgs>(args: SelectSubset<T, MetaCobrosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MetaCobros.
     * @param {MetaCobrosUpsertArgs} args - Arguments to update or create a MetaCobros.
     * @example
     * // Update or create a MetaCobros
     * const metaCobros = await prisma.metaCobros.upsert({
     *   create: {
     *     // ... data to create a MetaCobros
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MetaCobros we want to update
     *   }
     * })
     */
    upsert<T extends MetaCobrosUpsertArgs>(args: SelectSubset<T, MetaCobrosUpsertArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MetaCobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosCountArgs} args - Arguments to filter MetaCobros to count.
     * @example
     * // Count the number of MetaCobros
     * const count = await prisma.metaCobros.count({
     *   where: {
     *     // ... the filter for the MetaCobros we want to count
     *   }
     * })
    **/
    count<T extends MetaCobrosCountArgs>(
      args?: Subset<T, MetaCobrosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MetaCobrosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MetaCobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MetaCobrosAggregateArgs>(args: Subset<T, MetaCobrosAggregateArgs>): Prisma.PrismaPromise<GetMetaCobrosAggregateType<T>>

    /**
     * Group by MetaCobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetaCobrosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MetaCobrosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MetaCobrosGroupByArgs['orderBy'] }
        : { orderBy?: MetaCobrosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MetaCobrosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetaCobrosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MetaCobros model
   */
  readonly fields: MetaCobrosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MetaCobros.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MetaCobrosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    DepositoCobro<T extends MetaCobros$DepositoCobroArgs<ExtArgs> = {}>(args?: Subset<T, MetaCobros$DepositoCobroArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MetaCobros model
   */ 
  interface MetaCobrosFieldRefs {
    readonly id: FieldRef<"MetaCobros", 'Int'>
    readonly usuarioId: FieldRef<"MetaCobros", 'Int'>
    readonly sucursalId: FieldRef<"MetaCobros", 'Int'>
    readonly fechaCreado: FieldRef<"MetaCobros", 'DateTime'>
    readonly fechaInicio: FieldRef<"MetaCobros", 'DateTime'>
    readonly fechaFin: FieldRef<"MetaCobros", 'DateTime'>
    readonly montoMeta: FieldRef<"MetaCobros", 'Float'>
    readonly montoActual: FieldRef<"MetaCobros", 'Float'>
    readonly cumplida: FieldRef<"MetaCobros", 'Boolean'>
    readonly fechaCumplida: FieldRef<"MetaCobros", 'DateTime'>
    readonly numeroDepositos: FieldRef<"MetaCobros", 'Int'>
    readonly tituloMeta: FieldRef<"MetaCobros", 'String'>
    readonly estado: FieldRef<"MetaCobros", 'EstadoMetaCobro'>
  }
    

  // Custom InputTypes
  /**
   * MetaCobros findUnique
   */
  export type MetaCobrosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * Filter, which MetaCobros to fetch.
     */
    where: MetaCobrosWhereUniqueInput
  }

  /**
   * MetaCobros findUniqueOrThrow
   */
  export type MetaCobrosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * Filter, which MetaCobros to fetch.
     */
    where: MetaCobrosWhereUniqueInput
  }

  /**
   * MetaCobros findFirst
   */
  export type MetaCobrosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * Filter, which MetaCobros to fetch.
     */
    where?: MetaCobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaCobros to fetch.
     */
    orderBy?: MetaCobrosOrderByWithRelationInput | MetaCobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetaCobros.
     */
    cursor?: MetaCobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaCobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetaCobros.
     */
    distinct?: MetaCobrosScalarFieldEnum | MetaCobrosScalarFieldEnum[]
  }

  /**
   * MetaCobros findFirstOrThrow
   */
  export type MetaCobrosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * Filter, which MetaCobros to fetch.
     */
    where?: MetaCobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaCobros to fetch.
     */
    orderBy?: MetaCobrosOrderByWithRelationInput | MetaCobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetaCobros.
     */
    cursor?: MetaCobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaCobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetaCobros.
     */
    distinct?: MetaCobrosScalarFieldEnum | MetaCobrosScalarFieldEnum[]
  }

  /**
   * MetaCobros findMany
   */
  export type MetaCobrosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * Filter, which MetaCobros to fetch.
     */
    where?: MetaCobrosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetaCobros to fetch.
     */
    orderBy?: MetaCobrosOrderByWithRelationInput | MetaCobrosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MetaCobros.
     */
    cursor?: MetaCobrosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetaCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetaCobros.
     */
    skip?: number
    distinct?: MetaCobrosScalarFieldEnum | MetaCobrosScalarFieldEnum[]
  }

  /**
   * MetaCobros create
   */
  export type MetaCobrosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * The data needed to create a MetaCobros.
     */
    data: XOR<MetaCobrosCreateInput, MetaCobrosUncheckedCreateInput>
  }

  /**
   * MetaCobros createMany
   */
  export type MetaCobrosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MetaCobros.
     */
    data: MetaCobrosCreateManyInput | MetaCobrosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetaCobros createManyAndReturn
   */
  export type MetaCobrosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MetaCobros.
     */
    data: MetaCobrosCreateManyInput | MetaCobrosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MetaCobros update
   */
  export type MetaCobrosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * The data needed to update a MetaCobros.
     */
    data: XOR<MetaCobrosUpdateInput, MetaCobrosUncheckedUpdateInput>
    /**
     * Choose, which MetaCobros to update.
     */
    where: MetaCobrosWhereUniqueInput
  }

  /**
   * MetaCobros updateMany
   */
  export type MetaCobrosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MetaCobros.
     */
    data: XOR<MetaCobrosUpdateManyMutationInput, MetaCobrosUncheckedUpdateManyInput>
    /**
     * Filter which MetaCobros to update
     */
    where?: MetaCobrosWhereInput
  }

  /**
   * MetaCobros upsert
   */
  export type MetaCobrosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * The filter to search for the MetaCobros to update in case it exists.
     */
    where: MetaCobrosWhereUniqueInput
    /**
     * In case the MetaCobros found by the `where` argument doesn't exist, create a new MetaCobros with this data.
     */
    create: XOR<MetaCobrosCreateInput, MetaCobrosUncheckedCreateInput>
    /**
     * In case the MetaCobros was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MetaCobrosUpdateInput, MetaCobrosUncheckedUpdateInput>
  }

  /**
   * MetaCobros delete
   */
  export type MetaCobrosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
    /**
     * Filter which MetaCobros to delete.
     */
    where: MetaCobrosWhereUniqueInput
  }

  /**
   * MetaCobros deleteMany
   */
  export type MetaCobrosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetaCobros to delete
     */
    where?: MetaCobrosWhereInput
  }

  /**
   * MetaCobros.DepositoCobro
   */
  export type MetaCobros$DepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    where?: DepositoCobroWhereInput
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    cursor?: DepositoCobroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositoCobroScalarFieldEnum | DepositoCobroScalarFieldEnum[]
  }

  /**
   * MetaCobros without action
   */
  export type MetaCobrosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetaCobros
     */
    select?: MetaCobrosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetaCobrosInclude<ExtArgs> | null
  }


  /**
   * Model DepositoCobro
   */

  export type AggregateDepositoCobro = {
    _count: DepositoCobroCountAggregateOutputType | null
    _avg: DepositoCobroAvgAggregateOutputType | null
    _sum: DepositoCobroSumAggregateOutputType | null
    _min: DepositoCobroMinAggregateOutputType | null
    _max: DepositoCobroMaxAggregateOutputType | null
  }

  export type DepositoCobroAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    montoDepositado: number | null
    metaCobroId: number | null
  }

  export type DepositoCobroSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    montoDepositado: number | null
    metaCobroId: number | null
  }

  export type DepositoCobroMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    numeroBoleta: string | null
    fechaRegistro: Date | null
    montoDepositado: number | null
    descripcion: string | null
    metaCobroId: number | null
  }

  export type DepositoCobroMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    sucursalId: number | null
    numeroBoleta: string | null
    fechaRegistro: Date | null
    montoDepositado: number | null
    descripcion: string | null
    metaCobroId: number | null
  }

  export type DepositoCobroCountAggregateOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    numeroBoleta: number
    fechaRegistro: number
    montoDepositado: number
    descripcion: number
    metaCobroId: number
    _all: number
  }


  export type DepositoCobroAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    montoDepositado?: true
    metaCobroId?: true
  }

  export type DepositoCobroSumAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    montoDepositado?: true
    metaCobroId?: true
  }

  export type DepositoCobroMinAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    numeroBoleta?: true
    fechaRegistro?: true
    montoDepositado?: true
    descripcion?: true
    metaCobroId?: true
  }

  export type DepositoCobroMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    numeroBoleta?: true
    fechaRegistro?: true
    montoDepositado?: true
    descripcion?: true
    metaCobroId?: true
  }

  export type DepositoCobroCountAggregateInputType = {
    id?: true
    usuarioId?: true
    sucursalId?: true
    numeroBoleta?: true
    fechaRegistro?: true
    montoDepositado?: true
    descripcion?: true
    metaCobroId?: true
    _all?: true
  }

  export type DepositoCobroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DepositoCobro to aggregate.
     */
    where?: DepositoCobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositoCobros to fetch.
     */
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepositoCobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositoCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositoCobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DepositoCobros
    **/
    _count?: true | DepositoCobroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepositoCobroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepositoCobroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepositoCobroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepositoCobroMaxAggregateInputType
  }

  export type GetDepositoCobroAggregateType<T extends DepositoCobroAggregateArgs> = {
        [P in keyof T & keyof AggregateDepositoCobro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepositoCobro[P]>
      : GetScalarType<T[P], AggregateDepositoCobro[P]>
  }




  export type DepositoCobroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositoCobroWhereInput
    orderBy?: DepositoCobroOrderByWithAggregationInput | DepositoCobroOrderByWithAggregationInput[]
    by: DepositoCobroScalarFieldEnum[] | DepositoCobroScalarFieldEnum
    having?: DepositoCobroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepositoCobroCountAggregateInputType | true
    _avg?: DepositoCobroAvgAggregateInputType
    _sum?: DepositoCobroSumAggregateInputType
    _min?: DepositoCobroMinAggregateInputType
    _max?: DepositoCobroMaxAggregateInputType
  }

  export type DepositoCobroGroupByOutputType = {
    id: number
    usuarioId: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro: Date
    montoDepositado: number
    descripcion: string | null
    metaCobroId: number
    _count: DepositoCobroCountAggregateOutputType | null
    _avg: DepositoCobroAvgAggregateOutputType | null
    _sum: DepositoCobroSumAggregateOutputType | null
    _min: DepositoCobroMinAggregateOutputType | null
    _max: DepositoCobroMaxAggregateOutputType | null
  }

  type GetDepositoCobroGroupByPayload<T extends DepositoCobroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepositoCobroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepositoCobroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepositoCobroGroupByOutputType[P]>
            : GetScalarType<T[P], DepositoCobroGroupByOutputType[P]>
        }
      >
    >


  export type DepositoCobroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    numeroBoleta?: boolean
    fechaRegistro?: boolean
    montoDepositado?: boolean
    descripcion?: boolean
    metaCobroId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    metaCobro?: boolean | MetaCobrosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depositoCobro"]>

  export type DepositoCobroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    numeroBoleta?: boolean
    fechaRegistro?: boolean
    montoDepositado?: boolean
    descripcion?: boolean
    metaCobroId?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    metaCobro?: boolean | MetaCobrosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depositoCobro"]>

  export type DepositoCobroSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    sucursalId?: boolean
    numeroBoleta?: boolean
    fechaRegistro?: boolean
    montoDepositado?: boolean
    descripcion?: boolean
    metaCobroId?: boolean
  }

  export type DepositoCobroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    metaCobro?: boolean | MetaCobrosDefaultArgs<ExtArgs>
  }
  export type DepositoCobroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    metaCobro?: boolean | MetaCobrosDefaultArgs<ExtArgs>
  }

  export type $DepositoCobroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DepositoCobro"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      metaCobro: Prisma.$MetaCobrosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      sucursalId: number
      numeroBoleta: string
      fechaRegistro: Date
      montoDepositado: number
      descripcion: string | null
      metaCobroId: number
    }, ExtArgs["result"]["depositoCobro"]>
    composites: {}
  }

  type DepositoCobroGetPayload<S extends boolean | null | undefined | DepositoCobroDefaultArgs> = $Result.GetResult<Prisma.$DepositoCobroPayload, S>

  type DepositoCobroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DepositoCobroFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DepositoCobroCountAggregateInputType | true
    }

  export interface DepositoCobroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DepositoCobro'], meta: { name: 'DepositoCobro' } }
    /**
     * Find zero or one DepositoCobro that matches the filter.
     * @param {DepositoCobroFindUniqueArgs} args - Arguments to find a DepositoCobro
     * @example
     * // Get one DepositoCobro
     * const depositoCobro = await prisma.depositoCobro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepositoCobroFindUniqueArgs>(args: SelectSubset<T, DepositoCobroFindUniqueArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DepositoCobro that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DepositoCobroFindUniqueOrThrowArgs} args - Arguments to find a DepositoCobro
     * @example
     * // Get one DepositoCobro
     * const depositoCobro = await prisma.depositoCobro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepositoCobroFindUniqueOrThrowArgs>(args: SelectSubset<T, DepositoCobroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DepositoCobro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroFindFirstArgs} args - Arguments to find a DepositoCobro
     * @example
     * // Get one DepositoCobro
     * const depositoCobro = await prisma.depositoCobro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepositoCobroFindFirstArgs>(args?: SelectSubset<T, DepositoCobroFindFirstArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DepositoCobro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroFindFirstOrThrowArgs} args - Arguments to find a DepositoCobro
     * @example
     * // Get one DepositoCobro
     * const depositoCobro = await prisma.depositoCobro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepositoCobroFindFirstOrThrowArgs>(args?: SelectSubset<T, DepositoCobroFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DepositoCobros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DepositoCobros
     * const depositoCobros = await prisma.depositoCobro.findMany()
     * 
     * // Get first 10 DepositoCobros
     * const depositoCobros = await prisma.depositoCobro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const depositoCobroWithIdOnly = await prisma.depositoCobro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepositoCobroFindManyArgs>(args?: SelectSubset<T, DepositoCobroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DepositoCobro.
     * @param {DepositoCobroCreateArgs} args - Arguments to create a DepositoCobro.
     * @example
     * // Create one DepositoCobro
     * const DepositoCobro = await prisma.depositoCobro.create({
     *   data: {
     *     // ... data to create a DepositoCobro
     *   }
     * })
     * 
     */
    create<T extends DepositoCobroCreateArgs>(args: SelectSubset<T, DepositoCobroCreateArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DepositoCobros.
     * @param {DepositoCobroCreateManyArgs} args - Arguments to create many DepositoCobros.
     * @example
     * // Create many DepositoCobros
     * const depositoCobro = await prisma.depositoCobro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepositoCobroCreateManyArgs>(args?: SelectSubset<T, DepositoCobroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DepositoCobros and returns the data saved in the database.
     * @param {DepositoCobroCreateManyAndReturnArgs} args - Arguments to create many DepositoCobros.
     * @example
     * // Create many DepositoCobros
     * const depositoCobro = await prisma.depositoCobro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DepositoCobros and only return the `id`
     * const depositoCobroWithIdOnly = await prisma.depositoCobro.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepositoCobroCreateManyAndReturnArgs>(args?: SelectSubset<T, DepositoCobroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DepositoCobro.
     * @param {DepositoCobroDeleteArgs} args - Arguments to delete one DepositoCobro.
     * @example
     * // Delete one DepositoCobro
     * const DepositoCobro = await prisma.depositoCobro.delete({
     *   where: {
     *     // ... filter to delete one DepositoCobro
     *   }
     * })
     * 
     */
    delete<T extends DepositoCobroDeleteArgs>(args: SelectSubset<T, DepositoCobroDeleteArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DepositoCobro.
     * @param {DepositoCobroUpdateArgs} args - Arguments to update one DepositoCobro.
     * @example
     * // Update one DepositoCobro
     * const depositoCobro = await prisma.depositoCobro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepositoCobroUpdateArgs>(args: SelectSubset<T, DepositoCobroUpdateArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DepositoCobros.
     * @param {DepositoCobroDeleteManyArgs} args - Arguments to filter DepositoCobros to delete.
     * @example
     * // Delete a few DepositoCobros
     * const { count } = await prisma.depositoCobro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepositoCobroDeleteManyArgs>(args?: SelectSubset<T, DepositoCobroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DepositoCobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DepositoCobros
     * const depositoCobro = await prisma.depositoCobro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepositoCobroUpdateManyArgs>(args: SelectSubset<T, DepositoCobroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DepositoCobro.
     * @param {DepositoCobroUpsertArgs} args - Arguments to update or create a DepositoCobro.
     * @example
     * // Update or create a DepositoCobro
     * const depositoCobro = await prisma.depositoCobro.upsert({
     *   create: {
     *     // ... data to create a DepositoCobro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DepositoCobro we want to update
     *   }
     * })
     */
    upsert<T extends DepositoCobroUpsertArgs>(args: SelectSubset<T, DepositoCobroUpsertArgs<ExtArgs>>): Prisma__DepositoCobroClient<$Result.GetResult<Prisma.$DepositoCobroPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DepositoCobros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroCountArgs} args - Arguments to filter DepositoCobros to count.
     * @example
     * // Count the number of DepositoCobros
     * const count = await prisma.depositoCobro.count({
     *   where: {
     *     // ... the filter for the DepositoCobros we want to count
     *   }
     * })
    **/
    count<T extends DepositoCobroCountArgs>(
      args?: Subset<T, DepositoCobroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepositoCobroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DepositoCobro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepositoCobroAggregateArgs>(args: Subset<T, DepositoCobroAggregateArgs>): Prisma.PrismaPromise<GetDepositoCobroAggregateType<T>>

    /**
     * Group by DepositoCobro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositoCobroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepositoCobroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepositoCobroGroupByArgs['orderBy'] }
        : { orderBy?: DepositoCobroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepositoCobroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepositoCobroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DepositoCobro model
   */
  readonly fields: DepositoCobroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DepositoCobro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepositoCobroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    metaCobro<T extends MetaCobrosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MetaCobrosDefaultArgs<ExtArgs>>): Prisma__MetaCobrosClient<$Result.GetResult<Prisma.$MetaCobrosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DepositoCobro model
   */ 
  interface DepositoCobroFieldRefs {
    readonly id: FieldRef<"DepositoCobro", 'Int'>
    readonly usuarioId: FieldRef<"DepositoCobro", 'Int'>
    readonly sucursalId: FieldRef<"DepositoCobro", 'Int'>
    readonly numeroBoleta: FieldRef<"DepositoCobro", 'String'>
    readonly fechaRegistro: FieldRef<"DepositoCobro", 'DateTime'>
    readonly montoDepositado: FieldRef<"DepositoCobro", 'Float'>
    readonly descripcion: FieldRef<"DepositoCobro", 'String'>
    readonly metaCobroId: FieldRef<"DepositoCobro", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DepositoCobro findUnique
   */
  export type DepositoCobroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * Filter, which DepositoCobro to fetch.
     */
    where: DepositoCobroWhereUniqueInput
  }

  /**
   * DepositoCobro findUniqueOrThrow
   */
  export type DepositoCobroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * Filter, which DepositoCobro to fetch.
     */
    where: DepositoCobroWhereUniqueInput
  }

  /**
   * DepositoCobro findFirst
   */
  export type DepositoCobroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * Filter, which DepositoCobro to fetch.
     */
    where?: DepositoCobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositoCobros to fetch.
     */
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DepositoCobros.
     */
    cursor?: DepositoCobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositoCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositoCobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DepositoCobros.
     */
    distinct?: DepositoCobroScalarFieldEnum | DepositoCobroScalarFieldEnum[]
  }

  /**
   * DepositoCobro findFirstOrThrow
   */
  export type DepositoCobroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * Filter, which DepositoCobro to fetch.
     */
    where?: DepositoCobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositoCobros to fetch.
     */
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DepositoCobros.
     */
    cursor?: DepositoCobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositoCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositoCobros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DepositoCobros.
     */
    distinct?: DepositoCobroScalarFieldEnum | DepositoCobroScalarFieldEnum[]
  }

  /**
   * DepositoCobro findMany
   */
  export type DepositoCobroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * Filter, which DepositoCobros to fetch.
     */
    where?: DepositoCobroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositoCobros to fetch.
     */
    orderBy?: DepositoCobroOrderByWithRelationInput | DepositoCobroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DepositoCobros.
     */
    cursor?: DepositoCobroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositoCobros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositoCobros.
     */
    skip?: number
    distinct?: DepositoCobroScalarFieldEnum | DepositoCobroScalarFieldEnum[]
  }

  /**
   * DepositoCobro create
   */
  export type DepositoCobroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * The data needed to create a DepositoCobro.
     */
    data: XOR<DepositoCobroCreateInput, DepositoCobroUncheckedCreateInput>
  }

  /**
   * DepositoCobro createMany
   */
  export type DepositoCobroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DepositoCobros.
     */
    data: DepositoCobroCreateManyInput | DepositoCobroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DepositoCobro createManyAndReturn
   */
  export type DepositoCobroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DepositoCobros.
     */
    data: DepositoCobroCreateManyInput | DepositoCobroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DepositoCobro update
   */
  export type DepositoCobroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * The data needed to update a DepositoCobro.
     */
    data: XOR<DepositoCobroUpdateInput, DepositoCobroUncheckedUpdateInput>
    /**
     * Choose, which DepositoCobro to update.
     */
    where: DepositoCobroWhereUniqueInput
  }

  /**
   * DepositoCobro updateMany
   */
  export type DepositoCobroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DepositoCobros.
     */
    data: XOR<DepositoCobroUpdateManyMutationInput, DepositoCobroUncheckedUpdateManyInput>
    /**
     * Filter which DepositoCobros to update
     */
    where?: DepositoCobroWhereInput
  }

  /**
   * DepositoCobro upsert
   */
  export type DepositoCobroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * The filter to search for the DepositoCobro to update in case it exists.
     */
    where: DepositoCobroWhereUniqueInput
    /**
     * In case the DepositoCobro found by the `where` argument doesn't exist, create a new DepositoCobro with this data.
     */
    create: XOR<DepositoCobroCreateInput, DepositoCobroUncheckedCreateInput>
    /**
     * In case the DepositoCobro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepositoCobroUpdateInput, DepositoCobroUncheckedUpdateInput>
  }

  /**
   * DepositoCobro delete
   */
  export type DepositoCobroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
    /**
     * Filter which DepositoCobro to delete.
     */
    where: DepositoCobroWhereUniqueInput
  }

  /**
   * DepositoCobro deleteMany
   */
  export type DepositoCobroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DepositoCobros to delete
     */
    where?: DepositoCobroWhereInput
  }

  /**
   * DepositoCobro without action
   */
  export type DepositoCobroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositoCobro
     */
    select?: DepositoCobroSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositoCobroInclude<ExtArgs> | null
  }


  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id: number | null
    municipioId: number | null
    departamentoId: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id: number | null
    municipioId: number | null
    departamentoId: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    telefono: string | null
    direccion: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    municipioId: number | null
    departamentoId: number | null
    dpi: string | null
    iPInternet: string | null
  }

  export type ClienteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    telefono: string | null
    direccion: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    municipioId: number | null
    departamentoId: number | null
    dpi: string | null
    iPInternet: string | null
  }

  export type ClienteCountAggregateOutputType = {
    id: number
    nombre: number
    telefono: number
    direccion: number
    creadoEn: number
    actualizadoEn: number
    municipioId: number
    departamentoId: number
    dpi: number
    iPInternet: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id?: true
    municipioId?: true
    departamentoId?: true
  }

  export type ClienteSumAggregateInputType = {
    id?: true
    municipioId?: true
    departamentoId?: true
  }

  export type ClienteMinAggregateInputType = {
    id?: true
    nombre?: true
    telefono?: true
    direccion?: true
    creadoEn?: true
    actualizadoEn?: true
    municipioId?: true
    departamentoId?: true
    dpi?: true
    iPInternet?: true
  }

  export type ClienteMaxAggregateInputType = {
    id?: true
    nombre?: true
    telefono?: true
    direccion?: true
    creadoEn?: true
    actualizadoEn?: true
    municipioId?: true
    departamentoId?: true
    dpi?: true
    iPInternet?: true
  }

  export type ClienteCountAggregateInputType = {
    id?: true
    nombre?: true
    telefono?: true
    direccion?: true
    creadoEn?: true
    actualizadoEn?: true
    municipioId?: true
    departamentoId?: true
    dpi?: true
    iPInternet?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id: number
    nombre: string
    telefono: string | null
    direccion: string | null
    creadoEn: Date
    actualizadoEn: Date
    municipioId: number | null
    departamentoId: number | null
    dpi: string | null
    iPInternet: string | null
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    direccion?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    municipioId?: boolean
    departamentoId?: boolean
    dpi?: boolean
    iPInternet?: boolean
    compras?: boolean | Cliente$comprasArgs<ExtArgs>
    municipio?: boolean | Cliente$municipioArgs<ExtArgs>
    departamento?: boolean | Cliente$departamentoArgs<ExtArgs>
    EliminacionCliente?: boolean | Cliente$EliminacionClienteArgs<ExtArgs>
    Garantia?: boolean | Cliente$GarantiaArgs<ExtArgs>
    VentaEliminada?: boolean | Cliente$VentaEliminadaArgs<ExtArgs>
    VentaCuota?: boolean | Cliente$VentaCuotaArgs<ExtArgs>
    Reparacion?: boolean | Cliente$ReparacionArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    direccion?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    municipioId?: boolean
    departamentoId?: boolean
    dpi?: boolean
    iPInternet?: boolean
    municipio?: boolean | Cliente$municipioArgs<ExtArgs>
    departamento?: boolean | Cliente$departamentoArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    id?: boolean
    nombre?: boolean
    telefono?: boolean
    direccion?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    municipioId?: boolean
    departamentoId?: boolean
    dpi?: boolean
    iPInternet?: boolean
  }

  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | Cliente$comprasArgs<ExtArgs>
    municipio?: boolean | Cliente$municipioArgs<ExtArgs>
    departamento?: boolean | Cliente$departamentoArgs<ExtArgs>
    EliminacionCliente?: boolean | Cliente$EliminacionClienteArgs<ExtArgs>
    Garantia?: boolean | Cliente$GarantiaArgs<ExtArgs>
    VentaEliminada?: boolean | Cliente$VentaEliminadaArgs<ExtArgs>
    VentaCuota?: boolean | Cliente$VentaCuotaArgs<ExtArgs>
    Reparacion?: boolean | Cliente$ReparacionArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    municipio?: boolean | Cliente$municipioArgs<ExtArgs>
    departamento?: boolean | Cliente$departamentoArgs<ExtArgs>
  }

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      compras: Prisma.$VentaPayload<ExtArgs>[]
      municipio: Prisma.$MunicipioPayload<ExtArgs> | null
      departamento: Prisma.$DepartamentoPayload<ExtArgs> | null
      EliminacionCliente: Prisma.$EliminacionClientePayload<ExtArgs>[]
      Garantia: Prisma.$GarantiaPayload<ExtArgs>[]
      VentaEliminada: Prisma.$VentaEliminadaPayload<ExtArgs>[]
      VentaCuota: Prisma.$VentaCuotaPayload<ExtArgs>[]
      Reparacion: Prisma.$ReparacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      telefono: string | null
      direccion: string | null
      creadoEn: Date
      actualizadoEn: Date
      municipioId: number | null
      departamentoId: number | null
      dpi: string | null
      iPInternet: string | null
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clienteWithIdOnly = await prisma.cliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id`
     * const clienteWithIdOnly = await prisma.cliente.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compras<T extends Cliente$comprasArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany"> | Null>
    municipio<T extends Cliente$municipioArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$municipioArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    departamento<T extends Cliente$departamentoArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$departamentoArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    EliminacionCliente<T extends Cliente$EliminacionClienteArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$EliminacionClienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EliminacionClientePayload<ExtArgs>, T, "findMany"> | Null>
    Garantia<T extends Cliente$GarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$GarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    VentaEliminada<T extends Cliente$VentaEliminadaArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$VentaEliminadaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaEliminadaPayload<ExtArgs>, T, "findMany"> | Null>
    VentaCuota<T extends Cliente$VentaCuotaArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$VentaCuotaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findMany"> | Null>
    Reparacion<T extends Cliente$ReparacionArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$ReparacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReparacionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */ 
  interface ClienteFieldRefs {
    readonly id: FieldRef<"Cliente", 'Int'>
    readonly nombre: FieldRef<"Cliente", 'String'>
    readonly telefono: FieldRef<"Cliente", 'String'>
    readonly direccion: FieldRef<"Cliente", 'String'>
    readonly creadoEn: FieldRef<"Cliente", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Cliente", 'DateTime'>
    readonly municipioId: FieldRef<"Cliente", 'Int'>
    readonly departamentoId: FieldRef<"Cliente", 'Int'>
    readonly dpi: FieldRef<"Cliente", 'String'>
    readonly iPInternet: FieldRef<"Cliente", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente createManyAndReturn
   */
  export type ClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
  }

  /**
   * Cliente.compras
   */
  export type Cliente$comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Cliente.municipio
   */
  export type Cliente$municipioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    where?: MunicipioWhereInput
  }

  /**
   * Cliente.departamento
   */
  export type Cliente$departamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    where?: DepartamentoWhereInput
  }

  /**
   * Cliente.EliminacionCliente
   */
  export type Cliente$EliminacionClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EliminacionCliente
     */
    select?: EliminacionClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EliminacionClienteInclude<ExtArgs> | null
    where?: EliminacionClienteWhereInput
    orderBy?: EliminacionClienteOrderByWithRelationInput | EliminacionClienteOrderByWithRelationInput[]
    cursor?: EliminacionClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EliminacionClienteScalarFieldEnum | EliminacionClienteScalarFieldEnum[]
  }

  /**
   * Cliente.Garantia
   */
  export type Cliente$GarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    where?: GarantiaWhereInput
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    cursor?: GarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Cliente.VentaEliminada
   */
  export type Cliente$VentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaEliminada
     */
    select?: VentaEliminadaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaEliminadaInclude<ExtArgs> | null
    where?: VentaEliminadaWhereInput
    orderBy?: VentaEliminadaOrderByWithRelationInput | VentaEliminadaOrderByWithRelationInput[]
    cursor?: VentaEliminadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaEliminadaScalarFieldEnum | VentaEliminadaScalarFieldEnum[]
  }

  /**
   * Cliente.VentaCuota
   */
  export type Cliente$VentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    where?: VentaCuotaWhereInput
    orderBy?: VentaCuotaOrderByWithRelationInput | VentaCuotaOrderByWithRelationInput[]
    cursor?: VentaCuotaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaCuotaScalarFieldEnum | VentaCuotaScalarFieldEnum[]
  }

  /**
   * Cliente.Reparacion
   */
  export type Cliente$ReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reparacion
     */
    select?: ReparacionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReparacionInclude<ExtArgs> | null
    where?: ReparacionWhereInput
    orderBy?: ReparacionOrderByWithRelationInput | ReparacionOrderByWithRelationInput[]
    cursor?: ReparacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReparacionScalarFieldEnum | ReparacionScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Garantia
   */

  export type AggregateGarantia = {
    _count: GarantiaCountAggregateOutputType | null
    _avg: GarantiaAvgAggregateOutputType | null
    _sum: GarantiaSumAggregateOutputType | null
    _min: GarantiaMinAggregateOutputType | null
    _max: GarantiaMaxAggregateOutputType | null
  }

  export type GarantiaAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    productoId: number | null
    usuarioIdRecibe: number | null
    proveedorId: number | null
  }

  export type GarantiaSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    productoId: number | null
    usuarioIdRecibe: number | null
    proveedorId: number | null
  }

  export type GarantiaMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    productoId: number | null
    usuarioIdRecibe: number | null
    comentario: string | null
    descripcionProblema: string | null
    fechaRecepcion: Date | null
    estado: $Enums.EstadoGarantia | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    proveedorId: number | null
  }

  export type GarantiaMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    productoId: number | null
    usuarioIdRecibe: number | null
    comentario: string | null
    descripcionProblema: string | null
    fechaRecepcion: Date | null
    estado: $Enums.EstadoGarantia | null
    creadoEn: Date | null
    actualizadoEn: Date | null
    proveedorId: number | null
  }

  export type GarantiaCountAggregateOutputType = {
    id: number
    clienteId: number
    productoId: number
    usuarioIdRecibe: number
    comentario: number
    descripcionProblema: number
    fechaRecepcion: number
    estado: number
    creadoEn: number
    actualizadoEn: number
    proveedorId: number
    _all: number
  }


  export type GarantiaAvgAggregateInputType = {
    id?: true
    clienteId?: true
    productoId?: true
    usuarioIdRecibe?: true
    proveedorId?: true
  }

  export type GarantiaSumAggregateInputType = {
    id?: true
    clienteId?: true
    productoId?: true
    usuarioIdRecibe?: true
    proveedorId?: true
  }

  export type GarantiaMinAggregateInputType = {
    id?: true
    clienteId?: true
    productoId?: true
    usuarioIdRecibe?: true
    comentario?: true
    descripcionProblema?: true
    fechaRecepcion?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    proveedorId?: true
  }

  export type GarantiaMaxAggregateInputType = {
    id?: true
    clienteId?: true
    productoId?: true
    usuarioIdRecibe?: true
    comentario?: true
    descripcionProblema?: true
    fechaRecepcion?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    proveedorId?: true
  }

  export type GarantiaCountAggregateInputType = {
    id?: true
    clienteId?: true
    productoId?: true
    usuarioIdRecibe?: true
    comentario?: true
    descripcionProblema?: true
    fechaRecepcion?: true
    estado?: true
    creadoEn?: true
    actualizadoEn?: true
    proveedorId?: true
    _all?: true
  }

  export type GarantiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Garantia to aggregate.
     */
    where?: GarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Garantias to fetch.
     */
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Garantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Garantias
    **/
    _count?: true | GarantiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GarantiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GarantiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GarantiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GarantiaMaxAggregateInputType
  }

  export type GetGarantiaAggregateType<T extends GarantiaAggregateArgs> = {
        [P in keyof T & keyof AggregateGarantia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGarantia[P]>
      : GetScalarType<T[P], AggregateGarantia[P]>
  }




  export type GarantiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GarantiaWhereInput
    orderBy?: GarantiaOrderByWithAggregationInput | GarantiaOrderByWithAggregationInput[]
    by: GarantiaScalarFieldEnum[] | GarantiaScalarFieldEnum
    having?: GarantiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GarantiaCountAggregateInputType | true
    _avg?: GarantiaAvgAggregateInputType
    _sum?: GarantiaSumAggregateInputType
    _min?: GarantiaMinAggregateInputType
    _max?: GarantiaMaxAggregateInputType
  }

  export type GarantiaGroupByOutputType = {
    id: number
    clienteId: number
    productoId: number
    usuarioIdRecibe: number | null
    comentario: string | null
    descripcionProblema: string
    fechaRecepcion: Date
    estado: $Enums.EstadoGarantia
    creadoEn: Date
    actualizadoEn: Date
    proveedorId: number | null
    _count: GarantiaCountAggregateOutputType | null
    _avg: GarantiaAvgAggregateOutputType | null
    _sum: GarantiaSumAggregateOutputType | null
    _min: GarantiaMinAggregateOutputType | null
    _max: GarantiaMaxAggregateOutputType | null
  }

  type GetGarantiaGroupByPayload<T extends GarantiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GarantiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GarantiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GarantiaGroupByOutputType[P]>
            : GetScalarType<T[P], GarantiaGroupByOutputType[P]>
        }
      >
    >


  export type GarantiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    productoId?: boolean
    usuarioIdRecibe?: boolean
    comentario?: boolean
    descripcionProblema?: boolean
    fechaRecepcion?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    proveedorId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuarioRecibe?: boolean | Garantia$usuarioRecibeArgs<ExtArgs>
    registros?: boolean | Garantia$registrosArgs<ExtArgs>
    proveedor?: boolean | Garantia$proveedorArgs<ExtArgs>
    _count?: boolean | GarantiaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["garantia"]>

  export type GarantiaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    productoId?: boolean
    usuarioIdRecibe?: boolean
    comentario?: boolean
    descripcionProblema?: boolean
    fechaRecepcion?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    proveedorId?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuarioRecibe?: boolean | Garantia$usuarioRecibeArgs<ExtArgs>
    proveedor?: boolean | Garantia$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["garantia"]>

  export type GarantiaSelectScalar = {
    id?: boolean
    clienteId?: boolean
    productoId?: boolean
    usuarioIdRecibe?: boolean
    comentario?: boolean
    descripcionProblema?: boolean
    fechaRecepcion?: boolean
    estado?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    proveedorId?: boolean
  }

  export type GarantiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuarioRecibe?: boolean | Garantia$usuarioRecibeArgs<ExtArgs>
    registros?: boolean | Garantia$registrosArgs<ExtArgs>
    proveedor?: boolean | Garantia$proveedorArgs<ExtArgs>
    _count?: boolean | GarantiaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GarantiaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    usuarioRecibe?: boolean | Garantia$usuarioRecibeArgs<ExtArgs>
    proveedor?: boolean | Garantia$proveedorArgs<ExtArgs>
  }

  export type $GarantiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Garantia"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs>
      usuarioRecibe: Prisma.$UsuarioPayload<ExtArgs> | null
      registros: Prisma.$RegistroGarantiaPayload<ExtArgs>[]
      proveedor: Prisma.$ProveedorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      productoId: number
      usuarioIdRecibe: number | null
      comentario: string | null
      descripcionProblema: string
      fechaRecepcion: Date
      estado: $Enums.EstadoGarantia
      creadoEn: Date
      actualizadoEn: Date
      proveedorId: number | null
    }, ExtArgs["result"]["garantia"]>
    composites: {}
  }

  type GarantiaGetPayload<S extends boolean | null | undefined | GarantiaDefaultArgs> = $Result.GetResult<Prisma.$GarantiaPayload, S>

  type GarantiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<GarantiaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GarantiaCountAggregateInputType | true
    }

  export interface GarantiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Garantia'], meta: { name: 'Garantia' } }
    /**
     * Find zero or one Garantia that matches the filter.
     * @param {GarantiaFindUniqueArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GarantiaFindUniqueArgs>(args: SelectSubset<T, GarantiaFindUniqueArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Garantia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {GarantiaFindUniqueOrThrowArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GarantiaFindUniqueOrThrowArgs>(args: SelectSubset<T, GarantiaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Garantia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaFindFirstArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GarantiaFindFirstArgs>(args?: SelectSubset<T, GarantiaFindFirstArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Garantia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaFindFirstOrThrowArgs} args - Arguments to find a Garantia
     * @example
     * // Get one Garantia
     * const garantia = await prisma.garantia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GarantiaFindFirstOrThrowArgs>(args?: SelectSubset<T, GarantiaFindFirstOrThrowArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Garantias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Garantias
     * const garantias = await prisma.garantia.findMany()
     * 
     * // Get first 10 Garantias
     * const garantias = await prisma.garantia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const garantiaWithIdOnly = await prisma.garantia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GarantiaFindManyArgs>(args?: SelectSubset<T, GarantiaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Garantia.
     * @param {GarantiaCreateArgs} args - Arguments to create a Garantia.
     * @example
     * // Create one Garantia
     * const Garantia = await prisma.garantia.create({
     *   data: {
     *     // ... data to create a Garantia
     *   }
     * })
     * 
     */
    create<T extends GarantiaCreateArgs>(args: SelectSubset<T, GarantiaCreateArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Garantias.
     * @param {GarantiaCreateManyArgs} args - Arguments to create many Garantias.
     * @example
     * // Create many Garantias
     * const garantia = await prisma.garantia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GarantiaCreateManyArgs>(args?: SelectSubset<T, GarantiaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Garantias and returns the data saved in the database.
     * @param {GarantiaCreateManyAndReturnArgs} args - Arguments to create many Garantias.
     * @example
     * // Create many Garantias
     * const garantia = await prisma.garantia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Garantias and only return the `id`
     * const garantiaWithIdOnly = await prisma.garantia.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GarantiaCreateManyAndReturnArgs>(args?: SelectSubset<T, GarantiaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Garantia.
     * @param {GarantiaDeleteArgs} args - Arguments to delete one Garantia.
     * @example
     * // Delete one Garantia
     * const Garantia = await prisma.garantia.delete({
     *   where: {
     *     // ... filter to delete one Garantia
     *   }
     * })
     * 
     */
    delete<T extends GarantiaDeleteArgs>(args: SelectSubset<T, GarantiaDeleteArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Garantia.
     * @param {GarantiaUpdateArgs} args - Arguments to update one Garantia.
     * @example
     * // Update one Garantia
     * const garantia = await prisma.garantia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GarantiaUpdateArgs>(args: SelectSubset<T, GarantiaUpdateArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Garantias.
     * @param {GarantiaDeleteManyArgs} args - Arguments to filter Garantias to delete.
     * @example
     * // Delete a few Garantias
     * const { count } = await prisma.garantia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GarantiaDeleteManyArgs>(args?: SelectSubset<T, GarantiaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Garantias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Garantias
     * const garantia = await prisma.garantia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GarantiaUpdateManyArgs>(args: SelectSubset<T, GarantiaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Garantia.
     * @param {GarantiaUpsertArgs} args - Arguments to update or create a Garantia.
     * @example
     * // Update or create a Garantia
     * const garantia = await prisma.garantia.upsert({
     *   create: {
     *     // ... data to create a Garantia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Garantia we want to update
     *   }
     * })
     */
    upsert<T extends GarantiaUpsertArgs>(args: SelectSubset<T, GarantiaUpsertArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Garantias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaCountArgs} args - Arguments to filter Garantias to count.
     * @example
     * // Count the number of Garantias
     * const count = await prisma.garantia.count({
     *   where: {
     *     // ... the filter for the Garantias we want to count
     *   }
     * })
    **/
    count<T extends GarantiaCountArgs>(
      args?: Subset<T, GarantiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GarantiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Garantia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GarantiaAggregateArgs>(args: Subset<T, GarantiaAggregateArgs>): Prisma.PrismaPromise<GetGarantiaAggregateType<T>>

    /**
     * Group by Garantia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GarantiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GarantiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GarantiaGroupByArgs['orderBy'] }
        : { orderBy?: GarantiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GarantiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGarantiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Garantia model
   */
  readonly fields: GarantiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Garantia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GarantiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuarioRecibe<T extends Garantia$usuarioRecibeArgs<ExtArgs> = {}>(args?: Subset<T, Garantia$usuarioRecibeArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    registros<T extends Garantia$registrosArgs<ExtArgs> = {}>(args?: Subset<T, Garantia$registrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    proveedor<T extends Garantia$proveedorArgs<ExtArgs> = {}>(args?: Subset<T, Garantia$proveedorArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Garantia model
   */ 
  interface GarantiaFieldRefs {
    readonly id: FieldRef<"Garantia", 'Int'>
    readonly clienteId: FieldRef<"Garantia", 'Int'>
    readonly productoId: FieldRef<"Garantia", 'Int'>
    readonly usuarioIdRecibe: FieldRef<"Garantia", 'Int'>
    readonly comentario: FieldRef<"Garantia", 'String'>
    readonly descripcionProblema: FieldRef<"Garantia", 'String'>
    readonly fechaRecepcion: FieldRef<"Garantia", 'DateTime'>
    readonly estado: FieldRef<"Garantia", 'EstadoGarantia'>
    readonly creadoEn: FieldRef<"Garantia", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Garantia", 'DateTime'>
    readonly proveedorId: FieldRef<"Garantia", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Garantia findUnique
   */
  export type GarantiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * Filter, which Garantia to fetch.
     */
    where: GarantiaWhereUniqueInput
  }

  /**
   * Garantia findUniqueOrThrow
   */
  export type GarantiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * Filter, which Garantia to fetch.
     */
    where: GarantiaWhereUniqueInput
  }

  /**
   * Garantia findFirst
   */
  export type GarantiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * Filter, which Garantia to fetch.
     */
    where?: GarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Garantias to fetch.
     */
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Garantias.
     */
    cursor?: GarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Garantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Garantias.
     */
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Garantia findFirstOrThrow
   */
  export type GarantiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * Filter, which Garantia to fetch.
     */
    where?: GarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Garantias to fetch.
     */
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Garantias.
     */
    cursor?: GarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Garantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Garantias.
     */
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Garantia findMany
   */
  export type GarantiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * Filter, which Garantias to fetch.
     */
    where?: GarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Garantias to fetch.
     */
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Garantias.
     */
    cursor?: GarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Garantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Garantias.
     */
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Garantia create
   */
  export type GarantiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * The data needed to create a Garantia.
     */
    data: XOR<GarantiaCreateInput, GarantiaUncheckedCreateInput>
  }

  /**
   * Garantia createMany
   */
  export type GarantiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Garantias.
     */
    data: GarantiaCreateManyInput | GarantiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Garantia createManyAndReturn
   */
  export type GarantiaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Garantias.
     */
    data: GarantiaCreateManyInput | GarantiaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Garantia update
   */
  export type GarantiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * The data needed to update a Garantia.
     */
    data: XOR<GarantiaUpdateInput, GarantiaUncheckedUpdateInput>
    /**
     * Choose, which Garantia to update.
     */
    where: GarantiaWhereUniqueInput
  }

  /**
   * Garantia updateMany
   */
  export type GarantiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Garantias.
     */
    data: XOR<GarantiaUpdateManyMutationInput, GarantiaUncheckedUpdateManyInput>
    /**
     * Filter which Garantias to update
     */
    where?: GarantiaWhereInput
  }

  /**
   * Garantia upsert
   */
  export type GarantiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * The filter to search for the Garantia to update in case it exists.
     */
    where: GarantiaWhereUniqueInput
    /**
     * In case the Garantia found by the `where` argument doesn't exist, create a new Garantia with this data.
     */
    create: XOR<GarantiaCreateInput, GarantiaUncheckedCreateInput>
    /**
     * In case the Garantia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GarantiaUpdateInput, GarantiaUncheckedUpdateInput>
  }

  /**
   * Garantia delete
   */
  export type GarantiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    /**
     * Filter which Garantia to delete.
     */
    where: GarantiaWhereUniqueInput
  }

  /**
   * Garantia deleteMany
   */
  export type GarantiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Garantias to delete
     */
    where?: GarantiaWhereInput
  }

  /**
   * Garantia.usuarioRecibe
   */
  export type Garantia$usuarioRecibeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Garantia.registros
   */
  export type Garantia$registrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    where?: RegistroGarantiaWhereInput
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    cursor?: RegistroGarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * Garantia.proveedor
   */
  export type Garantia$proveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    where?: ProveedorWhereInput
  }

  /**
   * Garantia without action
   */
  export type GarantiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
  }


  /**
   * Model RegistroGarantia
   */

  export type AggregateRegistroGarantia = {
    _count: RegistroGarantiaCountAggregateOutputType | null
    _avg: RegistroGarantiaAvgAggregateOutputType | null
    _sum: RegistroGarantiaSumAggregateOutputType | null
    _min: RegistroGarantiaMinAggregateOutputType | null
    _max: RegistroGarantiaMaxAggregateOutputType | null
  }

  export type RegistroGarantiaAvgAggregateOutputType = {
    id: number | null
    garantiaId: number | null
    usuarioId: number | null
    productoId: number | null
    proveedorId: number | null
  }

  export type RegistroGarantiaSumAggregateOutputType = {
    id: number | null
    garantiaId: number | null
    usuarioId: number | null
    productoId: number | null
    proveedorId: number | null
  }

  export type RegistroGarantiaMinAggregateOutputType = {
    id: number | null
    garantiaId: number | null
    usuarioId: number | null
    productoId: number | null
    estado: $Enums.EstadoGarantia | null
    conclusion: string | null
    accionesRealizadas: string | null
    fechaRegistro: Date | null
    proveedorId: number | null
  }

  export type RegistroGarantiaMaxAggregateOutputType = {
    id: number | null
    garantiaId: number | null
    usuarioId: number | null
    productoId: number | null
    estado: $Enums.EstadoGarantia | null
    conclusion: string | null
    accionesRealizadas: string | null
    fechaRegistro: Date | null
    proveedorId: number | null
  }

  export type RegistroGarantiaCountAggregateOutputType = {
    id: number
    garantiaId: number
    usuarioId: number
    productoId: number
    estado: number
    conclusion: number
    accionesRealizadas: number
    fechaRegistro: number
    proveedorId: number
    _all: number
  }


  export type RegistroGarantiaAvgAggregateInputType = {
    id?: true
    garantiaId?: true
    usuarioId?: true
    productoId?: true
    proveedorId?: true
  }

  export type RegistroGarantiaSumAggregateInputType = {
    id?: true
    garantiaId?: true
    usuarioId?: true
    productoId?: true
    proveedorId?: true
  }

  export type RegistroGarantiaMinAggregateInputType = {
    id?: true
    garantiaId?: true
    usuarioId?: true
    productoId?: true
    estado?: true
    conclusion?: true
    accionesRealizadas?: true
    fechaRegistro?: true
    proveedorId?: true
  }

  export type RegistroGarantiaMaxAggregateInputType = {
    id?: true
    garantiaId?: true
    usuarioId?: true
    productoId?: true
    estado?: true
    conclusion?: true
    accionesRealizadas?: true
    fechaRegistro?: true
    proveedorId?: true
  }

  export type RegistroGarantiaCountAggregateInputType = {
    id?: true
    garantiaId?: true
    usuarioId?: true
    productoId?: true
    estado?: true
    conclusion?: true
    accionesRealizadas?: true
    fechaRegistro?: true
    proveedorId?: true
    _all?: true
  }

  export type RegistroGarantiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroGarantia to aggregate.
     */
    where?: RegistroGarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroGarantias to fetch.
     */
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroGarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroGarantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroGarantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegistroGarantias
    **/
    _count?: true | RegistroGarantiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroGarantiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroGarantiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroGarantiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroGarantiaMaxAggregateInputType
  }

  export type GetRegistroGarantiaAggregateType<T extends RegistroGarantiaAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistroGarantia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistroGarantia[P]>
      : GetScalarType<T[P], AggregateRegistroGarantia[P]>
  }




  export type RegistroGarantiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroGarantiaWhereInput
    orderBy?: RegistroGarantiaOrderByWithAggregationInput | RegistroGarantiaOrderByWithAggregationInput[]
    by: RegistroGarantiaScalarFieldEnum[] | RegistroGarantiaScalarFieldEnum
    having?: RegistroGarantiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroGarantiaCountAggregateInputType | true
    _avg?: RegistroGarantiaAvgAggregateInputType
    _sum?: RegistroGarantiaSumAggregateInputType
    _min?: RegistroGarantiaMinAggregateInputType
    _max?: RegistroGarantiaMaxAggregateInputType
  }

  export type RegistroGarantiaGroupByOutputType = {
    id: number
    garantiaId: number
    usuarioId: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion: string | null
    accionesRealizadas: string | null
    fechaRegistro: Date
    proveedorId: number | null
    _count: RegistroGarantiaCountAggregateOutputType | null
    _avg: RegistroGarantiaAvgAggregateOutputType | null
    _sum: RegistroGarantiaSumAggregateOutputType | null
    _min: RegistroGarantiaMinAggregateOutputType | null
    _max: RegistroGarantiaMaxAggregateOutputType | null
  }

  type GetRegistroGarantiaGroupByPayload<T extends RegistroGarantiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroGarantiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroGarantiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroGarantiaGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroGarantiaGroupByOutputType[P]>
        }
      >
    >


  export type RegistroGarantiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    garantiaId?: boolean
    usuarioId?: boolean
    productoId?: boolean
    estado?: boolean
    conclusion?: boolean
    accionesRealizadas?: boolean
    fechaRegistro?: boolean
    proveedorId?: boolean
    garantia?: boolean | GarantiaDefaultArgs<ExtArgs>
    usuario?: boolean | RegistroGarantia$usuarioArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | RegistroGarantia$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["registroGarantia"]>

  export type RegistroGarantiaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    garantiaId?: boolean
    usuarioId?: boolean
    productoId?: boolean
    estado?: boolean
    conclusion?: boolean
    accionesRealizadas?: boolean
    fechaRegistro?: boolean
    proveedorId?: boolean
    garantia?: boolean | GarantiaDefaultArgs<ExtArgs>
    usuario?: boolean | RegistroGarantia$usuarioArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | RegistroGarantia$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["registroGarantia"]>

  export type RegistroGarantiaSelectScalar = {
    id?: boolean
    garantiaId?: boolean
    usuarioId?: boolean
    productoId?: boolean
    estado?: boolean
    conclusion?: boolean
    accionesRealizadas?: boolean
    fechaRegistro?: boolean
    proveedorId?: boolean
  }

  export type RegistroGarantiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    garantia?: boolean | GarantiaDefaultArgs<ExtArgs>
    usuario?: boolean | RegistroGarantia$usuarioArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | RegistroGarantia$proveedorArgs<ExtArgs>
  }
  export type RegistroGarantiaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    garantia?: boolean | GarantiaDefaultArgs<ExtArgs>
    usuario?: boolean | RegistroGarantia$usuarioArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | RegistroGarantia$proveedorArgs<ExtArgs>
  }

  export type $RegistroGarantiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegistroGarantia"
    objects: {
      garantia: Prisma.$GarantiaPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
      producto: Prisma.$ProductoPayload<ExtArgs>
      proveedor: Prisma.$ProveedorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      garantiaId: number
      usuarioId: number | null
      productoId: number
      estado: $Enums.EstadoGarantia
      conclusion: string | null
      accionesRealizadas: string | null
      fechaRegistro: Date
      proveedorId: number | null
    }, ExtArgs["result"]["registroGarantia"]>
    composites: {}
  }

  type RegistroGarantiaGetPayload<S extends boolean | null | undefined | RegistroGarantiaDefaultArgs> = $Result.GetResult<Prisma.$RegistroGarantiaPayload, S>

  type RegistroGarantiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RegistroGarantiaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RegistroGarantiaCountAggregateInputType | true
    }

  export interface RegistroGarantiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegistroGarantia'], meta: { name: 'RegistroGarantia' } }
    /**
     * Find zero or one RegistroGarantia that matches the filter.
     * @param {RegistroGarantiaFindUniqueArgs} args - Arguments to find a RegistroGarantia
     * @example
     * // Get one RegistroGarantia
     * const registroGarantia = await prisma.registroGarantia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroGarantiaFindUniqueArgs>(args: SelectSubset<T, RegistroGarantiaFindUniqueArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RegistroGarantia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RegistroGarantiaFindUniqueOrThrowArgs} args - Arguments to find a RegistroGarantia
     * @example
     * // Get one RegistroGarantia
     * const registroGarantia = await prisma.registroGarantia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroGarantiaFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroGarantiaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RegistroGarantia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaFindFirstArgs} args - Arguments to find a RegistroGarantia
     * @example
     * // Get one RegistroGarantia
     * const registroGarantia = await prisma.registroGarantia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroGarantiaFindFirstArgs>(args?: SelectSubset<T, RegistroGarantiaFindFirstArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RegistroGarantia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaFindFirstOrThrowArgs} args - Arguments to find a RegistroGarantia
     * @example
     * // Get one RegistroGarantia
     * const registroGarantia = await prisma.registroGarantia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroGarantiaFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroGarantiaFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RegistroGarantias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegistroGarantias
     * const registroGarantias = await prisma.registroGarantia.findMany()
     * 
     * // Get first 10 RegistroGarantias
     * const registroGarantias = await prisma.registroGarantia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroGarantiaWithIdOnly = await prisma.registroGarantia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroGarantiaFindManyArgs>(args?: SelectSubset<T, RegistroGarantiaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RegistroGarantia.
     * @param {RegistroGarantiaCreateArgs} args - Arguments to create a RegistroGarantia.
     * @example
     * // Create one RegistroGarantia
     * const RegistroGarantia = await prisma.registroGarantia.create({
     *   data: {
     *     // ... data to create a RegistroGarantia
     *   }
     * })
     * 
     */
    create<T extends RegistroGarantiaCreateArgs>(args: SelectSubset<T, RegistroGarantiaCreateArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RegistroGarantias.
     * @param {RegistroGarantiaCreateManyArgs} args - Arguments to create many RegistroGarantias.
     * @example
     * // Create many RegistroGarantias
     * const registroGarantia = await prisma.registroGarantia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroGarantiaCreateManyArgs>(args?: SelectSubset<T, RegistroGarantiaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RegistroGarantias and returns the data saved in the database.
     * @param {RegistroGarantiaCreateManyAndReturnArgs} args - Arguments to create many RegistroGarantias.
     * @example
     * // Create many RegistroGarantias
     * const registroGarantia = await prisma.registroGarantia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RegistroGarantias and only return the `id`
     * const registroGarantiaWithIdOnly = await prisma.registroGarantia.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroGarantiaCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroGarantiaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a RegistroGarantia.
     * @param {RegistroGarantiaDeleteArgs} args - Arguments to delete one RegistroGarantia.
     * @example
     * // Delete one RegistroGarantia
     * const RegistroGarantia = await prisma.registroGarantia.delete({
     *   where: {
     *     // ... filter to delete one RegistroGarantia
     *   }
     * })
     * 
     */
    delete<T extends RegistroGarantiaDeleteArgs>(args: SelectSubset<T, RegistroGarantiaDeleteArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RegistroGarantia.
     * @param {RegistroGarantiaUpdateArgs} args - Arguments to update one RegistroGarantia.
     * @example
     * // Update one RegistroGarantia
     * const registroGarantia = await prisma.registroGarantia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroGarantiaUpdateArgs>(args: SelectSubset<T, RegistroGarantiaUpdateArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RegistroGarantias.
     * @param {RegistroGarantiaDeleteManyArgs} args - Arguments to filter RegistroGarantias to delete.
     * @example
     * // Delete a few RegistroGarantias
     * const { count } = await prisma.registroGarantia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroGarantiaDeleteManyArgs>(args?: SelectSubset<T, RegistroGarantiaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegistroGarantias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegistroGarantias
     * const registroGarantia = await prisma.registroGarantia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroGarantiaUpdateManyArgs>(args: SelectSubset<T, RegistroGarantiaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RegistroGarantia.
     * @param {RegistroGarantiaUpsertArgs} args - Arguments to update or create a RegistroGarantia.
     * @example
     * // Update or create a RegistroGarantia
     * const registroGarantia = await prisma.registroGarantia.upsert({
     *   create: {
     *     // ... data to create a RegistroGarantia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegistroGarantia we want to update
     *   }
     * })
     */
    upsert<T extends RegistroGarantiaUpsertArgs>(args: SelectSubset<T, RegistroGarantiaUpsertArgs<ExtArgs>>): Prisma__RegistroGarantiaClient<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RegistroGarantias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaCountArgs} args - Arguments to filter RegistroGarantias to count.
     * @example
     * // Count the number of RegistroGarantias
     * const count = await prisma.registroGarantia.count({
     *   where: {
     *     // ... the filter for the RegistroGarantias we want to count
     *   }
     * })
    **/
    count<T extends RegistroGarantiaCountArgs>(
      args?: Subset<T, RegistroGarantiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroGarantiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegistroGarantia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroGarantiaAggregateArgs>(args: Subset<T, RegistroGarantiaAggregateArgs>): Prisma.PrismaPromise<GetRegistroGarantiaAggregateType<T>>

    /**
     * Group by RegistroGarantia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGarantiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroGarantiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroGarantiaGroupByArgs['orderBy'] }
        : { orderBy?: RegistroGarantiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroGarantiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroGarantiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegistroGarantia model
   */
  readonly fields: RegistroGarantiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegistroGarantia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroGarantiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    garantia<T extends GarantiaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GarantiaDefaultArgs<ExtArgs>>): Prisma__GarantiaClient<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends RegistroGarantia$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, RegistroGarantia$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    proveedor<T extends RegistroGarantia$proveedorArgs<ExtArgs> = {}>(args?: Subset<T, RegistroGarantia$proveedorArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegistroGarantia model
   */ 
  interface RegistroGarantiaFieldRefs {
    readonly id: FieldRef<"RegistroGarantia", 'Int'>
    readonly garantiaId: FieldRef<"RegistroGarantia", 'Int'>
    readonly usuarioId: FieldRef<"RegistroGarantia", 'Int'>
    readonly productoId: FieldRef<"RegistroGarantia", 'Int'>
    readonly estado: FieldRef<"RegistroGarantia", 'EstadoGarantia'>
    readonly conclusion: FieldRef<"RegistroGarantia", 'String'>
    readonly accionesRealizadas: FieldRef<"RegistroGarantia", 'String'>
    readonly fechaRegistro: FieldRef<"RegistroGarantia", 'DateTime'>
    readonly proveedorId: FieldRef<"RegistroGarantia", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RegistroGarantia findUnique
   */
  export type RegistroGarantiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroGarantia to fetch.
     */
    where: RegistroGarantiaWhereUniqueInput
  }

  /**
   * RegistroGarantia findUniqueOrThrow
   */
  export type RegistroGarantiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroGarantia to fetch.
     */
    where: RegistroGarantiaWhereUniqueInput
  }

  /**
   * RegistroGarantia findFirst
   */
  export type RegistroGarantiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroGarantia to fetch.
     */
    where?: RegistroGarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroGarantias to fetch.
     */
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroGarantias.
     */
    cursor?: RegistroGarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroGarantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroGarantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroGarantias.
     */
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * RegistroGarantia findFirstOrThrow
   */
  export type RegistroGarantiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroGarantia to fetch.
     */
    where?: RegistroGarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroGarantias to fetch.
     */
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegistroGarantias.
     */
    cursor?: RegistroGarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroGarantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroGarantias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegistroGarantias.
     */
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * RegistroGarantia findMany
   */
  export type RegistroGarantiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * Filter, which RegistroGarantias to fetch.
     */
    where?: RegistroGarantiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegistroGarantias to fetch.
     */
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegistroGarantias.
     */
    cursor?: RegistroGarantiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegistroGarantias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegistroGarantias.
     */
    skip?: number
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * RegistroGarantia create
   */
  export type RegistroGarantiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * The data needed to create a RegistroGarantia.
     */
    data: XOR<RegistroGarantiaCreateInput, RegistroGarantiaUncheckedCreateInput>
  }

  /**
   * RegistroGarantia createMany
   */
  export type RegistroGarantiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegistroGarantias.
     */
    data: RegistroGarantiaCreateManyInput | RegistroGarantiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegistroGarantia createManyAndReturn
   */
  export type RegistroGarantiaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many RegistroGarantias.
     */
    data: RegistroGarantiaCreateManyInput | RegistroGarantiaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RegistroGarantia update
   */
  export type RegistroGarantiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * The data needed to update a RegistroGarantia.
     */
    data: XOR<RegistroGarantiaUpdateInput, RegistroGarantiaUncheckedUpdateInput>
    /**
     * Choose, which RegistroGarantia to update.
     */
    where: RegistroGarantiaWhereUniqueInput
  }

  /**
   * RegistroGarantia updateMany
   */
  export type RegistroGarantiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegistroGarantias.
     */
    data: XOR<RegistroGarantiaUpdateManyMutationInput, RegistroGarantiaUncheckedUpdateManyInput>
    /**
     * Filter which RegistroGarantias to update
     */
    where?: RegistroGarantiaWhereInput
  }

  /**
   * RegistroGarantia upsert
   */
  export type RegistroGarantiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * The filter to search for the RegistroGarantia to update in case it exists.
     */
    where: RegistroGarantiaWhereUniqueInput
    /**
     * In case the RegistroGarantia found by the `where` argument doesn't exist, create a new RegistroGarantia with this data.
     */
    create: XOR<RegistroGarantiaCreateInput, RegistroGarantiaUncheckedCreateInput>
    /**
     * In case the RegistroGarantia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroGarantiaUpdateInput, RegistroGarantiaUncheckedUpdateInput>
  }

  /**
   * RegistroGarantia delete
   */
  export type RegistroGarantiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    /**
     * Filter which RegistroGarantia to delete.
     */
    where: RegistroGarantiaWhereUniqueInput
  }

  /**
   * RegistroGarantia deleteMany
   */
  export type RegistroGarantiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegistroGarantias to delete
     */
    where?: RegistroGarantiaWhereInput
  }

  /**
   * RegistroGarantia.usuario
   */
  export type RegistroGarantia$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * RegistroGarantia.proveedor
   */
  export type RegistroGarantia$proveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    where?: ProveedorWhereInput
  }

  /**
   * RegistroGarantia without action
   */
  export type RegistroGarantiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
  }


  /**
   * Model Pago
   */

  export type AggregatePago = {
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  export type PagoAvgAggregateOutputType = {
    id: number | null
    ventaId: number | null
    monto: number | null
  }

  export type PagoSumAggregateOutputType = {
    id: number | null
    ventaId: number | null
    monto: number | null
  }

  export type PagoMinAggregateOutputType = {
    id: number | null
    ventaId: number | null
    monto: number | null
    metodoPago: $Enums.MetodoPago | null
    fechaPago: Date | null
  }

  export type PagoMaxAggregateOutputType = {
    id: number | null
    ventaId: number | null
    monto: number | null
    metodoPago: $Enums.MetodoPago | null
    fechaPago: Date | null
  }

  export type PagoCountAggregateOutputType = {
    id: number
    ventaId: number
    monto: number
    metodoPago: number
    fechaPago: number
    _all: number
  }


  export type PagoAvgAggregateInputType = {
    id?: true
    ventaId?: true
    monto?: true
  }

  export type PagoSumAggregateInputType = {
    id?: true
    ventaId?: true
    monto?: true
  }

  export type PagoMinAggregateInputType = {
    id?: true
    ventaId?: true
    monto?: true
    metodoPago?: true
    fechaPago?: true
  }

  export type PagoMaxAggregateInputType = {
    id?: true
    ventaId?: true
    monto?: true
    metodoPago?: true
    fechaPago?: true
  }

  export type PagoCountAggregateInputType = {
    id?: true
    ventaId?: true
    monto?: true
    metodoPago?: true
    fechaPago?: true
    _all?: true
  }

  export type PagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pago to aggregate.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagos
    **/
    _count?: true | PagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagoMaxAggregateInputType
  }

  export type GetPagoAggregateType<T extends PagoAggregateArgs> = {
        [P in keyof T & keyof AggregatePago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePago[P]>
      : GetScalarType<T[P], AggregatePago[P]>
  }




  export type PagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithAggregationInput | PagoOrderByWithAggregationInput[]
    by: PagoScalarFieldEnum[] | PagoScalarFieldEnum
    having?: PagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagoCountAggregateInputType | true
    _avg?: PagoAvgAggregateInputType
    _sum?: PagoSumAggregateInputType
    _min?: PagoMinAggregateInputType
    _max?: PagoMaxAggregateInputType
  }

  export type PagoGroupByOutputType = {
    id: number
    ventaId: number
    monto: number
    metodoPago: $Enums.MetodoPago
    fechaPago: Date
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  type GetPagoGroupByPayload<T extends PagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagoGroupByOutputType[P]>
            : GetScalarType<T[P], PagoGroupByOutputType[P]>
        }
      >
    >


  export type PagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    monto?: boolean
    metodoPago?: boolean
    fechaPago?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    monto?: boolean
    metodoPago?: boolean
    fechaPago?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectScalar = {
    id?: boolean
    ventaId?: boolean
    monto?: boolean
    metodoPago?: boolean
    fechaPago?: boolean
  }

  export type PagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
  }
  export type PagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
  }

  export type $PagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pago"
    objects: {
      venta: Prisma.$VentaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ventaId: number
      monto: number
      metodoPago: $Enums.MetodoPago
      fechaPago: Date
    }, ExtArgs["result"]["pago"]>
    composites: {}
  }

  type PagoGetPayload<S extends boolean | null | undefined | PagoDefaultArgs> = $Result.GetResult<Prisma.$PagoPayload, S>

  type PagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PagoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PagoCountAggregateInputType | true
    }

  export interface PagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pago'], meta: { name: 'Pago' } }
    /**
     * Find zero or one Pago that matches the filter.
     * @param {PagoFindUniqueArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagoFindUniqueArgs>(args: SelectSubset<T, PagoFindUniqueArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pago that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PagoFindUniqueOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagoFindUniqueOrThrowArgs>(args: SelectSubset<T, PagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagoFindFirstArgs>(args?: SelectSubset<T, PagoFindFirstArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagoFindFirstOrThrowArgs>(args?: SelectSubset<T, PagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pago.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pago.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagoWithIdOnly = await prisma.pago.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PagoFindManyArgs>(args?: SelectSubset<T, PagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pago.
     * @param {PagoCreateArgs} args - Arguments to create a Pago.
     * @example
     * // Create one Pago
     * const Pago = await prisma.pago.create({
     *   data: {
     *     // ... data to create a Pago
     *   }
     * })
     * 
     */
    create<T extends PagoCreateArgs>(args: SelectSubset<T, PagoCreateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pagos.
     * @param {PagoCreateManyArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagoCreateManyArgs>(args?: SelectSubset<T, PagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagos and returns the data saved in the database.
     * @param {PagoCreateManyAndReturnArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagos and only return the `id`
     * const pagoWithIdOnly = await prisma.pago.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagoCreateManyAndReturnArgs>(args?: SelectSubset<T, PagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Pago.
     * @param {PagoDeleteArgs} args - Arguments to delete one Pago.
     * @example
     * // Delete one Pago
     * const Pago = await prisma.pago.delete({
     *   where: {
     *     // ... filter to delete one Pago
     *   }
     * })
     * 
     */
    delete<T extends PagoDeleteArgs>(args: SelectSubset<T, PagoDeleteArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pago.
     * @param {PagoUpdateArgs} args - Arguments to update one Pago.
     * @example
     * // Update one Pago
     * const pago = await prisma.pago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagoUpdateArgs>(args: SelectSubset<T, PagoUpdateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pagos.
     * @param {PagoDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagoDeleteManyArgs>(args?: SelectSubset<T, PagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagoUpdateManyArgs>(args: SelectSubset<T, PagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pago.
     * @param {PagoUpsertArgs} args - Arguments to update or create a Pago.
     * @example
     * // Update or create a Pago
     * const pago = await prisma.pago.upsert({
     *   create: {
     *     // ... data to create a Pago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pago we want to update
     *   }
     * })
     */
    upsert<T extends PagoUpsertArgs>(args: SelectSubset<T, PagoUpsertArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pago.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends PagoCountArgs>(
      args?: Subset<T, PagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagoAggregateArgs>(args: Subset<T, PagoAggregateArgs>): Prisma.PrismaPromise<GetPagoAggregateType<T>>

    /**
     * Group by Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagoGroupByArgs['orderBy'] }
        : { orderBy?: PagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pago model
   */
  readonly fields: PagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    venta<T extends VentaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaDefaultArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pago model
   */ 
  interface PagoFieldRefs {
    readonly id: FieldRef<"Pago", 'Int'>
    readonly ventaId: FieldRef<"Pago", 'Int'>
    readonly monto: FieldRef<"Pago", 'Float'>
    readonly metodoPago: FieldRef<"Pago", 'MetodoPago'>
    readonly fechaPago: FieldRef<"Pago", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pago findUnique
   */
  export type PagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findUniqueOrThrow
   */
  export type PagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findFirst
   */
  export type PagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findFirstOrThrow
   */
  export type PagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findMany
   */
  export type PagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago create
   */
  export type PagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pago.
     */
    data: XOR<PagoCreateInput, PagoUncheckedCreateInput>
  }

  /**
   * Pago createMany
   */
  export type PagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pago createManyAndReturn
   */
  export type PagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago update
   */
  export type PagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pago.
     */
    data: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
    /**
     * Choose, which Pago to update.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago updateMany
   */
  export type PagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
  }

  /**
   * Pago upsert
   */
  export type PagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pago to update in case it exists.
     */
    where: PagoWhereUniqueInput
    /**
     * In case the Pago found by the `where` argument doesn't exist, create a new Pago with this data.
     */
    create: XOR<PagoCreateInput, PagoUncheckedCreateInput>
    /**
     * In case the Pago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
  }

  /**
   * Pago delete
   */
  export type PagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter which Pago to delete.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago deleteMany
   */
  export type PagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to delete
     */
    where?: PagoWhereInput
  }

  /**
   * Pago without action
   */
  export type PagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
  }


  /**
   * Model HistorialStock
   */

  export type AggregateHistorialStock = {
    _count: HistorialStockCountAggregateOutputType | null
    _avg: HistorialStockAvgAggregateOutputType | null
    _sum: HistorialStockSumAggregateOutputType | null
    _min: HistorialStockMinAggregateOutputType | null
    _max: HistorialStockMaxAggregateOutputType | null
  }

  export type HistorialStockAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidadAnterior: number | null
    cantidadNueva: number | null
  }

  export type HistorialStockSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidadAnterior: number | null
    cantidadNueva: number | null
  }

  export type HistorialStockMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidadAnterior: number | null
    cantidadNueva: number | null
    fechaCambio: Date | null
  }

  export type HistorialStockMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidadAnterior: number | null
    cantidadNueva: number | null
    fechaCambio: Date | null
  }

  export type HistorialStockCountAggregateOutputType = {
    id: number
    productoId: number
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio: number
    _all: number
  }


  export type HistorialStockAvgAggregateInputType = {
    id?: true
    productoId?: true
    cantidadAnterior?: true
    cantidadNueva?: true
  }

  export type HistorialStockSumAggregateInputType = {
    id?: true
    productoId?: true
    cantidadAnterior?: true
    cantidadNueva?: true
  }

  export type HistorialStockMinAggregateInputType = {
    id?: true
    productoId?: true
    cantidadAnterior?: true
    cantidadNueva?: true
    fechaCambio?: true
  }

  export type HistorialStockMaxAggregateInputType = {
    id?: true
    productoId?: true
    cantidadAnterior?: true
    cantidadNueva?: true
    fechaCambio?: true
  }

  export type HistorialStockCountAggregateInputType = {
    id?: true
    productoId?: true
    cantidadAnterior?: true
    cantidadNueva?: true
    fechaCambio?: true
    _all?: true
  }

  export type HistorialStockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialStock to aggregate.
     */
    where?: HistorialStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialStocks to fetch.
     */
    orderBy?: HistorialStockOrderByWithRelationInput | HistorialStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialStocks
    **/
    _count?: true | HistorialStockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialStockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialStockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialStockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialStockMaxAggregateInputType
  }

  export type GetHistorialStockAggregateType<T extends HistorialStockAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialStock[P]>
      : GetScalarType<T[P], AggregateHistorialStock[P]>
  }




  export type HistorialStockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialStockWhereInput
    orderBy?: HistorialStockOrderByWithAggregationInput | HistorialStockOrderByWithAggregationInput[]
    by: HistorialStockScalarFieldEnum[] | HistorialStockScalarFieldEnum
    having?: HistorialStockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialStockCountAggregateInputType | true
    _avg?: HistorialStockAvgAggregateInputType
    _sum?: HistorialStockSumAggregateInputType
    _min?: HistorialStockMinAggregateInputType
    _max?: HistorialStockMaxAggregateInputType
  }

  export type HistorialStockGroupByOutputType = {
    id: number
    productoId: number
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio: Date
    _count: HistorialStockCountAggregateOutputType | null
    _avg: HistorialStockAvgAggregateOutputType | null
    _sum: HistorialStockSumAggregateOutputType | null
    _min: HistorialStockMinAggregateOutputType | null
    _max: HistorialStockMaxAggregateOutputType | null
  }

  type GetHistorialStockGroupByPayload<T extends HistorialStockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialStockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialStockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialStockGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialStockGroupByOutputType[P]>
        }
      >
    >


  export type HistorialStockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidadAnterior?: boolean
    cantidadNueva?: boolean
    fechaCambio?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialStock"]>

  export type HistorialStockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidadAnterior?: boolean
    cantidadNueva?: boolean
    fechaCambio?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialStock"]>

  export type HistorialStockSelectScalar = {
    id?: boolean
    productoId?: boolean
    cantidadAnterior?: boolean
    cantidadNueva?: boolean
    fechaCambio?: boolean
  }

  export type HistorialStockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type HistorialStockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $HistorialStockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialStock"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      cantidadAnterior: number
      cantidadNueva: number
      fechaCambio: Date
    }, ExtArgs["result"]["historialStock"]>
    composites: {}
  }

  type HistorialStockGetPayload<S extends boolean | null | undefined | HistorialStockDefaultArgs> = $Result.GetResult<Prisma.$HistorialStockPayload, S>

  type HistorialStockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HistorialStockFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialStockCountAggregateInputType | true
    }

  export interface HistorialStockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialStock'], meta: { name: 'HistorialStock' } }
    /**
     * Find zero or one HistorialStock that matches the filter.
     * @param {HistorialStockFindUniqueArgs} args - Arguments to find a HistorialStock
     * @example
     * // Get one HistorialStock
     * const historialStock = await prisma.historialStock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialStockFindUniqueArgs>(args: SelectSubset<T, HistorialStockFindUniqueArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one HistorialStock that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HistorialStockFindUniqueOrThrowArgs} args - Arguments to find a HistorialStock
     * @example
     * // Get one HistorialStock
     * const historialStock = await prisma.historialStock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialStockFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialStockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first HistorialStock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockFindFirstArgs} args - Arguments to find a HistorialStock
     * @example
     * // Get one HistorialStock
     * const historialStock = await prisma.historialStock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialStockFindFirstArgs>(args?: SelectSubset<T, HistorialStockFindFirstArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first HistorialStock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockFindFirstOrThrowArgs} args - Arguments to find a HistorialStock
     * @example
     * // Get one HistorialStock
     * const historialStock = await prisma.historialStock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialStockFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialStockFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more HistorialStocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialStocks
     * const historialStocks = await prisma.historialStock.findMany()
     * 
     * // Get first 10 HistorialStocks
     * const historialStocks = await prisma.historialStock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialStockWithIdOnly = await prisma.historialStock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialStockFindManyArgs>(args?: SelectSubset<T, HistorialStockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a HistorialStock.
     * @param {HistorialStockCreateArgs} args - Arguments to create a HistorialStock.
     * @example
     * // Create one HistorialStock
     * const HistorialStock = await prisma.historialStock.create({
     *   data: {
     *     // ... data to create a HistorialStock
     *   }
     * })
     * 
     */
    create<T extends HistorialStockCreateArgs>(args: SelectSubset<T, HistorialStockCreateArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many HistorialStocks.
     * @param {HistorialStockCreateManyArgs} args - Arguments to create many HistorialStocks.
     * @example
     * // Create many HistorialStocks
     * const historialStock = await prisma.historialStock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialStockCreateManyArgs>(args?: SelectSubset<T, HistorialStockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialStocks and returns the data saved in the database.
     * @param {HistorialStockCreateManyAndReturnArgs} args - Arguments to create many HistorialStocks.
     * @example
     * // Create many HistorialStocks
     * const historialStock = await prisma.historialStock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialStocks and only return the `id`
     * const historialStockWithIdOnly = await prisma.historialStock.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialStockCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialStockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a HistorialStock.
     * @param {HistorialStockDeleteArgs} args - Arguments to delete one HistorialStock.
     * @example
     * // Delete one HistorialStock
     * const HistorialStock = await prisma.historialStock.delete({
     *   where: {
     *     // ... filter to delete one HistorialStock
     *   }
     * })
     * 
     */
    delete<T extends HistorialStockDeleteArgs>(args: SelectSubset<T, HistorialStockDeleteArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one HistorialStock.
     * @param {HistorialStockUpdateArgs} args - Arguments to update one HistorialStock.
     * @example
     * // Update one HistorialStock
     * const historialStock = await prisma.historialStock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialStockUpdateArgs>(args: SelectSubset<T, HistorialStockUpdateArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more HistorialStocks.
     * @param {HistorialStockDeleteManyArgs} args - Arguments to filter HistorialStocks to delete.
     * @example
     * // Delete a few HistorialStocks
     * const { count } = await prisma.historialStock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialStockDeleteManyArgs>(args?: SelectSubset<T, HistorialStockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialStocks
     * const historialStock = await prisma.historialStock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialStockUpdateManyArgs>(args: SelectSubset<T, HistorialStockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialStock.
     * @param {HistorialStockUpsertArgs} args - Arguments to update or create a HistorialStock.
     * @example
     * // Update or create a HistorialStock
     * const historialStock = await prisma.historialStock.upsert({
     *   create: {
     *     // ... data to create a HistorialStock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialStock we want to update
     *   }
     * })
     */
    upsert<T extends HistorialStockUpsertArgs>(args: SelectSubset<T, HistorialStockUpsertArgs<ExtArgs>>): Prisma__HistorialStockClient<$Result.GetResult<Prisma.$HistorialStockPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of HistorialStocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockCountArgs} args - Arguments to filter HistorialStocks to count.
     * @example
     * // Count the number of HistorialStocks
     * const count = await prisma.historialStock.count({
     *   where: {
     *     // ... the filter for the HistorialStocks we want to count
     *   }
     * })
    **/
    count<T extends HistorialStockCountArgs>(
      args?: Subset<T, HistorialStockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialStockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialStockAggregateArgs>(args: Subset<T, HistorialStockAggregateArgs>): Prisma.PrismaPromise<GetHistorialStockAggregateType<T>>

    /**
     * Group by HistorialStock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialStockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialStockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialStockGroupByArgs['orderBy'] }
        : { orderBy?: HistorialStockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialStockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialStock model
   */
  readonly fields: HistorialStockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialStock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialStockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialStock model
   */ 
  interface HistorialStockFieldRefs {
    readonly id: FieldRef<"HistorialStock", 'Int'>
    readonly productoId: FieldRef<"HistorialStock", 'Int'>
    readonly cantidadAnterior: FieldRef<"HistorialStock", 'Int'>
    readonly cantidadNueva: FieldRef<"HistorialStock", 'Int'>
    readonly fechaCambio: FieldRef<"HistorialStock", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HistorialStock findUnique
   */
  export type HistorialStockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * Filter, which HistorialStock to fetch.
     */
    where: HistorialStockWhereUniqueInput
  }

  /**
   * HistorialStock findUniqueOrThrow
   */
  export type HistorialStockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * Filter, which HistorialStock to fetch.
     */
    where: HistorialStockWhereUniqueInput
  }

  /**
   * HistorialStock findFirst
   */
  export type HistorialStockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * Filter, which HistorialStock to fetch.
     */
    where?: HistorialStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialStocks to fetch.
     */
    orderBy?: HistorialStockOrderByWithRelationInput | HistorialStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialStocks.
     */
    cursor?: HistorialStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialStocks.
     */
    distinct?: HistorialStockScalarFieldEnum | HistorialStockScalarFieldEnum[]
  }

  /**
   * HistorialStock findFirstOrThrow
   */
  export type HistorialStockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * Filter, which HistorialStock to fetch.
     */
    where?: HistorialStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialStocks to fetch.
     */
    orderBy?: HistorialStockOrderByWithRelationInput | HistorialStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialStocks.
     */
    cursor?: HistorialStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialStocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialStocks.
     */
    distinct?: HistorialStockScalarFieldEnum | HistorialStockScalarFieldEnum[]
  }

  /**
   * HistorialStock findMany
   */
  export type HistorialStockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * Filter, which HistorialStocks to fetch.
     */
    where?: HistorialStockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialStocks to fetch.
     */
    orderBy?: HistorialStockOrderByWithRelationInput | HistorialStockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialStocks.
     */
    cursor?: HistorialStockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialStocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialStocks.
     */
    skip?: number
    distinct?: HistorialStockScalarFieldEnum | HistorialStockScalarFieldEnum[]
  }

  /**
   * HistorialStock create
   */
  export type HistorialStockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialStock.
     */
    data: XOR<HistorialStockCreateInput, HistorialStockUncheckedCreateInput>
  }

  /**
   * HistorialStock createMany
   */
  export type HistorialStockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialStocks.
     */
    data: HistorialStockCreateManyInput | HistorialStockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialStock createManyAndReturn
   */
  export type HistorialStockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many HistorialStocks.
     */
    data: HistorialStockCreateManyInput | HistorialStockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialStock update
   */
  export type HistorialStockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialStock.
     */
    data: XOR<HistorialStockUpdateInput, HistorialStockUncheckedUpdateInput>
    /**
     * Choose, which HistorialStock to update.
     */
    where: HistorialStockWhereUniqueInput
  }

  /**
   * HistorialStock updateMany
   */
  export type HistorialStockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialStocks.
     */
    data: XOR<HistorialStockUpdateManyMutationInput, HistorialStockUncheckedUpdateManyInput>
    /**
     * Filter which HistorialStocks to update
     */
    where?: HistorialStockWhereInput
  }

  /**
   * HistorialStock upsert
   */
  export type HistorialStockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialStock to update in case it exists.
     */
    where: HistorialStockWhereUniqueInput
    /**
     * In case the HistorialStock found by the `where` argument doesn't exist, create a new HistorialStock with this data.
     */
    create: XOR<HistorialStockCreateInput, HistorialStockUncheckedCreateInput>
    /**
     * In case the HistorialStock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialStockUpdateInput, HistorialStockUncheckedUpdateInput>
  }

  /**
   * HistorialStock delete
   */
  export type HistorialStockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
    /**
     * Filter which HistorialStock to delete.
     */
    where: HistorialStockWhereUniqueInput
  }

  /**
   * HistorialStock deleteMany
   */
  export type HistorialStockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialStocks to delete
     */
    where?: HistorialStockWhereInput
  }

  /**
   * HistorialStock without action
   */
  export type HistorialStockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialStock
     */
    select?: HistorialStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialStockInclude<ExtArgs> | null
  }


  /**
   * Model Venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    totalVenta: number | null
    sucursalId: number | null
    registroCajaId: number | null
  }

  export type VentaSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    totalVenta: number | null
    sucursalId: number | null
    registroCajaId: number | null
  }

  export type VentaMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    fechaVenta: Date | null
    horaVenta: Date | null
    totalVenta: number | null
    sucursalId: number | null
    nombreClienteFinal: string | null
    telefonoClienteFinal: string | null
    direccionClienteFinal: string | null
    imei: string | null
    registroCajaId: number | null
  }

  export type VentaMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    fechaVenta: Date | null
    horaVenta: Date | null
    totalVenta: number | null
    sucursalId: number | null
    nombreClienteFinal: string | null
    telefonoClienteFinal: string | null
    direccionClienteFinal: string | null
    imei: string | null
    registroCajaId: number | null
  }

  export type VentaCountAggregateOutputType = {
    id: number
    clienteId: number
    fechaVenta: number
    horaVenta: number
    totalVenta: number
    sucursalId: number
    nombreClienteFinal: number
    telefonoClienteFinal: number
    direccionClienteFinal: number
    imei: number
    registroCajaId: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id?: true
    clienteId?: true
    totalVenta?: true
    sucursalId?: true
    registroCajaId?: true
  }

  export type VentaSumAggregateInputType = {
    id?: true
    clienteId?: true
    totalVenta?: true
    sucursalId?: true
    registroCajaId?: true
  }

  export type VentaMinAggregateInputType = {
    id?: true
    clienteId?: true
    fechaVenta?: true
    horaVenta?: true
    totalVenta?: true
    sucursalId?: true
    nombreClienteFinal?: true
    telefonoClienteFinal?: true
    direccionClienteFinal?: true
    imei?: true
    registroCajaId?: true
  }

  export type VentaMaxAggregateInputType = {
    id?: true
    clienteId?: true
    fechaVenta?: true
    horaVenta?: true
    totalVenta?: true
    sucursalId?: true
    nombreClienteFinal?: true
    telefonoClienteFinal?: true
    direccionClienteFinal?: true
    imei?: true
    registroCajaId?: true
  }

  export type VentaCountAggregateInputType = {
    id?: true
    clienteId?: true
    fechaVenta?: true
    horaVenta?: true
    totalVenta?: true
    sucursalId?: true
    nombreClienteFinal?: true
    telefonoClienteFinal?: true
    direccionClienteFinal?: true
    imei?: true
    registroCajaId?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta to aggregate.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type VentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithAggregationInput | VentaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: VentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id: number
    clienteId: number | null
    fechaVenta: Date
    horaVenta: Date
    totalVenta: number
    sucursalId: number
    nombreClienteFinal: string | null
    telefonoClienteFinal: string | null
    direccionClienteFinal: string | null
    imei: string | null
    registroCajaId: number | null
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends VentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type VentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    fechaVenta?: boolean
    horaVenta?: boolean
    totalVenta?: boolean
    sucursalId?: boolean
    nombreClienteFinal?: boolean
    telefonoClienteFinal?: boolean
    direccionClienteFinal?: boolean
    imei?: boolean
    registroCajaId?: boolean
    cliente?: boolean | Venta$clienteArgs<ExtArgs>
    productos?: boolean | Venta$productosArgs<ExtArgs>
    metodoPago?: boolean | Venta$metodoPagoArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    registroCaja?: boolean | Venta$registroCajaArgs<ExtArgs>
    ventaCuota?: boolean | Venta$ventaCuotaArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    fechaVenta?: boolean
    horaVenta?: boolean
    totalVenta?: boolean
    sucursalId?: boolean
    nombreClienteFinal?: boolean
    telefonoClienteFinal?: boolean
    direccionClienteFinal?: boolean
    imei?: boolean
    registroCajaId?: boolean
    cliente?: boolean | Venta$clienteArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    registroCaja?: boolean | Venta$registroCajaArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectScalar = {
    id?: boolean
    clienteId?: boolean
    fechaVenta?: boolean
    horaVenta?: boolean
    totalVenta?: boolean
    sucursalId?: boolean
    nombreClienteFinal?: boolean
    telefonoClienteFinal?: boolean
    direccionClienteFinal?: boolean
    imei?: boolean
    registroCajaId?: boolean
  }

  export type VentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Venta$clienteArgs<ExtArgs>
    productos?: boolean | Venta$productosArgs<ExtArgs>
    metodoPago?: boolean | Venta$metodoPagoArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    registroCaja?: boolean | Venta$registroCajaArgs<ExtArgs>
    ventaCuota?: boolean | Venta$ventaCuotaArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Venta$clienteArgs<ExtArgs>
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    registroCaja?: boolean | Venta$registroCajaArgs<ExtArgs>
  }

  export type $VentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs> | null
      productos: Prisma.$VentaProductoPayload<ExtArgs>[]
      metodoPago: Prisma.$PagoPayload<ExtArgs> | null
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      registroCaja: Prisma.$RegistroCajaPayload<ExtArgs> | null
      ventaCuota: Prisma.$VentaCuotaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number | null
      fechaVenta: Date
      horaVenta: Date
      totalVenta: number
      sucursalId: number
      nombreClienteFinal: string | null
      telefonoClienteFinal: string | null
      direccionClienteFinal: string | null
      imei: string | null
      registroCajaId: number | null
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type VentaGetPayload<S extends boolean | null | undefined | VentaDefaultArgs> = $Result.GetResult<Prisma.$VentaPayload, S>

  type VentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VentaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface VentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta'], meta: { name: 'Venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {VentaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaFindUniqueArgs>(args: SelectSubset<T, VentaFindUniqueArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VentaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaFindFirstArgs>(args?: SelectSubset<T, VentaFindFirstArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaWithIdOnly = await prisma.venta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaFindManyArgs>(args?: SelectSubset<T, VentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Venta.
     * @param {VentaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends VentaCreateArgs>(args: SelectSubset<T, VentaCreateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Ventas.
     * @param {VentaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCreateManyArgs>(args?: SelectSubset<T, VentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {VentaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Venta.
     * @param {VentaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends VentaDeleteArgs>(args: SelectSubset<T, VentaDeleteArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Venta.
     * @param {VentaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaUpdateArgs>(args: SelectSubset<T, VentaUpdateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Ventas.
     * @param {VentaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaDeleteManyArgs>(args?: SelectSubset<T, VentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaUpdateManyArgs>(args: SelectSubset<T, VentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Venta.
     * @param {VentaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends VentaUpsertArgs>(args: SelectSubset<T, VentaUpsertArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends VentaCountArgs>(
      args?: Subset<T, VentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaGroupByArgs['orderBy'] }
        : { orderBy?: VentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta model
   */
  readonly fields: VentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends Venta$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Venta$clienteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    productos<T extends Venta$productosArgs<ExtArgs> = {}>(args?: Subset<T, Venta$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findMany"> | Null>
    metodoPago<T extends Venta$metodoPagoArgs<ExtArgs> = {}>(args?: Subset<T, Venta$metodoPagoArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    registroCaja<T extends Venta$registroCajaArgs<ExtArgs> = {}>(args?: Subset<T, Venta$registroCajaArgs<ExtArgs>>): Prisma__RegistroCajaClient<$Result.GetResult<Prisma.$RegistroCajaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    ventaCuota<T extends Venta$ventaCuotaArgs<ExtArgs> = {}>(args?: Subset<T, Venta$ventaCuotaArgs<ExtArgs>>): Prisma__VentaCuotaClient<$Result.GetResult<Prisma.$VentaCuotaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta model
   */ 
  interface VentaFieldRefs {
    readonly id: FieldRef<"Venta", 'Int'>
    readonly clienteId: FieldRef<"Venta", 'Int'>
    readonly fechaVenta: FieldRef<"Venta", 'DateTime'>
    readonly horaVenta: FieldRef<"Venta", 'DateTime'>
    readonly totalVenta: FieldRef<"Venta", 'Float'>
    readonly sucursalId: FieldRef<"Venta", 'Int'>
    readonly nombreClienteFinal: FieldRef<"Venta", 'String'>
    readonly telefonoClienteFinal: FieldRef<"Venta", 'String'>
    readonly direccionClienteFinal: FieldRef<"Venta", 'String'>
    readonly imei: FieldRef<"Venta", 'String'>
    readonly registroCajaId: FieldRef<"Venta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Venta findUnique
   */
  export type VentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findUniqueOrThrow
   */
  export type VentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findFirst
   */
  export type VentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findFirstOrThrow
   */
  export type VentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findMany
   */
  export type VentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Ventas to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta create
   */
  export type VentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta.
     */
    data: XOR<VentaCreateInput, VentaUncheckedCreateInput>
  }

  /**
   * Venta createMany
   */
  export type VentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Venta createManyAndReturn
   */
  export type VentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta update
   */
  export type VentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta.
     */
    data: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
    /**
     * Choose, which Venta to update.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta updateMany
   */
  export type VentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
  }

  /**
   * Venta upsert
   */
  export type VentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta to update in case it exists.
     */
    where: VentaWhereUniqueInput
    /**
     * In case the Venta found by the `where` argument doesn't exist, create a new Venta with this data.
     */
    create: XOR<VentaCreateInput, VentaUncheckedCreateInput>
    /**
     * In case the Venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
  }

  /**
   * Venta delete
   */
  export type VentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter which Venta to delete.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta deleteMany
   */
  export type VentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ventas to delete
     */
    where?: VentaWhereInput
  }

  /**
   * Venta.cliente
   */
  export type Venta$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
  }

  /**
   * Venta.productos
   */
  export type Venta$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    where?: VentaProductoWhereInput
    orderBy?: VentaProductoOrderByWithRelationInput | VentaProductoOrderByWithRelationInput[]
    cursor?: VentaProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaProductoScalarFieldEnum | VentaProductoScalarFieldEnum[]
  }

  /**
   * Venta.metodoPago
   */
  export type Venta$metodoPagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    where?: PagoWhereInput
  }

  /**
   * Venta.registroCaja
   */
  export type Venta$registroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCaja
     */
    select?: RegistroCajaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroCajaInclude<ExtArgs> | null
    where?: RegistroCajaWhereInput
  }

  /**
   * Venta.ventaCuota
   */
  export type Venta$ventaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCuota
     */
    select?: VentaCuotaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaCuotaInclude<ExtArgs> | null
    where?: VentaCuotaWhereInput
  }

  /**
   * Venta without action
   */
  export type VentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
  }


  /**
   * Model TransferenciaProducto
   */

  export type AggregateTransferenciaProducto = {
    _count: TransferenciaProductoCountAggregateOutputType | null
    _avg: TransferenciaProductoAvgAggregateOutputType | null
    _sum: TransferenciaProductoSumAggregateOutputType | null
    _min: TransferenciaProductoMinAggregateOutputType | null
    _max: TransferenciaProductoMaxAggregateOutputType | null
  }

  export type TransferenciaProductoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    usuarioEncargadoId: number | null
  }

  export type TransferenciaProductoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    usuarioEncargadoId: number | null
  }

  export type TransferenciaProductoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    fechaTransferencia: Date | null
    usuarioEncargadoId: number | null
  }

  export type TransferenciaProductoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    fechaTransferencia: Date | null
    usuarioEncargadoId: number | null
  }

  export type TransferenciaProductoCountAggregateOutputType = {
    id: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia: number
    usuarioEncargadoId: number
    _all: number
  }


  export type TransferenciaProductoAvgAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioEncargadoId?: true
  }

  export type TransferenciaProductoSumAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioEncargadoId?: true
  }

  export type TransferenciaProductoMinAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    fechaTransferencia?: true
    usuarioEncargadoId?: true
  }

  export type TransferenciaProductoMaxAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    fechaTransferencia?: true
    usuarioEncargadoId?: true
  }

  export type TransferenciaProductoCountAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    fechaTransferencia?: true
    usuarioEncargadoId?: true
    _all?: true
  }

  export type TransferenciaProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransferenciaProducto to aggregate.
     */
    where?: TransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferenciaProductos to fetch.
     */
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferenciaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TransferenciaProductos
    **/
    _count?: true | TransferenciaProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransferenciaProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransferenciaProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransferenciaProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransferenciaProductoMaxAggregateInputType
  }

  export type GetTransferenciaProductoAggregateType<T extends TransferenciaProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateTransferenciaProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransferenciaProducto[P]>
      : GetScalarType<T[P], AggregateTransferenciaProducto[P]>
  }




  export type TransferenciaProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferenciaProductoWhereInput
    orderBy?: TransferenciaProductoOrderByWithAggregationInput | TransferenciaProductoOrderByWithAggregationInput[]
    by: TransferenciaProductoScalarFieldEnum[] | TransferenciaProductoScalarFieldEnum
    having?: TransferenciaProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransferenciaProductoCountAggregateInputType | true
    _avg?: TransferenciaProductoAvgAggregateInputType
    _sum?: TransferenciaProductoSumAggregateInputType
    _min?: TransferenciaProductoMinAggregateInputType
    _max?: TransferenciaProductoMaxAggregateInputType
  }

  export type TransferenciaProductoGroupByOutputType = {
    id: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia: Date
    usuarioEncargadoId: number | null
    _count: TransferenciaProductoCountAggregateOutputType | null
    _avg: TransferenciaProductoAvgAggregateOutputType | null
    _sum: TransferenciaProductoSumAggregateOutputType | null
    _min: TransferenciaProductoMinAggregateOutputType | null
    _max: TransferenciaProductoMaxAggregateOutputType | null
  }

  type GetTransferenciaProductoGroupByPayload<T extends TransferenciaProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransferenciaProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransferenciaProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransferenciaProductoGroupByOutputType[P]>
            : GetScalarType<T[P], TransferenciaProductoGroupByOutputType[P]>
        }
      >
    >


  export type TransferenciaProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    sucursalOrigenId?: boolean
    sucursalDestinoId?: boolean
    fechaTransferencia?: boolean
    usuarioEncargadoId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioEncargado?: boolean | TransferenciaProducto$usuarioEncargadoArgs<ExtArgs>
  }, ExtArgs["result"]["transferenciaProducto"]>

  export type TransferenciaProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    sucursalOrigenId?: boolean
    sucursalDestinoId?: boolean
    fechaTransferencia?: boolean
    usuarioEncargadoId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioEncargado?: boolean | TransferenciaProducto$usuarioEncargadoArgs<ExtArgs>
  }, ExtArgs["result"]["transferenciaProducto"]>

  export type TransferenciaProductoSelectScalar = {
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    sucursalOrigenId?: boolean
    sucursalDestinoId?: boolean
    fechaTransferencia?: boolean
    usuarioEncargadoId?: boolean
  }

  export type TransferenciaProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioEncargado?: boolean | TransferenciaProducto$usuarioEncargadoArgs<ExtArgs>
  }
  export type TransferenciaProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioEncargado?: boolean | TransferenciaProducto$usuarioEncargadoArgs<ExtArgs>
  }

  export type $TransferenciaProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TransferenciaProducto"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      sucursalOrigen: Prisma.$SucursalPayload<ExtArgs>
      sucursalDestino: Prisma.$SucursalPayload<ExtArgs>
      usuarioEncargado: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      cantidad: number
      sucursalOrigenId: number
      sucursalDestinoId: number
      fechaTransferencia: Date
      usuarioEncargadoId: number | null
    }, ExtArgs["result"]["transferenciaProducto"]>
    composites: {}
  }

  type TransferenciaProductoGetPayload<S extends boolean | null | undefined | TransferenciaProductoDefaultArgs> = $Result.GetResult<Prisma.$TransferenciaProductoPayload, S>

  type TransferenciaProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TransferenciaProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TransferenciaProductoCountAggregateInputType | true
    }

  export interface TransferenciaProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TransferenciaProducto'], meta: { name: 'TransferenciaProducto' } }
    /**
     * Find zero or one TransferenciaProducto that matches the filter.
     * @param {TransferenciaProductoFindUniqueArgs} args - Arguments to find a TransferenciaProducto
     * @example
     * // Get one TransferenciaProducto
     * const transferenciaProducto = await prisma.transferenciaProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransferenciaProductoFindUniqueArgs>(args: SelectSubset<T, TransferenciaProductoFindUniqueArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TransferenciaProducto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TransferenciaProductoFindUniqueOrThrowArgs} args - Arguments to find a TransferenciaProducto
     * @example
     * // Get one TransferenciaProducto
     * const transferenciaProducto = await prisma.transferenciaProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransferenciaProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, TransferenciaProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TransferenciaProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoFindFirstArgs} args - Arguments to find a TransferenciaProducto
     * @example
     * // Get one TransferenciaProducto
     * const transferenciaProducto = await prisma.transferenciaProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransferenciaProductoFindFirstArgs>(args?: SelectSubset<T, TransferenciaProductoFindFirstArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TransferenciaProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoFindFirstOrThrowArgs} args - Arguments to find a TransferenciaProducto
     * @example
     * // Get one TransferenciaProducto
     * const transferenciaProducto = await prisma.transferenciaProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransferenciaProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, TransferenciaProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TransferenciaProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TransferenciaProductos
     * const transferenciaProductos = await prisma.transferenciaProducto.findMany()
     * 
     * // Get first 10 TransferenciaProductos
     * const transferenciaProductos = await prisma.transferenciaProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transferenciaProductoWithIdOnly = await prisma.transferenciaProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransferenciaProductoFindManyArgs>(args?: SelectSubset<T, TransferenciaProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TransferenciaProducto.
     * @param {TransferenciaProductoCreateArgs} args - Arguments to create a TransferenciaProducto.
     * @example
     * // Create one TransferenciaProducto
     * const TransferenciaProducto = await prisma.transferenciaProducto.create({
     *   data: {
     *     // ... data to create a TransferenciaProducto
     *   }
     * })
     * 
     */
    create<T extends TransferenciaProductoCreateArgs>(args: SelectSubset<T, TransferenciaProductoCreateArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TransferenciaProductos.
     * @param {TransferenciaProductoCreateManyArgs} args - Arguments to create many TransferenciaProductos.
     * @example
     * // Create many TransferenciaProductos
     * const transferenciaProducto = await prisma.transferenciaProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransferenciaProductoCreateManyArgs>(args?: SelectSubset<T, TransferenciaProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TransferenciaProductos and returns the data saved in the database.
     * @param {TransferenciaProductoCreateManyAndReturnArgs} args - Arguments to create many TransferenciaProductos.
     * @example
     * // Create many TransferenciaProductos
     * const transferenciaProducto = await prisma.transferenciaProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TransferenciaProductos and only return the `id`
     * const transferenciaProductoWithIdOnly = await prisma.transferenciaProducto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransferenciaProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, TransferenciaProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TransferenciaProducto.
     * @param {TransferenciaProductoDeleteArgs} args - Arguments to delete one TransferenciaProducto.
     * @example
     * // Delete one TransferenciaProducto
     * const TransferenciaProducto = await prisma.transferenciaProducto.delete({
     *   where: {
     *     // ... filter to delete one TransferenciaProducto
     *   }
     * })
     * 
     */
    delete<T extends TransferenciaProductoDeleteArgs>(args: SelectSubset<T, TransferenciaProductoDeleteArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TransferenciaProducto.
     * @param {TransferenciaProductoUpdateArgs} args - Arguments to update one TransferenciaProducto.
     * @example
     * // Update one TransferenciaProducto
     * const transferenciaProducto = await prisma.transferenciaProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransferenciaProductoUpdateArgs>(args: SelectSubset<T, TransferenciaProductoUpdateArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TransferenciaProductos.
     * @param {TransferenciaProductoDeleteManyArgs} args - Arguments to filter TransferenciaProductos to delete.
     * @example
     * // Delete a few TransferenciaProductos
     * const { count } = await prisma.transferenciaProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransferenciaProductoDeleteManyArgs>(args?: SelectSubset<T, TransferenciaProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TransferenciaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TransferenciaProductos
     * const transferenciaProducto = await prisma.transferenciaProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransferenciaProductoUpdateManyArgs>(args: SelectSubset<T, TransferenciaProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TransferenciaProducto.
     * @param {TransferenciaProductoUpsertArgs} args - Arguments to update or create a TransferenciaProducto.
     * @example
     * // Update or create a TransferenciaProducto
     * const transferenciaProducto = await prisma.transferenciaProducto.upsert({
     *   create: {
     *     // ... data to create a TransferenciaProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TransferenciaProducto we want to update
     *   }
     * })
     */
    upsert<T extends TransferenciaProductoUpsertArgs>(args: SelectSubset<T, TransferenciaProductoUpsertArgs<ExtArgs>>): Prisma__TransferenciaProductoClient<$Result.GetResult<Prisma.$TransferenciaProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TransferenciaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoCountArgs} args - Arguments to filter TransferenciaProductos to count.
     * @example
     * // Count the number of TransferenciaProductos
     * const count = await prisma.transferenciaProducto.count({
     *   where: {
     *     // ... the filter for the TransferenciaProductos we want to count
     *   }
     * })
    **/
    count<T extends TransferenciaProductoCountArgs>(
      args?: Subset<T, TransferenciaProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransferenciaProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TransferenciaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransferenciaProductoAggregateArgs>(args: Subset<T, TransferenciaProductoAggregateArgs>): Prisma.PrismaPromise<GetTransferenciaProductoAggregateType<T>>

    /**
     * Group by TransferenciaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferenciaProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransferenciaProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransferenciaProductoGroupByArgs['orderBy'] }
        : { orderBy?: TransferenciaProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransferenciaProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransferenciaProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TransferenciaProducto model
   */
  readonly fields: TransferenciaProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TransferenciaProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransferenciaProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursalOrigen<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursalDestino<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuarioEncargado<T extends TransferenciaProducto$usuarioEncargadoArgs<ExtArgs> = {}>(args?: Subset<T, TransferenciaProducto$usuarioEncargadoArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TransferenciaProducto model
   */ 
  interface TransferenciaProductoFieldRefs {
    readonly id: FieldRef<"TransferenciaProducto", 'Int'>
    readonly productoId: FieldRef<"TransferenciaProducto", 'Int'>
    readonly cantidad: FieldRef<"TransferenciaProducto", 'Int'>
    readonly sucursalOrigenId: FieldRef<"TransferenciaProducto", 'Int'>
    readonly sucursalDestinoId: FieldRef<"TransferenciaProducto", 'Int'>
    readonly fechaTransferencia: FieldRef<"TransferenciaProducto", 'DateTime'>
    readonly usuarioEncargadoId: FieldRef<"TransferenciaProducto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TransferenciaProducto findUnique
   */
  export type TransferenciaProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which TransferenciaProducto to fetch.
     */
    where: TransferenciaProductoWhereUniqueInput
  }

  /**
   * TransferenciaProducto findUniqueOrThrow
   */
  export type TransferenciaProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which TransferenciaProducto to fetch.
     */
    where: TransferenciaProductoWhereUniqueInput
  }

  /**
   * TransferenciaProducto findFirst
   */
  export type TransferenciaProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which TransferenciaProducto to fetch.
     */
    where?: TransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferenciaProductos to fetch.
     */
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransferenciaProductos.
     */
    cursor?: TransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferenciaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransferenciaProductos.
     */
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * TransferenciaProducto findFirstOrThrow
   */
  export type TransferenciaProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which TransferenciaProducto to fetch.
     */
    where?: TransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferenciaProductos to fetch.
     */
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TransferenciaProductos.
     */
    cursor?: TransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferenciaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TransferenciaProductos.
     */
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * TransferenciaProducto findMany
   */
  export type TransferenciaProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which TransferenciaProductos to fetch.
     */
    where?: TransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TransferenciaProductos to fetch.
     */
    orderBy?: TransferenciaProductoOrderByWithRelationInput | TransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TransferenciaProductos.
     */
    cursor?: TransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TransferenciaProductos.
     */
    skip?: number
    distinct?: TransferenciaProductoScalarFieldEnum | TransferenciaProductoScalarFieldEnum[]
  }

  /**
   * TransferenciaProducto create
   */
  export type TransferenciaProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a TransferenciaProducto.
     */
    data: XOR<TransferenciaProductoCreateInput, TransferenciaProductoUncheckedCreateInput>
  }

  /**
   * TransferenciaProducto createMany
   */
  export type TransferenciaProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TransferenciaProductos.
     */
    data: TransferenciaProductoCreateManyInput | TransferenciaProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TransferenciaProducto createManyAndReturn
   */
  export type TransferenciaProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TransferenciaProductos.
     */
    data: TransferenciaProductoCreateManyInput | TransferenciaProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TransferenciaProducto update
   */
  export type TransferenciaProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a TransferenciaProducto.
     */
    data: XOR<TransferenciaProductoUpdateInput, TransferenciaProductoUncheckedUpdateInput>
    /**
     * Choose, which TransferenciaProducto to update.
     */
    where: TransferenciaProductoWhereUniqueInput
  }

  /**
   * TransferenciaProducto updateMany
   */
  export type TransferenciaProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TransferenciaProductos.
     */
    data: XOR<TransferenciaProductoUpdateManyMutationInput, TransferenciaProductoUncheckedUpdateManyInput>
    /**
     * Filter which TransferenciaProductos to update
     */
    where?: TransferenciaProductoWhereInput
  }

  /**
   * TransferenciaProducto upsert
   */
  export type TransferenciaProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the TransferenciaProducto to update in case it exists.
     */
    where: TransferenciaProductoWhereUniqueInput
    /**
     * In case the TransferenciaProducto found by the `where` argument doesn't exist, create a new TransferenciaProducto with this data.
     */
    create: XOR<TransferenciaProductoCreateInput, TransferenciaProductoUncheckedCreateInput>
    /**
     * In case the TransferenciaProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransferenciaProductoUpdateInput, TransferenciaProductoUncheckedUpdateInput>
  }

  /**
   * TransferenciaProducto delete
   */
  export type TransferenciaProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter which TransferenciaProducto to delete.
     */
    where: TransferenciaProductoWhereUniqueInput
  }

  /**
   * TransferenciaProducto deleteMany
   */
  export type TransferenciaProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TransferenciaProductos to delete
     */
    where?: TransferenciaProductoWhereInput
  }

  /**
   * TransferenciaProducto.usuarioEncargado
   */
  export type TransferenciaProducto$usuarioEncargadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * TransferenciaProducto without action
   */
  export type TransferenciaProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransferenciaProducto
     */
    select?: TransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferenciaProductoInclude<ExtArgs> | null
  }


  /**
   * Model SolicitudTransferenciaProducto
   */

  export type AggregateSolicitudTransferenciaProducto = {
    _count: SolicitudTransferenciaProductoCountAggregateOutputType | null
    _avg: SolicitudTransferenciaProductoAvgAggregateOutputType | null
    _sum: SolicitudTransferenciaProductoSumAggregateOutputType | null
    _min: SolicitudTransferenciaProductoMinAggregateOutputType | null
    _max: SolicitudTransferenciaProductoMaxAggregateOutputType | null
  }

  export type SolicitudTransferenciaProductoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    usuarioSolicitanteId: number | null
    administradorId: number | null
  }

  export type SolicitudTransferenciaProductoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    usuarioSolicitanteId: number | null
    administradorId: number | null
  }

  export type SolicitudTransferenciaProductoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    usuarioSolicitanteId: number | null
    estado: $Enums.EstadoSolicitudTransferencia | null
    fechaSolicitud: Date | null
    fechaAprobacion: Date | null
    administradorId: number | null
  }

  export type SolicitudTransferenciaProductoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    cantidad: number | null
    sucursalOrigenId: number | null
    sucursalDestinoId: number | null
    usuarioSolicitanteId: number | null
    estado: $Enums.EstadoSolicitudTransferencia | null
    fechaSolicitud: Date | null
    fechaAprobacion: Date | null
    administradorId: number | null
  }

  export type SolicitudTransferenciaProductoCountAggregateOutputType = {
    id: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId: number
    estado: number
    fechaSolicitud: number
    fechaAprobacion: number
    administradorId: number
    _all: number
  }


  export type SolicitudTransferenciaProductoAvgAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioSolicitanteId?: true
    administradorId?: true
  }

  export type SolicitudTransferenciaProductoSumAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioSolicitanteId?: true
    administradorId?: true
  }

  export type SolicitudTransferenciaProductoMinAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioSolicitanteId?: true
    estado?: true
    fechaSolicitud?: true
    fechaAprobacion?: true
    administradorId?: true
  }

  export type SolicitudTransferenciaProductoMaxAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioSolicitanteId?: true
    estado?: true
    fechaSolicitud?: true
    fechaAprobacion?: true
    administradorId?: true
  }

  export type SolicitudTransferenciaProductoCountAggregateInputType = {
    id?: true
    productoId?: true
    cantidad?: true
    sucursalOrigenId?: true
    sucursalDestinoId?: true
    usuarioSolicitanteId?: true
    estado?: true
    fechaSolicitud?: true
    fechaAprobacion?: true
    administradorId?: true
    _all?: true
  }

  export type SolicitudTransferenciaProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitudTransferenciaProducto to aggregate.
     */
    where?: SolicitudTransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudTransferenciaProductos to fetch.
     */
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudTransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudTransferenciaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SolicitudTransferenciaProductos
    **/
    _count?: true | SolicitudTransferenciaProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SolicitudTransferenciaProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SolicitudTransferenciaProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SolicitudTransferenciaProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SolicitudTransferenciaProductoMaxAggregateInputType
  }

  export type GetSolicitudTransferenciaProductoAggregateType<T extends SolicitudTransferenciaProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateSolicitudTransferenciaProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSolicitudTransferenciaProducto[P]>
      : GetScalarType<T[P], AggregateSolicitudTransferenciaProducto[P]>
  }




  export type SolicitudTransferenciaProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SolicitudTransferenciaProductoWhereInput
    orderBy?: SolicitudTransferenciaProductoOrderByWithAggregationInput | SolicitudTransferenciaProductoOrderByWithAggregationInput[]
    by: SolicitudTransferenciaProductoScalarFieldEnum[] | SolicitudTransferenciaProductoScalarFieldEnum
    having?: SolicitudTransferenciaProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SolicitudTransferenciaProductoCountAggregateInputType | true
    _avg?: SolicitudTransferenciaProductoAvgAggregateInputType
    _sum?: SolicitudTransferenciaProductoSumAggregateInputType
    _min?: SolicitudTransferenciaProductoMinAggregateInputType
    _max?: SolicitudTransferenciaProductoMaxAggregateInputType
  }

  export type SolicitudTransferenciaProductoGroupByOutputType = {
    id: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId: number | null
    estado: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud: Date
    fechaAprobacion: Date | null
    administradorId: number | null
    _count: SolicitudTransferenciaProductoCountAggregateOutputType | null
    _avg: SolicitudTransferenciaProductoAvgAggregateOutputType | null
    _sum: SolicitudTransferenciaProductoSumAggregateOutputType | null
    _min: SolicitudTransferenciaProductoMinAggregateOutputType | null
    _max: SolicitudTransferenciaProductoMaxAggregateOutputType | null
  }

  type GetSolicitudTransferenciaProductoGroupByPayload<T extends SolicitudTransferenciaProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SolicitudTransferenciaProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SolicitudTransferenciaProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SolicitudTransferenciaProductoGroupByOutputType[P]>
            : GetScalarType<T[P], SolicitudTransferenciaProductoGroupByOutputType[P]>
        }
      >
    >


  export type SolicitudTransferenciaProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    sucursalOrigenId?: boolean
    sucursalDestinoId?: boolean
    usuarioSolicitanteId?: boolean
    estado?: boolean
    fechaSolicitud?: boolean
    fechaAprobacion?: boolean
    administradorId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioSolicitante?: boolean | SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs>
    administrador?: boolean | SolicitudTransferenciaProducto$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["solicitudTransferenciaProducto"]>

  export type SolicitudTransferenciaProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    sucursalOrigenId?: boolean
    sucursalDestinoId?: boolean
    usuarioSolicitanteId?: boolean
    estado?: boolean
    fechaSolicitud?: boolean
    fechaAprobacion?: boolean
    administradorId?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioSolicitante?: boolean | SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs>
    administrador?: boolean | SolicitudTransferenciaProducto$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["solicitudTransferenciaProducto"]>

  export type SolicitudTransferenciaProductoSelectScalar = {
    id?: boolean
    productoId?: boolean
    cantidad?: boolean
    sucursalOrigenId?: boolean
    sucursalDestinoId?: boolean
    usuarioSolicitanteId?: boolean
    estado?: boolean
    fechaSolicitud?: boolean
    fechaAprobacion?: boolean
    administradorId?: boolean
  }

  export type SolicitudTransferenciaProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioSolicitante?: boolean | SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs>
    administrador?: boolean | SolicitudTransferenciaProducto$administradorArgs<ExtArgs>
  }
  export type SolicitudTransferenciaProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    sucursalOrigen?: boolean | SucursalDefaultArgs<ExtArgs>
    sucursalDestino?: boolean | SucursalDefaultArgs<ExtArgs>
    usuarioSolicitante?: boolean | SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs>
    administrador?: boolean | SolicitudTransferenciaProducto$administradorArgs<ExtArgs>
  }

  export type $SolicitudTransferenciaProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SolicitudTransferenciaProducto"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      sucursalOrigen: Prisma.$SucursalPayload<ExtArgs>
      sucursalDestino: Prisma.$SucursalPayload<ExtArgs>
      usuarioSolicitante: Prisma.$UsuarioPayload<ExtArgs> | null
      administrador: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      cantidad: number
      sucursalOrigenId: number
      sucursalDestinoId: number
      usuarioSolicitanteId: number | null
      estado: $Enums.EstadoSolicitudTransferencia
      fechaSolicitud: Date
      fechaAprobacion: Date | null
      administradorId: number | null
    }, ExtArgs["result"]["solicitudTransferenciaProducto"]>
    composites: {}
  }

  type SolicitudTransferenciaProductoGetPayload<S extends boolean | null | undefined | SolicitudTransferenciaProductoDefaultArgs> = $Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload, S>

  type SolicitudTransferenciaProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SolicitudTransferenciaProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SolicitudTransferenciaProductoCountAggregateInputType | true
    }

  export interface SolicitudTransferenciaProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SolicitudTransferenciaProducto'], meta: { name: 'SolicitudTransferenciaProducto' } }
    /**
     * Find zero or one SolicitudTransferenciaProducto that matches the filter.
     * @param {SolicitudTransferenciaProductoFindUniqueArgs} args - Arguments to find a SolicitudTransferenciaProducto
     * @example
     * // Get one SolicitudTransferenciaProducto
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SolicitudTransferenciaProductoFindUniqueArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoFindUniqueArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SolicitudTransferenciaProducto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SolicitudTransferenciaProductoFindUniqueOrThrowArgs} args - Arguments to find a SolicitudTransferenciaProducto
     * @example
     * // Get one SolicitudTransferenciaProducto
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SolicitudTransferenciaProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SolicitudTransferenciaProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoFindFirstArgs} args - Arguments to find a SolicitudTransferenciaProducto
     * @example
     * // Get one SolicitudTransferenciaProducto
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SolicitudTransferenciaProductoFindFirstArgs>(args?: SelectSubset<T, SolicitudTransferenciaProductoFindFirstArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SolicitudTransferenciaProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoFindFirstOrThrowArgs} args - Arguments to find a SolicitudTransferenciaProducto
     * @example
     * // Get one SolicitudTransferenciaProducto
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SolicitudTransferenciaProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, SolicitudTransferenciaProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SolicitudTransferenciaProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SolicitudTransferenciaProductos
     * const solicitudTransferenciaProductos = await prisma.solicitudTransferenciaProducto.findMany()
     * 
     * // Get first 10 SolicitudTransferenciaProductos
     * const solicitudTransferenciaProductos = await prisma.solicitudTransferenciaProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const solicitudTransferenciaProductoWithIdOnly = await prisma.solicitudTransferenciaProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SolicitudTransferenciaProductoFindManyArgs>(args?: SelectSubset<T, SolicitudTransferenciaProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SolicitudTransferenciaProducto.
     * @param {SolicitudTransferenciaProductoCreateArgs} args - Arguments to create a SolicitudTransferenciaProducto.
     * @example
     * // Create one SolicitudTransferenciaProducto
     * const SolicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.create({
     *   data: {
     *     // ... data to create a SolicitudTransferenciaProducto
     *   }
     * })
     * 
     */
    create<T extends SolicitudTransferenciaProductoCreateArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoCreateArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SolicitudTransferenciaProductos.
     * @param {SolicitudTransferenciaProductoCreateManyArgs} args - Arguments to create many SolicitudTransferenciaProductos.
     * @example
     * // Create many SolicitudTransferenciaProductos
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SolicitudTransferenciaProductoCreateManyArgs>(args?: SelectSubset<T, SolicitudTransferenciaProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SolicitudTransferenciaProductos and returns the data saved in the database.
     * @param {SolicitudTransferenciaProductoCreateManyAndReturnArgs} args - Arguments to create many SolicitudTransferenciaProductos.
     * @example
     * // Create many SolicitudTransferenciaProductos
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SolicitudTransferenciaProductos and only return the `id`
     * const solicitudTransferenciaProductoWithIdOnly = await prisma.solicitudTransferenciaProducto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SolicitudTransferenciaProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, SolicitudTransferenciaProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SolicitudTransferenciaProducto.
     * @param {SolicitudTransferenciaProductoDeleteArgs} args - Arguments to delete one SolicitudTransferenciaProducto.
     * @example
     * // Delete one SolicitudTransferenciaProducto
     * const SolicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.delete({
     *   where: {
     *     // ... filter to delete one SolicitudTransferenciaProducto
     *   }
     * })
     * 
     */
    delete<T extends SolicitudTransferenciaProductoDeleteArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoDeleteArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SolicitudTransferenciaProducto.
     * @param {SolicitudTransferenciaProductoUpdateArgs} args - Arguments to update one SolicitudTransferenciaProducto.
     * @example
     * // Update one SolicitudTransferenciaProducto
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SolicitudTransferenciaProductoUpdateArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoUpdateArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SolicitudTransferenciaProductos.
     * @param {SolicitudTransferenciaProductoDeleteManyArgs} args - Arguments to filter SolicitudTransferenciaProductos to delete.
     * @example
     * // Delete a few SolicitudTransferenciaProductos
     * const { count } = await prisma.solicitudTransferenciaProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SolicitudTransferenciaProductoDeleteManyArgs>(args?: SelectSubset<T, SolicitudTransferenciaProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SolicitudTransferenciaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SolicitudTransferenciaProductos
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SolicitudTransferenciaProductoUpdateManyArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SolicitudTransferenciaProducto.
     * @param {SolicitudTransferenciaProductoUpsertArgs} args - Arguments to update or create a SolicitudTransferenciaProducto.
     * @example
     * // Update or create a SolicitudTransferenciaProducto
     * const solicitudTransferenciaProducto = await prisma.solicitudTransferenciaProducto.upsert({
     *   create: {
     *     // ... data to create a SolicitudTransferenciaProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SolicitudTransferenciaProducto we want to update
     *   }
     * })
     */
    upsert<T extends SolicitudTransferenciaProductoUpsertArgs>(args: SelectSubset<T, SolicitudTransferenciaProductoUpsertArgs<ExtArgs>>): Prisma__SolicitudTransferenciaProductoClient<$Result.GetResult<Prisma.$SolicitudTransferenciaProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SolicitudTransferenciaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoCountArgs} args - Arguments to filter SolicitudTransferenciaProductos to count.
     * @example
     * // Count the number of SolicitudTransferenciaProductos
     * const count = await prisma.solicitudTransferenciaProducto.count({
     *   where: {
     *     // ... the filter for the SolicitudTransferenciaProductos we want to count
     *   }
     * })
    **/
    count<T extends SolicitudTransferenciaProductoCountArgs>(
      args?: Subset<T, SolicitudTransferenciaProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SolicitudTransferenciaProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SolicitudTransferenciaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SolicitudTransferenciaProductoAggregateArgs>(args: Subset<T, SolicitudTransferenciaProductoAggregateArgs>): Prisma.PrismaPromise<GetSolicitudTransferenciaProductoAggregateType<T>>

    /**
     * Group by SolicitudTransferenciaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SolicitudTransferenciaProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SolicitudTransferenciaProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SolicitudTransferenciaProductoGroupByArgs['orderBy'] }
        : { orderBy?: SolicitudTransferenciaProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SolicitudTransferenciaProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSolicitudTransferenciaProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SolicitudTransferenciaProducto model
   */
  readonly fields: SolicitudTransferenciaProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SolicitudTransferenciaProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SolicitudTransferenciaProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursalOrigen<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sucursalDestino<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuarioSolicitante<T extends SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs> = {}>(args?: Subset<T, SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    administrador<T extends SolicitudTransferenciaProducto$administradorArgs<ExtArgs> = {}>(args?: Subset<T, SolicitudTransferenciaProducto$administradorArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SolicitudTransferenciaProducto model
   */ 
  interface SolicitudTransferenciaProductoFieldRefs {
    readonly id: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
    readonly productoId: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
    readonly cantidad: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
    readonly sucursalOrigenId: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
    readonly sucursalDestinoId: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
    readonly usuarioSolicitanteId: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
    readonly estado: FieldRef<"SolicitudTransferenciaProducto", 'EstadoSolicitudTransferencia'>
    readonly fechaSolicitud: FieldRef<"SolicitudTransferenciaProducto", 'DateTime'>
    readonly fechaAprobacion: FieldRef<"SolicitudTransferenciaProducto", 'DateTime'>
    readonly administradorId: FieldRef<"SolicitudTransferenciaProducto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SolicitudTransferenciaProducto findUnique
   */
  export type SolicitudTransferenciaProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudTransferenciaProducto to fetch.
     */
    where: SolicitudTransferenciaProductoWhereUniqueInput
  }

  /**
   * SolicitudTransferenciaProducto findUniqueOrThrow
   */
  export type SolicitudTransferenciaProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudTransferenciaProducto to fetch.
     */
    where: SolicitudTransferenciaProductoWhereUniqueInput
  }

  /**
   * SolicitudTransferenciaProducto findFirst
   */
  export type SolicitudTransferenciaProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudTransferenciaProducto to fetch.
     */
    where?: SolicitudTransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudTransferenciaProductos to fetch.
     */
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitudTransferenciaProductos.
     */
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudTransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudTransferenciaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitudTransferenciaProductos.
     */
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * SolicitudTransferenciaProducto findFirstOrThrow
   */
  export type SolicitudTransferenciaProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudTransferenciaProducto to fetch.
     */
    where?: SolicitudTransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudTransferenciaProductos to fetch.
     */
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SolicitudTransferenciaProductos.
     */
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudTransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudTransferenciaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SolicitudTransferenciaProductos.
     */
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * SolicitudTransferenciaProducto findMany
   */
  export type SolicitudTransferenciaProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter, which SolicitudTransferenciaProductos to fetch.
     */
    where?: SolicitudTransferenciaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SolicitudTransferenciaProductos to fetch.
     */
    orderBy?: SolicitudTransferenciaProductoOrderByWithRelationInput | SolicitudTransferenciaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SolicitudTransferenciaProductos.
     */
    cursor?: SolicitudTransferenciaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SolicitudTransferenciaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SolicitudTransferenciaProductos.
     */
    skip?: number
    distinct?: SolicitudTransferenciaProductoScalarFieldEnum | SolicitudTransferenciaProductoScalarFieldEnum[]
  }

  /**
   * SolicitudTransferenciaProducto create
   */
  export type SolicitudTransferenciaProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a SolicitudTransferenciaProducto.
     */
    data: XOR<SolicitudTransferenciaProductoCreateInput, SolicitudTransferenciaProductoUncheckedCreateInput>
  }

  /**
   * SolicitudTransferenciaProducto createMany
   */
  export type SolicitudTransferenciaProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SolicitudTransferenciaProductos.
     */
    data: SolicitudTransferenciaProductoCreateManyInput | SolicitudTransferenciaProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SolicitudTransferenciaProducto createManyAndReturn
   */
  export type SolicitudTransferenciaProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SolicitudTransferenciaProductos.
     */
    data: SolicitudTransferenciaProductoCreateManyInput | SolicitudTransferenciaProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SolicitudTransferenciaProducto update
   */
  export type SolicitudTransferenciaProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a SolicitudTransferenciaProducto.
     */
    data: XOR<SolicitudTransferenciaProductoUpdateInput, SolicitudTransferenciaProductoUncheckedUpdateInput>
    /**
     * Choose, which SolicitudTransferenciaProducto to update.
     */
    where: SolicitudTransferenciaProductoWhereUniqueInput
  }

  /**
   * SolicitudTransferenciaProducto updateMany
   */
  export type SolicitudTransferenciaProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SolicitudTransferenciaProductos.
     */
    data: XOR<SolicitudTransferenciaProductoUpdateManyMutationInput, SolicitudTransferenciaProductoUncheckedUpdateManyInput>
    /**
     * Filter which SolicitudTransferenciaProductos to update
     */
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * SolicitudTransferenciaProducto upsert
   */
  export type SolicitudTransferenciaProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the SolicitudTransferenciaProducto to update in case it exists.
     */
    where: SolicitudTransferenciaProductoWhereUniqueInput
    /**
     * In case the SolicitudTransferenciaProducto found by the `where` argument doesn't exist, create a new SolicitudTransferenciaProducto with this data.
     */
    create: XOR<SolicitudTransferenciaProductoCreateInput, SolicitudTransferenciaProductoUncheckedCreateInput>
    /**
     * In case the SolicitudTransferenciaProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SolicitudTransferenciaProductoUpdateInput, SolicitudTransferenciaProductoUncheckedUpdateInput>
  }

  /**
   * SolicitudTransferenciaProducto delete
   */
  export type SolicitudTransferenciaProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
    /**
     * Filter which SolicitudTransferenciaProducto to delete.
     */
    where: SolicitudTransferenciaProductoWhereUniqueInput
  }

  /**
   * SolicitudTransferenciaProducto deleteMany
   */
  export type SolicitudTransferenciaProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SolicitudTransferenciaProductos to delete
     */
    where?: SolicitudTransferenciaProductoWhereInput
  }

  /**
   * SolicitudTransferenciaProducto.usuarioSolicitante
   */
  export type SolicitudTransferenciaProducto$usuarioSolicitanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * SolicitudTransferenciaProducto.administrador
   */
  export type SolicitudTransferenciaProducto$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * SolicitudTransferenciaProducto without action
   */
  export type SolicitudTransferenciaProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SolicitudTransferenciaProducto
     */
    select?: SolicitudTransferenciaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SolicitudTransferenciaProductoInclude<ExtArgs> | null
  }


  /**
   * Model VentaProducto
   */

  export type AggregateVentaProducto = {
    _count: VentaProductoCountAggregateOutputType | null
    _avg: VentaProductoAvgAggregateOutputType | null
    _sum: VentaProductoSumAggregateOutputType | null
    _min: VentaProductoMinAggregateOutputType | null
    _max: VentaProductoMaxAggregateOutputType | null
  }

  export type VentaProductoAvgAggregateOutputType = {
    id: number | null
    ventaId: number | null
    productoId: number | null
    cantidad: number | null
    precioVenta: number | null
  }

  export type VentaProductoSumAggregateOutputType = {
    id: number | null
    ventaId: number | null
    productoId: number | null
    cantidad: number | null
    precioVenta: number | null
  }

  export type VentaProductoMinAggregateOutputType = {
    id: number | null
    ventaId: number | null
    productoId: number | null
    cantidad: number | null
    creadoEn: Date | null
    precioVenta: number | null
  }

  export type VentaProductoMaxAggregateOutputType = {
    id: number | null
    ventaId: number | null
    productoId: number | null
    cantidad: number | null
    creadoEn: Date | null
    precioVenta: number | null
  }

  export type VentaProductoCountAggregateOutputType = {
    id: number
    ventaId: number
    productoId: number
    cantidad: number
    creadoEn: number
    precioVenta: number
    _all: number
  }


  export type VentaProductoAvgAggregateInputType = {
    id?: true
    ventaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
  }

  export type VentaProductoSumAggregateInputType = {
    id?: true
    ventaId?: true
    productoId?: true
    cantidad?: true
    precioVenta?: true
  }

  export type VentaProductoMinAggregateInputType = {
    id?: true
    ventaId?: true
    productoId?: true
    cantidad?: true
    creadoEn?: true
    precioVenta?: true
  }

  export type VentaProductoMaxAggregateInputType = {
    id?: true
    ventaId?: true
    productoId?: true
    cantidad?: true
    creadoEn?: true
    precioVenta?: true
  }

  export type VentaProductoCountAggregateInputType = {
    id?: true
    ventaId?: true
    productoId?: true
    cantidad?: true
    creadoEn?: true
    precioVenta?: true
    _all?: true
  }

  export type VentaProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaProducto to aggregate.
     */
    where?: VentaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaProductos to fetch.
     */
    orderBy?: VentaProductoOrderByWithRelationInput | VentaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VentaProductos
    **/
    _count?: true | VentaProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaProductoMaxAggregateInputType
  }

  export type GetVentaProductoAggregateType<T extends VentaProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateVentaProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVentaProducto[P]>
      : GetScalarType<T[P], AggregateVentaProducto[P]>
  }




  export type VentaProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaProductoWhereInput
    orderBy?: VentaProductoOrderByWithAggregationInput | VentaProductoOrderByWithAggregationInput[]
    by: VentaProductoScalarFieldEnum[] | VentaProductoScalarFieldEnum
    having?: VentaProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaProductoCountAggregateInputType | true
    _avg?: VentaProductoAvgAggregateInputType
    _sum?: VentaProductoSumAggregateInputType
    _min?: VentaProductoMinAggregateInputType
    _max?: VentaProductoMaxAggregateInputType
  }

  export type VentaProductoGroupByOutputType = {
    id: number
    ventaId: number
    productoId: number | null
    cantidad: number
    creadoEn: Date
    precioVenta: number
    _count: VentaProductoCountAggregateOutputType | null
    _avg: VentaProductoAvgAggregateOutputType | null
    _sum: VentaProductoSumAggregateOutputType | null
    _min: VentaProductoMinAggregateOutputType | null
    _max: VentaProductoMaxAggregateOutputType | null
  }

  type GetVentaProductoGroupByPayload<T extends VentaProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaProductoGroupByOutputType[P]>
            : GetScalarType<T[P], VentaProductoGroupByOutputType[P]>
        }
      >
    >


  export type VentaProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    productoId?: boolean
    cantidad?: boolean
    creadoEn?: boolean
    precioVenta?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    producto?: boolean | VentaProducto$productoArgs<ExtArgs>
  }, ExtArgs["result"]["ventaProducto"]>

  export type VentaProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ventaId?: boolean
    productoId?: boolean
    cantidad?: boolean
    creadoEn?: boolean
    precioVenta?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    producto?: boolean | VentaProducto$productoArgs<ExtArgs>
  }, ExtArgs["result"]["ventaProducto"]>

  export type VentaProductoSelectScalar = {
    id?: boolean
    ventaId?: boolean
    productoId?: boolean
    cantidad?: boolean
    creadoEn?: boolean
    precioVenta?: boolean
  }

  export type VentaProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    producto?: boolean | VentaProducto$productoArgs<ExtArgs>
  }
  export type VentaProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    producto?: boolean | VentaProducto$productoArgs<ExtArgs>
  }

  export type $VentaProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VentaProducto"
    objects: {
      venta: Prisma.$VentaPayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ventaId: number
      productoId: number | null
      cantidad: number
      creadoEn: Date
      precioVenta: number
    }, ExtArgs["result"]["ventaProducto"]>
    composites: {}
  }

  type VentaProductoGetPayload<S extends boolean | null | undefined | VentaProductoDefaultArgs> = $Result.GetResult<Prisma.$VentaProductoPayload, S>

  type VentaProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VentaProductoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentaProductoCountAggregateInputType | true
    }

  export interface VentaProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VentaProducto'], meta: { name: 'VentaProducto' } }
    /**
     * Find zero or one VentaProducto that matches the filter.
     * @param {VentaProductoFindUniqueArgs} args - Arguments to find a VentaProducto
     * @example
     * // Get one VentaProducto
     * const ventaProducto = await prisma.ventaProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaProductoFindUniqueArgs>(args: SelectSubset<T, VentaProductoFindUniqueArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VentaProducto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VentaProductoFindUniqueOrThrowArgs} args - Arguments to find a VentaProducto
     * @example
     * // Get one VentaProducto
     * const ventaProducto = await prisma.ventaProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VentaProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoFindFirstArgs} args - Arguments to find a VentaProducto
     * @example
     * // Get one VentaProducto
     * const ventaProducto = await prisma.ventaProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaProductoFindFirstArgs>(args?: SelectSubset<T, VentaProductoFindFirstArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VentaProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoFindFirstOrThrowArgs} args - Arguments to find a VentaProducto
     * @example
     * // Get one VentaProducto
     * const ventaProducto = await prisma.ventaProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VentaProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VentaProductos
     * const ventaProductos = await prisma.ventaProducto.findMany()
     * 
     * // Get first 10 VentaProductos
     * const ventaProductos = await prisma.ventaProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaProductoWithIdOnly = await prisma.ventaProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VentaProductoFindManyArgs>(args?: SelectSubset<T, VentaProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VentaProducto.
     * @param {VentaProductoCreateArgs} args - Arguments to create a VentaProducto.
     * @example
     * // Create one VentaProducto
     * const VentaProducto = await prisma.ventaProducto.create({
     *   data: {
     *     // ... data to create a VentaProducto
     *   }
     * })
     * 
     */
    create<T extends VentaProductoCreateArgs>(args: SelectSubset<T, VentaProductoCreateArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VentaProductos.
     * @param {VentaProductoCreateManyArgs} args - Arguments to create many VentaProductos.
     * @example
     * // Create many VentaProductos
     * const ventaProducto = await prisma.ventaProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaProductoCreateManyArgs>(args?: SelectSubset<T, VentaProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VentaProductos and returns the data saved in the database.
     * @param {VentaProductoCreateManyAndReturnArgs} args - Arguments to create many VentaProductos.
     * @example
     * // Create many VentaProductos
     * const ventaProducto = await prisma.ventaProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VentaProductos and only return the `id`
     * const ventaProductoWithIdOnly = await prisma.ventaProducto.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VentaProducto.
     * @param {VentaProductoDeleteArgs} args - Arguments to delete one VentaProducto.
     * @example
     * // Delete one VentaProducto
     * const VentaProducto = await prisma.ventaProducto.delete({
     *   where: {
     *     // ... filter to delete one VentaProducto
     *   }
     * })
     * 
     */
    delete<T extends VentaProductoDeleteArgs>(args: SelectSubset<T, VentaProductoDeleteArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VentaProducto.
     * @param {VentaProductoUpdateArgs} args - Arguments to update one VentaProducto.
     * @example
     * // Update one VentaProducto
     * const ventaProducto = await prisma.ventaProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaProductoUpdateArgs>(args: SelectSubset<T, VentaProductoUpdateArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VentaProductos.
     * @param {VentaProductoDeleteManyArgs} args - Arguments to filter VentaProductos to delete.
     * @example
     * // Delete a few VentaProductos
     * const { count } = await prisma.ventaProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaProductoDeleteManyArgs>(args?: SelectSubset<T, VentaProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VentaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VentaProductos
     * const ventaProducto = await prisma.ventaProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaProductoUpdateManyArgs>(args: SelectSubset<T, VentaProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VentaProducto.
     * @param {VentaProductoUpsertArgs} args - Arguments to update or create a VentaProducto.
     * @example
     * // Update or create a VentaProducto
     * const ventaProducto = await prisma.ventaProducto.upsert({
     *   create: {
     *     // ... data to create a VentaProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VentaProducto we want to update
     *   }
     * })
     */
    upsert<T extends VentaProductoUpsertArgs>(args: SelectSubset<T, VentaProductoUpsertArgs<ExtArgs>>): Prisma__VentaProductoClient<$Result.GetResult<Prisma.$VentaProductoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VentaProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoCountArgs} args - Arguments to filter VentaProductos to count.
     * @example
     * // Count the number of VentaProductos
     * const count = await prisma.ventaProducto.count({
     *   where: {
     *     // ... the filter for the VentaProductos we want to count
     *   }
     * })
    **/
    count<T extends VentaProductoCountArgs>(
      args?: Subset<T, VentaProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VentaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaProductoAggregateArgs>(args: Subset<T, VentaProductoAggregateArgs>): Prisma.PrismaPromise<GetVentaProductoAggregateType<T>>

    /**
     * Group by VentaProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaProductoGroupByArgs['orderBy'] }
        : { orderBy?: VentaProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VentaProducto model
   */
  readonly fields: VentaProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VentaProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    venta<T extends VentaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaDefaultArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producto<T extends VentaProducto$productoArgs<ExtArgs> = {}>(args?: Subset<T, VentaProducto$productoArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VentaProducto model
   */ 
  interface VentaProductoFieldRefs {
    readonly id: FieldRef<"VentaProducto", 'Int'>
    readonly ventaId: FieldRef<"VentaProducto", 'Int'>
    readonly productoId: FieldRef<"VentaProducto", 'Int'>
    readonly cantidad: FieldRef<"VentaProducto", 'Int'>
    readonly creadoEn: FieldRef<"VentaProducto", 'DateTime'>
    readonly precioVenta: FieldRef<"VentaProducto", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * VentaProducto findUnique
   */
  export type VentaProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaProducto to fetch.
     */
    where: VentaProductoWhereUniqueInput
  }

  /**
   * VentaProducto findUniqueOrThrow
   */
  export type VentaProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaProducto to fetch.
     */
    where: VentaProductoWhereUniqueInput
  }

  /**
   * VentaProducto findFirst
   */
  export type VentaProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaProducto to fetch.
     */
    where?: VentaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaProductos to fetch.
     */
    orderBy?: VentaProductoOrderByWithRelationInput | VentaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaProductos.
     */
    cursor?: VentaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaProductos.
     */
    distinct?: VentaProductoScalarFieldEnum | VentaProductoScalarFieldEnum[]
  }

  /**
   * VentaProducto findFirstOrThrow
   */
  export type VentaProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaProducto to fetch.
     */
    where?: VentaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaProductos to fetch.
     */
    orderBy?: VentaProductoOrderByWithRelationInput | VentaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VentaProductos.
     */
    cursor?: VentaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VentaProductos.
     */
    distinct?: VentaProductoScalarFieldEnum | VentaProductoScalarFieldEnum[]
  }

  /**
   * VentaProducto findMany
   */
  export type VentaProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * Filter, which VentaProductos to fetch.
     */
    where?: VentaProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VentaProductos to fetch.
     */
    orderBy?: VentaProductoOrderByWithRelationInput | VentaProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VentaProductos.
     */
    cursor?: VentaProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VentaProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VentaProductos.
     */
    skip?: number
    distinct?: VentaProductoScalarFieldEnum | VentaProductoScalarFieldEnum[]
  }

  /**
   * VentaProducto create
   */
  export type VentaProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a VentaProducto.
     */
    data: XOR<VentaProductoCreateInput, VentaProductoUncheckedCreateInput>
  }

  /**
   * VentaProducto createMany
   */
  export type VentaProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VentaProductos.
     */
    data: VentaProductoCreateManyInput | VentaProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VentaProducto createManyAndReturn
   */
  export type VentaProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VentaProductos.
     */
    data: VentaProductoCreateManyInput | VentaProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VentaProducto update
   */
  export type VentaProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a VentaProducto.
     */
    data: XOR<VentaProductoUpdateInput, VentaProductoUncheckedUpdateInput>
    /**
     * Choose, which VentaProducto to update.
     */
    where: VentaProductoWhereUniqueInput
  }

  /**
   * VentaProducto updateMany
   */
  export type VentaProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VentaProductos.
     */
    data: XOR<VentaProductoUpdateManyMutationInput, VentaProductoUncheckedUpdateManyInput>
    /**
     * Filter which VentaProductos to update
     */
    where?: VentaProductoWhereInput
  }

  /**
   * VentaProducto upsert
   */
  export type VentaProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the VentaProducto to update in case it exists.
     */
    where: VentaProductoWhereUniqueInput
    /**
     * In case the VentaProducto found by the `where` argument doesn't exist, create a new VentaProducto with this data.
     */
    create: XOR<VentaProductoCreateInput, VentaProductoUncheckedCreateInput>
    /**
     * In case the VentaProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaProductoUpdateInput, VentaProductoUncheckedUpdateInput>
  }

  /**
   * VentaProducto delete
   */
  export type VentaProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
    /**
     * Filter which VentaProducto to delete.
     */
    where: VentaProductoWhereUniqueInput
  }

  /**
   * VentaProducto deleteMany
   */
  export type VentaProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VentaProductos to delete
     */
    where?: VentaProductoWhereInput
  }

  /**
   * VentaProducto.producto
   */
  export type VentaProducto$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
  }

  /**
   * VentaProducto without action
   */
  export type VentaProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaProducto
     */
    select?: VentaProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaProductoInclude<ExtArgs> | null
  }


  /**
   * Model Proveedor
   */

  export type AggregateProveedor = {
    _count: ProveedorCountAggregateOutputType | null
    _avg: ProveedorAvgAggregateOutputType | null
    _sum: ProveedorSumAggregateOutputType | null
    _min: ProveedorMinAggregateOutputType | null
    _max: ProveedorMaxAggregateOutputType | null
  }

  export type ProveedorAvgAggregateOutputType = {
    id: number | null
    latitud: number | null
    longitud: number | null
  }

  export type ProveedorSumAggregateOutputType = {
    id: number | null
    latitud: number | null
    longitud: number | null
  }

  export type ProveedorMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    telefono: string | null
    direccion: string | null
    razonSocial: string | null
    rfc: string | null
    nombreContacto: string | null
    telefonoContacto: string | null
    emailContacto: string | null
    pais: string | null
    ciudad: string | null
    codigoPostal: string | null
    latitud: number | null
    longitud: number | null
    activo: boolean | null
    notas: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type ProveedorMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    telefono: string | null
    direccion: string | null
    razonSocial: string | null
    rfc: string | null
    nombreContacto: string | null
    telefonoContacto: string | null
    emailContacto: string | null
    pais: string | null
    ciudad: string | null
    codigoPostal: string | null
    latitud: number | null
    longitud: number | null
    activo: boolean | null
    notas: string | null
    creadoEn: Date | null
    actualizadoEn: Date | null
  }

  export type ProveedorCountAggregateOutputType = {
    id: number
    nombre: number
    correo: number
    telefono: number
    direccion: number
    razonSocial: number
    rfc: number
    nombreContacto: number
    telefonoContacto: number
    emailContacto: number
    pais: number
    ciudad: number
    codigoPostal: number
    latitud: number
    longitud: number
    activo: number
    notas: number
    creadoEn: number
    actualizadoEn: number
    _all: number
  }


  export type ProveedorAvgAggregateInputType = {
    id?: true
    latitud?: true
    longitud?: true
  }

  export type ProveedorSumAggregateInputType = {
    id?: true
    latitud?: true
    longitud?: true
  }

  export type ProveedorMinAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    telefono?: true
    direccion?: true
    razonSocial?: true
    rfc?: true
    nombreContacto?: true
    telefonoContacto?: true
    emailContacto?: true
    pais?: true
    ciudad?: true
    codigoPostal?: true
    latitud?: true
    longitud?: true
    activo?: true
    notas?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type ProveedorMaxAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    telefono?: true
    direccion?: true
    razonSocial?: true
    rfc?: true
    nombreContacto?: true
    telefonoContacto?: true
    emailContacto?: true
    pais?: true
    ciudad?: true
    codigoPostal?: true
    latitud?: true
    longitud?: true
    activo?: true
    notas?: true
    creadoEn?: true
    actualizadoEn?: true
  }

  export type ProveedorCountAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    telefono?: true
    direccion?: true
    razonSocial?: true
    rfc?: true
    nombreContacto?: true
    telefonoContacto?: true
    emailContacto?: true
    pais?: true
    ciudad?: true
    codigoPostal?: true
    latitud?: true
    longitud?: true
    activo?: true
    notas?: true
    creadoEn?: true
    actualizadoEn?: true
    _all?: true
  }

  export type ProveedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proveedor to aggregate.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Proveedors
    **/
    _count?: true | ProveedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedorMaxAggregateInputType
  }

  export type GetProveedorAggregateType<T extends ProveedorAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedor[P]>
      : GetScalarType<T[P], AggregateProveedor[P]>
  }




  export type ProveedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProveedorWhereInput
    orderBy?: ProveedorOrderByWithAggregationInput | ProveedorOrderByWithAggregationInput[]
    by: ProveedorScalarFieldEnum[] | ProveedorScalarFieldEnum
    having?: ProveedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedorCountAggregateInputType | true
    _avg?: ProveedorAvgAggregateInputType
    _sum?: ProveedorSumAggregateInputType
    _min?: ProveedorMinAggregateInputType
    _max?: ProveedorMaxAggregateInputType
  }

  export type ProveedorGroupByOutputType = {
    id: number
    nombre: string
    correo: string | null
    telefono: string | null
    direccion: string | null
    razonSocial: string | null
    rfc: string | null
    nombreContacto: string | null
    telefonoContacto: string | null
    emailContacto: string | null
    pais: string | null
    ciudad: string | null
    codigoPostal: string | null
    latitud: number | null
    longitud: number | null
    activo: boolean
    notas: string | null
    creadoEn: Date
    actualizadoEn: Date
    _count: ProveedorCountAggregateOutputType | null
    _avg: ProveedorAvgAggregateOutputType | null
    _sum: ProveedorSumAggregateOutputType | null
    _min: ProveedorMinAggregateOutputType | null
    _max: ProveedorMaxAggregateOutputType | null
  }

  type GetProveedorGroupByPayload<T extends ProveedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedorGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedorGroupByOutputType[P]>
        }
      >
    >


  export type ProveedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    telefono?: boolean
    direccion?: boolean
    razonSocial?: boolean
    rfc?: boolean
    nombreContacto?: boolean
    telefonoContacto?: boolean
    emailContacto?: boolean
    pais?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    latitud?: boolean
    longitud?: boolean
    activo?: boolean
    notas?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
    entregasStock?: boolean | Proveedor$entregasStockArgs<ExtArgs>
    Garantia?: boolean | Proveedor$GarantiaArgs<ExtArgs>
    RegistroGarantia?: boolean | Proveedor$RegistroGarantiaArgs<ExtArgs>
    _count?: boolean | ProveedorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proveedor"]>

  export type ProveedorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    telefono?: boolean
    direccion?: boolean
    razonSocial?: boolean
    rfc?: boolean
    nombreContacto?: boolean
    telefonoContacto?: boolean
    emailContacto?: boolean
    pais?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    latitud?: boolean
    longitud?: boolean
    activo?: boolean
    notas?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }, ExtArgs["result"]["proveedor"]>

  export type ProveedorSelectScalar = {
    id?: boolean
    nombre?: boolean
    correo?: boolean
    telefono?: boolean
    direccion?: boolean
    razonSocial?: boolean
    rfc?: boolean
    nombreContacto?: boolean
    telefonoContacto?: boolean
    emailContacto?: boolean
    pais?: boolean
    ciudad?: boolean
    codigoPostal?: boolean
    latitud?: boolean
    longitud?: boolean
    activo?: boolean
    notas?: boolean
    creadoEn?: boolean
    actualizadoEn?: boolean
  }

  export type ProveedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entregasStock?: boolean | Proveedor$entregasStockArgs<ExtArgs>
    Garantia?: boolean | Proveedor$GarantiaArgs<ExtArgs>
    RegistroGarantia?: boolean | Proveedor$RegistroGarantiaArgs<ExtArgs>
    _count?: boolean | ProveedorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProveedorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProveedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Proveedor"
    objects: {
      entregasStock: Prisma.$EntregaStockPayload<ExtArgs>[]
      Garantia: Prisma.$GarantiaPayload<ExtArgs>[]
      RegistroGarantia: Prisma.$RegistroGarantiaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      correo: string | null
      telefono: string | null
      direccion: string | null
      razonSocial: string | null
      rfc: string | null
      nombreContacto: string | null
      telefonoContacto: string | null
      emailContacto: string | null
      pais: string | null
      ciudad: string | null
      codigoPostal: string | null
      latitud: number | null
      longitud: number | null
      activo: boolean
      notas: string | null
      creadoEn: Date
      actualizadoEn: Date
    }, ExtArgs["result"]["proveedor"]>
    composites: {}
  }

  type ProveedorGetPayload<S extends boolean | null | undefined | ProveedorDefaultArgs> = $Result.GetResult<Prisma.$ProveedorPayload, S>

  type ProveedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProveedorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProveedorCountAggregateInputType | true
    }

  export interface ProveedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Proveedor'], meta: { name: 'Proveedor' } }
    /**
     * Find zero or one Proveedor that matches the filter.
     * @param {ProveedorFindUniqueArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProveedorFindUniqueArgs>(args: SelectSubset<T, ProveedorFindUniqueArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Proveedor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProveedorFindUniqueOrThrowArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProveedorFindUniqueOrThrowArgs>(args: SelectSubset<T, ProveedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Proveedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorFindFirstArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProveedorFindFirstArgs>(args?: SelectSubset<T, ProveedorFindFirstArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Proveedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorFindFirstOrThrowArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProveedorFindFirstOrThrowArgs>(args?: SelectSubset<T, ProveedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Proveedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedors
     * const proveedors = await prisma.proveedor.findMany()
     * 
     * // Get first 10 Proveedors
     * const proveedors = await prisma.proveedor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proveedorWithIdOnly = await prisma.proveedor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProveedorFindManyArgs>(args?: SelectSubset<T, ProveedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Proveedor.
     * @param {ProveedorCreateArgs} args - Arguments to create a Proveedor.
     * @example
     * // Create one Proveedor
     * const Proveedor = await prisma.proveedor.create({
     *   data: {
     *     // ... data to create a Proveedor
     *   }
     * })
     * 
     */
    create<T extends ProveedorCreateArgs>(args: SelectSubset<T, ProveedorCreateArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Proveedors.
     * @param {ProveedorCreateManyArgs} args - Arguments to create many Proveedors.
     * @example
     * // Create many Proveedors
     * const proveedor = await prisma.proveedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProveedorCreateManyArgs>(args?: SelectSubset<T, ProveedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proveedors and returns the data saved in the database.
     * @param {ProveedorCreateManyAndReturnArgs} args - Arguments to create many Proveedors.
     * @example
     * // Create many Proveedors
     * const proveedor = await prisma.proveedor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proveedors and only return the `id`
     * const proveedorWithIdOnly = await prisma.proveedor.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProveedorCreateManyAndReturnArgs>(args?: SelectSubset<T, ProveedorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Proveedor.
     * @param {ProveedorDeleteArgs} args - Arguments to delete one Proveedor.
     * @example
     * // Delete one Proveedor
     * const Proveedor = await prisma.proveedor.delete({
     *   where: {
     *     // ... filter to delete one Proveedor
     *   }
     * })
     * 
     */
    delete<T extends ProveedorDeleteArgs>(args: SelectSubset<T, ProveedorDeleteArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Proveedor.
     * @param {ProveedorUpdateArgs} args - Arguments to update one Proveedor.
     * @example
     * // Update one Proveedor
     * const proveedor = await prisma.proveedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProveedorUpdateArgs>(args: SelectSubset<T, ProveedorUpdateArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Proveedors.
     * @param {ProveedorDeleteManyArgs} args - Arguments to filter Proveedors to delete.
     * @example
     * // Delete a few Proveedors
     * const { count } = await prisma.proveedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProveedorDeleteManyArgs>(args?: SelectSubset<T, ProveedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedors
     * const proveedor = await prisma.proveedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProveedorUpdateManyArgs>(args: SelectSubset<T, ProveedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Proveedor.
     * @param {ProveedorUpsertArgs} args - Arguments to update or create a Proveedor.
     * @example
     * // Update or create a Proveedor
     * const proveedor = await prisma.proveedor.upsert({
     *   create: {
     *     // ... data to create a Proveedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedor we want to update
     *   }
     * })
     */
    upsert<T extends ProveedorUpsertArgs>(args: SelectSubset<T, ProveedorUpsertArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Proveedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorCountArgs} args - Arguments to filter Proveedors to count.
     * @example
     * // Count the number of Proveedors
     * const count = await prisma.proveedor.count({
     *   where: {
     *     // ... the filter for the Proveedors we want to count
     *   }
     * })
    **/
    count<T extends ProveedorCountArgs>(
      args?: Subset<T, ProveedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedorAggregateArgs>(args: Subset<T, ProveedorAggregateArgs>): Prisma.PrismaPromise<GetProveedorAggregateType<T>>

    /**
     * Group by Proveedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProveedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProveedorGroupByArgs['orderBy'] }
        : { orderBy?: ProveedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProveedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Proveedor model
   */
  readonly fields: ProveedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Proveedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProveedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    entregasStock<T extends Proveedor$entregasStockArgs<ExtArgs> = {}>(args?: Subset<T, Proveedor$entregasStockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EntregaStockPayload<ExtArgs>, T, "findMany"> | Null>
    Garantia<T extends Proveedor$GarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Proveedor$GarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    RegistroGarantia<T extends Proveedor$RegistroGarantiaArgs<ExtArgs> = {}>(args?: Subset<T, Proveedor$RegistroGarantiaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroGarantiaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Proveedor model
   */ 
  interface ProveedorFieldRefs {
    readonly id: FieldRef<"Proveedor", 'Int'>
    readonly nombre: FieldRef<"Proveedor", 'String'>
    readonly correo: FieldRef<"Proveedor", 'String'>
    readonly telefono: FieldRef<"Proveedor", 'String'>
    readonly direccion: FieldRef<"Proveedor", 'String'>
    readonly razonSocial: FieldRef<"Proveedor", 'String'>
    readonly rfc: FieldRef<"Proveedor", 'String'>
    readonly nombreContacto: FieldRef<"Proveedor", 'String'>
    readonly telefonoContacto: FieldRef<"Proveedor", 'String'>
    readonly emailContacto: FieldRef<"Proveedor", 'String'>
    readonly pais: FieldRef<"Proveedor", 'String'>
    readonly ciudad: FieldRef<"Proveedor", 'String'>
    readonly codigoPostal: FieldRef<"Proveedor", 'String'>
    readonly latitud: FieldRef<"Proveedor", 'Float'>
    readonly longitud: FieldRef<"Proveedor", 'Float'>
    readonly activo: FieldRef<"Proveedor", 'Boolean'>
    readonly notas: FieldRef<"Proveedor", 'String'>
    readonly creadoEn: FieldRef<"Proveedor", 'DateTime'>
    readonly actualizadoEn: FieldRef<"Proveedor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Proveedor findUnique
   */
  export type ProveedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor findUniqueOrThrow
   */
  export type ProveedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor findFirst
   */
  export type ProveedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proveedors.
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proveedors.
     */
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * Proveedor findFirstOrThrow
   */
  export type ProveedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proveedors.
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proveedors.
     */
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * Proveedor findMany
   */
  export type ProveedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedors to fetch.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Proveedors.
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * Proveedor create
   */
  export type ProveedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * The data needed to create a Proveedor.
     */
    data: XOR<ProveedorCreateInput, ProveedorUncheckedCreateInput>
  }

  /**
   * Proveedor createMany
   */
  export type ProveedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Proveedors.
     */
    data: ProveedorCreateManyInput | ProveedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proveedor createManyAndReturn
   */
  export type ProveedorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Proveedors.
     */
    data: ProveedorCreateManyInput | ProveedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proveedor update
   */
  export type ProveedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * The data needed to update a Proveedor.
     */
    data: XOR<ProveedorUpdateInput, ProveedorUncheckedUpdateInput>
    /**
     * Choose, which Proveedor to update.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor updateMany
   */
  export type ProveedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Proveedors.
     */
    data: XOR<ProveedorUpdateManyMutationInput, ProveedorUncheckedUpdateManyInput>
    /**
     * Filter which Proveedors to update
     */
    where?: ProveedorWhereInput
  }

  /**
   * Proveedor upsert
   */
  export type ProveedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * The filter to search for the Proveedor to update in case it exists.
     */
    where: ProveedorWhereUniqueInput
    /**
     * In case the Proveedor found by the `where` argument doesn't exist, create a new Proveedor with this data.
     */
    create: XOR<ProveedorCreateInput, ProveedorUncheckedCreateInput>
    /**
     * In case the Proveedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProveedorUpdateInput, ProveedorUncheckedUpdateInput>
  }

  /**
   * Proveedor delete
   */
  export type ProveedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter which Proveedor to delete.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor deleteMany
   */
  export type ProveedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proveedors to delete
     */
    where?: ProveedorWhereInput
  }

  /**
   * Proveedor.entregasStock
   */
  export type Proveedor$entregasStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntregaStock
     */
    select?: EntregaStockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EntregaStockInclude<ExtArgs> | null
    where?: EntregaStockWhereInput
    orderBy?: EntregaStockOrderByWithRelationInput | EntregaStockOrderByWithRelationInput[]
    cursor?: EntregaStockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntregaStockScalarFieldEnum | EntregaStockScalarFieldEnum[]
  }

  /**
   * Proveedor.Garantia
   */
  export type Proveedor$GarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Garantia
     */
    select?: GarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GarantiaInclude<ExtArgs> | null
    where?: GarantiaWhereInput
    orderBy?: GarantiaOrderByWithRelationInput | GarantiaOrderByWithRelationInput[]
    cursor?: GarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GarantiaScalarFieldEnum | GarantiaScalarFieldEnum[]
  }

  /**
   * Proveedor.RegistroGarantia
   */
  export type Proveedor$RegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroGarantia
     */
    select?: RegistroGarantiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroGarantiaInclude<ExtArgs> | null
    where?: RegistroGarantiaWhereInput
    orderBy?: RegistroGarantiaOrderByWithRelationInput | RegistroGarantiaOrderByWithRelationInput[]
    cursor?: RegistroGarantiaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroGarantiaScalarFieldEnum | RegistroGarantiaScalarFieldEnum[]
  }

  /**
   * Proveedor without action
   */
  export type ProveedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
  }


  /**
   * Model Categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type CategoriaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type CategoriaCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    id?: true
  }

  export type CategoriaSumAggregateInputType = {
    id?: true
  }

  export type CategoriaMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type CategoriaMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type CategoriaCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria to aggregate.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type CategoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaWhereInput
    orderBy?: CategoriaOrderByWithAggregationInput | CategoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: CategoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    id: number
    nombre: string
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends CategoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    productos?: boolean | Categoria$productosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["categoria"]>

  export type CategoriaSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type CategoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Categoria$productosArgs<ExtArgs>
    _count?: boolean | CategoriaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria"
    objects: {
      productos: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }

  type CategoriaGetPayload<S extends boolean | null | undefined | CategoriaDefaultArgs> = $Result.GetResult<Prisma.$CategoriaPayload, S>

  type CategoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface CategoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria'], meta: { name: 'Categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {CategoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaFindUniqueArgs>(args: SelectSubset<T, CategoriaFindUniqueArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Categoria that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaFindFirstArgs>(args?: SelectSubset<T, CategoriaFindFirstArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaWithIdOnly = await prisma.categoria.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoriaFindManyArgs>(args?: SelectSubset<T, CategoriaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Categoria.
     * @param {CategoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
     */
    create<T extends CategoriaCreateArgs>(args: SelectSubset<T, CategoriaCreateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categorias.
     * @param {CategoriaCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaCreateManyArgs>(args?: SelectSubset<T, CategoriaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriaCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categoria = await prisma.categoria.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id`
     * const categoriaWithIdOnly = await prisma.categoria.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Categoria.
     * @param {CategoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeleteArgs>(args: SelectSubset<T, CategoriaDeleteArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Categoria.
     * @param {CategoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaUpdateArgs>(args: SelectSubset<T, CategoriaUpdateArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaUpdateManyArgs>(args: SelectSubset<T, CategoriaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoria.
     * @param {CategoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaUpsertArgs>(args: SelectSubset<T, CategoriaUpsertArgs<ExtArgs>>): Prisma__CategoriaClient<$Result.GetResult<Prisma.$CategoriaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriaCountArgs>(
      args?: Subset<T, CategoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria model
   */
  readonly fields: CategoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Categoria$productosArgs<ExtArgs> = {}>(args?: Subset<T, Categoria$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria model
   */ 
  interface CategoriaFieldRefs {
    readonly id: FieldRef<"Categoria", 'Int'>
    readonly nombre: FieldRef<"Categoria", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Categoria findUnique
   */
  export type CategoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findUniqueOrThrow
   */
  export type CategoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria findFirst
   */
  export type CategoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findFirstOrThrow
   */
  export type CategoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categoria to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria findMany
   */
  export type CategoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriaOrderByWithRelationInput | CategoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }

  /**
   * Categoria create
   */
  export type CategoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria.
     */
    data: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
  }

  /**
   * Categoria createMany
   */
  export type CategoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria createManyAndReturn
   */
  export type CategoriaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriaCreateManyInput | CategoriaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria update
   */
  export type CategoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria.
     */
    data: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
    /**
     * Choose, which Categoria to update.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria updateMany
   */
  export type CategoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriaWhereInput
  }

  /**
   * Categoria upsert
   */
  export type CategoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria to update in case it exists.
     */
    where: CategoriaWhereUniqueInput
    /**
     * In case the Categoria found by the `where` argument doesn't exist, create a new Categoria with this data.
     */
    create: XOR<CategoriaCreateInput, CategoriaUncheckedCreateInput>
    /**
     * In case the Categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaUpdateInput, CategoriaUncheckedUpdateInput>
  }

  /**
   * Categoria delete
   */
  export type CategoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
    /**
     * Filter which Categoria to delete.
     */
    where: CategoriaWhereUniqueInput
  }

  /**
   * Categoria deleteMany
   */
  export type CategoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriaWhereInput
  }

  /**
   * Categoria.productos
   */
  export type Categoria$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Categoria without action
   */
  export type CategoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria
     */
    select?: CategoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaInclude<ExtArgs> | null
  }


  /**
   * Model Departamento
   */

  export type AggregateDepartamento = {
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  export type DepartamentoAvgAggregateOutputType = {
    id: number | null
  }

  export type DepartamentoSumAggregateOutputType = {
    id: number | null
  }

  export type DepartamentoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type DepartamentoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type DepartamentoCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type DepartamentoAvgAggregateInputType = {
    id?: true
  }

  export type DepartamentoSumAggregateInputType = {
    id?: true
  }

  export type DepartamentoMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type DepartamentoMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type DepartamentoCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type DepartamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departamento to aggregate.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Departamentos
    **/
    _count?: true | DepartamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartamentoMaxAggregateInputType
  }

  export type GetDepartamentoAggregateType<T extends DepartamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartamento[P]>
      : GetScalarType<T[P], AggregateDepartamento[P]>
  }




  export type DepartamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartamentoWhereInput
    orderBy?: DepartamentoOrderByWithAggregationInput | DepartamentoOrderByWithAggregationInput[]
    by: DepartamentoScalarFieldEnum[] | DepartamentoScalarFieldEnum
    having?: DepartamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartamentoCountAggregateInputType | true
    _avg?: DepartamentoAvgAggregateInputType
    _sum?: DepartamentoSumAggregateInputType
    _min?: DepartamentoMinAggregateInputType
    _max?: DepartamentoMaxAggregateInputType
  }

  export type DepartamentoGroupByOutputType = {
    id: number
    nombre: string
    _count: DepartamentoCountAggregateOutputType | null
    _avg: DepartamentoAvgAggregateOutputType | null
    _sum: DepartamentoSumAggregateOutputType | null
    _min: DepartamentoMinAggregateOutputType | null
    _max: DepartamentoMaxAggregateOutputType | null
  }

  type GetDepartamentoGroupByPayload<T extends DepartamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
            : GetScalarType<T[P], DepartamentoGroupByOutputType[P]>
        }
      >
    >


  export type DepartamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    municipios?: boolean | Departamento$municipiosArgs<ExtArgs>
    clientes?: boolean | Departamento$clientesArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["departamento"]>

  export type DepartamentoSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type DepartamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    municipios?: boolean | Departamento$municipiosArgs<ExtArgs>
    clientes?: boolean | Departamento$clientesArgs<ExtArgs>
    _count?: boolean | DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DepartamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DepartamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Departamento"
    objects: {
      municipios: Prisma.$MunicipioPayload<ExtArgs>[]
      clientes: Prisma.$ClientePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["departamento"]>
    composites: {}
  }

  type DepartamentoGetPayload<S extends boolean | null | undefined | DepartamentoDefaultArgs> = $Result.GetResult<Prisma.$DepartamentoPayload, S>

  type DepartamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DepartamentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DepartamentoCountAggregateInputType | true
    }

  export interface DepartamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Departamento'], meta: { name: 'Departamento' } }
    /**
     * Find zero or one Departamento that matches the filter.
     * @param {DepartamentoFindUniqueArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepartamentoFindUniqueArgs>(args: SelectSubset<T, DepartamentoFindUniqueArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Departamento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DepartamentoFindUniqueOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepartamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, DepartamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Departamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindFirstArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepartamentoFindFirstArgs>(args?: SelectSubset<T, DepartamentoFindFirstArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Departamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindFirstOrThrowArgs} args - Arguments to find a Departamento
     * @example
     * // Get one Departamento
     * const departamento = await prisma.departamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepartamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, DepartamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Departamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departamentos
     * const departamentos = await prisma.departamento.findMany()
     * 
     * // Get first 10 Departamentos
     * const departamentos = await prisma.departamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departamentoWithIdOnly = await prisma.departamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepartamentoFindManyArgs>(args?: SelectSubset<T, DepartamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Departamento.
     * @param {DepartamentoCreateArgs} args - Arguments to create a Departamento.
     * @example
     * // Create one Departamento
     * const Departamento = await prisma.departamento.create({
     *   data: {
     *     // ... data to create a Departamento
     *   }
     * })
     * 
     */
    create<T extends DepartamentoCreateArgs>(args: SelectSubset<T, DepartamentoCreateArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Departamentos.
     * @param {DepartamentoCreateManyArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepartamentoCreateManyArgs>(args?: SelectSubset<T, DepartamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departamentos and returns the data saved in the database.
     * @param {DepartamentoCreateManyAndReturnArgs} args - Arguments to create many Departamentos.
     * @example
     * // Create many Departamentos
     * const departamento = await prisma.departamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departamentos and only return the `id`
     * const departamentoWithIdOnly = await prisma.departamento.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepartamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, DepartamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Departamento.
     * @param {DepartamentoDeleteArgs} args - Arguments to delete one Departamento.
     * @example
     * // Delete one Departamento
     * const Departamento = await prisma.departamento.delete({
     *   where: {
     *     // ... filter to delete one Departamento
     *   }
     * })
     * 
     */
    delete<T extends DepartamentoDeleteArgs>(args: SelectSubset<T, DepartamentoDeleteArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Departamento.
     * @param {DepartamentoUpdateArgs} args - Arguments to update one Departamento.
     * @example
     * // Update one Departamento
     * const departamento = await prisma.departamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepartamentoUpdateArgs>(args: SelectSubset<T, DepartamentoUpdateArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Departamentos.
     * @param {DepartamentoDeleteManyArgs} args - Arguments to filter Departamentos to delete.
     * @example
     * // Delete a few Departamentos
     * const { count } = await prisma.departamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepartamentoDeleteManyArgs>(args?: SelectSubset<T, DepartamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departamentos
     * const departamento = await prisma.departamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepartamentoUpdateManyArgs>(args: SelectSubset<T, DepartamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Departamento.
     * @param {DepartamentoUpsertArgs} args - Arguments to update or create a Departamento.
     * @example
     * // Update or create a Departamento
     * const departamento = await prisma.departamento.upsert({
     *   create: {
     *     // ... data to create a Departamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Departamento we want to update
     *   }
     * })
     */
    upsert<T extends DepartamentoUpsertArgs>(args: SelectSubset<T, DepartamentoUpsertArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Departamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoCountArgs} args - Arguments to filter Departamentos to count.
     * @example
     * // Count the number of Departamentos
     * const count = await prisma.departamento.count({
     *   where: {
     *     // ... the filter for the Departamentos we want to count
     *   }
     * })
    **/
    count<T extends DepartamentoCountArgs>(
      args?: Subset<T, DepartamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartamentoAggregateArgs>(args: Subset<T, DepartamentoAggregateArgs>): Prisma.PrismaPromise<GetDepartamentoAggregateType<T>>

    /**
     * Group by Departamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepartamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepartamentoGroupByArgs['orderBy'] }
        : { orderBy?: DepartamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepartamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Departamento model
   */
  readonly fields: DepartamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Departamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepartamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    municipios<T extends Departamento$municipiosArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$municipiosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findMany"> | Null>
    clientes<T extends Departamento$clientesArgs<ExtArgs> = {}>(args?: Subset<T, Departamento$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Departamento model
   */ 
  interface DepartamentoFieldRefs {
    readonly id: FieldRef<"Departamento", 'Int'>
    readonly nombre: FieldRef<"Departamento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Departamento findUnique
   */
  export type DepartamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento findUniqueOrThrow
   */
  export type DepartamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento findFirst
   */
  export type DepartamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento findFirstOrThrow
   */
  export type DepartamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamento to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departamentos.
     */
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento findMany
   */
  export type DepartamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter, which Departamentos to fetch.
     */
    where?: DepartamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departamentos to fetch.
     */
    orderBy?: DepartamentoOrderByWithRelationInput | DepartamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Departamentos.
     */
    cursor?: DepartamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departamentos.
     */
    skip?: number
    distinct?: DepartamentoScalarFieldEnum | DepartamentoScalarFieldEnum[]
  }

  /**
   * Departamento create
   */
  export type DepartamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Departamento.
     */
    data: XOR<DepartamentoCreateInput, DepartamentoUncheckedCreateInput>
  }

  /**
   * Departamento createMany
   */
  export type DepartamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Departamentos.
     */
    data: DepartamentoCreateManyInput | DepartamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Departamento createManyAndReturn
   */
  export type DepartamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Departamentos.
     */
    data: DepartamentoCreateManyInput | DepartamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Departamento update
   */
  export type DepartamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Departamento.
     */
    data: XOR<DepartamentoUpdateInput, DepartamentoUncheckedUpdateInput>
    /**
     * Choose, which Departamento to update.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento updateMany
   */
  export type DepartamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Departamentos.
     */
    data: XOR<DepartamentoUpdateManyMutationInput, DepartamentoUncheckedUpdateManyInput>
    /**
     * Filter which Departamentos to update
     */
    where?: DepartamentoWhereInput
  }

  /**
   * Departamento upsert
   */
  export type DepartamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Departamento to update in case it exists.
     */
    where: DepartamentoWhereUniqueInput
    /**
     * In case the Departamento found by the `where` argument doesn't exist, create a new Departamento with this data.
     */
    create: XOR<DepartamentoCreateInput, DepartamentoUncheckedCreateInput>
    /**
     * In case the Departamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepartamentoUpdateInput, DepartamentoUncheckedUpdateInput>
  }

  /**
   * Departamento delete
   */
  export type DepartamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
    /**
     * Filter which Departamento to delete.
     */
    where: DepartamentoWhereUniqueInput
  }

  /**
   * Departamento deleteMany
   */
  export type DepartamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departamentos to delete
     */
    where?: DepartamentoWhereInput
  }

  /**
   * Departamento.municipios
   */
  export type Departamento$municipiosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    where?: MunicipioWhereInput
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    cursor?: MunicipioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Departamento.clientes
   */
  export type Departamento$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Departamento without action
   */
  export type DepartamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Departamento
     */
    select?: DepartamentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartamentoInclude<ExtArgs> | null
  }


  /**
   * Model Municipio
   */

  export type AggregateMunicipio = {
    _count: MunicipioCountAggregateOutputType | null
    _avg: MunicipioAvgAggregateOutputType | null
    _sum: MunicipioSumAggregateOutputType | null
    _min: MunicipioMinAggregateOutputType | null
    _max: MunicipioMaxAggregateOutputType | null
  }

  export type MunicipioAvgAggregateOutputType = {
    id: number | null
    departamentoId: number | null
  }

  export type MunicipioSumAggregateOutputType = {
    id: number | null
    departamentoId: number | null
  }

  export type MunicipioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    departamentoId: number | null
  }

  export type MunicipioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    departamentoId: number | null
  }

  export type MunicipioCountAggregateOutputType = {
    id: number
    nombre: number
    departamentoId: number
    _all: number
  }


  export type MunicipioAvgAggregateInputType = {
    id?: true
    departamentoId?: true
  }

  export type MunicipioSumAggregateInputType = {
    id?: true
    departamentoId?: true
  }

  export type MunicipioMinAggregateInputType = {
    id?: true
    nombre?: true
    departamentoId?: true
  }

  export type MunicipioMaxAggregateInputType = {
    id?: true
    nombre?: true
    departamentoId?: true
  }

  export type MunicipioCountAggregateInputType = {
    id?: true
    nombre?: true
    departamentoId?: true
    _all?: true
  }

  export type MunicipioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipio to aggregate.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Municipios
    **/
    _count?: true | MunicipioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MunicipioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MunicipioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MunicipioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MunicipioMaxAggregateInputType
  }

  export type GetMunicipioAggregateType<T extends MunicipioAggregateArgs> = {
        [P in keyof T & keyof AggregateMunicipio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMunicipio[P]>
      : GetScalarType<T[P], AggregateMunicipio[P]>
  }




  export type MunicipioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MunicipioWhereInput
    orderBy?: MunicipioOrderByWithAggregationInput | MunicipioOrderByWithAggregationInput[]
    by: MunicipioScalarFieldEnum[] | MunicipioScalarFieldEnum
    having?: MunicipioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MunicipioCountAggregateInputType | true
    _avg?: MunicipioAvgAggregateInputType
    _sum?: MunicipioSumAggregateInputType
    _min?: MunicipioMinAggregateInputType
    _max?: MunicipioMaxAggregateInputType
  }

  export type MunicipioGroupByOutputType = {
    id: number
    nombre: string
    departamentoId: number
    _count: MunicipioCountAggregateOutputType | null
    _avg: MunicipioAvgAggregateOutputType | null
    _sum: MunicipioSumAggregateOutputType | null
    _min: MunicipioMinAggregateOutputType | null
    _max: MunicipioMaxAggregateOutputType | null
  }

  type GetMunicipioGroupByPayload<T extends MunicipioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MunicipioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MunicipioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MunicipioGroupByOutputType[P]>
            : GetScalarType<T[P], MunicipioGroupByOutputType[P]>
        }
      >
    >


  export type MunicipioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    departamentoId?: boolean
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    clientes?: boolean | Municipio$clientesArgs<ExtArgs>
    _count?: boolean | MunicipioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipio"]>

  export type MunicipioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    departamentoId?: boolean
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["municipio"]>

  export type MunicipioSelectScalar = {
    id?: boolean
    nombre?: boolean
    departamentoId?: boolean
  }

  export type MunicipioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
    clientes?: boolean | Municipio$clientesArgs<ExtArgs>
    _count?: boolean | MunicipioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MunicipioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    departamento?: boolean | DepartamentoDefaultArgs<ExtArgs>
  }

  export type $MunicipioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Municipio"
    objects: {
      departamento: Prisma.$DepartamentoPayload<ExtArgs>
      clientes: Prisma.$ClientePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      departamentoId: number
    }, ExtArgs["result"]["municipio"]>
    composites: {}
  }

  type MunicipioGetPayload<S extends boolean | null | undefined | MunicipioDefaultArgs> = $Result.GetResult<Prisma.$MunicipioPayload, S>

  type MunicipioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MunicipioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MunicipioCountAggregateInputType | true
    }

  export interface MunicipioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Municipio'], meta: { name: 'Municipio' } }
    /**
     * Find zero or one Municipio that matches the filter.
     * @param {MunicipioFindUniqueArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MunicipioFindUniqueArgs>(args: SelectSubset<T, MunicipioFindUniqueArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Municipio that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MunicipioFindUniqueOrThrowArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MunicipioFindUniqueOrThrowArgs>(args: SelectSubset<T, MunicipioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Municipio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioFindFirstArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MunicipioFindFirstArgs>(args?: SelectSubset<T, MunicipioFindFirstArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Municipio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioFindFirstOrThrowArgs} args - Arguments to find a Municipio
     * @example
     * // Get one Municipio
     * const municipio = await prisma.municipio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MunicipioFindFirstOrThrowArgs>(args?: SelectSubset<T, MunicipioFindFirstOrThrowArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Municipios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Municipios
     * const municipios = await prisma.municipio.findMany()
     * 
     * // Get first 10 Municipios
     * const municipios = await prisma.municipio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const municipioWithIdOnly = await prisma.municipio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MunicipioFindManyArgs>(args?: SelectSubset<T, MunicipioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Municipio.
     * @param {MunicipioCreateArgs} args - Arguments to create a Municipio.
     * @example
     * // Create one Municipio
     * const Municipio = await prisma.municipio.create({
     *   data: {
     *     // ... data to create a Municipio
     *   }
     * })
     * 
     */
    create<T extends MunicipioCreateArgs>(args: SelectSubset<T, MunicipioCreateArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Municipios.
     * @param {MunicipioCreateManyArgs} args - Arguments to create many Municipios.
     * @example
     * // Create many Municipios
     * const municipio = await prisma.municipio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MunicipioCreateManyArgs>(args?: SelectSubset<T, MunicipioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Municipios and returns the data saved in the database.
     * @param {MunicipioCreateManyAndReturnArgs} args - Arguments to create many Municipios.
     * @example
     * // Create many Municipios
     * const municipio = await prisma.municipio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Municipios and only return the `id`
     * const municipioWithIdOnly = await prisma.municipio.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MunicipioCreateManyAndReturnArgs>(args?: SelectSubset<T, MunicipioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Municipio.
     * @param {MunicipioDeleteArgs} args - Arguments to delete one Municipio.
     * @example
     * // Delete one Municipio
     * const Municipio = await prisma.municipio.delete({
     *   where: {
     *     // ... filter to delete one Municipio
     *   }
     * })
     * 
     */
    delete<T extends MunicipioDeleteArgs>(args: SelectSubset<T, MunicipioDeleteArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Municipio.
     * @param {MunicipioUpdateArgs} args - Arguments to update one Municipio.
     * @example
     * // Update one Municipio
     * const municipio = await prisma.municipio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MunicipioUpdateArgs>(args: SelectSubset<T, MunicipioUpdateArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Municipios.
     * @param {MunicipioDeleteManyArgs} args - Arguments to filter Municipios to delete.
     * @example
     * // Delete a few Municipios
     * const { count } = await prisma.municipio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MunicipioDeleteManyArgs>(args?: SelectSubset<T, MunicipioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Municipios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Municipios
     * const municipio = await prisma.municipio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MunicipioUpdateManyArgs>(args: SelectSubset<T, MunicipioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Municipio.
     * @param {MunicipioUpsertArgs} args - Arguments to update or create a Municipio.
     * @example
     * // Update or create a Municipio
     * const municipio = await prisma.municipio.upsert({
     *   create: {
     *     // ... data to create a Municipio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Municipio we want to update
     *   }
     * })
     */
    upsert<T extends MunicipioUpsertArgs>(args: SelectSubset<T, MunicipioUpsertArgs<ExtArgs>>): Prisma__MunicipioClient<$Result.GetResult<Prisma.$MunicipioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Municipios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioCountArgs} args - Arguments to filter Municipios to count.
     * @example
     * // Count the number of Municipios
     * const count = await prisma.municipio.count({
     *   where: {
     *     // ... the filter for the Municipios we want to count
     *   }
     * })
    **/
    count<T extends MunicipioCountArgs>(
      args?: Subset<T, MunicipioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MunicipioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Municipio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MunicipioAggregateArgs>(args: Subset<T, MunicipioAggregateArgs>): Prisma.PrismaPromise<GetMunicipioAggregateType<T>>

    /**
     * Group by Municipio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MunicipioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MunicipioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MunicipioGroupByArgs['orderBy'] }
        : { orderBy?: MunicipioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MunicipioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMunicipioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Municipio model
   */
  readonly fields: MunicipioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Municipio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MunicipioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    departamento<T extends DepartamentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartamentoDefaultArgs<ExtArgs>>): Prisma__DepartamentoClient<$Result.GetResult<Prisma.$DepartamentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    clientes<T extends Municipio$clientesArgs<ExtArgs> = {}>(args?: Subset<T, Municipio$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Municipio model
   */ 
  interface MunicipioFieldRefs {
    readonly id: FieldRef<"Municipio", 'Int'>
    readonly nombre: FieldRef<"Municipio", 'String'>
    readonly departamentoId: FieldRef<"Municipio", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Municipio findUnique
   */
  export type MunicipioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio findUniqueOrThrow
   */
  export type MunicipioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio findFirst
   */
  export type MunicipioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipios.
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipios.
     */
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Municipio findFirstOrThrow
   */
  export type MunicipioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipio to fetch.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Municipios.
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Municipios.
     */
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Municipio findMany
   */
  export type MunicipioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter, which Municipios to fetch.
     */
    where?: MunicipioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Municipios to fetch.
     */
    orderBy?: MunicipioOrderByWithRelationInput | MunicipioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Municipios.
     */
    cursor?: MunicipioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Municipios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Municipios.
     */
    skip?: number
    distinct?: MunicipioScalarFieldEnum | MunicipioScalarFieldEnum[]
  }

  /**
   * Municipio create
   */
  export type MunicipioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * The data needed to create a Municipio.
     */
    data: XOR<MunicipioCreateInput, MunicipioUncheckedCreateInput>
  }

  /**
   * Municipio createMany
   */
  export type MunicipioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Municipios.
     */
    data: MunicipioCreateManyInput | MunicipioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Municipio createManyAndReturn
   */
  export type MunicipioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Municipios.
     */
    data: MunicipioCreateManyInput | MunicipioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Municipio update
   */
  export type MunicipioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * The data needed to update a Municipio.
     */
    data: XOR<MunicipioUpdateInput, MunicipioUncheckedUpdateInput>
    /**
     * Choose, which Municipio to update.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio updateMany
   */
  export type MunicipioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Municipios.
     */
    data: XOR<MunicipioUpdateManyMutationInput, MunicipioUncheckedUpdateManyInput>
    /**
     * Filter which Municipios to update
     */
    where?: MunicipioWhereInput
  }

  /**
   * Municipio upsert
   */
  export type MunicipioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * The filter to search for the Municipio to update in case it exists.
     */
    where: MunicipioWhereUniqueInput
    /**
     * In case the Municipio found by the `where` argument doesn't exist, create a new Municipio with this data.
     */
    create: XOR<MunicipioCreateInput, MunicipioUncheckedCreateInput>
    /**
     * In case the Municipio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MunicipioUpdateInput, MunicipioUncheckedUpdateInput>
  }

  /**
   * Municipio delete
   */
  export type MunicipioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
    /**
     * Filter which Municipio to delete.
     */
    where: MunicipioWhereUniqueInput
  }

  /**
   * Municipio deleteMany
   */
  export type MunicipioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Municipios to delete
     */
    where?: MunicipioWhereInput
  }

  /**
   * Municipio.clientes
   */
  export type Municipio$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Municipio without action
   */
  export type MunicipioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Municipio
     */
    select?: MunicipioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MunicipioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ReparacionScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    sucursalId: 'sucursalId',
    clienteId: 'clienteId',
    productoId: 'productoId',
    productoExterno: 'productoExterno',
    problemas: 'problemas',
    observaciones: 'observaciones',
    fechaRecibido: 'fechaRecibido',
    fechaEntregado: 'fechaEntregado',
    estado: 'estado',
    hojaSolucion: 'hojaSolucion',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn'
  };

  export type ReparacionScalarFieldEnum = (typeof ReparacionScalarFieldEnum)[keyof typeof ReparacionScalarFieldEnum]


  export const RegistroReparacionScalarFieldEnum: {
    id: 'id',
    reparacionId: 'reparacionId',
    usuarioId: 'usuarioId',
    estado: 'estado',
    accionesRealizadas: 'accionesRealizadas',
    fechaRegistro: 'fechaRegistro',
    comentarioFinal: 'comentarioFinal',
    montoPagado: 'montoPagado'
  };

  export type RegistroReparacionScalarFieldEnum = (typeof RegistroReparacionScalarFieldEnum)[keyof typeof RegistroReparacionScalarFieldEnum]


  export const VentaCuotaScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    usuarioId: 'usuarioId',
    sucursalId: 'sucursalId',
    totalVenta: 'totalVenta',
    cuotaInicial: 'cuotaInicial',
    cuotasTotales: 'cuotasTotales',
    fechaInicio: 'fechaInicio',
    estado: 'estado',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    dpi: 'dpi',
    testigos: 'testigos',
    fechaContrato: 'fechaContrato',
    montoVenta: 'montoVenta',
    garantiaMeses: 'garantiaMeses',
    totalPagado: 'totalPagado',
    diasEntrePagos: 'diasEntrePagos',
    interes: 'interes',
    comentario: 'comentario',
    ventaId: 'ventaId',
    montoTotalConInteres: 'montoTotalConInteres'
  };

  export type VentaCuotaScalarFieldEnum = (typeof VentaCuotaScalarFieldEnum)[keyof typeof VentaCuotaScalarFieldEnum]


  export const CuotaScalarFieldEnum: {
    id: 'id',
    ventaCuotaId: 'ventaCuotaId',
    monto: 'monto',
    fechaVencimiento: 'fechaVencimiento',
    fechaPago: 'fechaPago',
    estado: 'estado',
    usuarioId: 'usuarioId',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    comentario: 'comentario',
    montoEsperado: 'montoEsperado'
  };

  export type CuotaScalarFieldEnum = (typeof CuotaScalarFieldEnum)[keyof typeof CuotaScalarFieldEnum]


  export const PlantillaComprobanteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    texto: 'texto',
    sucursalId: 'sucursalId',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn'
  };

  export type PlantillaComprobanteScalarFieldEnum = (typeof PlantillaComprobanteScalarFieldEnum)[keyof typeof PlantillaComprobanteScalarFieldEnum]


  export const VentaEliminadaScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    motivo: 'motivo',
    totalVenta: 'totalVenta',
    clienteId: 'clienteId',
    fechaEliminacion: 'fechaEliminacion',
    sucursalId: 'sucursalId'
  };

  export type VentaEliminadaScalarFieldEnum = (typeof VentaEliminadaScalarFieldEnum)[keyof typeof VentaEliminadaScalarFieldEnum]


  export const VentaEliminadaProductoScalarFieldEnum: {
    id: 'id',
    ventaEliminadaId: 'ventaEliminadaId',
    productoId: 'productoId',
    cantidad: 'cantidad',
    precioVenta: 'precioVenta',
    creadoEn: 'creadoEn'
  };

  export type VentaEliminadaProductoScalarFieldEnum = (typeof VentaEliminadaProductoScalarFieldEnum)[keyof typeof VentaEliminadaProductoScalarFieldEnum]


  export const SucursalSaldoScalarFieldEnum: {
    id: 'id',
    sucursalId: 'sucursalId',
    saldoAcumulado: 'saldoAcumulado',
    totalIngresos: 'totalIngresos',
    totalEgresos: 'totalEgresos',
    actualizadoEn: 'actualizadoEn'
  };

  export type SucursalSaldoScalarFieldEnum = (typeof SucursalSaldoScalarFieldEnum)[keyof typeof SucursalSaldoScalarFieldEnum]


  export const RegistroCajaScalarFieldEnum: {
    id: 'id',
    sucursalId: 'sucursalId',
    usuarioId: 'usuarioId',
    saldoInicial: 'saldoInicial',
    saldoFinal: 'saldoFinal',
    fechaInicio: 'fechaInicio',
    fechaCierre: 'fechaCierre',
    estado: 'estado',
    comentario: 'comentario'
  };

  export type RegistroCajaScalarFieldEnum = (typeof RegistroCajaScalarFieldEnum)[keyof typeof RegistroCajaScalarFieldEnum]


  export const SucursalSaldoGlobalScalarFieldEnum: {
    id: 'id',
    saldoGlobal: 'saldoGlobal',
    totalIngresos: 'totalIngresos',
    totalEgresos: 'totalEgresos',
    actualizadoEn: 'actualizadoEn'
  };

  export type SucursalSaldoGlobalScalarFieldEnum = (typeof SucursalSaldoGlobalScalarFieldEnum)[keyof typeof SucursalSaldoGlobalScalarFieldEnum]


  export const DepositoScalarFieldEnum: {
    id: 'id',
    registroCajaId: 'registroCajaId',
    monto: 'monto',
    numeroBoleta: 'numeroBoleta',
    banco: 'banco',
    fechaDeposito: 'fechaDeposito',
    usadoParaCierre: 'usadoParaCierre',
    descripcion: 'descripcion',
    sucursalId: 'sucursalId',
    usuarioId: 'usuarioId'
  };

  export type DepositoScalarFieldEnum = (typeof DepositoScalarFieldEnum)[keyof typeof DepositoScalarFieldEnum]


  export const EgresoScalarFieldEnum: {
    id: 'id',
    registroCajaId: 'registroCajaId',
    descripcion: 'descripcion',
    monto: 'monto',
    fechaEgreso: 'fechaEgreso',
    sucursalId: 'sucursalId',
    usuarioId: 'usuarioId'
  };

  export type EgresoScalarFieldEnum = (typeof EgresoScalarFieldEnum)[keyof typeof EgresoScalarFieldEnum]


  export const TicketSorteoScalarFieldEnum: {
    id: 'id',
    descripcionSorteo: 'descripcionSorteo',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    estado: 'estado'
  };

  export type TicketSorteoScalarFieldEnum = (typeof TicketSorteoScalarFieldEnum)[keyof typeof TicketSorteoScalarFieldEnum]


  export const VencimientoScalarFieldEnum: {
    id: 'id',
    fechaVencimiento: 'fechaVencimiento',
    estado: 'estado',
    descripcion: 'descripcion',
    stockId: 'stockId',
    fechaCreacion: 'fechaCreacion'
  };

  export type VencimientoScalarFieldEnum = (typeof VencimientoScalarFieldEnum)[keyof typeof VencimientoScalarFieldEnum]


  export const NotificacionScalarFieldEnum: {
    id: 'id',
    mensaje: 'mensaje',
    remitenteId: 'remitenteId',
    tipoNotificacion: 'tipoNotificacion',
    referenciaId: 'referenciaId',
    fechaCreacion: 'fechaCreacion'
  };

  export type NotificacionScalarFieldEnum = (typeof NotificacionScalarFieldEnum)[keyof typeof NotificacionScalarFieldEnum]


  export const NotificacionesUsuariosScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    notificacionId: 'notificacionId',
    leido: 'leido',
    eliminado: 'eliminado',
    leidoEn: 'leidoEn',
    recibidoEn: 'recibidoEn'
  };

  export type NotificacionesUsuariosScalarFieldEnum = (typeof NotificacionesUsuariosScalarFieldEnum)[keyof typeof NotificacionesUsuariosScalarFieldEnum]


  export const SolicitudPrecioScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    precioSolicitado: 'precioSolicitado',
    solicitadoPorId: 'solicitadoPorId',
    estado: 'estado',
    aprobadoPorId: 'aprobadoPorId',
    fechaSolicitud: 'fechaSolicitud',
    fechaRespuesta: 'fechaRespuesta'
  };

  export type SolicitudPrecioScalarFieldEnum = (typeof SolicitudPrecioScalarFieldEnum)[keyof typeof SolicitudPrecioScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    codigoProducto: 'codigoProducto',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    precioCostoActual: 'precioCostoActual'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const HistorialPrecioCostoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    precioCostoAnterior: 'precioCostoAnterior',
    precioCostoNuevo: 'precioCostoNuevo',
    fechaCambio: 'fechaCambio',
    modificadoPorId: 'modificadoPorId'
  };

  export type HistorialPrecioCostoScalarFieldEnum = (typeof HistorialPrecioCostoScalarFieldEnum)[keyof typeof HistorialPrecioCostoScalarFieldEnum]


  export const PrecioProductoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    precio: 'precio',
    creadoPorId: 'creadoPorId',
    fechaCreacion: 'fechaCreacion',
    estado: 'estado',
    usado: 'usado',
    tipo: 'tipo'
  };

  export type PrecioProductoScalarFieldEnum = (typeof PrecioProductoScalarFieldEnum)[keyof typeof PrecioProductoScalarFieldEnum]


  export const HistorialPrecioScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    precioAnterior: 'precioAnterior',
    precioNuevo: 'precioNuevo',
    fechaCambio: 'fechaCambio'
  };

  export type HistorialPrecioScalarFieldEnum = (typeof HistorialPrecioScalarFieldEnum)[keyof typeof HistorialPrecioScalarFieldEnum]


  export const AjusteStockScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    stockId: 'stockId',
    cantidadAjustada: 'cantidadAjustada',
    tipoAjuste: 'tipoAjuste',
    fechaHora: 'fechaHora',
    usuarioId: 'usuarioId',
    descripcion: 'descripcion'
  };

  export type AjusteStockScalarFieldEnum = (typeof AjusteStockScalarFieldEnum)[keyof typeof AjusteStockScalarFieldEnum]


  export const EliminacionStockScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    fechaHora: 'fechaHora',
    usuarioId: 'usuarioId',
    sucursalId: 'sucursalId',
    motivo: 'motivo'
  };

  export type EliminacionStockScalarFieldEnum = (typeof EliminacionStockScalarFieldEnum)[keyof typeof EliminacionStockScalarFieldEnum]


  export const EliminacionProductoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    fechaHora: 'fechaHora',
    usuarioId: 'usuarioId',
    motivo: 'motivo'
  };

  export type EliminacionProductoScalarFieldEnum = (typeof EliminacionProductoScalarFieldEnum)[keyof typeof EliminacionProductoScalarFieldEnum]


  export const EliminacionClienteScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    fechaHora: 'fechaHora',
    usuarioId: 'usuarioId',
    motivo: 'motivo'
  };

  export type EliminacionClienteScalarFieldEnum = (typeof EliminacionClienteScalarFieldEnum)[keyof typeof EliminacionClienteScalarFieldEnum]


  export const StockScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    cantidad: 'cantidad',
    costoTotal: 'costoTotal',
    creadoEn: 'creadoEn',
    fechaIngreso: 'fechaIngreso',
    fechaVencimiento: 'fechaVencimiento',
    precioCosto: 'precioCosto',
    entregaStockId: 'entregaStockId',
    sucursalId: 'sucursalId'
  };

  export type StockScalarFieldEnum = (typeof StockScalarFieldEnum)[keyof typeof StockScalarFieldEnum]


  export const SucursalScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    direccion: 'direccion',
    telefono: 'telefono',
    pbx: 'pbx',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    tipoSucursal: 'tipoSucursal',
    estadoOperacion: 'estadoOperacion'
  };

  export type SucursalScalarFieldEnum = (typeof SucursalScalarFieldEnum)[keyof typeof SucursalScalarFieldEnum]


  export const EntregaStockScalarFieldEnum: {
    id: 'id',
    proveedorId: 'proveedorId',
    montoTotal: 'montoTotal',
    fechaEntrega: 'fechaEntrega',
    recibidoPorId: 'recibidoPorId',
    sucursalId: 'sucursalId'
  };

  export type EntregaStockScalarFieldEnum = (typeof EntregaStockScalarFieldEnum)[keyof typeof EntregaStockScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    rol: 'rol',
    contrasena: 'contrasena',
    activo: 'activo',
    correo: 'correo',
    sucursalId: 'sucursalId',
    fecha_creacion: 'fecha_creacion',
    fecha_actualizacion: 'fecha_actualizacion'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const MetaUsuarioScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    sucursalId: 'sucursalId',
    fechaInicio: 'fechaInicio',
    fechaFin: 'fechaFin',
    montoMeta: 'montoMeta',
    montoActual: 'montoActual',
    cumplida: 'cumplida',
    fechaCumplida: 'fechaCumplida',
    numeroVentas: 'numeroVentas',
    tituloMeta: 'tituloMeta',
    estado: 'estado'
  };

  export type MetaUsuarioScalarFieldEnum = (typeof MetaUsuarioScalarFieldEnum)[keyof typeof MetaUsuarioScalarFieldEnum]


  export const MetaCobrosScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    sucursalId: 'sucursalId',
    fechaCreado: 'fechaCreado',
    fechaInicio: 'fechaInicio',
    fechaFin: 'fechaFin',
    montoMeta: 'montoMeta',
    montoActual: 'montoActual',
    cumplida: 'cumplida',
    fechaCumplida: 'fechaCumplida',
    numeroDepositos: 'numeroDepositos',
    tituloMeta: 'tituloMeta',
    estado: 'estado'
  };

  export type MetaCobrosScalarFieldEnum = (typeof MetaCobrosScalarFieldEnum)[keyof typeof MetaCobrosScalarFieldEnum]


  export const DepositoCobroScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    sucursalId: 'sucursalId',
    numeroBoleta: 'numeroBoleta',
    fechaRegistro: 'fechaRegistro',
    montoDepositado: 'montoDepositado',
    descripcion: 'descripcion',
    metaCobroId: 'metaCobroId'
  };

  export type DepositoCobroScalarFieldEnum = (typeof DepositoCobroScalarFieldEnum)[keyof typeof DepositoCobroScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    telefono: 'telefono',
    direccion: 'direccion',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    municipioId: 'municipioId',
    departamentoId: 'departamentoId',
    dpi: 'dpi',
    iPInternet: 'iPInternet'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const GarantiaScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    productoId: 'productoId',
    usuarioIdRecibe: 'usuarioIdRecibe',
    comentario: 'comentario',
    descripcionProblema: 'descripcionProblema',
    fechaRecepcion: 'fechaRecepcion',
    estado: 'estado',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn',
    proveedorId: 'proveedorId'
  };

  export type GarantiaScalarFieldEnum = (typeof GarantiaScalarFieldEnum)[keyof typeof GarantiaScalarFieldEnum]


  export const RegistroGarantiaScalarFieldEnum: {
    id: 'id',
    garantiaId: 'garantiaId',
    usuarioId: 'usuarioId',
    productoId: 'productoId',
    estado: 'estado',
    conclusion: 'conclusion',
    accionesRealizadas: 'accionesRealizadas',
    fechaRegistro: 'fechaRegistro',
    proveedorId: 'proveedorId'
  };

  export type RegistroGarantiaScalarFieldEnum = (typeof RegistroGarantiaScalarFieldEnum)[keyof typeof RegistroGarantiaScalarFieldEnum]


  export const PagoScalarFieldEnum: {
    id: 'id',
    ventaId: 'ventaId',
    monto: 'monto',
    metodoPago: 'metodoPago',
    fechaPago: 'fechaPago'
  };

  export type PagoScalarFieldEnum = (typeof PagoScalarFieldEnum)[keyof typeof PagoScalarFieldEnum]


  export const HistorialStockScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    cantidadAnterior: 'cantidadAnterior',
    cantidadNueva: 'cantidadNueva',
    fechaCambio: 'fechaCambio'
  };

  export type HistorialStockScalarFieldEnum = (typeof HistorialStockScalarFieldEnum)[keyof typeof HistorialStockScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    fechaVenta: 'fechaVenta',
    horaVenta: 'horaVenta',
    totalVenta: 'totalVenta',
    sucursalId: 'sucursalId',
    nombreClienteFinal: 'nombreClienteFinal',
    telefonoClienteFinal: 'telefonoClienteFinal',
    direccionClienteFinal: 'direccionClienteFinal',
    imei: 'imei',
    registroCajaId: 'registroCajaId'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const TransferenciaProductoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    cantidad: 'cantidad',
    sucursalOrigenId: 'sucursalOrigenId',
    sucursalDestinoId: 'sucursalDestinoId',
    fechaTransferencia: 'fechaTransferencia',
    usuarioEncargadoId: 'usuarioEncargadoId'
  };

  export type TransferenciaProductoScalarFieldEnum = (typeof TransferenciaProductoScalarFieldEnum)[keyof typeof TransferenciaProductoScalarFieldEnum]


  export const SolicitudTransferenciaProductoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    cantidad: 'cantidad',
    sucursalOrigenId: 'sucursalOrigenId',
    sucursalDestinoId: 'sucursalDestinoId',
    usuarioSolicitanteId: 'usuarioSolicitanteId',
    estado: 'estado',
    fechaSolicitud: 'fechaSolicitud',
    fechaAprobacion: 'fechaAprobacion',
    administradorId: 'administradorId'
  };

  export type SolicitudTransferenciaProductoScalarFieldEnum = (typeof SolicitudTransferenciaProductoScalarFieldEnum)[keyof typeof SolicitudTransferenciaProductoScalarFieldEnum]


  export const VentaProductoScalarFieldEnum: {
    id: 'id',
    ventaId: 'ventaId',
    productoId: 'productoId',
    cantidad: 'cantidad',
    creadoEn: 'creadoEn',
    precioVenta: 'precioVenta'
  };

  export type VentaProductoScalarFieldEnum = (typeof VentaProductoScalarFieldEnum)[keyof typeof VentaProductoScalarFieldEnum]


  export const ProveedorScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    correo: 'correo',
    telefono: 'telefono',
    direccion: 'direccion',
    razonSocial: 'razonSocial',
    rfc: 'rfc',
    nombreContacto: 'nombreContacto',
    telefonoContacto: 'telefonoContacto',
    emailContacto: 'emailContacto',
    pais: 'pais',
    ciudad: 'ciudad',
    codigoPostal: 'codigoPostal',
    latitud: 'latitud',
    longitud: 'longitud',
    activo: 'activo',
    notas: 'notas',
    creadoEn: 'creadoEn',
    actualizadoEn: 'actualizadoEn'
  };

  export type ProveedorScalarFieldEnum = (typeof ProveedorScalarFieldEnum)[keyof typeof ProveedorScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const DepartamentoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type DepartamentoScalarFieldEnum = (typeof DepartamentoScalarFieldEnum)[keyof typeof DepartamentoScalarFieldEnum]


  export const MunicipioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    departamentoId: 'departamentoId'
  };

  export type MunicipioScalarFieldEnum = (typeof MunicipioScalarFieldEnum)[keyof typeof MunicipioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'EstadoReparacion'
   */
  export type EnumEstadoReparacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoReparacion'>
    


  /**
   * Reference to a field of type 'EstadoReparacion[]'
   */
  export type ListEnumEstadoReparacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoReparacion[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'EstadoCuota'
   */
  export type EnumEstadoCuotaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCuota'>
    


  /**
   * Reference to a field of type 'EstadoCuota[]'
   */
  export type ListEnumEstadoCuotaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCuota[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'EstadoPago'
   */
  export type EnumEstadoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPago'>
    


  /**
   * Reference to a field of type 'EstadoPago[]'
   */
  export type ListEnumEstadoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPago[]'>
    


  /**
   * Reference to a field of type 'EstadoCaja'
   */
  export type EnumEstadoCajaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCaja'>
    


  /**
   * Reference to a field of type 'EstadoCaja[]'
   */
  export type ListEnumEstadoCajaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoCaja[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'EstadoTicket'
   */
  export type EnumEstadoTicketFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTicket'>
    


  /**
   * Reference to a field of type 'EstadoTicket[]'
   */
  export type ListEnumEstadoTicketFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTicket[]'>
    


  /**
   * Reference to a field of type 'EstadoVencimiento'
   */
  export type EnumEstadoVencimientoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoVencimiento'>
    


  /**
   * Reference to a field of type 'EstadoVencimiento[]'
   */
  export type ListEnumEstadoVencimientoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoVencimiento[]'>
    


  /**
   * Reference to a field of type 'TipoNotificacion'
   */
  export type EnumTipoNotificacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoNotificacion'>
    


  /**
   * Reference to a field of type 'TipoNotificacion[]'
   */
  export type ListEnumTipoNotificacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoNotificacion[]'>
    


  /**
   * Reference to a field of type 'EstadoSolicitud'
   */
  export type EnumEstadoSolicitudFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoSolicitud'>
    


  /**
   * Reference to a field of type 'EstadoSolicitud[]'
   */
  export type ListEnumEstadoSolicitudFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoSolicitud[]'>
    


  /**
   * Reference to a field of type 'EstadoPrecio'
   */
  export type EnumEstadoPrecioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPrecio'>
    


  /**
   * Reference to a field of type 'EstadoPrecio[]'
   */
  export type ListEnumEstadoPrecioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPrecio[]'>
    


  /**
   * Reference to a field of type 'TipoPrecio'
   */
  export type EnumTipoPrecioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPrecio'>
    


  /**
   * Reference to a field of type 'TipoPrecio[]'
   */
  export type ListEnumTipoPrecioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPrecio[]'>
    


  /**
   * Reference to a field of type 'TipoAjuste'
   */
  export type EnumTipoAjusteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoAjuste'>
    


  /**
   * Reference to a field of type 'TipoAjuste[]'
   */
  export type ListEnumTipoAjusteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoAjuste[]'>
    


  /**
   * Reference to a field of type 'TipoSucursal'
   */
  export type EnumTipoSucursalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoSucursal'>
    


  /**
   * Reference to a field of type 'TipoSucursal[]'
   */
  export type ListEnumTipoSucursalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoSucursal[]'>
    


  /**
   * Reference to a field of type 'Rol'
   */
  export type EnumRolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rol'>
    


  /**
   * Reference to a field of type 'Rol[]'
   */
  export type ListEnumRolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rol[]'>
    


  /**
   * Reference to a field of type 'EstadoMetaTienda'
   */
  export type EnumEstadoMetaTiendaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoMetaTienda'>
    


  /**
   * Reference to a field of type 'EstadoMetaTienda[]'
   */
  export type ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoMetaTienda[]'>
    


  /**
   * Reference to a field of type 'EstadoMetaCobro'
   */
  export type EnumEstadoMetaCobroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoMetaCobro'>
    


  /**
   * Reference to a field of type 'EstadoMetaCobro[]'
   */
  export type ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoMetaCobro[]'>
    


  /**
   * Reference to a field of type 'EstadoGarantia'
   */
  export type EnumEstadoGarantiaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoGarantia'>
    


  /**
   * Reference to a field of type 'EstadoGarantia[]'
   */
  export type ListEnumEstadoGarantiaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoGarantia[]'>
    


  /**
   * Reference to a field of type 'MetodoPago'
   */
  export type EnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago'>
    


  /**
   * Reference to a field of type 'MetodoPago[]'
   */
  export type ListEnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago[]'>
    


  /**
   * Reference to a field of type 'EstadoSolicitudTransferencia'
   */
  export type EnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoSolicitudTransferencia'>
    


  /**
   * Reference to a field of type 'EstadoSolicitudTransferencia[]'
   */
  export type ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoSolicitudTransferencia[]'>
    
  /**
   * Deep Input Types
   */


  export type ReparacionWhereInput = {
    AND?: ReparacionWhereInput | ReparacionWhereInput[]
    OR?: ReparacionWhereInput[]
    NOT?: ReparacionWhereInput | ReparacionWhereInput[]
    id?: IntFilter<"Reparacion"> | number
    usuarioId?: IntFilter<"Reparacion"> | number
    sucursalId?: IntFilter<"Reparacion"> | number
    clienteId?: IntFilter<"Reparacion"> | number
    productoId?: IntNullableFilter<"Reparacion"> | number | null
    productoExterno?: StringNullableFilter<"Reparacion"> | string | null
    problemas?: StringFilter<"Reparacion"> | string
    observaciones?: StringNullableFilter<"Reparacion"> | string | null
    fechaRecibido?: DateTimeFilter<"Reparacion"> | Date | string
    fechaEntregado?: DateTimeNullableFilter<"Reparacion"> | Date | string | null
    estado?: EnumEstadoReparacionFilter<"Reparacion"> | $Enums.EstadoReparacion
    hojaSolucion?: StringNullableFilter<"Reparacion"> | string | null
    creadoEn?: DateTimeFilter<"Reparacion"> | Date | string
    actualizadoEn?: DateTimeFilter<"Reparacion"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
    registros?: RegistroReparacionListRelationFilter
  }

  export type ReparacionOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    productoExterno?: SortOrderInput | SortOrder
    problemas?: SortOrder
    observaciones?: SortOrderInput | SortOrder
    fechaRecibido?: SortOrder
    fechaEntregado?: SortOrderInput | SortOrder
    estado?: SortOrder
    hojaSolucion?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    cliente?: ClienteOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
    registros?: RegistroReparacionOrderByRelationAggregateInput
  }

  export type ReparacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReparacionWhereInput | ReparacionWhereInput[]
    OR?: ReparacionWhereInput[]
    NOT?: ReparacionWhereInput | ReparacionWhereInput[]
    usuarioId?: IntFilter<"Reparacion"> | number
    sucursalId?: IntFilter<"Reparacion"> | number
    clienteId?: IntFilter<"Reparacion"> | number
    productoId?: IntNullableFilter<"Reparacion"> | number | null
    productoExterno?: StringNullableFilter<"Reparacion"> | string | null
    problemas?: StringFilter<"Reparacion"> | string
    observaciones?: StringNullableFilter<"Reparacion"> | string | null
    fechaRecibido?: DateTimeFilter<"Reparacion"> | Date | string
    fechaEntregado?: DateTimeNullableFilter<"Reparacion"> | Date | string | null
    estado?: EnumEstadoReparacionFilter<"Reparacion"> | $Enums.EstadoReparacion
    hojaSolucion?: StringNullableFilter<"Reparacion"> | string | null
    creadoEn?: DateTimeFilter<"Reparacion"> | Date | string
    actualizadoEn?: DateTimeFilter<"Reparacion"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
    registros?: RegistroReparacionListRelationFilter
  }, "id">

  export type ReparacionOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    productoExterno?: SortOrderInput | SortOrder
    problemas?: SortOrder
    observaciones?: SortOrderInput | SortOrder
    fechaRecibido?: SortOrder
    fechaEntregado?: SortOrderInput | SortOrder
    estado?: SortOrder
    hojaSolucion?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    _count?: ReparacionCountOrderByAggregateInput
    _avg?: ReparacionAvgOrderByAggregateInput
    _max?: ReparacionMaxOrderByAggregateInput
    _min?: ReparacionMinOrderByAggregateInput
    _sum?: ReparacionSumOrderByAggregateInput
  }

  export type ReparacionScalarWhereWithAggregatesInput = {
    AND?: ReparacionScalarWhereWithAggregatesInput | ReparacionScalarWhereWithAggregatesInput[]
    OR?: ReparacionScalarWhereWithAggregatesInput[]
    NOT?: ReparacionScalarWhereWithAggregatesInput | ReparacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reparacion"> | number
    usuarioId?: IntWithAggregatesFilter<"Reparacion"> | number
    sucursalId?: IntWithAggregatesFilter<"Reparacion"> | number
    clienteId?: IntWithAggregatesFilter<"Reparacion"> | number
    productoId?: IntNullableWithAggregatesFilter<"Reparacion"> | number | null
    productoExterno?: StringNullableWithAggregatesFilter<"Reparacion"> | string | null
    problemas?: StringWithAggregatesFilter<"Reparacion"> | string
    observaciones?: StringNullableWithAggregatesFilter<"Reparacion"> | string | null
    fechaRecibido?: DateTimeWithAggregatesFilter<"Reparacion"> | Date | string
    fechaEntregado?: DateTimeNullableWithAggregatesFilter<"Reparacion"> | Date | string | null
    estado?: EnumEstadoReparacionWithAggregatesFilter<"Reparacion"> | $Enums.EstadoReparacion
    hojaSolucion?: StringNullableWithAggregatesFilter<"Reparacion"> | string | null
    creadoEn?: DateTimeWithAggregatesFilter<"Reparacion"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Reparacion"> | Date | string
  }

  export type RegistroReparacionWhereInput = {
    AND?: RegistroReparacionWhereInput | RegistroReparacionWhereInput[]
    OR?: RegistroReparacionWhereInput[]
    NOT?: RegistroReparacionWhereInput | RegistroReparacionWhereInput[]
    id?: IntFilter<"RegistroReparacion"> | number
    reparacionId?: IntFilter<"RegistroReparacion"> | number
    usuarioId?: IntFilter<"RegistroReparacion"> | number
    estado?: EnumEstadoReparacionFilter<"RegistroReparacion"> | $Enums.EstadoReparacion
    accionesRealizadas?: StringFilter<"RegistroReparacion"> | string
    fechaRegistro?: DateTimeFilter<"RegistroReparacion"> | Date | string
    comentarioFinal?: StringNullableFilter<"RegistroReparacion"> | string | null
    montoPagado?: IntNullableFilter<"RegistroReparacion"> | number | null
    reparacion?: XOR<ReparacionRelationFilter, ReparacionWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type RegistroReparacionOrderByWithRelationInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    comentarioFinal?: SortOrderInput | SortOrder
    montoPagado?: SortOrderInput | SortOrder
    reparacion?: ReparacionOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type RegistroReparacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroReparacionWhereInput | RegistroReparacionWhereInput[]
    OR?: RegistroReparacionWhereInput[]
    NOT?: RegistroReparacionWhereInput | RegistroReparacionWhereInput[]
    reparacionId?: IntFilter<"RegistroReparacion"> | number
    usuarioId?: IntFilter<"RegistroReparacion"> | number
    estado?: EnumEstadoReparacionFilter<"RegistroReparacion"> | $Enums.EstadoReparacion
    accionesRealizadas?: StringFilter<"RegistroReparacion"> | string
    fechaRegistro?: DateTimeFilter<"RegistroReparacion"> | Date | string
    comentarioFinal?: StringNullableFilter<"RegistroReparacion"> | string | null
    montoPagado?: IntNullableFilter<"RegistroReparacion"> | number | null
    reparacion?: XOR<ReparacionRelationFilter, ReparacionWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id">

  export type RegistroReparacionOrderByWithAggregationInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    comentarioFinal?: SortOrderInput | SortOrder
    montoPagado?: SortOrderInput | SortOrder
    _count?: RegistroReparacionCountOrderByAggregateInput
    _avg?: RegistroReparacionAvgOrderByAggregateInput
    _max?: RegistroReparacionMaxOrderByAggregateInput
    _min?: RegistroReparacionMinOrderByAggregateInput
    _sum?: RegistroReparacionSumOrderByAggregateInput
  }

  export type RegistroReparacionScalarWhereWithAggregatesInput = {
    AND?: RegistroReparacionScalarWhereWithAggregatesInput | RegistroReparacionScalarWhereWithAggregatesInput[]
    OR?: RegistroReparacionScalarWhereWithAggregatesInput[]
    NOT?: RegistroReparacionScalarWhereWithAggregatesInput | RegistroReparacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroReparacion"> | number
    reparacionId?: IntWithAggregatesFilter<"RegistroReparacion"> | number
    usuarioId?: IntWithAggregatesFilter<"RegistroReparacion"> | number
    estado?: EnumEstadoReparacionWithAggregatesFilter<"RegistroReparacion"> | $Enums.EstadoReparacion
    accionesRealizadas?: StringWithAggregatesFilter<"RegistroReparacion"> | string
    fechaRegistro?: DateTimeWithAggregatesFilter<"RegistroReparacion"> | Date | string
    comentarioFinal?: StringNullableWithAggregatesFilter<"RegistroReparacion"> | string | null
    montoPagado?: IntNullableWithAggregatesFilter<"RegistroReparacion"> | number | null
  }

  export type VentaCuotaWhereInput = {
    AND?: VentaCuotaWhereInput | VentaCuotaWhereInput[]
    OR?: VentaCuotaWhereInput[]
    NOT?: VentaCuotaWhereInput | VentaCuotaWhereInput[]
    id?: IntFilter<"VentaCuota"> | number
    clienteId?: IntFilter<"VentaCuota"> | number
    usuarioId?: IntFilter<"VentaCuota"> | number
    sucursalId?: IntFilter<"VentaCuota"> | number
    totalVenta?: FloatFilter<"VentaCuota"> | number
    cuotaInicial?: FloatFilter<"VentaCuota"> | number
    cuotasTotales?: IntFilter<"VentaCuota"> | number
    fechaInicio?: DateTimeFilter<"VentaCuota"> | Date | string
    estado?: EnumEstadoCuotaFilter<"VentaCuota"> | $Enums.EstadoCuota
    creadoEn?: DateTimeFilter<"VentaCuota"> | Date | string
    actualizadoEn?: DateTimeFilter<"VentaCuota"> | Date | string
    dpi?: StringFilter<"VentaCuota"> | string
    testigos?: JsonFilter<"VentaCuota">
    fechaContrato?: DateTimeFilter<"VentaCuota"> | Date | string
    montoVenta?: FloatFilter<"VentaCuota"> | number
    garantiaMeses?: IntFilter<"VentaCuota"> | number
    totalPagado?: FloatFilter<"VentaCuota"> | number
    diasEntrePagos?: IntFilter<"VentaCuota"> | number
    interes?: IntFilter<"VentaCuota"> | number
    comentario?: StringNullableFilter<"VentaCuota"> | string | null
    ventaId?: IntNullableFilter<"VentaCuota"> | number | null
    montoTotalConInteres?: IntNullableFilter<"VentaCuota"> | number | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    cuotas?: CuotaListRelationFilter
    venta?: XOR<VentaNullableRelationFilter, VentaWhereInput> | null
  }

  export type VentaCuotaOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    fechaInicio?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    dpi?: SortOrder
    testigos?: SortOrder
    fechaContrato?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    comentario?: SortOrderInput | SortOrder
    ventaId?: SortOrderInput | SortOrder
    montoTotalConInteres?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    cuotas?: CuotaOrderByRelationAggregateInput
    venta?: VentaOrderByWithRelationInput
  }

  export type VentaCuotaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    ventaId?: number
    AND?: VentaCuotaWhereInput | VentaCuotaWhereInput[]
    OR?: VentaCuotaWhereInput[]
    NOT?: VentaCuotaWhereInput | VentaCuotaWhereInput[]
    clienteId?: IntFilter<"VentaCuota"> | number
    usuarioId?: IntFilter<"VentaCuota"> | number
    sucursalId?: IntFilter<"VentaCuota"> | number
    totalVenta?: FloatFilter<"VentaCuota"> | number
    cuotaInicial?: FloatFilter<"VentaCuota"> | number
    cuotasTotales?: IntFilter<"VentaCuota"> | number
    fechaInicio?: DateTimeFilter<"VentaCuota"> | Date | string
    estado?: EnumEstadoCuotaFilter<"VentaCuota"> | $Enums.EstadoCuota
    creadoEn?: DateTimeFilter<"VentaCuota"> | Date | string
    actualizadoEn?: DateTimeFilter<"VentaCuota"> | Date | string
    dpi?: StringFilter<"VentaCuota"> | string
    testigos?: JsonFilter<"VentaCuota">
    fechaContrato?: DateTimeFilter<"VentaCuota"> | Date | string
    montoVenta?: FloatFilter<"VentaCuota"> | number
    garantiaMeses?: IntFilter<"VentaCuota"> | number
    totalPagado?: FloatFilter<"VentaCuota"> | number
    diasEntrePagos?: IntFilter<"VentaCuota"> | number
    interes?: IntFilter<"VentaCuota"> | number
    comentario?: StringNullableFilter<"VentaCuota"> | string | null
    montoTotalConInteres?: IntNullableFilter<"VentaCuota"> | number | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    cuotas?: CuotaListRelationFilter
    venta?: XOR<VentaNullableRelationFilter, VentaWhereInput> | null
  }, "id" | "ventaId">

  export type VentaCuotaOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    fechaInicio?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    dpi?: SortOrder
    testigos?: SortOrder
    fechaContrato?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    comentario?: SortOrderInput | SortOrder
    ventaId?: SortOrderInput | SortOrder
    montoTotalConInteres?: SortOrderInput | SortOrder
    _count?: VentaCuotaCountOrderByAggregateInput
    _avg?: VentaCuotaAvgOrderByAggregateInput
    _max?: VentaCuotaMaxOrderByAggregateInput
    _min?: VentaCuotaMinOrderByAggregateInput
    _sum?: VentaCuotaSumOrderByAggregateInput
  }

  export type VentaCuotaScalarWhereWithAggregatesInput = {
    AND?: VentaCuotaScalarWhereWithAggregatesInput | VentaCuotaScalarWhereWithAggregatesInput[]
    OR?: VentaCuotaScalarWhereWithAggregatesInput[]
    NOT?: VentaCuotaScalarWhereWithAggregatesInput | VentaCuotaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VentaCuota"> | number
    clienteId?: IntWithAggregatesFilter<"VentaCuota"> | number
    usuarioId?: IntWithAggregatesFilter<"VentaCuota"> | number
    sucursalId?: IntWithAggregatesFilter<"VentaCuota"> | number
    totalVenta?: FloatWithAggregatesFilter<"VentaCuota"> | number
    cuotaInicial?: FloatWithAggregatesFilter<"VentaCuota"> | number
    cuotasTotales?: IntWithAggregatesFilter<"VentaCuota"> | number
    fechaInicio?: DateTimeWithAggregatesFilter<"VentaCuota"> | Date | string
    estado?: EnumEstadoCuotaWithAggregatesFilter<"VentaCuota"> | $Enums.EstadoCuota
    creadoEn?: DateTimeWithAggregatesFilter<"VentaCuota"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"VentaCuota"> | Date | string
    dpi?: StringWithAggregatesFilter<"VentaCuota"> | string
    testigos?: JsonWithAggregatesFilter<"VentaCuota">
    fechaContrato?: DateTimeWithAggregatesFilter<"VentaCuota"> | Date | string
    montoVenta?: FloatWithAggregatesFilter<"VentaCuota"> | number
    garantiaMeses?: IntWithAggregatesFilter<"VentaCuota"> | number
    totalPagado?: FloatWithAggregatesFilter<"VentaCuota"> | number
    diasEntrePagos?: IntWithAggregatesFilter<"VentaCuota"> | number
    interes?: IntWithAggregatesFilter<"VentaCuota"> | number
    comentario?: StringNullableWithAggregatesFilter<"VentaCuota"> | string | null
    ventaId?: IntNullableWithAggregatesFilter<"VentaCuota"> | number | null
    montoTotalConInteres?: IntNullableWithAggregatesFilter<"VentaCuota"> | number | null
  }

  export type CuotaWhereInput = {
    AND?: CuotaWhereInput | CuotaWhereInput[]
    OR?: CuotaWhereInput[]
    NOT?: CuotaWhereInput | CuotaWhereInput[]
    id?: IntFilter<"Cuota"> | number
    ventaCuotaId?: IntFilter<"Cuota"> | number
    monto?: FloatFilter<"Cuota"> | number
    fechaVencimiento?: DateTimeNullableFilter<"Cuota"> | Date | string | null
    fechaPago?: DateTimeNullableFilter<"Cuota"> | Date | string | null
    estado?: EnumEstadoPagoFilter<"Cuota"> | $Enums.EstadoPago
    usuarioId?: IntNullableFilter<"Cuota"> | number | null
    creadoEn?: DateTimeFilter<"Cuota"> | Date | string
    actualizadoEn?: DateTimeFilter<"Cuota"> | Date | string
    comentario?: StringNullableFilter<"Cuota"> | string | null
    montoEsperado?: FloatNullableFilter<"Cuota"> | number | null
    ventaCuota?: XOR<VentaCuotaRelationFilter, VentaCuotaWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type CuotaOrderByWithRelationInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    fechaVencimiento?: SortOrderInput | SortOrder
    fechaPago?: SortOrderInput | SortOrder
    estado?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    comentario?: SortOrderInput | SortOrder
    montoEsperado?: SortOrderInput | SortOrder
    ventaCuota?: VentaCuotaOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type CuotaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CuotaWhereInput | CuotaWhereInput[]
    OR?: CuotaWhereInput[]
    NOT?: CuotaWhereInput | CuotaWhereInput[]
    ventaCuotaId?: IntFilter<"Cuota"> | number
    monto?: FloatFilter<"Cuota"> | number
    fechaVencimiento?: DateTimeNullableFilter<"Cuota"> | Date | string | null
    fechaPago?: DateTimeNullableFilter<"Cuota"> | Date | string | null
    estado?: EnumEstadoPagoFilter<"Cuota"> | $Enums.EstadoPago
    usuarioId?: IntNullableFilter<"Cuota"> | number | null
    creadoEn?: DateTimeFilter<"Cuota"> | Date | string
    actualizadoEn?: DateTimeFilter<"Cuota"> | Date | string
    comentario?: StringNullableFilter<"Cuota"> | string | null
    montoEsperado?: FloatNullableFilter<"Cuota"> | number | null
    ventaCuota?: XOR<VentaCuotaRelationFilter, VentaCuotaWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type CuotaOrderByWithAggregationInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    fechaVencimiento?: SortOrderInput | SortOrder
    fechaPago?: SortOrderInput | SortOrder
    estado?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    comentario?: SortOrderInput | SortOrder
    montoEsperado?: SortOrderInput | SortOrder
    _count?: CuotaCountOrderByAggregateInput
    _avg?: CuotaAvgOrderByAggregateInput
    _max?: CuotaMaxOrderByAggregateInput
    _min?: CuotaMinOrderByAggregateInput
    _sum?: CuotaSumOrderByAggregateInput
  }

  export type CuotaScalarWhereWithAggregatesInput = {
    AND?: CuotaScalarWhereWithAggregatesInput | CuotaScalarWhereWithAggregatesInput[]
    OR?: CuotaScalarWhereWithAggregatesInput[]
    NOT?: CuotaScalarWhereWithAggregatesInput | CuotaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cuota"> | number
    ventaCuotaId?: IntWithAggregatesFilter<"Cuota"> | number
    monto?: FloatWithAggregatesFilter<"Cuota"> | number
    fechaVencimiento?: DateTimeNullableWithAggregatesFilter<"Cuota"> | Date | string | null
    fechaPago?: DateTimeNullableWithAggregatesFilter<"Cuota"> | Date | string | null
    estado?: EnumEstadoPagoWithAggregatesFilter<"Cuota"> | $Enums.EstadoPago
    usuarioId?: IntNullableWithAggregatesFilter<"Cuota"> | number | null
    creadoEn?: DateTimeWithAggregatesFilter<"Cuota"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Cuota"> | Date | string
    comentario?: StringNullableWithAggregatesFilter<"Cuota"> | string | null
    montoEsperado?: FloatNullableWithAggregatesFilter<"Cuota"> | number | null
  }

  export type PlantillaComprobanteWhereInput = {
    AND?: PlantillaComprobanteWhereInput | PlantillaComprobanteWhereInput[]
    OR?: PlantillaComprobanteWhereInput[]
    NOT?: PlantillaComprobanteWhereInput | PlantillaComprobanteWhereInput[]
    id?: IntFilter<"PlantillaComprobante"> | number
    nombre?: StringFilter<"PlantillaComprobante"> | string
    texto?: StringFilter<"PlantillaComprobante"> | string
    sucursalId?: IntNullableFilter<"PlantillaComprobante"> | number | null
    creadoEn?: DateTimeFilter<"PlantillaComprobante"> | Date | string
    actualizadoEn?: DateTimeFilter<"PlantillaComprobante"> | Date | string
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
  }

  export type PlantillaComprobanteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    texto?: SortOrder
    sucursalId?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    sucursal?: SucursalOrderByWithRelationInput
  }

  export type PlantillaComprobanteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PlantillaComprobanteWhereInput | PlantillaComprobanteWhereInput[]
    OR?: PlantillaComprobanteWhereInput[]
    NOT?: PlantillaComprobanteWhereInput | PlantillaComprobanteWhereInput[]
    nombre?: StringFilter<"PlantillaComprobante"> | string
    texto?: StringFilter<"PlantillaComprobante"> | string
    sucursalId?: IntNullableFilter<"PlantillaComprobante"> | number | null
    creadoEn?: DateTimeFilter<"PlantillaComprobante"> | Date | string
    actualizadoEn?: DateTimeFilter<"PlantillaComprobante"> | Date | string
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
  }, "id">

  export type PlantillaComprobanteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    texto?: SortOrder
    sucursalId?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    _count?: PlantillaComprobanteCountOrderByAggregateInput
    _avg?: PlantillaComprobanteAvgOrderByAggregateInput
    _max?: PlantillaComprobanteMaxOrderByAggregateInput
    _min?: PlantillaComprobanteMinOrderByAggregateInput
    _sum?: PlantillaComprobanteSumOrderByAggregateInput
  }

  export type PlantillaComprobanteScalarWhereWithAggregatesInput = {
    AND?: PlantillaComprobanteScalarWhereWithAggregatesInput | PlantillaComprobanteScalarWhereWithAggregatesInput[]
    OR?: PlantillaComprobanteScalarWhereWithAggregatesInput[]
    NOT?: PlantillaComprobanteScalarWhereWithAggregatesInput | PlantillaComprobanteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PlantillaComprobante"> | number
    nombre?: StringWithAggregatesFilter<"PlantillaComprobante"> | string
    texto?: StringWithAggregatesFilter<"PlantillaComprobante"> | string
    sucursalId?: IntNullableWithAggregatesFilter<"PlantillaComprobante"> | number | null
    creadoEn?: DateTimeWithAggregatesFilter<"PlantillaComprobante"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"PlantillaComprobante"> | Date | string
  }

  export type VentaEliminadaWhereInput = {
    AND?: VentaEliminadaWhereInput | VentaEliminadaWhereInput[]
    OR?: VentaEliminadaWhereInput[]
    NOT?: VentaEliminadaWhereInput | VentaEliminadaWhereInput[]
    id?: IntFilter<"VentaEliminada"> | number
    usuarioId?: IntFilter<"VentaEliminada"> | number
    motivo?: StringFilter<"VentaEliminada"> | string
    totalVenta?: FloatFilter<"VentaEliminada"> | number
    clienteId?: IntNullableFilter<"VentaEliminada"> | number | null
    fechaEliminacion?: DateTimeFilter<"VentaEliminada"> | Date | string
    sucursalId?: IntFilter<"VentaEliminada"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    cliente?: XOR<ClienteNullableRelationFilter, ClienteWhereInput> | null
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    VentaEliminadaProducto?: VentaEliminadaProductoListRelationFilter
  }

  export type VentaEliminadaOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    fechaEliminacion?: SortOrder
    sucursalId?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    cliente?: ClienteOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    VentaEliminadaProducto?: VentaEliminadaProductoOrderByRelationAggregateInput
  }

  export type VentaEliminadaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VentaEliminadaWhereInput | VentaEliminadaWhereInput[]
    OR?: VentaEliminadaWhereInput[]
    NOT?: VentaEliminadaWhereInput | VentaEliminadaWhereInput[]
    usuarioId?: IntFilter<"VentaEliminada"> | number
    motivo?: StringFilter<"VentaEliminada"> | string
    totalVenta?: FloatFilter<"VentaEliminada"> | number
    clienteId?: IntNullableFilter<"VentaEliminada"> | number | null
    fechaEliminacion?: DateTimeFilter<"VentaEliminada"> | Date | string
    sucursalId?: IntFilter<"VentaEliminada"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    cliente?: XOR<ClienteNullableRelationFilter, ClienteWhereInput> | null
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    VentaEliminadaProducto?: VentaEliminadaProductoListRelationFilter
  }, "id">

  export type VentaEliminadaOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    fechaEliminacion?: SortOrder
    sucursalId?: SortOrder
    _count?: VentaEliminadaCountOrderByAggregateInput
    _avg?: VentaEliminadaAvgOrderByAggregateInput
    _max?: VentaEliminadaMaxOrderByAggregateInput
    _min?: VentaEliminadaMinOrderByAggregateInput
    _sum?: VentaEliminadaSumOrderByAggregateInput
  }

  export type VentaEliminadaScalarWhereWithAggregatesInput = {
    AND?: VentaEliminadaScalarWhereWithAggregatesInput | VentaEliminadaScalarWhereWithAggregatesInput[]
    OR?: VentaEliminadaScalarWhereWithAggregatesInput[]
    NOT?: VentaEliminadaScalarWhereWithAggregatesInput | VentaEliminadaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VentaEliminada"> | number
    usuarioId?: IntWithAggregatesFilter<"VentaEliminada"> | number
    motivo?: StringWithAggregatesFilter<"VentaEliminada"> | string
    totalVenta?: FloatWithAggregatesFilter<"VentaEliminada"> | number
    clienteId?: IntNullableWithAggregatesFilter<"VentaEliminada"> | number | null
    fechaEliminacion?: DateTimeWithAggregatesFilter<"VentaEliminada"> | Date | string
    sucursalId?: IntWithAggregatesFilter<"VentaEliminada"> | number
  }

  export type VentaEliminadaProductoWhereInput = {
    AND?: VentaEliminadaProductoWhereInput | VentaEliminadaProductoWhereInput[]
    OR?: VentaEliminadaProductoWhereInput[]
    NOT?: VentaEliminadaProductoWhereInput | VentaEliminadaProductoWhereInput[]
    id?: IntFilter<"VentaEliminadaProducto"> | number
    ventaEliminadaId?: IntFilter<"VentaEliminadaProducto"> | number
    productoId?: IntNullableFilter<"VentaEliminadaProducto"> | number | null
    cantidad?: IntFilter<"VentaEliminadaProducto"> | number
    precioVenta?: FloatFilter<"VentaEliminadaProducto"> | number
    creadoEn?: DateTimeFilter<"VentaEliminadaProducto"> | Date | string
    ventaEliminada?: XOR<VentaEliminadaRelationFilter, VentaEliminadaWhereInput>
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
  }

  export type VentaEliminadaProductoOrderByWithRelationInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
    creadoEn?: SortOrder
    ventaEliminada?: VentaEliminadaOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
  }

  export type VentaEliminadaProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VentaEliminadaProductoWhereInput | VentaEliminadaProductoWhereInput[]
    OR?: VentaEliminadaProductoWhereInput[]
    NOT?: VentaEliminadaProductoWhereInput | VentaEliminadaProductoWhereInput[]
    ventaEliminadaId?: IntFilter<"VentaEliminadaProducto"> | number
    productoId?: IntNullableFilter<"VentaEliminadaProducto"> | number | null
    cantidad?: IntFilter<"VentaEliminadaProducto"> | number
    precioVenta?: FloatFilter<"VentaEliminadaProducto"> | number
    creadoEn?: DateTimeFilter<"VentaEliminadaProducto"> | Date | string
    ventaEliminada?: XOR<VentaEliminadaRelationFilter, VentaEliminadaWhereInput>
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
  }, "id">

  export type VentaEliminadaProductoOrderByWithAggregationInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
    creadoEn?: SortOrder
    _count?: VentaEliminadaProductoCountOrderByAggregateInput
    _avg?: VentaEliminadaProductoAvgOrderByAggregateInput
    _max?: VentaEliminadaProductoMaxOrderByAggregateInput
    _min?: VentaEliminadaProductoMinOrderByAggregateInput
    _sum?: VentaEliminadaProductoSumOrderByAggregateInput
  }

  export type VentaEliminadaProductoScalarWhereWithAggregatesInput = {
    AND?: VentaEliminadaProductoScalarWhereWithAggregatesInput | VentaEliminadaProductoScalarWhereWithAggregatesInput[]
    OR?: VentaEliminadaProductoScalarWhereWithAggregatesInput[]
    NOT?: VentaEliminadaProductoScalarWhereWithAggregatesInput | VentaEliminadaProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VentaEliminadaProducto"> | number
    ventaEliminadaId?: IntWithAggregatesFilter<"VentaEliminadaProducto"> | number
    productoId?: IntNullableWithAggregatesFilter<"VentaEliminadaProducto"> | number | null
    cantidad?: IntWithAggregatesFilter<"VentaEliminadaProducto"> | number
    precioVenta?: FloatWithAggregatesFilter<"VentaEliminadaProducto"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"VentaEliminadaProducto"> | Date | string
  }

  export type SucursalSaldoWhereInput = {
    AND?: SucursalSaldoWhereInput | SucursalSaldoWhereInput[]
    OR?: SucursalSaldoWhereInput[]
    NOT?: SucursalSaldoWhereInput | SucursalSaldoWhereInput[]
    id?: IntFilter<"SucursalSaldo"> | number
    sucursalId?: IntFilter<"SucursalSaldo"> | number
    saldoAcumulado?: FloatFilter<"SucursalSaldo"> | number
    totalIngresos?: FloatFilter<"SucursalSaldo"> | number
    totalEgresos?: FloatFilter<"SucursalSaldo"> | number
    actualizadoEn?: DateTimeFilter<"SucursalSaldo"> | Date | string
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
  }

  export type SucursalSaldoOrderByWithRelationInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
    sucursal?: SucursalOrderByWithRelationInput
  }

  export type SucursalSaldoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sucursalId?: number
    AND?: SucursalSaldoWhereInput | SucursalSaldoWhereInput[]
    OR?: SucursalSaldoWhereInput[]
    NOT?: SucursalSaldoWhereInput | SucursalSaldoWhereInput[]
    saldoAcumulado?: FloatFilter<"SucursalSaldo"> | number
    totalIngresos?: FloatFilter<"SucursalSaldo"> | number
    totalEgresos?: FloatFilter<"SucursalSaldo"> | number
    actualizadoEn?: DateTimeFilter<"SucursalSaldo"> | Date | string
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
  }, "id" | "sucursalId">

  export type SucursalSaldoOrderByWithAggregationInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
    _count?: SucursalSaldoCountOrderByAggregateInput
    _avg?: SucursalSaldoAvgOrderByAggregateInput
    _max?: SucursalSaldoMaxOrderByAggregateInput
    _min?: SucursalSaldoMinOrderByAggregateInput
    _sum?: SucursalSaldoSumOrderByAggregateInput
  }

  export type SucursalSaldoScalarWhereWithAggregatesInput = {
    AND?: SucursalSaldoScalarWhereWithAggregatesInput | SucursalSaldoScalarWhereWithAggregatesInput[]
    OR?: SucursalSaldoScalarWhereWithAggregatesInput[]
    NOT?: SucursalSaldoScalarWhereWithAggregatesInput | SucursalSaldoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SucursalSaldo"> | number
    sucursalId?: IntWithAggregatesFilter<"SucursalSaldo"> | number
    saldoAcumulado?: FloatWithAggregatesFilter<"SucursalSaldo"> | number
    totalIngresos?: FloatWithAggregatesFilter<"SucursalSaldo"> | number
    totalEgresos?: FloatWithAggregatesFilter<"SucursalSaldo"> | number
    actualizadoEn?: DateTimeWithAggregatesFilter<"SucursalSaldo"> | Date | string
  }

  export type RegistroCajaWhereInput = {
    AND?: RegistroCajaWhereInput | RegistroCajaWhereInput[]
    OR?: RegistroCajaWhereInput[]
    NOT?: RegistroCajaWhereInput | RegistroCajaWhereInput[]
    id?: IntFilter<"RegistroCaja"> | number
    sucursalId?: IntNullableFilter<"RegistroCaja"> | number | null
    usuarioId?: IntNullableFilter<"RegistroCaja"> | number | null
    saldoInicial?: FloatNullableFilter<"RegistroCaja"> | number | null
    saldoFinal?: FloatNullableFilter<"RegistroCaja"> | number | null
    fechaInicio?: DateTimeNullableFilter<"RegistroCaja"> | Date | string | null
    fechaCierre?: DateTimeNullableFilter<"RegistroCaja"> | Date | string | null
    estado?: EnumEstadoCajaNullableFilter<"RegistroCaja"> | $Enums.EstadoCaja | null
    comentario?: StringNullableFilter<"RegistroCaja"> | string | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    depositos?: DepositoListRelationFilter
    egresos?: EgresoListRelationFilter
    ventas?: VentaListRelationFilter
  }

  export type RegistroCajaOrderByWithRelationInput = {
    id?: SortOrder
    sucursalId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    saldoInicial?: SortOrderInput | SortOrder
    saldoFinal?: SortOrderInput | SortOrder
    fechaInicio?: SortOrderInput | SortOrder
    fechaCierre?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    sucursal?: SucursalOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    depositos?: DepositoOrderByRelationAggregateInput
    egresos?: EgresoOrderByRelationAggregateInput
    ventas?: VentaOrderByRelationAggregateInput
  }

  export type RegistroCajaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroCajaWhereInput | RegistroCajaWhereInput[]
    OR?: RegistroCajaWhereInput[]
    NOT?: RegistroCajaWhereInput | RegistroCajaWhereInput[]
    sucursalId?: IntNullableFilter<"RegistroCaja"> | number | null
    usuarioId?: IntNullableFilter<"RegistroCaja"> | number | null
    saldoInicial?: FloatNullableFilter<"RegistroCaja"> | number | null
    saldoFinal?: FloatNullableFilter<"RegistroCaja"> | number | null
    fechaInicio?: DateTimeNullableFilter<"RegistroCaja"> | Date | string | null
    fechaCierre?: DateTimeNullableFilter<"RegistroCaja"> | Date | string | null
    estado?: EnumEstadoCajaNullableFilter<"RegistroCaja"> | $Enums.EstadoCaja | null
    comentario?: StringNullableFilter<"RegistroCaja"> | string | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    depositos?: DepositoListRelationFilter
    egresos?: EgresoListRelationFilter
    ventas?: VentaListRelationFilter
  }, "id">

  export type RegistroCajaOrderByWithAggregationInput = {
    id?: SortOrder
    sucursalId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    saldoInicial?: SortOrderInput | SortOrder
    saldoFinal?: SortOrderInput | SortOrder
    fechaInicio?: SortOrderInput | SortOrder
    fechaCierre?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    _count?: RegistroCajaCountOrderByAggregateInput
    _avg?: RegistroCajaAvgOrderByAggregateInput
    _max?: RegistroCajaMaxOrderByAggregateInput
    _min?: RegistroCajaMinOrderByAggregateInput
    _sum?: RegistroCajaSumOrderByAggregateInput
  }

  export type RegistroCajaScalarWhereWithAggregatesInput = {
    AND?: RegistroCajaScalarWhereWithAggregatesInput | RegistroCajaScalarWhereWithAggregatesInput[]
    OR?: RegistroCajaScalarWhereWithAggregatesInput[]
    NOT?: RegistroCajaScalarWhereWithAggregatesInput | RegistroCajaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroCaja"> | number
    sucursalId?: IntNullableWithAggregatesFilter<"RegistroCaja"> | number | null
    usuarioId?: IntNullableWithAggregatesFilter<"RegistroCaja"> | number | null
    saldoInicial?: FloatNullableWithAggregatesFilter<"RegistroCaja"> | number | null
    saldoFinal?: FloatNullableWithAggregatesFilter<"RegistroCaja"> | number | null
    fechaInicio?: DateTimeNullableWithAggregatesFilter<"RegistroCaja"> | Date | string | null
    fechaCierre?: DateTimeNullableWithAggregatesFilter<"RegistroCaja"> | Date | string | null
    estado?: EnumEstadoCajaNullableWithAggregatesFilter<"RegistroCaja"> | $Enums.EstadoCaja | null
    comentario?: StringNullableWithAggregatesFilter<"RegistroCaja"> | string | null
  }

  export type SucursalSaldoGlobalWhereInput = {
    AND?: SucursalSaldoGlobalWhereInput | SucursalSaldoGlobalWhereInput[]
    OR?: SucursalSaldoGlobalWhereInput[]
    NOT?: SucursalSaldoGlobalWhereInput | SucursalSaldoGlobalWhereInput[]
    id?: IntFilter<"SucursalSaldoGlobal"> | number
    saldoGlobal?: FloatFilter<"SucursalSaldoGlobal"> | number
    totalIngresos?: FloatFilter<"SucursalSaldoGlobal"> | number
    totalEgresos?: FloatFilter<"SucursalSaldoGlobal"> | number
    actualizadoEn?: DateTimeFilter<"SucursalSaldoGlobal"> | Date | string
  }

  export type SucursalSaldoGlobalOrderByWithRelationInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoGlobalWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SucursalSaldoGlobalWhereInput | SucursalSaldoGlobalWhereInput[]
    OR?: SucursalSaldoGlobalWhereInput[]
    NOT?: SucursalSaldoGlobalWhereInput | SucursalSaldoGlobalWhereInput[]
    saldoGlobal?: FloatFilter<"SucursalSaldoGlobal"> | number
    totalIngresos?: FloatFilter<"SucursalSaldoGlobal"> | number
    totalEgresos?: FloatFilter<"SucursalSaldoGlobal"> | number
    actualizadoEn?: DateTimeFilter<"SucursalSaldoGlobal"> | Date | string
  }, "id">

  export type SucursalSaldoGlobalOrderByWithAggregationInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
    _count?: SucursalSaldoGlobalCountOrderByAggregateInput
    _avg?: SucursalSaldoGlobalAvgOrderByAggregateInput
    _max?: SucursalSaldoGlobalMaxOrderByAggregateInput
    _min?: SucursalSaldoGlobalMinOrderByAggregateInput
    _sum?: SucursalSaldoGlobalSumOrderByAggregateInput
  }

  export type SucursalSaldoGlobalScalarWhereWithAggregatesInput = {
    AND?: SucursalSaldoGlobalScalarWhereWithAggregatesInput | SucursalSaldoGlobalScalarWhereWithAggregatesInput[]
    OR?: SucursalSaldoGlobalScalarWhereWithAggregatesInput[]
    NOT?: SucursalSaldoGlobalScalarWhereWithAggregatesInput | SucursalSaldoGlobalScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SucursalSaldoGlobal"> | number
    saldoGlobal?: FloatWithAggregatesFilter<"SucursalSaldoGlobal"> | number
    totalIngresos?: FloatWithAggregatesFilter<"SucursalSaldoGlobal"> | number
    totalEgresos?: FloatWithAggregatesFilter<"SucursalSaldoGlobal"> | number
    actualizadoEn?: DateTimeWithAggregatesFilter<"SucursalSaldoGlobal"> | Date | string
  }

  export type DepositoWhereInput = {
    AND?: DepositoWhereInput | DepositoWhereInput[]
    OR?: DepositoWhereInput[]
    NOT?: DepositoWhereInput | DepositoWhereInput[]
    id?: IntFilter<"Deposito"> | number
    registroCajaId?: IntNullableFilter<"Deposito"> | number | null
    monto?: FloatFilter<"Deposito"> | number
    numeroBoleta?: StringFilter<"Deposito"> | string
    banco?: StringFilter<"Deposito"> | string
    fechaDeposito?: DateTimeFilter<"Deposito"> | Date | string
    usadoParaCierre?: BoolFilter<"Deposito"> | boolean
    descripcion?: StringNullableFilter<"Deposito"> | string | null
    sucursalId?: IntNullableFilter<"Deposito"> | number | null
    usuarioId?: IntNullableFilter<"Deposito"> | number | null
    registroCaja?: XOR<RegistroCajaNullableRelationFilter, RegistroCajaWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type DepositoOrderByWithRelationInput = {
    id?: SortOrder
    registroCajaId?: SortOrderInput | SortOrder
    monto?: SortOrder
    numeroBoleta?: SortOrder
    banco?: SortOrder
    fechaDeposito?: SortOrder
    usadoParaCierre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    sucursalId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    registroCaja?: RegistroCajaOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type DepositoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DepositoWhereInput | DepositoWhereInput[]
    OR?: DepositoWhereInput[]
    NOT?: DepositoWhereInput | DepositoWhereInput[]
    registroCajaId?: IntNullableFilter<"Deposito"> | number | null
    monto?: FloatFilter<"Deposito"> | number
    numeroBoleta?: StringFilter<"Deposito"> | string
    banco?: StringFilter<"Deposito"> | string
    fechaDeposito?: DateTimeFilter<"Deposito"> | Date | string
    usadoParaCierre?: BoolFilter<"Deposito"> | boolean
    descripcion?: StringNullableFilter<"Deposito"> | string | null
    sucursalId?: IntNullableFilter<"Deposito"> | number | null
    usuarioId?: IntNullableFilter<"Deposito"> | number | null
    registroCaja?: XOR<RegistroCajaNullableRelationFilter, RegistroCajaWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type DepositoOrderByWithAggregationInput = {
    id?: SortOrder
    registroCajaId?: SortOrderInput | SortOrder
    monto?: SortOrder
    numeroBoleta?: SortOrder
    banco?: SortOrder
    fechaDeposito?: SortOrder
    usadoParaCierre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    sucursalId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    _count?: DepositoCountOrderByAggregateInput
    _avg?: DepositoAvgOrderByAggregateInput
    _max?: DepositoMaxOrderByAggregateInput
    _min?: DepositoMinOrderByAggregateInput
    _sum?: DepositoSumOrderByAggregateInput
  }

  export type DepositoScalarWhereWithAggregatesInput = {
    AND?: DepositoScalarWhereWithAggregatesInput | DepositoScalarWhereWithAggregatesInput[]
    OR?: DepositoScalarWhereWithAggregatesInput[]
    NOT?: DepositoScalarWhereWithAggregatesInput | DepositoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Deposito"> | number
    registroCajaId?: IntNullableWithAggregatesFilter<"Deposito"> | number | null
    monto?: FloatWithAggregatesFilter<"Deposito"> | number
    numeroBoleta?: StringWithAggregatesFilter<"Deposito"> | string
    banco?: StringWithAggregatesFilter<"Deposito"> | string
    fechaDeposito?: DateTimeWithAggregatesFilter<"Deposito"> | Date | string
    usadoParaCierre?: BoolWithAggregatesFilter<"Deposito"> | boolean
    descripcion?: StringNullableWithAggregatesFilter<"Deposito"> | string | null
    sucursalId?: IntNullableWithAggregatesFilter<"Deposito"> | number | null
    usuarioId?: IntNullableWithAggregatesFilter<"Deposito"> | number | null
  }

  export type EgresoWhereInput = {
    AND?: EgresoWhereInput | EgresoWhereInput[]
    OR?: EgresoWhereInput[]
    NOT?: EgresoWhereInput | EgresoWhereInput[]
    id?: IntFilter<"Egreso"> | number
    registroCajaId?: IntNullableFilter<"Egreso"> | number | null
    descripcion?: StringNullableFilter<"Egreso"> | string | null
    monto?: FloatFilter<"Egreso"> | number
    fechaEgreso?: DateTimeFilter<"Egreso"> | Date | string
    sucursalId?: IntNullableFilter<"Egreso"> | number | null
    usuarioId?: IntNullableFilter<"Egreso"> | number | null
    registroCaja?: XOR<RegistroCajaNullableRelationFilter, RegistroCajaWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type EgresoOrderByWithRelationInput = {
    id?: SortOrder
    registroCajaId?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    monto?: SortOrder
    fechaEgreso?: SortOrder
    sucursalId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    registroCaja?: RegistroCajaOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type EgresoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EgresoWhereInput | EgresoWhereInput[]
    OR?: EgresoWhereInput[]
    NOT?: EgresoWhereInput | EgresoWhereInput[]
    registroCajaId?: IntNullableFilter<"Egreso"> | number | null
    descripcion?: StringNullableFilter<"Egreso"> | string | null
    monto?: FloatFilter<"Egreso"> | number
    fechaEgreso?: DateTimeFilter<"Egreso"> | Date | string
    sucursalId?: IntNullableFilter<"Egreso"> | number | null
    usuarioId?: IntNullableFilter<"Egreso"> | number | null
    registroCaja?: XOR<RegistroCajaNullableRelationFilter, RegistroCajaWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type EgresoOrderByWithAggregationInput = {
    id?: SortOrder
    registroCajaId?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    monto?: SortOrder
    fechaEgreso?: SortOrder
    sucursalId?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    _count?: EgresoCountOrderByAggregateInput
    _avg?: EgresoAvgOrderByAggregateInput
    _max?: EgresoMaxOrderByAggregateInput
    _min?: EgresoMinOrderByAggregateInput
    _sum?: EgresoSumOrderByAggregateInput
  }

  export type EgresoScalarWhereWithAggregatesInput = {
    AND?: EgresoScalarWhereWithAggregatesInput | EgresoScalarWhereWithAggregatesInput[]
    OR?: EgresoScalarWhereWithAggregatesInput[]
    NOT?: EgresoScalarWhereWithAggregatesInput | EgresoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Egreso"> | number
    registroCajaId?: IntNullableWithAggregatesFilter<"Egreso"> | number | null
    descripcion?: StringNullableWithAggregatesFilter<"Egreso"> | string | null
    monto?: FloatWithAggregatesFilter<"Egreso"> | number
    fechaEgreso?: DateTimeWithAggregatesFilter<"Egreso"> | Date | string
    sucursalId?: IntNullableWithAggregatesFilter<"Egreso"> | number | null
    usuarioId?: IntNullableWithAggregatesFilter<"Egreso"> | number | null
  }

  export type TicketSorteoWhereInput = {
    AND?: TicketSorteoWhereInput | TicketSorteoWhereInput[]
    OR?: TicketSorteoWhereInput[]
    NOT?: TicketSorteoWhereInput | TicketSorteoWhereInput[]
    id?: IntFilter<"TicketSorteo"> | number
    descripcionSorteo?: StringNullableFilter<"TicketSorteo"> | string | null
    creadoEn?: DateTimeFilter<"TicketSorteo"> | Date | string
    actualizadoEn?: DateTimeFilter<"TicketSorteo"> | Date | string
    estado?: EnumEstadoTicketFilter<"TicketSorteo"> | $Enums.EstadoTicket
  }

  export type TicketSorteoOrderByWithRelationInput = {
    id?: SortOrder
    descripcionSorteo?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    estado?: SortOrder
  }

  export type TicketSorteoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketSorteoWhereInput | TicketSorteoWhereInput[]
    OR?: TicketSorteoWhereInput[]
    NOT?: TicketSorteoWhereInput | TicketSorteoWhereInput[]
    descripcionSorteo?: StringNullableFilter<"TicketSorteo"> | string | null
    creadoEn?: DateTimeFilter<"TicketSorteo"> | Date | string
    actualizadoEn?: DateTimeFilter<"TicketSorteo"> | Date | string
    estado?: EnumEstadoTicketFilter<"TicketSorteo"> | $Enums.EstadoTicket
  }, "id">

  export type TicketSorteoOrderByWithAggregationInput = {
    id?: SortOrder
    descripcionSorteo?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    estado?: SortOrder
    _count?: TicketSorteoCountOrderByAggregateInput
    _avg?: TicketSorteoAvgOrderByAggregateInput
    _max?: TicketSorteoMaxOrderByAggregateInput
    _min?: TicketSorteoMinOrderByAggregateInput
    _sum?: TicketSorteoSumOrderByAggregateInput
  }

  export type TicketSorteoScalarWhereWithAggregatesInput = {
    AND?: TicketSorteoScalarWhereWithAggregatesInput | TicketSorteoScalarWhereWithAggregatesInput[]
    OR?: TicketSorteoScalarWhereWithAggregatesInput[]
    NOT?: TicketSorteoScalarWhereWithAggregatesInput | TicketSorteoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TicketSorteo"> | number
    descripcionSorteo?: StringNullableWithAggregatesFilter<"TicketSorteo"> | string | null
    creadoEn?: DateTimeWithAggregatesFilter<"TicketSorteo"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"TicketSorteo"> | Date | string
    estado?: EnumEstadoTicketWithAggregatesFilter<"TicketSorteo"> | $Enums.EstadoTicket
  }

  export type VencimientoWhereInput = {
    AND?: VencimientoWhereInput | VencimientoWhereInput[]
    OR?: VencimientoWhereInput[]
    NOT?: VencimientoWhereInput | VencimientoWhereInput[]
    id?: IntFilter<"Vencimiento"> | number
    fechaVencimiento?: DateTimeFilter<"Vencimiento"> | Date | string
    estado?: EnumEstadoVencimientoFilter<"Vencimiento"> | $Enums.EstadoVencimiento
    descripcion?: StringNullableFilter<"Vencimiento"> | string | null
    stockId?: IntNullableFilter<"Vencimiento"> | number | null
    fechaCreacion?: DateTimeFilter<"Vencimiento"> | Date | string
    stock?: XOR<StockNullableRelationFilter, StockWhereInput> | null
  }

  export type VencimientoOrderByWithRelationInput = {
    id?: SortOrder
    fechaVencimiento?: SortOrder
    estado?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    stockId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    stock?: StockOrderByWithRelationInput
  }

  export type VencimientoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VencimientoWhereInput | VencimientoWhereInput[]
    OR?: VencimientoWhereInput[]
    NOT?: VencimientoWhereInput | VencimientoWhereInput[]
    fechaVencimiento?: DateTimeFilter<"Vencimiento"> | Date | string
    estado?: EnumEstadoVencimientoFilter<"Vencimiento"> | $Enums.EstadoVencimiento
    descripcion?: StringNullableFilter<"Vencimiento"> | string | null
    stockId?: IntNullableFilter<"Vencimiento"> | number | null
    fechaCreacion?: DateTimeFilter<"Vencimiento"> | Date | string
    stock?: XOR<StockNullableRelationFilter, StockWhereInput> | null
  }, "id">

  export type VencimientoOrderByWithAggregationInput = {
    id?: SortOrder
    fechaVencimiento?: SortOrder
    estado?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    stockId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    _count?: VencimientoCountOrderByAggregateInput
    _avg?: VencimientoAvgOrderByAggregateInput
    _max?: VencimientoMaxOrderByAggregateInput
    _min?: VencimientoMinOrderByAggregateInput
    _sum?: VencimientoSumOrderByAggregateInput
  }

  export type VencimientoScalarWhereWithAggregatesInput = {
    AND?: VencimientoScalarWhereWithAggregatesInput | VencimientoScalarWhereWithAggregatesInput[]
    OR?: VencimientoScalarWhereWithAggregatesInput[]
    NOT?: VencimientoScalarWhereWithAggregatesInput | VencimientoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Vencimiento"> | number
    fechaVencimiento?: DateTimeWithAggregatesFilter<"Vencimiento"> | Date | string
    estado?: EnumEstadoVencimientoWithAggregatesFilter<"Vencimiento"> | $Enums.EstadoVencimiento
    descripcion?: StringNullableWithAggregatesFilter<"Vencimiento"> | string | null
    stockId?: IntNullableWithAggregatesFilter<"Vencimiento"> | number | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"Vencimiento"> | Date | string
  }

  export type NotificacionWhereInput = {
    AND?: NotificacionWhereInput | NotificacionWhereInput[]
    OR?: NotificacionWhereInput[]
    NOT?: NotificacionWhereInput | NotificacionWhereInput[]
    id?: IntFilter<"Notificacion"> | number
    mensaje?: StringFilter<"Notificacion"> | string
    remitenteId?: IntNullableFilter<"Notificacion"> | number | null
    tipoNotificacion?: EnumTipoNotificacionFilter<"Notificacion"> | $Enums.TipoNotificacion
    referenciaId?: IntNullableFilter<"Notificacion"> | number | null
    fechaCreacion?: DateTimeFilter<"Notificacion"> | Date | string
    remitente?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    notificacionesUsuarios?: NotificacionesUsuariosListRelationFilter
    Usuario?: UsuarioListRelationFilter
  }

  export type NotificacionOrderByWithRelationInput = {
    id?: SortOrder
    mensaje?: SortOrder
    remitenteId?: SortOrderInput | SortOrder
    tipoNotificacion?: SortOrder
    referenciaId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    remitente?: UsuarioOrderByWithRelationInput
    notificacionesUsuarios?: NotificacionesUsuariosOrderByRelationAggregateInput
    Usuario?: UsuarioOrderByRelationAggregateInput
  }

  export type NotificacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificacionWhereInput | NotificacionWhereInput[]
    OR?: NotificacionWhereInput[]
    NOT?: NotificacionWhereInput | NotificacionWhereInput[]
    mensaje?: StringFilter<"Notificacion"> | string
    remitenteId?: IntNullableFilter<"Notificacion"> | number | null
    tipoNotificacion?: EnumTipoNotificacionFilter<"Notificacion"> | $Enums.TipoNotificacion
    referenciaId?: IntNullableFilter<"Notificacion"> | number | null
    fechaCreacion?: DateTimeFilter<"Notificacion"> | Date | string
    remitente?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    notificacionesUsuarios?: NotificacionesUsuariosListRelationFilter
    Usuario?: UsuarioListRelationFilter
  }, "id">

  export type NotificacionOrderByWithAggregationInput = {
    id?: SortOrder
    mensaje?: SortOrder
    remitenteId?: SortOrderInput | SortOrder
    tipoNotificacion?: SortOrder
    referenciaId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    _count?: NotificacionCountOrderByAggregateInput
    _avg?: NotificacionAvgOrderByAggregateInput
    _max?: NotificacionMaxOrderByAggregateInput
    _min?: NotificacionMinOrderByAggregateInput
    _sum?: NotificacionSumOrderByAggregateInput
  }

  export type NotificacionScalarWhereWithAggregatesInput = {
    AND?: NotificacionScalarWhereWithAggregatesInput | NotificacionScalarWhereWithAggregatesInput[]
    OR?: NotificacionScalarWhereWithAggregatesInput[]
    NOT?: NotificacionScalarWhereWithAggregatesInput | NotificacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Notificacion"> | number
    mensaje?: StringWithAggregatesFilter<"Notificacion"> | string
    remitenteId?: IntNullableWithAggregatesFilter<"Notificacion"> | number | null
    tipoNotificacion?: EnumTipoNotificacionWithAggregatesFilter<"Notificacion"> | $Enums.TipoNotificacion
    referenciaId?: IntNullableWithAggregatesFilter<"Notificacion"> | number | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"Notificacion"> | Date | string
  }

  export type NotificacionesUsuariosWhereInput = {
    AND?: NotificacionesUsuariosWhereInput | NotificacionesUsuariosWhereInput[]
    OR?: NotificacionesUsuariosWhereInput[]
    NOT?: NotificacionesUsuariosWhereInput | NotificacionesUsuariosWhereInput[]
    id?: IntFilter<"NotificacionesUsuarios"> | number
    usuarioId?: IntFilter<"NotificacionesUsuarios"> | number
    notificacionId?: IntFilter<"NotificacionesUsuarios"> | number
    leido?: BoolFilter<"NotificacionesUsuarios"> | boolean
    eliminado?: BoolFilter<"NotificacionesUsuarios"> | boolean
    leidoEn?: DateTimeNullableFilter<"NotificacionesUsuarios"> | Date | string | null
    recibidoEn?: DateTimeFilter<"NotificacionesUsuarios"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    notificacion?: XOR<NotificacionRelationFilter, NotificacionWhereInput>
  }

  export type NotificacionesUsuariosOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
    leido?: SortOrder
    eliminado?: SortOrder
    leidoEn?: SortOrderInput | SortOrder
    recibidoEn?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    notificacion?: NotificacionOrderByWithRelationInput
  }

  export type NotificacionesUsuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificacionesUsuariosWhereInput | NotificacionesUsuariosWhereInput[]
    OR?: NotificacionesUsuariosWhereInput[]
    NOT?: NotificacionesUsuariosWhereInput | NotificacionesUsuariosWhereInput[]
    usuarioId?: IntFilter<"NotificacionesUsuarios"> | number
    notificacionId?: IntFilter<"NotificacionesUsuarios"> | number
    leido?: BoolFilter<"NotificacionesUsuarios"> | boolean
    eliminado?: BoolFilter<"NotificacionesUsuarios"> | boolean
    leidoEn?: DateTimeNullableFilter<"NotificacionesUsuarios"> | Date | string | null
    recibidoEn?: DateTimeFilter<"NotificacionesUsuarios"> | Date | string
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    notificacion?: XOR<NotificacionRelationFilter, NotificacionWhereInput>
  }, "id">

  export type NotificacionesUsuariosOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
    leido?: SortOrder
    eliminado?: SortOrder
    leidoEn?: SortOrderInput | SortOrder
    recibidoEn?: SortOrder
    _count?: NotificacionesUsuariosCountOrderByAggregateInput
    _avg?: NotificacionesUsuariosAvgOrderByAggregateInput
    _max?: NotificacionesUsuariosMaxOrderByAggregateInput
    _min?: NotificacionesUsuariosMinOrderByAggregateInput
    _sum?: NotificacionesUsuariosSumOrderByAggregateInput
  }

  export type NotificacionesUsuariosScalarWhereWithAggregatesInput = {
    AND?: NotificacionesUsuariosScalarWhereWithAggregatesInput | NotificacionesUsuariosScalarWhereWithAggregatesInput[]
    OR?: NotificacionesUsuariosScalarWhereWithAggregatesInput[]
    NOT?: NotificacionesUsuariosScalarWhereWithAggregatesInput | NotificacionesUsuariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"NotificacionesUsuarios"> | number
    usuarioId?: IntWithAggregatesFilter<"NotificacionesUsuarios"> | number
    notificacionId?: IntWithAggregatesFilter<"NotificacionesUsuarios"> | number
    leido?: BoolWithAggregatesFilter<"NotificacionesUsuarios"> | boolean
    eliminado?: BoolWithAggregatesFilter<"NotificacionesUsuarios"> | boolean
    leidoEn?: DateTimeNullableWithAggregatesFilter<"NotificacionesUsuarios"> | Date | string | null
    recibidoEn?: DateTimeWithAggregatesFilter<"NotificacionesUsuarios"> | Date | string
  }

  export type SolicitudPrecioWhereInput = {
    AND?: SolicitudPrecioWhereInput | SolicitudPrecioWhereInput[]
    OR?: SolicitudPrecioWhereInput[]
    NOT?: SolicitudPrecioWhereInput | SolicitudPrecioWhereInput[]
    id?: IntFilter<"SolicitudPrecio"> | number
    productoId?: IntFilter<"SolicitudPrecio"> | number
    precioSolicitado?: FloatFilter<"SolicitudPrecio"> | number
    solicitadoPorId?: IntFilter<"SolicitudPrecio"> | number
    estado?: EnumEstadoSolicitudFilter<"SolicitudPrecio"> | $Enums.EstadoSolicitud
    aprobadoPorId?: IntNullableFilter<"SolicitudPrecio"> | number | null
    fechaSolicitud?: DateTimeFilter<"SolicitudPrecio"> | Date | string
    fechaRespuesta?: DateTimeNullableFilter<"SolicitudPrecio"> | Date | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    solicitadoPor?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    aprobadoPor?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type SolicitudPrecioOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    estado?: SortOrder
    aprobadoPorId?: SortOrderInput | SortOrder
    fechaSolicitud?: SortOrder
    fechaRespuesta?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    solicitadoPor?: UsuarioOrderByWithRelationInput
    aprobadoPor?: UsuarioOrderByWithRelationInput
  }

  export type SolicitudPrecioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SolicitudPrecioWhereInput | SolicitudPrecioWhereInput[]
    OR?: SolicitudPrecioWhereInput[]
    NOT?: SolicitudPrecioWhereInput | SolicitudPrecioWhereInput[]
    productoId?: IntFilter<"SolicitudPrecio"> | number
    precioSolicitado?: FloatFilter<"SolicitudPrecio"> | number
    solicitadoPorId?: IntFilter<"SolicitudPrecio"> | number
    estado?: EnumEstadoSolicitudFilter<"SolicitudPrecio"> | $Enums.EstadoSolicitud
    aprobadoPorId?: IntNullableFilter<"SolicitudPrecio"> | number | null
    fechaSolicitud?: DateTimeFilter<"SolicitudPrecio"> | Date | string
    fechaRespuesta?: DateTimeNullableFilter<"SolicitudPrecio"> | Date | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    solicitadoPor?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    aprobadoPor?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type SolicitudPrecioOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    estado?: SortOrder
    aprobadoPorId?: SortOrderInput | SortOrder
    fechaSolicitud?: SortOrder
    fechaRespuesta?: SortOrderInput | SortOrder
    _count?: SolicitudPrecioCountOrderByAggregateInput
    _avg?: SolicitudPrecioAvgOrderByAggregateInput
    _max?: SolicitudPrecioMaxOrderByAggregateInput
    _min?: SolicitudPrecioMinOrderByAggregateInput
    _sum?: SolicitudPrecioSumOrderByAggregateInput
  }

  export type SolicitudPrecioScalarWhereWithAggregatesInput = {
    AND?: SolicitudPrecioScalarWhereWithAggregatesInput | SolicitudPrecioScalarWhereWithAggregatesInput[]
    OR?: SolicitudPrecioScalarWhereWithAggregatesInput[]
    NOT?: SolicitudPrecioScalarWhereWithAggregatesInput | SolicitudPrecioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SolicitudPrecio"> | number
    productoId?: IntWithAggregatesFilter<"SolicitudPrecio"> | number
    precioSolicitado?: FloatWithAggregatesFilter<"SolicitudPrecio"> | number
    solicitadoPorId?: IntWithAggregatesFilter<"SolicitudPrecio"> | number
    estado?: EnumEstadoSolicitudWithAggregatesFilter<"SolicitudPrecio"> | $Enums.EstadoSolicitud
    aprobadoPorId?: IntNullableWithAggregatesFilter<"SolicitudPrecio"> | number | null
    fechaSolicitud?: DateTimeWithAggregatesFilter<"SolicitudPrecio"> | Date | string
    fechaRespuesta?: DateTimeNullableWithAggregatesFilter<"SolicitudPrecio"> | Date | string | null
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    codigoProducto?: StringFilter<"Producto"> | string
    creadoEn?: DateTimeFilter<"Producto"> | Date | string
    actualizadoEn?: DateTimeFilter<"Producto"> | Date | string
    precioCostoActual?: FloatNullableFilter<"Producto"> | number | null
    stock?: StockListRelationFilter
    categorias?: CategoriaListRelationFilter
    ventas?: VentaProductoListRelationFilter
    HistorialStock?: HistorialStockListRelationFilter
    HistorialPrecio?: HistorialPrecioListRelationFilter
    TransferenciaProducto?: TransferenciaProductoListRelationFilter
    precios?: PrecioProductoListRelationFilter
    SolicitudPrecio?: SolicitudPrecioListRelationFilter
    solicitudesTransferencia?: SolicitudTransferenciaProductoListRelationFilter
    HistorialPrecioCosto?: HistorialPrecioCostoListRelationFilter
    AjusteStock?: AjusteStockListRelationFilter
    EliminacionProducto?: EliminacionProductoListRelationFilter
    EliminacionStock?: EliminacionStockListRelationFilter
    Garantia?: GarantiaListRelationFilter
    RegistroGarantia?: RegistroGarantiaListRelationFilter
    VentaEliminadaProducto?: VentaEliminadaProductoListRelationFilter
    Reparacion?: ReparacionListRelationFilter
  }

  export type ProductoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    codigoProducto?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    precioCostoActual?: SortOrderInput | SortOrder
    stock?: StockOrderByRelationAggregateInput
    categorias?: CategoriaOrderByRelationAggregateInput
    ventas?: VentaProductoOrderByRelationAggregateInput
    HistorialStock?: HistorialStockOrderByRelationAggregateInput
    HistorialPrecio?: HistorialPrecioOrderByRelationAggregateInput
    TransferenciaProducto?: TransferenciaProductoOrderByRelationAggregateInput
    precios?: PrecioProductoOrderByRelationAggregateInput
    SolicitudPrecio?: SolicitudPrecioOrderByRelationAggregateInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoOrderByRelationAggregateInput
    HistorialPrecioCosto?: HistorialPrecioCostoOrderByRelationAggregateInput
    AjusteStock?: AjusteStockOrderByRelationAggregateInput
    EliminacionProducto?: EliminacionProductoOrderByRelationAggregateInput
    EliminacionStock?: EliminacionStockOrderByRelationAggregateInput
    Garantia?: GarantiaOrderByRelationAggregateInput
    RegistroGarantia?: RegistroGarantiaOrderByRelationAggregateInput
    VentaEliminadaProducto?: VentaEliminadaProductoOrderByRelationAggregateInput
    Reparacion?: ReparacionOrderByRelationAggregateInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigoProducto?: string
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    creadoEn?: DateTimeFilter<"Producto"> | Date | string
    actualizadoEn?: DateTimeFilter<"Producto"> | Date | string
    precioCostoActual?: FloatNullableFilter<"Producto"> | number | null
    stock?: StockListRelationFilter
    categorias?: CategoriaListRelationFilter
    ventas?: VentaProductoListRelationFilter
    HistorialStock?: HistorialStockListRelationFilter
    HistorialPrecio?: HistorialPrecioListRelationFilter
    TransferenciaProducto?: TransferenciaProductoListRelationFilter
    precios?: PrecioProductoListRelationFilter
    SolicitudPrecio?: SolicitudPrecioListRelationFilter
    solicitudesTransferencia?: SolicitudTransferenciaProductoListRelationFilter
    HistorialPrecioCosto?: HistorialPrecioCostoListRelationFilter
    AjusteStock?: AjusteStockListRelationFilter
    EliminacionProducto?: EliminacionProductoListRelationFilter
    EliminacionStock?: EliminacionStockListRelationFilter
    Garantia?: GarantiaListRelationFilter
    RegistroGarantia?: RegistroGarantiaListRelationFilter
    VentaEliminadaProducto?: VentaEliminadaProductoListRelationFilter
    Reparacion?: ReparacionListRelationFilter
  }, "id" | "codigoProducto">

  export type ProductoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    codigoProducto?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    precioCostoActual?: SortOrderInput | SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Producto"> | number
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    codigoProducto?: StringWithAggregatesFilter<"Producto"> | string
    creadoEn?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    precioCostoActual?: FloatNullableWithAggregatesFilter<"Producto"> | number | null
  }

  export type HistorialPrecioCostoWhereInput = {
    AND?: HistorialPrecioCostoWhereInput | HistorialPrecioCostoWhereInput[]
    OR?: HistorialPrecioCostoWhereInput[]
    NOT?: HistorialPrecioCostoWhereInput | HistorialPrecioCostoWhereInput[]
    id?: IntFilter<"HistorialPrecioCosto"> | number
    productoId?: IntFilter<"HistorialPrecioCosto"> | number
    precioCostoAnterior?: FloatFilter<"HistorialPrecioCosto"> | number
    precioCostoNuevo?: FloatFilter<"HistorialPrecioCosto"> | number
    fechaCambio?: DateTimeFilter<"HistorialPrecioCosto"> | Date | string
    modificadoPorId?: IntNullableFilter<"HistorialPrecioCosto"> | number | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    modificadoPor?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type HistorialPrecioCostoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    fechaCambio?: SortOrder
    modificadoPorId?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    modificadoPor?: UsuarioOrderByWithRelationInput
  }

  export type HistorialPrecioCostoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialPrecioCostoWhereInput | HistorialPrecioCostoWhereInput[]
    OR?: HistorialPrecioCostoWhereInput[]
    NOT?: HistorialPrecioCostoWhereInput | HistorialPrecioCostoWhereInput[]
    productoId?: IntFilter<"HistorialPrecioCosto"> | number
    precioCostoAnterior?: FloatFilter<"HistorialPrecioCosto"> | number
    precioCostoNuevo?: FloatFilter<"HistorialPrecioCosto"> | number
    fechaCambio?: DateTimeFilter<"HistorialPrecioCosto"> | Date | string
    modificadoPorId?: IntNullableFilter<"HistorialPrecioCosto"> | number | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    modificadoPor?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type HistorialPrecioCostoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    fechaCambio?: SortOrder
    modificadoPorId?: SortOrderInput | SortOrder
    _count?: HistorialPrecioCostoCountOrderByAggregateInput
    _avg?: HistorialPrecioCostoAvgOrderByAggregateInput
    _max?: HistorialPrecioCostoMaxOrderByAggregateInput
    _min?: HistorialPrecioCostoMinOrderByAggregateInput
    _sum?: HistorialPrecioCostoSumOrderByAggregateInput
  }

  export type HistorialPrecioCostoScalarWhereWithAggregatesInput = {
    AND?: HistorialPrecioCostoScalarWhereWithAggregatesInput | HistorialPrecioCostoScalarWhereWithAggregatesInput[]
    OR?: HistorialPrecioCostoScalarWhereWithAggregatesInput[]
    NOT?: HistorialPrecioCostoScalarWhereWithAggregatesInput | HistorialPrecioCostoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialPrecioCosto"> | number
    productoId?: IntWithAggregatesFilter<"HistorialPrecioCosto"> | number
    precioCostoAnterior?: FloatWithAggregatesFilter<"HistorialPrecioCosto"> | number
    precioCostoNuevo?: FloatWithAggregatesFilter<"HistorialPrecioCosto"> | number
    fechaCambio?: DateTimeWithAggregatesFilter<"HistorialPrecioCosto"> | Date | string
    modificadoPorId?: IntNullableWithAggregatesFilter<"HistorialPrecioCosto"> | number | null
  }

  export type PrecioProductoWhereInput = {
    AND?: PrecioProductoWhereInput | PrecioProductoWhereInput[]
    OR?: PrecioProductoWhereInput[]
    NOT?: PrecioProductoWhereInput | PrecioProductoWhereInput[]
    id?: IntFilter<"PrecioProducto"> | number
    productoId?: IntNullableFilter<"PrecioProducto"> | number | null
    precio?: FloatFilter<"PrecioProducto"> | number
    creadoPorId?: IntNullableFilter<"PrecioProducto"> | number | null
    fechaCreacion?: DateTimeFilter<"PrecioProducto"> | Date | string
    estado?: EnumEstadoPrecioFilter<"PrecioProducto"> | $Enums.EstadoPrecio
    usado?: BoolFilter<"PrecioProducto"> | boolean
    tipo?: EnumTipoPrecioFilter<"PrecioProducto"> | $Enums.TipoPrecio
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
    creadoPor?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type PrecioProductoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrderInput | SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    estado?: SortOrder
    usado?: SortOrder
    tipo?: SortOrder
    producto?: ProductoOrderByWithRelationInput
    creadoPor?: UsuarioOrderByWithRelationInput
  }

  export type PrecioProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PrecioProductoWhereInput | PrecioProductoWhereInput[]
    OR?: PrecioProductoWhereInput[]
    NOT?: PrecioProductoWhereInput | PrecioProductoWhereInput[]
    productoId?: IntNullableFilter<"PrecioProducto"> | number | null
    precio?: FloatFilter<"PrecioProducto"> | number
    creadoPorId?: IntNullableFilter<"PrecioProducto"> | number | null
    fechaCreacion?: DateTimeFilter<"PrecioProducto"> | Date | string
    estado?: EnumEstadoPrecioFilter<"PrecioProducto"> | $Enums.EstadoPrecio
    usado?: BoolFilter<"PrecioProducto"> | boolean
    tipo?: EnumTipoPrecioFilter<"PrecioProducto"> | $Enums.TipoPrecio
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
    creadoPor?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type PrecioProductoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrderInput | SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrderInput | SortOrder
    fechaCreacion?: SortOrder
    estado?: SortOrder
    usado?: SortOrder
    tipo?: SortOrder
    _count?: PrecioProductoCountOrderByAggregateInput
    _avg?: PrecioProductoAvgOrderByAggregateInput
    _max?: PrecioProductoMaxOrderByAggregateInput
    _min?: PrecioProductoMinOrderByAggregateInput
    _sum?: PrecioProductoSumOrderByAggregateInput
  }

  export type PrecioProductoScalarWhereWithAggregatesInput = {
    AND?: PrecioProductoScalarWhereWithAggregatesInput | PrecioProductoScalarWhereWithAggregatesInput[]
    OR?: PrecioProductoScalarWhereWithAggregatesInput[]
    NOT?: PrecioProductoScalarWhereWithAggregatesInput | PrecioProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PrecioProducto"> | number
    productoId?: IntNullableWithAggregatesFilter<"PrecioProducto"> | number | null
    precio?: FloatWithAggregatesFilter<"PrecioProducto"> | number
    creadoPorId?: IntNullableWithAggregatesFilter<"PrecioProducto"> | number | null
    fechaCreacion?: DateTimeWithAggregatesFilter<"PrecioProducto"> | Date | string
    estado?: EnumEstadoPrecioWithAggregatesFilter<"PrecioProducto"> | $Enums.EstadoPrecio
    usado?: BoolWithAggregatesFilter<"PrecioProducto"> | boolean
    tipo?: EnumTipoPrecioWithAggregatesFilter<"PrecioProducto"> | $Enums.TipoPrecio
  }

  export type HistorialPrecioWhereInput = {
    AND?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    OR?: HistorialPrecioWhereInput[]
    NOT?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    id?: IntFilter<"HistorialPrecio"> | number
    productoId?: IntFilter<"HistorialPrecio"> | number
    precioAnterior?: FloatFilter<"HistorialPrecio"> | number
    precioNuevo?: FloatFilter<"HistorialPrecio"> | number
    fechaCambio?: DateTimeFilter<"HistorialPrecio"> | Date | string
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
  }

  export type HistorialPrecioOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
    fechaCambio?: SortOrder
    producto?: ProductoOrderByWithRelationInput
  }

  export type HistorialPrecioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    OR?: HistorialPrecioWhereInput[]
    NOT?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    productoId?: IntFilter<"HistorialPrecio"> | number
    precioAnterior?: FloatFilter<"HistorialPrecio"> | number
    precioNuevo?: FloatFilter<"HistorialPrecio"> | number
    fechaCambio?: DateTimeFilter<"HistorialPrecio"> | Date | string
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
  }, "id">

  export type HistorialPrecioOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
    fechaCambio?: SortOrder
    _count?: HistorialPrecioCountOrderByAggregateInput
    _avg?: HistorialPrecioAvgOrderByAggregateInput
    _max?: HistorialPrecioMaxOrderByAggregateInput
    _min?: HistorialPrecioMinOrderByAggregateInput
    _sum?: HistorialPrecioSumOrderByAggregateInput
  }

  export type HistorialPrecioScalarWhereWithAggregatesInput = {
    AND?: HistorialPrecioScalarWhereWithAggregatesInput | HistorialPrecioScalarWhereWithAggregatesInput[]
    OR?: HistorialPrecioScalarWhereWithAggregatesInput[]
    NOT?: HistorialPrecioScalarWhereWithAggregatesInput | HistorialPrecioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialPrecio"> | number
    productoId?: IntWithAggregatesFilter<"HistorialPrecio"> | number
    precioAnterior?: FloatWithAggregatesFilter<"HistorialPrecio"> | number
    precioNuevo?: FloatWithAggregatesFilter<"HistorialPrecio"> | number
    fechaCambio?: DateTimeWithAggregatesFilter<"HistorialPrecio"> | Date | string
  }

  export type AjusteStockWhereInput = {
    AND?: AjusteStockWhereInput | AjusteStockWhereInput[]
    OR?: AjusteStockWhereInput[]
    NOT?: AjusteStockWhereInput | AjusteStockWhereInput[]
    id?: IntFilter<"AjusteStock"> | number
    productoId?: IntFilter<"AjusteStock"> | number
    stockId?: IntNullableFilter<"AjusteStock"> | number | null
    cantidadAjustada?: IntFilter<"AjusteStock"> | number
    tipoAjuste?: EnumTipoAjusteFilter<"AjusteStock"> | $Enums.TipoAjuste
    fechaHora?: DateTimeFilter<"AjusteStock"> | Date | string
    usuarioId?: IntNullableFilter<"AjusteStock"> | number | null
    descripcion?: StringNullableFilter<"AjusteStock"> | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    stock?: XOR<StockNullableRelationFilter, StockWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type AjusteStockOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrderInput | SortOrder
    cantidadAjustada?: SortOrder
    tipoAjuste?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    stock?: StockOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type AjusteStockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AjusteStockWhereInput | AjusteStockWhereInput[]
    OR?: AjusteStockWhereInput[]
    NOT?: AjusteStockWhereInput | AjusteStockWhereInput[]
    productoId?: IntFilter<"AjusteStock"> | number
    stockId?: IntNullableFilter<"AjusteStock"> | number | null
    cantidadAjustada?: IntFilter<"AjusteStock"> | number
    tipoAjuste?: EnumTipoAjusteFilter<"AjusteStock"> | $Enums.TipoAjuste
    fechaHora?: DateTimeFilter<"AjusteStock"> | Date | string
    usuarioId?: IntNullableFilter<"AjusteStock"> | number | null
    descripcion?: StringNullableFilter<"AjusteStock"> | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    stock?: XOR<StockNullableRelationFilter, StockWhereInput> | null
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type AjusteStockOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrderInput | SortOrder
    cantidadAjustada?: SortOrder
    tipoAjuste?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: AjusteStockCountOrderByAggregateInput
    _avg?: AjusteStockAvgOrderByAggregateInput
    _max?: AjusteStockMaxOrderByAggregateInput
    _min?: AjusteStockMinOrderByAggregateInput
    _sum?: AjusteStockSumOrderByAggregateInput
  }

  export type AjusteStockScalarWhereWithAggregatesInput = {
    AND?: AjusteStockScalarWhereWithAggregatesInput | AjusteStockScalarWhereWithAggregatesInput[]
    OR?: AjusteStockScalarWhereWithAggregatesInput[]
    NOT?: AjusteStockScalarWhereWithAggregatesInput | AjusteStockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AjusteStock"> | number
    productoId?: IntWithAggregatesFilter<"AjusteStock"> | number
    stockId?: IntNullableWithAggregatesFilter<"AjusteStock"> | number | null
    cantidadAjustada?: IntWithAggregatesFilter<"AjusteStock"> | number
    tipoAjuste?: EnumTipoAjusteWithAggregatesFilter<"AjusteStock"> | $Enums.TipoAjuste
    fechaHora?: DateTimeWithAggregatesFilter<"AjusteStock"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"AjusteStock"> | number | null
    descripcion?: StringNullableWithAggregatesFilter<"AjusteStock"> | string | null
  }

  export type EliminacionStockWhereInput = {
    AND?: EliminacionStockWhereInput | EliminacionStockWhereInput[]
    OR?: EliminacionStockWhereInput[]
    NOT?: EliminacionStockWhereInput | EliminacionStockWhereInput[]
    id?: IntFilter<"EliminacionStock"> | number
    productoId?: IntFilter<"EliminacionStock"> | number
    fechaHora?: DateTimeFilter<"EliminacionStock"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionStock"> | number | null
    sucursalId?: IntNullableFilter<"EliminacionStock"> | number | null
    motivo?: StringNullableFilter<"EliminacionStock"> | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
  }

  export type EliminacionStockOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    sucursalId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
  }

  export type EliminacionStockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EliminacionStockWhereInput | EliminacionStockWhereInput[]
    OR?: EliminacionStockWhereInput[]
    NOT?: EliminacionStockWhereInput | EliminacionStockWhereInput[]
    productoId?: IntFilter<"EliminacionStock"> | number
    fechaHora?: DateTimeFilter<"EliminacionStock"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionStock"> | number | null
    sucursalId?: IntNullableFilter<"EliminacionStock"> | number | null
    motivo?: StringNullableFilter<"EliminacionStock"> | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
  }, "id">

  export type EliminacionStockOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    sucursalId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    _count?: EliminacionStockCountOrderByAggregateInput
    _avg?: EliminacionStockAvgOrderByAggregateInput
    _max?: EliminacionStockMaxOrderByAggregateInput
    _min?: EliminacionStockMinOrderByAggregateInput
    _sum?: EliminacionStockSumOrderByAggregateInput
  }

  export type EliminacionStockScalarWhereWithAggregatesInput = {
    AND?: EliminacionStockScalarWhereWithAggregatesInput | EliminacionStockScalarWhereWithAggregatesInput[]
    OR?: EliminacionStockScalarWhereWithAggregatesInput[]
    NOT?: EliminacionStockScalarWhereWithAggregatesInput | EliminacionStockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EliminacionStock"> | number
    productoId?: IntWithAggregatesFilter<"EliminacionStock"> | number
    fechaHora?: DateTimeWithAggregatesFilter<"EliminacionStock"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"EliminacionStock"> | number | null
    sucursalId?: IntNullableWithAggregatesFilter<"EliminacionStock"> | number | null
    motivo?: StringNullableWithAggregatesFilter<"EliminacionStock"> | string | null
  }

  export type EliminacionProductoWhereInput = {
    AND?: EliminacionProductoWhereInput | EliminacionProductoWhereInput[]
    OR?: EliminacionProductoWhereInput[]
    NOT?: EliminacionProductoWhereInput | EliminacionProductoWhereInput[]
    id?: IntFilter<"EliminacionProducto"> | number
    productoId?: IntFilter<"EliminacionProducto"> | number
    fechaHora?: DateTimeFilter<"EliminacionProducto"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionProducto"> | number | null
    motivo?: StringNullableFilter<"EliminacionProducto"> | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type EliminacionProductoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type EliminacionProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EliminacionProductoWhereInput | EliminacionProductoWhereInput[]
    OR?: EliminacionProductoWhereInput[]
    NOT?: EliminacionProductoWhereInput | EliminacionProductoWhereInput[]
    productoId?: IntFilter<"EliminacionProducto"> | number
    fechaHora?: DateTimeFilter<"EliminacionProducto"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionProducto"> | number | null
    motivo?: StringNullableFilter<"EliminacionProducto"> | string | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type EliminacionProductoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    _count?: EliminacionProductoCountOrderByAggregateInput
    _avg?: EliminacionProductoAvgOrderByAggregateInput
    _max?: EliminacionProductoMaxOrderByAggregateInput
    _min?: EliminacionProductoMinOrderByAggregateInput
    _sum?: EliminacionProductoSumOrderByAggregateInput
  }

  export type EliminacionProductoScalarWhereWithAggregatesInput = {
    AND?: EliminacionProductoScalarWhereWithAggregatesInput | EliminacionProductoScalarWhereWithAggregatesInput[]
    OR?: EliminacionProductoScalarWhereWithAggregatesInput[]
    NOT?: EliminacionProductoScalarWhereWithAggregatesInput | EliminacionProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EliminacionProducto"> | number
    productoId?: IntWithAggregatesFilter<"EliminacionProducto"> | number
    fechaHora?: DateTimeWithAggregatesFilter<"EliminacionProducto"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"EliminacionProducto"> | number | null
    motivo?: StringNullableWithAggregatesFilter<"EliminacionProducto"> | string | null
  }

  export type EliminacionClienteWhereInput = {
    AND?: EliminacionClienteWhereInput | EliminacionClienteWhereInput[]
    OR?: EliminacionClienteWhereInput[]
    NOT?: EliminacionClienteWhereInput | EliminacionClienteWhereInput[]
    id?: IntFilter<"EliminacionCliente"> | number
    clienteId?: IntFilter<"EliminacionCliente"> | number
    fechaHora?: DateTimeFilter<"EliminacionCliente"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionCliente"> | number | null
    motivo?: StringNullableFilter<"EliminacionCliente"> | string | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type EliminacionClienteOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type EliminacionClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EliminacionClienteWhereInput | EliminacionClienteWhereInput[]
    OR?: EliminacionClienteWhereInput[]
    NOT?: EliminacionClienteWhereInput | EliminacionClienteWhereInput[]
    clienteId?: IntFilter<"EliminacionCliente"> | number
    fechaHora?: DateTimeFilter<"EliminacionCliente"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionCliente"> | number | null
    motivo?: StringNullableFilter<"EliminacionCliente"> | string | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type EliminacionClienteOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    _count?: EliminacionClienteCountOrderByAggregateInput
    _avg?: EliminacionClienteAvgOrderByAggregateInput
    _max?: EliminacionClienteMaxOrderByAggregateInput
    _min?: EliminacionClienteMinOrderByAggregateInput
    _sum?: EliminacionClienteSumOrderByAggregateInput
  }

  export type EliminacionClienteScalarWhereWithAggregatesInput = {
    AND?: EliminacionClienteScalarWhereWithAggregatesInput | EliminacionClienteScalarWhereWithAggregatesInput[]
    OR?: EliminacionClienteScalarWhereWithAggregatesInput[]
    NOT?: EliminacionClienteScalarWhereWithAggregatesInput | EliminacionClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EliminacionCliente"> | number
    clienteId?: IntWithAggregatesFilter<"EliminacionCliente"> | number
    fechaHora?: DateTimeWithAggregatesFilter<"EliminacionCliente"> | Date | string
    usuarioId?: IntNullableWithAggregatesFilter<"EliminacionCliente"> | number | null
    motivo?: StringNullableWithAggregatesFilter<"EliminacionCliente"> | string | null
  }

  export type StockWhereInput = {
    AND?: StockWhereInput | StockWhereInput[]
    OR?: StockWhereInput[]
    NOT?: StockWhereInput | StockWhereInput[]
    id?: IntFilter<"Stock"> | number
    productoId?: IntFilter<"Stock"> | number
    cantidad?: IntFilter<"Stock"> | number
    costoTotal?: FloatFilter<"Stock"> | number
    creadoEn?: DateTimeFilter<"Stock"> | Date | string
    fechaIngreso?: DateTimeFilter<"Stock"> | Date | string
    fechaVencimiento?: DateTimeNullableFilter<"Stock"> | Date | string | null
    precioCosto?: FloatFilter<"Stock"> | number
    entregaStockId?: IntNullableFilter<"Stock"> | number | null
    sucursalId?: IntFilter<"Stock"> | number
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    entregaStock?: XOR<EntregaStockNullableRelationFilter, EntregaStockWhereInput> | null
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    Vencimiento?: VencimientoListRelationFilter
    AjusteStock?: AjusteStockListRelationFilter
  }

  export type StockOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    creadoEn?: SortOrder
    fechaIngreso?: SortOrder
    fechaVencimiento?: SortOrderInput | SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrderInput | SortOrder
    sucursalId?: SortOrder
    producto?: ProductoOrderByWithRelationInput
    entregaStock?: EntregaStockOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    Vencimiento?: VencimientoOrderByRelationAggregateInput
    AjusteStock?: AjusteStockOrderByRelationAggregateInput
  }

  export type StockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StockWhereInput | StockWhereInput[]
    OR?: StockWhereInput[]
    NOT?: StockWhereInput | StockWhereInput[]
    productoId?: IntFilter<"Stock"> | number
    cantidad?: IntFilter<"Stock"> | number
    costoTotal?: FloatFilter<"Stock"> | number
    creadoEn?: DateTimeFilter<"Stock"> | Date | string
    fechaIngreso?: DateTimeFilter<"Stock"> | Date | string
    fechaVencimiento?: DateTimeNullableFilter<"Stock"> | Date | string | null
    precioCosto?: FloatFilter<"Stock"> | number
    entregaStockId?: IntNullableFilter<"Stock"> | number | null
    sucursalId?: IntFilter<"Stock"> | number
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    entregaStock?: XOR<EntregaStockNullableRelationFilter, EntregaStockWhereInput> | null
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    Vencimiento?: VencimientoListRelationFilter
    AjusteStock?: AjusteStockListRelationFilter
  }, "id">

  export type StockOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    creadoEn?: SortOrder
    fechaIngreso?: SortOrder
    fechaVencimiento?: SortOrderInput | SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrderInput | SortOrder
    sucursalId?: SortOrder
    _count?: StockCountOrderByAggregateInput
    _avg?: StockAvgOrderByAggregateInput
    _max?: StockMaxOrderByAggregateInput
    _min?: StockMinOrderByAggregateInput
    _sum?: StockSumOrderByAggregateInput
  }

  export type StockScalarWhereWithAggregatesInput = {
    AND?: StockScalarWhereWithAggregatesInput | StockScalarWhereWithAggregatesInput[]
    OR?: StockScalarWhereWithAggregatesInput[]
    NOT?: StockScalarWhereWithAggregatesInput | StockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Stock"> | number
    productoId?: IntWithAggregatesFilter<"Stock"> | number
    cantidad?: IntWithAggregatesFilter<"Stock"> | number
    costoTotal?: FloatWithAggregatesFilter<"Stock"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"Stock"> | Date | string
    fechaIngreso?: DateTimeWithAggregatesFilter<"Stock"> | Date | string
    fechaVencimiento?: DateTimeNullableWithAggregatesFilter<"Stock"> | Date | string | null
    precioCosto?: FloatWithAggregatesFilter<"Stock"> | number
    entregaStockId?: IntNullableWithAggregatesFilter<"Stock"> | number | null
    sucursalId?: IntWithAggregatesFilter<"Stock"> | number
  }

  export type SucursalWhereInput = {
    AND?: SucursalWhereInput | SucursalWhereInput[]
    OR?: SucursalWhereInput[]
    NOT?: SucursalWhereInput | SucursalWhereInput[]
    id?: IntFilter<"Sucursal"> | number
    nombre?: StringFilter<"Sucursal"> | string
    direccion?: StringNullableFilter<"Sucursal"> | string | null
    telefono?: StringNullableFilter<"Sucursal"> | string | null
    pbx?: StringNullableFilter<"Sucursal"> | string | null
    creadoEn?: DateTimeFilter<"Sucursal"> | Date | string
    actualizadoEn?: DateTimeFilter<"Sucursal"> | Date | string
    tipoSucursal?: EnumTipoSucursalFilter<"Sucursal"> | $Enums.TipoSucursal
    estadoOperacion?: BoolFilter<"Sucursal"> | boolean
    productos?: StockListRelationFilter
    usuarios?: UsuarioListRelationFilter
    Venta?: VentaListRelationFilter
    TransferenciaProducto?: TransferenciaProductoListRelationFilter
    TransferenciaProductoDestino?: TransferenciaProductoListRelationFilter
    EntregaStock?: EntregaStockListRelationFilter
    solicitudesOrigen?: SolicitudTransferenciaProductoListRelationFilter
    solicitudesDestino?: SolicitudTransferenciaProductoListRelationFilter
    EliminacionStock?: EliminacionStockListRelationFilter
    RegistroCaja?: RegistroCajaListRelationFilter
    Deposito?: DepositoListRelationFilter
    Egreso?: EgresoListRelationFilter
    SucursalSaldo?: XOR<SucursalSaldoNullableRelationFilter, SucursalSaldoWhereInput> | null
    VentaEliminada?: VentaEliminadaListRelationFilter
    VentaCuota?: VentaCuotaListRelationFilter
    PlantillaComprobante?: PlantillaComprobanteListRelationFilter
    Reparacion?: ReparacionListRelationFilter
    MetaUsuario?: MetaUsuarioListRelationFilter
    MetaCobros?: MetaCobrosListRelationFilter
    DepositoCobro?: DepositoCobroListRelationFilter
  }

  export type SucursalOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    pbx?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    tipoSucursal?: SortOrder
    estadoOperacion?: SortOrder
    productos?: StockOrderByRelationAggregateInput
    usuarios?: UsuarioOrderByRelationAggregateInput
    Venta?: VentaOrderByRelationAggregateInput
    TransferenciaProducto?: TransferenciaProductoOrderByRelationAggregateInput
    TransferenciaProductoDestino?: TransferenciaProductoOrderByRelationAggregateInput
    EntregaStock?: EntregaStockOrderByRelationAggregateInput
    solicitudesOrigen?: SolicitudTransferenciaProductoOrderByRelationAggregateInput
    solicitudesDestino?: SolicitudTransferenciaProductoOrderByRelationAggregateInput
    EliminacionStock?: EliminacionStockOrderByRelationAggregateInput
    RegistroCaja?: RegistroCajaOrderByRelationAggregateInput
    Deposito?: DepositoOrderByRelationAggregateInput
    Egreso?: EgresoOrderByRelationAggregateInput
    SucursalSaldo?: SucursalSaldoOrderByWithRelationInput
    VentaEliminada?: VentaEliminadaOrderByRelationAggregateInput
    VentaCuota?: VentaCuotaOrderByRelationAggregateInput
    PlantillaComprobante?: PlantillaComprobanteOrderByRelationAggregateInput
    Reparacion?: ReparacionOrderByRelationAggregateInput
    MetaUsuario?: MetaUsuarioOrderByRelationAggregateInput
    MetaCobros?: MetaCobrosOrderByRelationAggregateInput
    DepositoCobro?: DepositoCobroOrderByRelationAggregateInput
  }

  export type SucursalWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SucursalWhereInput | SucursalWhereInput[]
    OR?: SucursalWhereInput[]
    NOT?: SucursalWhereInput | SucursalWhereInput[]
    nombre?: StringFilter<"Sucursal"> | string
    direccion?: StringNullableFilter<"Sucursal"> | string | null
    telefono?: StringNullableFilter<"Sucursal"> | string | null
    pbx?: StringNullableFilter<"Sucursal"> | string | null
    creadoEn?: DateTimeFilter<"Sucursal"> | Date | string
    actualizadoEn?: DateTimeFilter<"Sucursal"> | Date | string
    tipoSucursal?: EnumTipoSucursalFilter<"Sucursal"> | $Enums.TipoSucursal
    estadoOperacion?: BoolFilter<"Sucursal"> | boolean
    productos?: StockListRelationFilter
    usuarios?: UsuarioListRelationFilter
    Venta?: VentaListRelationFilter
    TransferenciaProducto?: TransferenciaProductoListRelationFilter
    TransferenciaProductoDestino?: TransferenciaProductoListRelationFilter
    EntregaStock?: EntregaStockListRelationFilter
    solicitudesOrigen?: SolicitudTransferenciaProductoListRelationFilter
    solicitudesDestino?: SolicitudTransferenciaProductoListRelationFilter
    EliminacionStock?: EliminacionStockListRelationFilter
    RegistroCaja?: RegistroCajaListRelationFilter
    Deposito?: DepositoListRelationFilter
    Egreso?: EgresoListRelationFilter
    SucursalSaldo?: XOR<SucursalSaldoNullableRelationFilter, SucursalSaldoWhereInput> | null
    VentaEliminada?: VentaEliminadaListRelationFilter
    VentaCuota?: VentaCuotaListRelationFilter
    PlantillaComprobante?: PlantillaComprobanteListRelationFilter
    Reparacion?: ReparacionListRelationFilter
    MetaUsuario?: MetaUsuarioListRelationFilter
    MetaCobros?: MetaCobrosListRelationFilter
    DepositoCobro?: DepositoCobroListRelationFilter
  }, "id">

  export type SucursalOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    pbx?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    tipoSucursal?: SortOrder
    estadoOperacion?: SortOrder
    _count?: SucursalCountOrderByAggregateInput
    _avg?: SucursalAvgOrderByAggregateInput
    _max?: SucursalMaxOrderByAggregateInput
    _min?: SucursalMinOrderByAggregateInput
    _sum?: SucursalSumOrderByAggregateInput
  }

  export type SucursalScalarWhereWithAggregatesInput = {
    AND?: SucursalScalarWhereWithAggregatesInput | SucursalScalarWhereWithAggregatesInput[]
    OR?: SucursalScalarWhereWithAggregatesInput[]
    NOT?: SucursalScalarWhereWithAggregatesInput | SucursalScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Sucursal"> | number
    nombre?: StringWithAggregatesFilter<"Sucursal"> | string
    direccion?: StringNullableWithAggregatesFilter<"Sucursal"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Sucursal"> | string | null
    pbx?: StringNullableWithAggregatesFilter<"Sucursal"> | string | null
    creadoEn?: DateTimeWithAggregatesFilter<"Sucursal"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Sucursal"> | Date | string
    tipoSucursal?: EnumTipoSucursalWithAggregatesFilter<"Sucursal"> | $Enums.TipoSucursal
    estadoOperacion?: BoolWithAggregatesFilter<"Sucursal"> | boolean
  }

  export type EntregaStockWhereInput = {
    AND?: EntregaStockWhereInput | EntregaStockWhereInput[]
    OR?: EntregaStockWhereInput[]
    NOT?: EntregaStockWhereInput | EntregaStockWhereInput[]
    id?: IntFilter<"EntregaStock"> | number
    proveedorId?: IntNullableFilter<"EntregaStock"> | number | null
    montoTotal?: FloatFilter<"EntregaStock"> | number
    fechaEntrega?: DateTimeFilter<"EntregaStock"> | Date | string
    recibidoPorId?: IntNullableFilter<"EntregaStock"> | number | null
    sucursalId?: IntNullableFilter<"EntregaStock"> | number | null
    proveedor?: XOR<ProveedorNullableRelationFilter, ProveedorWhereInput> | null
    stockEntregado?: StockListRelationFilter
    usuarioRecibido?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
  }

  export type EntregaStockOrderByWithRelationInput = {
    id?: SortOrder
    proveedorId?: SortOrderInput | SortOrder
    montoTotal?: SortOrder
    fechaEntrega?: SortOrder
    recibidoPorId?: SortOrderInput | SortOrder
    sucursalId?: SortOrderInput | SortOrder
    proveedor?: ProveedorOrderByWithRelationInput
    stockEntregado?: StockOrderByRelationAggregateInput
    usuarioRecibido?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
  }

  export type EntregaStockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EntregaStockWhereInput | EntregaStockWhereInput[]
    OR?: EntregaStockWhereInput[]
    NOT?: EntregaStockWhereInput | EntregaStockWhereInput[]
    proveedorId?: IntNullableFilter<"EntregaStock"> | number | null
    montoTotal?: FloatFilter<"EntregaStock"> | number
    fechaEntrega?: DateTimeFilter<"EntregaStock"> | Date | string
    recibidoPorId?: IntNullableFilter<"EntregaStock"> | number | null
    sucursalId?: IntNullableFilter<"EntregaStock"> | number | null
    proveedor?: XOR<ProveedorNullableRelationFilter, ProveedorWhereInput> | null
    stockEntregado?: StockListRelationFilter
    usuarioRecibido?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    sucursal?: XOR<SucursalNullableRelationFilter, SucursalWhereInput> | null
  }, "id">

  export type EntregaStockOrderByWithAggregationInput = {
    id?: SortOrder
    proveedorId?: SortOrderInput | SortOrder
    montoTotal?: SortOrder
    fechaEntrega?: SortOrder
    recibidoPorId?: SortOrderInput | SortOrder
    sucursalId?: SortOrderInput | SortOrder
    _count?: EntregaStockCountOrderByAggregateInput
    _avg?: EntregaStockAvgOrderByAggregateInput
    _max?: EntregaStockMaxOrderByAggregateInput
    _min?: EntregaStockMinOrderByAggregateInput
    _sum?: EntregaStockSumOrderByAggregateInput
  }

  export type EntregaStockScalarWhereWithAggregatesInput = {
    AND?: EntregaStockScalarWhereWithAggregatesInput | EntregaStockScalarWhereWithAggregatesInput[]
    OR?: EntregaStockScalarWhereWithAggregatesInput[]
    NOT?: EntregaStockScalarWhereWithAggregatesInput | EntregaStockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EntregaStock"> | number
    proveedorId?: IntNullableWithAggregatesFilter<"EntregaStock"> | number | null
    montoTotal?: FloatWithAggregatesFilter<"EntregaStock"> | number
    fechaEntrega?: DateTimeWithAggregatesFilter<"EntregaStock"> | Date | string
    recibidoPorId?: IntNullableWithAggregatesFilter<"EntregaStock"> | number | null
    sucursalId?: IntNullableWithAggregatesFilter<"EntregaStock"> | number | null
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    rol?: EnumRolFilter<"Usuario"> | $Enums.Rol
    contrasena?: StringFilter<"Usuario"> | string
    activo?: BoolFilter<"Usuario"> | boolean
    correo?: StringFilter<"Usuario"> | string
    sucursalId?: IntFilter<"Usuario"> | number
    fecha_creacion?: DateTimeFilter<"Usuario"> | Date | string
    fecha_actualizacion?: DateTimeFilter<"Usuario"> | Date | string
    entregasRecibidas?: EntregaStockListRelationFilter
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    TransferenciaProducto?: TransferenciaProductoListRelationFilter
    PrecioProducto?: PrecioProductoListRelationFilter
    solicitudesPrecio?: SolicitudPrecioListRelationFilter
    solicitudesAprobadas?: SolicitudPrecioListRelationFilter
    notificacionesEnviadas?: NotificacionListRelationFilter
    notificacionesRecibidas?: NotificacionListRelationFilter
    notificacionesUsuarios?: NotificacionesUsuariosListRelationFilter
    solicitudesEnviadas?: SolicitudTransferenciaProductoListRelationFilter
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoListRelationFilter
    HistorialPrecioCosto?: HistorialPrecioCostoListRelationFilter
    AjusteStock?: AjusteStockListRelationFilter
    EliminacionProducto?: EliminacionProductoListRelationFilter
    EliminacionCliente?: EliminacionClienteListRelationFilter
    EliminacionStock?: EliminacionStockListRelationFilter
    RegistroGarantia?: RegistroGarantiaListRelationFilter
    Garantia?: GarantiaListRelationFilter
    RegistroCaja?: RegistroCajaListRelationFilter
    Deposito?: DepositoListRelationFilter
    Egreso?: EgresoListRelationFilter
    VentaEliminada?: VentaEliminadaListRelationFilter
    VentaCuota?: VentaCuotaListRelationFilter
    Cuota?: CuotaListRelationFilter
    Reparacion?: ReparacionListRelationFilter
    RegistroReparacion?: RegistroReparacionListRelationFilter
    MetaUsuario?: MetaUsuarioListRelationFilter
    MetaCobros?: MetaCobrosListRelationFilter
    DepositoCobro?: DepositoCobroListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    rol?: SortOrder
    contrasena?: SortOrder
    activo?: SortOrder
    correo?: SortOrder
    sucursalId?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
    entregasRecibidas?: EntregaStockOrderByRelationAggregateInput
    sucursal?: SucursalOrderByWithRelationInput
    TransferenciaProducto?: TransferenciaProductoOrderByRelationAggregateInput
    PrecioProducto?: PrecioProductoOrderByRelationAggregateInput
    solicitudesPrecio?: SolicitudPrecioOrderByRelationAggregateInput
    solicitudesAprobadas?: SolicitudPrecioOrderByRelationAggregateInput
    notificacionesEnviadas?: NotificacionOrderByRelationAggregateInput
    notificacionesRecibidas?: NotificacionOrderByRelationAggregateInput
    notificacionesUsuarios?: NotificacionesUsuariosOrderByRelationAggregateInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoOrderByRelationAggregateInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoOrderByRelationAggregateInput
    HistorialPrecioCosto?: HistorialPrecioCostoOrderByRelationAggregateInput
    AjusteStock?: AjusteStockOrderByRelationAggregateInput
    EliminacionProducto?: EliminacionProductoOrderByRelationAggregateInput
    EliminacionCliente?: EliminacionClienteOrderByRelationAggregateInput
    EliminacionStock?: EliminacionStockOrderByRelationAggregateInput
    RegistroGarantia?: RegistroGarantiaOrderByRelationAggregateInput
    Garantia?: GarantiaOrderByRelationAggregateInput
    RegistroCaja?: RegistroCajaOrderByRelationAggregateInput
    Deposito?: DepositoOrderByRelationAggregateInput
    Egreso?: EgresoOrderByRelationAggregateInput
    VentaEliminada?: VentaEliminadaOrderByRelationAggregateInput
    VentaCuota?: VentaCuotaOrderByRelationAggregateInput
    Cuota?: CuotaOrderByRelationAggregateInput
    Reparacion?: ReparacionOrderByRelationAggregateInput
    RegistroReparacion?: RegistroReparacionOrderByRelationAggregateInput
    MetaUsuario?: MetaUsuarioOrderByRelationAggregateInput
    MetaCobros?: MetaCobrosOrderByRelationAggregateInput
    DepositoCobro?: DepositoCobroOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    rol?: EnumRolFilter<"Usuario"> | $Enums.Rol
    contrasena?: StringFilter<"Usuario"> | string
    activo?: BoolFilter<"Usuario"> | boolean
    sucursalId?: IntFilter<"Usuario"> | number
    fecha_creacion?: DateTimeFilter<"Usuario"> | Date | string
    fecha_actualizacion?: DateTimeFilter<"Usuario"> | Date | string
    entregasRecibidas?: EntregaStockListRelationFilter
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    TransferenciaProducto?: TransferenciaProductoListRelationFilter
    PrecioProducto?: PrecioProductoListRelationFilter
    solicitudesPrecio?: SolicitudPrecioListRelationFilter
    solicitudesAprobadas?: SolicitudPrecioListRelationFilter
    notificacionesEnviadas?: NotificacionListRelationFilter
    notificacionesRecibidas?: NotificacionListRelationFilter
    notificacionesUsuarios?: NotificacionesUsuariosListRelationFilter
    solicitudesEnviadas?: SolicitudTransferenciaProductoListRelationFilter
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoListRelationFilter
    HistorialPrecioCosto?: HistorialPrecioCostoListRelationFilter
    AjusteStock?: AjusteStockListRelationFilter
    EliminacionProducto?: EliminacionProductoListRelationFilter
    EliminacionCliente?: EliminacionClienteListRelationFilter
    EliminacionStock?: EliminacionStockListRelationFilter
    RegistroGarantia?: RegistroGarantiaListRelationFilter
    Garantia?: GarantiaListRelationFilter
    RegistroCaja?: RegistroCajaListRelationFilter
    Deposito?: DepositoListRelationFilter
    Egreso?: EgresoListRelationFilter
    VentaEliminada?: VentaEliminadaListRelationFilter
    VentaCuota?: VentaCuotaListRelationFilter
    Cuota?: CuotaListRelationFilter
    Reparacion?: ReparacionListRelationFilter
    RegistroReparacion?: RegistroReparacionListRelationFilter
    MetaUsuario?: MetaUsuarioListRelationFilter
    MetaCobros?: MetaCobrosListRelationFilter
    DepositoCobro?: DepositoCobroListRelationFilter
  }, "id" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    rol?: SortOrder
    contrasena?: SortOrder
    activo?: SortOrder
    correo?: SortOrder
    sucursalId?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    rol?: EnumRolWithAggregatesFilter<"Usuario"> | $Enums.Rol
    contrasena?: StringWithAggregatesFilter<"Usuario"> | string
    activo?: BoolWithAggregatesFilter<"Usuario"> | boolean
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    sucursalId?: IntWithAggregatesFilter<"Usuario"> | number
    fecha_creacion?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    fecha_actualizacion?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type MetaUsuarioWhereInput = {
    AND?: MetaUsuarioWhereInput | MetaUsuarioWhereInput[]
    OR?: MetaUsuarioWhereInput[]
    NOT?: MetaUsuarioWhereInput | MetaUsuarioWhereInput[]
    id?: IntFilter<"MetaUsuario"> | number
    usuarioId?: IntFilter<"MetaUsuario"> | number
    sucursalId?: IntFilter<"MetaUsuario"> | number
    fechaInicio?: DateTimeFilter<"MetaUsuario"> | Date | string
    fechaFin?: DateTimeFilter<"MetaUsuario"> | Date | string
    montoMeta?: FloatFilter<"MetaUsuario"> | number
    montoActual?: FloatFilter<"MetaUsuario"> | number
    cumplida?: BoolFilter<"MetaUsuario"> | boolean
    fechaCumplida?: DateTimeNullableFilter<"MetaUsuario"> | Date | string | null
    numeroVentas?: FloatFilter<"MetaUsuario"> | number
    tituloMeta?: StringNullableFilter<"MetaUsuario"> | string | null
    estado?: EnumEstadoMetaTiendaFilter<"MetaUsuario"> | $Enums.EstadoMetaTienda
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
  }

  export type MetaUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrderInput | SortOrder
    numeroVentas?: SortOrder
    tituloMeta?: SortOrderInput | SortOrder
    estado?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
  }

  export type MetaUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MetaUsuarioWhereInput | MetaUsuarioWhereInput[]
    OR?: MetaUsuarioWhereInput[]
    NOT?: MetaUsuarioWhereInput | MetaUsuarioWhereInput[]
    usuarioId?: IntFilter<"MetaUsuario"> | number
    sucursalId?: IntFilter<"MetaUsuario"> | number
    fechaInicio?: DateTimeFilter<"MetaUsuario"> | Date | string
    fechaFin?: DateTimeFilter<"MetaUsuario"> | Date | string
    montoMeta?: FloatFilter<"MetaUsuario"> | number
    montoActual?: FloatFilter<"MetaUsuario"> | number
    cumplida?: BoolFilter<"MetaUsuario"> | boolean
    fechaCumplida?: DateTimeNullableFilter<"MetaUsuario"> | Date | string | null
    numeroVentas?: FloatFilter<"MetaUsuario"> | number
    tituloMeta?: StringNullableFilter<"MetaUsuario"> | string | null
    estado?: EnumEstadoMetaTiendaFilter<"MetaUsuario"> | $Enums.EstadoMetaTienda
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
  }, "id">

  export type MetaUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrderInput | SortOrder
    numeroVentas?: SortOrder
    tituloMeta?: SortOrderInput | SortOrder
    estado?: SortOrder
    _count?: MetaUsuarioCountOrderByAggregateInput
    _avg?: MetaUsuarioAvgOrderByAggregateInput
    _max?: MetaUsuarioMaxOrderByAggregateInput
    _min?: MetaUsuarioMinOrderByAggregateInput
    _sum?: MetaUsuarioSumOrderByAggregateInput
  }

  export type MetaUsuarioScalarWhereWithAggregatesInput = {
    AND?: MetaUsuarioScalarWhereWithAggregatesInput | MetaUsuarioScalarWhereWithAggregatesInput[]
    OR?: MetaUsuarioScalarWhereWithAggregatesInput[]
    NOT?: MetaUsuarioScalarWhereWithAggregatesInput | MetaUsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MetaUsuario"> | number
    usuarioId?: IntWithAggregatesFilter<"MetaUsuario"> | number
    sucursalId?: IntWithAggregatesFilter<"MetaUsuario"> | number
    fechaInicio?: DateTimeWithAggregatesFilter<"MetaUsuario"> | Date | string
    fechaFin?: DateTimeWithAggregatesFilter<"MetaUsuario"> | Date | string
    montoMeta?: FloatWithAggregatesFilter<"MetaUsuario"> | number
    montoActual?: FloatWithAggregatesFilter<"MetaUsuario"> | number
    cumplida?: BoolWithAggregatesFilter<"MetaUsuario"> | boolean
    fechaCumplida?: DateTimeNullableWithAggregatesFilter<"MetaUsuario"> | Date | string | null
    numeroVentas?: FloatWithAggregatesFilter<"MetaUsuario"> | number
    tituloMeta?: StringNullableWithAggregatesFilter<"MetaUsuario"> | string | null
    estado?: EnumEstadoMetaTiendaWithAggregatesFilter<"MetaUsuario"> | $Enums.EstadoMetaTienda
  }

  export type MetaCobrosWhereInput = {
    AND?: MetaCobrosWhereInput | MetaCobrosWhereInput[]
    OR?: MetaCobrosWhereInput[]
    NOT?: MetaCobrosWhereInput | MetaCobrosWhereInput[]
    id?: IntFilter<"MetaCobros"> | number
    usuarioId?: IntFilter<"MetaCobros"> | number
    sucursalId?: IntFilter<"MetaCobros"> | number
    fechaCreado?: DateTimeFilter<"MetaCobros"> | Date | string
    fechaInicio?: DateTimeFilter<"MetaCobros"> | Date | string
    fechaFin?: DateTimeFilter<"MetaCobros"> | Date | string
    montoMeta?: FloatFilter<"MetaCobros"> | number
    montoActual?: FloatFilter<"MetaCobros"> | number
    cumplida?: BoolFilter<"MetaCobros"> | boolean
    fechaCumplida?: DateTimeNullableFilter<"MetaCobros"> | Date | string | null
    numeroDepositos?: IntFilter<"MetaCobros"> | number
    tituloMeta?: StringNullableFilter<"MetaCobros"> | string | null
    estado?: EnumEstadoMetaCobroFilter<"MetaCobros"> | $Enums.EstadoMetaCobro
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    DepositoCobro?: DepositoCobroListRelationFilter
  }

  export type MetaCobrosOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaCreado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrderInput | SortOrder
    numeroDepositos?: SortOrder
    tituloMeta?: SortOrderInput | SortOrder
    estado?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    DepositoCobro?: DepositoCobroOrderByRelationAggregateInput
  }

  export type MetaCobrosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MetaCobrosWhereInput | MetaCobrosWhereInput[]
    OR?: MetaCobrosWhereInput[]
    NOT?: MetaCobrosWhereInput | MetaCobrosWhereInput[]
    usuarioId?: IntFilter<"MetaCobros"> | number
    sucursalId?: IntFilter<"MetaCobros"> | number
    fechaCreado?: DateTimeFilter<"MetaCobros"> | Date | string
    fechaInicio?: DateTimeFilter<"MetaCobros"> | Date | string
    fechaFin?: DateTimeFilter<"MetaCobros"> | Date | string
    montoMeta?: FloatFilter<"MetaCobros"> | number
    montoActual?: FloatFilter<"MetaCobros"> | number
    cumplida?: BoolFilter<"MetaCobros"> | boolean
    fechaCumplida?: DateTimeNullableFilter<"MetaCobros"> | Date | string | null
    numeroDepositos?: IntFilter<"MetaCobros"> | number
    tituloMeta?: StringNullableFilter<"MetaCobros"> | string | null
    estado?: EnumEstadoMetaCobroFilter<"MetaCobros"> | $Enums.EstadoMetaCobro
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    DepositoCobro?: DepositoCobroListRelationFilter
  }, "id">

  export type MetaCobrosOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaCreado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrderInput | SortOrder
    numeroDepositos?: SortOrder
    tituloMeta?: SortOrderInput | SortOrder
    estado?: SortOrder
    _count?: MetaCobrosCountOrderByAggregateInput
    _avg?: MetaCobrosAvgOrderByAggregateInput
    _max?: MetaCobrosMaxOrderByAggregateInput
    _min?: MetaCobrosMinOrderByAggregateInput
    _sum?: MetaCobrosSumOrderByAggregateInput
  }

  export type MetaCobrosScalarWhereWithAggregatesInput = {
    AND?: MetaCobrosScalarWhereWithAggregatesInput | MetaCobrosScalarWhereWithAggregatesInput[]
    OR?: MetaCobrosScalarWhereWithAggregatesInput[]
    NOT?: MetaCobrosScalarWhereWithAggregatesInput | MetaCobrosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MetaCobros"> | number
    usuarioId?: IntWithAggregatesFilter<"MetaCobros"> | number
    sucursalId?: IntWithAggregatesFilter<"MetaCobros"> | number
    fechaCreado?: DateTimeWithAggregatesFilter<"MetaCobros"> | Date | string
    fechaInicio?: DateTimeWithAggregatesFilter<"MetaCobros"> | Date | string
    fechaFin?: DateTimeWithAggregatesFilter<"MetaCobros"> | Date | string
    montoMeta?: FloatWithAggregatesFilter<"MetaCobros"> | number
    montoActual?: FloatWithAggregatesFilter<"MetaCobros"> | number
    cumplida?: BoolWithAggregatesFilter<"MetaCobros"> | boolean
    fechaCumplida?: DateTimeNullableWithAggregatesFilter<"MetaCobros"> | Date | string | null
    numeroDepositos?: IntWithAggregatesFilter<"MetaCobros"> | number
    tituloMeta?: StringNullableWithAggregatesFilter<"MetaCobros"> | string | null
    estado?: EnumEstadoMetaCobroWithAggregatesFilter<"MetaCobros"> | $Enums.EstadoMetaCobro
  }

  export type DepositoCobroWhereInput = {
    AND?: DepositoCobroWhereInput | DepositoCobroWhereInput[]
    OR?: DepositoCobroWhereInput[]
    NOT?: DepositoCobroWhereInput | DepositoCobroWhereInput[]
    id?: IntFilter<"DepositoCobro"> | number
    usuarioId?: IntFilter<"DepositoCobro"> | number
    sucursalId?: IntFilter<"DepositoCobro"> | number
    numeroBoleta?: StringFilter<"DepositoCobro"> | string
    fechaRegistro?: DateTimeFilter<"DepositoCobro"> | Date | string
    montoDepositado?: FloatFilter<"DepositoCobro"> | number
    descripcion?: StringNullableFilter<"DepositoCobro"> | string | null
    metaCobroId?: IntFilter<"DepositoCobro"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    metaCobro?: XOR<MetaCobrosRelationFilter, MetaCobrosWhereInput>
  }

  export type DepositoCobroOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    numeroBoleta?: SortOrder
    fechaRegistro?: SortOrder
    montoDepositado?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    metaCobroId?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    metaCobro?: MetaCobrosOrderByWithRelationInput
  }

  export type DepositoCobroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DepositoCobroWhereInput | DepositoCobroWhereInput[]
    OR?: DepositoCobroWhereInput[]
    NOT?: DepositoCobroWhereInput | DepositoCobroWhereInput[]
    usuarioId?: IntFilter<"DepositoCobro"> | number
    sucursalId?: IntFilter<"DepositoCobro"> | number
    numeroBoleta?: StringFilter<"DepositoCobro"> | string
    fechaRegistro?: DateTimeFilter<"DepositoCobro"> | Date | string
    montoDepositado?: FloatFilter<"DepositoCobro"> | number
    descripcion?: StringNullableFilter<"DepositoCobro"> | string | null
    metaCobroId?: IntFilter<"DepositoCobro"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    metaCobro?: XOR<MetaCobrosRelationFilter, MetaCobrosWhereInput>
  }, "id">

  export type DepositoCobroOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    numeroBoleta?: SortOrder
    fechaRegistro?: SortOrder
    montoDepositado?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    metaCobroId?: SortOrder
    _count?: DepositoCobroCountOrderByAggregateInput
    _avg?: DepositoCobroAvgOrderByAggregateInput
    _max?: DepositoCobroMaxOrderByAggregateInput
    _min?: DepositoCobroMinOrderByAggregateInput
    _sum?: DepositoCobroSumOrderByAggregateInput
  }

  export type DepositoCobroScalarWhereWithAggregatesInput = {
    AND?: DepositoCobroScalarWhereWithAggregatesInput | DepositoCobroScalarWhereWithAggregatesInput[]
    OR?: DepositoCobroScalarWhereWithAggregatesInput[]
    NOT?: DepositoCobroScalarWhereWithAggregatesInput | DepositoCobroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DepositoCobro"> | number
    usuarioId?: IntWithAggregatesFilter<"DepositoCobro"> | number
    sucursalId?: IntWithAggregatesFilter<"DepositoCobro"> | number
    numeroBoleta?: StringWithAggregatesFilter<"DepositoCobro"> | string
    fechaRegistro?: DateTimeWithAggregatesFilter<"DepositoCobro"> | Date | string
    montoDepositado?: FloatWithAggregatesFilter<"DepositoCobro"> | number
    descripcion?: StringNullableWithAggregatesFilter<"DepositoCobro"> | string | null
    metaCobroId?: IntWithAggregatesFilter<"DepositoCobro"> | number
  }

  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    direccion?: StringNullableFilter<"Cliente"> | string | null
    creadoEn?: DateTimeFilter<"Cliente"> | Date | string
    actualizadoEn?: DateTimeFilter<"Cliente"> | Date | string
    municipioId?: IntNullableFilter<"Cliente"> | number | null
    departamentoId?: IntNullableFilter<"Cliente"> | number | null
    dpi?: StringNullableFilter<"Cliente"> | string | null
    iPInternet?: StringNullableFilter<"Cliente"> | string | null
    compras?: VentaListRelationFilter
    municipio?: XOR<MunicipioNullableRelationFilter, MunicipioWhereInput> | null
    departamento?: XOR<DepartamentoNullableRelationFilter, DepartamentoWhereInput> | null
    EliminacionCliente?: EliminacionClienteListRelationFilter
    Garantia?: GarantiaListRelationFilter
    VentaEliminada?: VentaEliminadaListRelationFilter
    VentaCuota?: VentaCuotaListRelationFilter
    Reparacion?: ReparacionListRelationFilter
  }

  export type ClienteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    municipioId?: SortOrderInput | SortOrder
    departamentoId?: SortOrderInput | SortOrder
    dpi?: SortOrderInput | SortOrder
    iPInternet?: SortOrderInput | SortOrder
    compras?: VentaOrderByRelationAggregateInput
    municipio?: MunicipioOrderByWithRelationInput
    departamento?: DepartamentoOrderByWithRelationInput
    EliminacionCliente?: EliminacionClienteOrderByRelationAggregateInput
    Garantia?: GarantiaOrderByRelationAggregateInput
    VentaEliminada?: VentaEliminadaOrderByRelationAggregateInput
    VentaCuota?: VentaCuotaOrderByRelationAggregateInput
    Reparacion?: ReparacionOrderByRelationAggregateInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    dpi_id?: ClienteDpiIdCompoundUniqueInput
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    direccion?: StringNullableFilter<"Cliente"> | string | null
    creadoEn?: DateTimeFilter<"Cliente"> | Date | string
    actualizadoEn?: DateTimeFilter<"Cliente"> | Date | string
    municipioId?: IntNullableFilter<"Cliente"> | number | null
    departamentoId?: IntNullableFilter<"Cliente"> | number | null
    dpi?: StringNullableFilter<"Cliente"> | string | null
    iPInternet?: StringNullableFilter<"Cliente"> | string | null
    compras?: VentaListRelationFilter
    municipio?: XOR<MunicipioNullableRelationFilter, MunicipioWhereInput> | null
    departamento?: XOR<DepartamentoNullableRelationFilter, DepartamentoWhereInput> | null
    EliminacionCliente?: EliminacionClienteListRelationFilter
    Garantia?: GarantiaListRelationFilter
    VentaEliminada?: VentaEliminadaListRelationFilter
    VentaCuota?: VentaCuotaListRelationFilter
    Reparacion?: ReparacionListRelationFilter
  }, "id" | "dpi_id">

  export type ClienteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    municipioId?: SortOrderInput | SortOrder
    departamentoId?: SortOrderInput | SortOrder
    dpi?: SortOrderInput | SortOrder
    iPInternet?: SortOrderInput | SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cliente"> | number
    nombre?: StringWithAggregatesFilter<"Cliente"> | string
    telefono?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    creadoEn?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
    municipioId?: IntNullableWithAggregatesFilter<"Cliente"> | number | null
    departamentoId?: IntNullableWithAggregatesFilter<"Cliente"> | number | null
    dpi?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    iPInternet?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
  }

  export type GarantiaWhereInput = {
    AND?: GarantiaWhereInput | GarantiaWhereInput[]
    OR?: GarantiaWhereInput[]
    NOT?: GarantiaWhereInput | GarantiaWhereInput[]
    id?: IntFilter<"Garantia"> | number
    clienteId?: IntFilter<"Garantia"> | number
    productoId?: IntFilter<"Garantia"> | number
    usuarioIdRecibe?: IntNullableFilter<"Garantia"> | number | null
    comentario?: StringNullableFilter<"Garantia"> | string | null
    descripcionProblema?: StringFilter<"Garantia"> | string
    fechaRecepcion?: DateTimeFilter<"Garantia"> | Date | string
    estado?: EnumEstadoGarantiaFilter<"Garantia"> | $Enums.EstadoGarantia
    creadoEn?: DateTimeFilter<"Garantia"> | Date | string
    actualizadoEn?: DateTimeFilter<"Garantia"> | Date | string
    proveedorId?: IntNullableFilter<"Garantia"> | number | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    usuarioRecibe?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    registros?: RegistroGarantiaListRelationFilter
    proveedor?: XOR<ProveedorNullableRelationFilter, ProveedorWhereInput> | null
  }

  export type GarantiaOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    descripcionProblema?: SortOrder
    fechaRecepcion?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    proveedorId?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
    usuarioRecibe?: UsuarioOrderByWithRelationInput
    registros?: RegistroGarantiaOrderByRelationAggregateInput
    proveedor?: ProveedorOrderByWithRelationInput
  }

  export type GarantiaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: GarantiaWhereInput | GarantiaWhereInput[]
    OR?: GarantiaWhereInput[]
    NOT?: GarantiaWhereInput | GarantiaWhereInput[]
    clienteId?: IntFilter<"Garantia"> | number
    productoId?: IntFilter<"Garantia"> | number
    usuarioIdRecibe?: IntNullableFilter<"Garantia"> | number | null
    comentario?: StringNullableFilter<"Garantia"> | string | null
    descripcionProblema?: StringFilter<"Garantia"> | string
    fechaRecepcion?: DateTimeFilter<"Garantia"> | Date | string
    estado?: EnumEstadoGarantiaFilter<"Garantia"> | $Enums.EstadoGarantia
    creadoEn?: DateTimeFilter<"Garantia"> | Date | string
    actualizadoEn?: DateTimeFilter<"Garantia"> | Date | string
    proveedorId?: IntNullableFilter<"Garantia"> | number | null
    cliente?: XOR<ClienteRelationFilter, ClienteWhereInput>
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    usuarioRecibe?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    registros?: RegistroGarantiaListRelationFilter
    proveedor?: XOR<ProveedorNullableRelationFilter, ProveedorWhereInput> | null
  }, "id">

  export type GarantiaOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    descripcionProblema?: SortOrder
    fechaRecepcion?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    proveedorId?: SortOrderInput | SortOrder
    _count?: GarantiaCountOrderByAggregateInput
    _avg?: GarantiaAvgOrderByAggregateInput
    _max?: GarantiaMaxOrderByAggregateInput
    _min?: GarantiaMinOrderByAggregateInput
    _sum?: GarantiaSumOrderByAggregateInput
  }

  export type GarantiaScalarWhereWithAggregatesInput = {
    AND?: GarantiaScalarWhereWithAggregatesInput | GarantiaScalarWhereWithAggregatesInput[]
    OR?: GarantiaScalarWhereWithAggregatesInput[]
    NOT?: GarantiaScalarWhereWithAggregatesInput | GarantiaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Garantia"> | number
    clienteId?: IntWithAggregatesFilter<"Garantia"> | number
    productoId?: IntWithAggregatesFilter<"Garantia"> | number
    usuarioIdRecibe?: IntNullableWithAggregatesFilter<"Garantia"> | number | null
    comentario?: StringNullableWithAggregatesFilter<"Garantia"> | string | null
    descripcionProblema?: StringWithAggregatesFilter<"Garantia"> | string
    fechaRecepcion?: DateTimeWithAggregatesFilter<"Garantia"> | Date | string
    estado?: EnumEstadoGarantiaWithAggregatesFilter<"Garantia"> | $Enums.EstadoGarantia
    creadoEn?: DateTimeWithAggregatesFilter<"Garantia"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Garantia"> | Date | string
    proveedorId?: IntNullableWithAggregatesFilter<"Garantia"> | number | null
  }

  export type RegistroGarantiaWhereInput = {
    AND?: RegistroGarantiaWhereInput | RegistroGarantiaWhereInput[]
    OR?: RegistroGarantiaWhereInput[]
    NOT?: RegistroGarantiaWhereInput | RegistroGarantiaWhereInput[]
    id?: IntFilter<"RegistroGarantia"> | number
    garantiaId?: IntFilter<"RegistroGarantia"> | number
    usuarioId?: IntNullableFilter<"RegistroGarantia"> | number | null
    productoId?: IntFilter<"RegistroGarantia"> | number
    estado?: EnumEstadoGarantiaFilter<"RegistroGarantia"> | $Enums.EstadoGarantia
    conclusion?: StringNullableFilter<"RegistroGarantia"> | string | null
    accionesRealizadas?: StringNullableFilter<"RegistroGarantia"> | string | null
    fechaRegistro?: DateTimeFilter<"RegistroGarantia"> | Date | string
    proveedorId?: IntNullableFilter<"RegistroGarantia"> | number | null
    garantia?: XOR<GarantiaRelationFilter, GarantiaWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    proveedor?: XOR<ProveedorNullableRelationFilter, ProveedorWhereInput> | null
  }

  export type RegistroGarantiaOrderByWithRelationInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    productoId?: SortOrder
    estado?: SortOrder
    conclusion?: SortOrderInput | SortOrder
    accionesRealizadas?: SortOrderInput | SortOrder
    fechaRegistro?: SortOrder
    proveedorId?: SortOrderInput | SortOrder
    garantia?: GarantiaOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
    proveedor?: ProveedorOrderByWithRelationInput
  }

  export type RegistroGarantiaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroGarantiaWhereInput | RegistroGarantiaWhereInput[]
    OR?: RegistroGarantiaWhereInput[]
    NOT?: RegistroGarantiaWhereInput | RegistroGarantiaWhereInput[]
    garantiaId?: IntFilter<"RegistroGarantia"> | number
    usuarioId?: IntNullableFilter<"RegistroGarantia"> | number | null
    productoId?: IntFilter<"RegistroGarantia"> | number
    estado?: EnumEstadoGarantiaFilter<"RegistroGarantia"> | $Enums.EstadoGarantia
    conclusion?: StringNullableFilter<"RegistroGarantia"> | string | null
    accionesRealizadas?: StringNullableFilter<"RegistroGarantia"> | string | null
    fechaRegistro?: DateTimeFilter<"RegistroGarantia"> | Date | string
    proveedorId?: IntNullableFilter<"RegistroGarantia"> | number | null
    garantia?: XOR<GarantiaRelationFilter, GarantiaWhereInput>
    usuario?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    proveedor?: XOR<ProveedorNullableRelationFilter, ProveedorWhereInput> | null
  }, "id">

  export type RegistroGarantiaOrderByWithAggregationInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrderInput | SortOrder
    productoId?: SortOrder
    estado?: SortOrder
    conclusion?: SortOrderInput | SortOrder
    accionesRealizadas?: SortOrderInput | SortOrder
    fechaRegistro?: SortOrder
    proveedorId?: SortOrderInput | SortOrder
    _count?: RegistroGarantiaCountOrderByAggregateInput
    _avg?: RegistroGarantiaAvgOrderByAggregateInput
    _max?: RegistroGarantiaMaxOrderByAggregateInput
    _min?: RegistroGarantiaMinOrderByAggregateInput
    _sum?: RegistroGarantiaSumOrderByAggregateInput
  }

  export type RegistroGarantiaScalarWhereWithAggregatesInput = {
    AND?: RegistroGarantiaScalarWhereWithAggregatesInput | RegistroGarantiaScalarWhereWithAggregatesInput[]
    OR?: RegistroGarantiaScalarWhereWithAggregatesInput[]
    NOT?: RegistroGarantiaScalarWhereWithAggregatesInput | RegistroGarantiaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegistroGarantia"> | number
    garantiaId?: IntWithAggregatesFilter<"RegistroGarantia"> | number
    usuarioId?: IntNullableWithAggregatesFilter<"RegistroGarantia"> | number | null
    productoId?: IntWithAggregatesFilter<"RegistroGarantia"> | number
    estado?: EnumEstadoGarantiaWithAggregatesFilter<"RegistroGarantia"> | $Enums.EstadoGarantia
    conclusion?: StringNullableWithAggregatesFilter<"RegistroGarantia"> | string | null
    accionesRealizadas?: StringNullableWithAggregatesFilter<"RegistroGarantia"> | string | null
    fechaRegistro?: DateTimeWithAggregatesFilter<"RegistroGarantia"> | Date | string
    proveedorId?: IntNullableWithAggregatesFilter<"RegistroGarantia"> | number | null
  }

  export type PagoWhereInput = {
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    id?: IntFilter<"Pago"> | number
    ventaId?: IntFilter<"Pago"> | number
    monto?: FloatFilter<"Pago"> | number
    metodoPago?: EnumMetodoPagoFilter<"Pago"> | $Enums.MetodoPago
    fechaPago?: DateTimeFilter<"Pago"> | Date | string
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
  }

  export type PagoOrderByWithRelationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
    metodoPago?: SortOrder
    fechaPago?: SortOrder
    venta?: VentaOrderByWithRelationInput
  }

  export type PagoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    ventaId?: number
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    monto?: FloatFilter<"Pago"> | number
    metodoPago?: EnumMetodoPagoFilter<"Pago"> | $Enums.MetodoPago
    fechaPago?: DateTimeFilter<"Pago"> | Date | string
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
  }, "id" | "ventaId">

  export type PagoOrderByWithAggregationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
    metodoPago?: SortOrder
    fechaPago?: SortOrder
    _count?: PagoCountOrderByAggregateInput
    _avg?: PagoAvgOrderByAggregateInput
    _max?: PagoMaxOrderByAggregateInput
    _min?: PagoMinOrderByAggregateInput
    _sum?: PagoSumOrderByAggregateInput
  }

  export type PagoScalarWhereWithAggregatesInput = {
    AND?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    OR?: PagoScalarWhereWithAggregatesInput[]
    NOT?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pago"> | number
    ventaId?: IntWithAggregatesFilter<"Pago"> | number
    monto?: FloatWithAggregatesFilter<"Pago"> | number
    metodoPago?: EnumMetodoPagoWithAggregatesFilter<"Pago"> | $Enums.MetodoPago
    fechaPago?: DateTimeWithAggregatesFilter<"Pago"> | Date | string
  }

  export type HistorialStockWhereInput = {
    AND?: HistorialStockWhereInput | HistorialStockWhereInput[]
    OR?: HistorialStockWhereInput[]
    NOT?: HistorialStockWhereInput | HistorialStockWhereInput[]
    id?: IntFilter<"HistorialStock"> | number
    productoId?: IntFilter<"HistorialStock"> | number
    cantidadAnterior?: IntFilter<"HistorialStock"> | number
    cantidadNueva?: IntFilter<"HistorialStock"> | number
    fechaCambio?: DateTimeFilter<"HistorialStock"> | Date | string
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
  }

  export type HistorialStockOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
    fechaCambio?: SortOrder
    producto?: ProductoOrderByWithRelationInput
  }

  export type HistorialStockWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialStockWhereInput | HistorialStockWhereInput[]
    OR?: HistorialStockWhereInput[]
    NOT?: HistorialStockWhereInput | HistorialStockWhereInput[]
    productoId?: IntFilter<"HistorialStock"> | number
    cantidadAnterior?: IntFilter<"HistorialStock"> | number
    cantidadNueva?: IntFilter<"HistorialStock"> | number
    fechaCambio?: DateTimeFilter<"HistorialStock"> | Date | string
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
  }, "id">

  export type HistorialStockOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
    fechaCambio?: SortOrder
    _count?: HistorialStockCountOrderByAggregateInput
    _avg?: HistorialStockAvgOrderByAggregateInput
    _max?: HistorialStockMaxOrderByAggregateInput
    _min?: HistorialStockMinOrderByAggregateInput
    _sum?: HistorialStockSumOrderByAggregateInput
  }

  export type HistorialStockScalarWhereWithAggregatesInput = {
    AND?: HistorialStockScalarWhereWithAggregatesInput | HistorialStockScalarWhereWithAggregatesInput[]
    OR?: HistorialStockScalarWhereWithAggregatesInput[]
    NOT?: HistorialStockScalarWhereWithAggregatesInput | HistorialStockScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialStock"> | number
    productoId?: IntWithAggregatesFilter<"HistorialStock"> | number
    cantidadAnterior?: IntWithAggregatesFilter<"HistorialStock"> | number
    cantidadNueva?: IntWithAggregatesFilter<"HistorialStock"> | number
    fechaCambio?: DateTimeWithAggregatesFilter<"HistorialStock"> | Date | string
  }

  export type VentaWhereInput = {
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    id?: IntFilter<"Venta"> | number
    clienteId?: IntNullableFilter<"Venta"> | number | null
    fechaVenta?: DateTimeFilter<"Venta"> | Date | string
    horaVenta?: DateTimeFilter<"Venta"> | Date | string
    totalVenta?: FloatFilter<"Venta"> | number
    sucursalId?: IntFilter<"Venta"> | number
    nombreClienteFinal?: StringNullableFilter<"Venta"> | string | null
    telefonoClienteFinal?: StringNullableFilter<"Venta"> | string | null
    direccionClienteFinal?: StringNullableFilter<"Venta"> | string | null
    imei?: StringNullableFilter<"Venta"> | string | null
    registroCajaId?: IntNullableFilter<"Venta"> | number | null
    cliente?: XOR<ClienteNullableRelationFilter, ClienteWhereInput> | null
    productos?: VentaProductoListRelationFilter
    metodoPago?: XOR<PagoNullableRelationFilter, PagoWhereInput> | null
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    registroCaja?: XOR<RegistroCajaNullableRelationFilter, RegistroCajaWhereInput> | null
    ventaCuota?: XOR<VentaCuotaNullableRelationFilter, VentaCuotaWhereInput> | null
  }

  export type VentaOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    fechaVenta?: SortOrder
    horaVenta?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    nombreClienteFinal?: SortOrderInput | SortOrder
    telefonoClienteFinal?: SortOrderInput | SortOrder
    direccionClienteFinal?: SortOrderInput | SortOrder
    imei?: SortOrderInput | SortOrder
    registroCajaId?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    productos?: VentaProductoOrderByRelationAggregateInput
    metodoPago?: PagoOrderByWithRelationInput
    sucursal?: SucursalOrderByWithRelationInput
    registroCaja?: RegistroCajaOrderByWithRelationInput
    ventaCuota?: VentaCuotaOrderByWithRelationInput
  }

  export type VentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    imei_id?: VentaImeiIdCompoundUniqueInput
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    clienteId?: IntNullableFilter<"Venta"> | number | null
    fechaVenta?: DateTimeFilter<"Venta"> | Date | string
    horaVenta?: DateTimeFilter<"Venta"> | Date | string
    totalVenta?: FloatFilter<"Venta"> | number
    sucursalId?: IntFilter<"Venta"> | number
    nombreClienteFinal?: StringNullableFilter<"Venta"> | string | null
    telefonoClienteFinal?: StringNullableFilter<"Venta"> | string | null
    direccionClienteFinal?: StringNullableFilter<"Venta"> | string | null
    imei?: StringNullableFilter<"Venta"> | string | null
    registroCajaId?: IntNullableFilter<"Venta"> | number | null
    cliente?: XOR<ClienteNullableRelationFilter, ClienteWhereInput> | null
    productos?: VentaProductoListRelationFilter
    metodoPago?: XOR<PagoNullableRelationFilter, PagoWhereInput> | null
    sucursal?: XOR<SucursalRelationFilter, SucursalWhereInput>
    registroCaja?: XOR<RegistroCajaNullableRelationFilter, RegistroCajaWhereInput> | null
    ventaCuota?: XOR<VentaCuotaNullableRelationFilter, VentaCuotaWhereInput> | null
  }, "id" | "imei_id">

  export type VentaOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrderInput | SortOrder
    fechaVenta?: SortOrder
    horaVenta?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    nombreClienteFinal?: SortOrderInput | SortOrder
    telefonoClienteFinal?: SortOrderInput | SortOrder
    direccionClienteFinal?: SortOrderInput | SortOrder
    imei?: SortOrderInput | SortOrder
    registroCajaId?: SortOrderInput | SortOrder
    _count?: VentaCountOrderByAggregateInput
    _avg?: VentaAvgOrderByAggregateInput
    _max?: VentaMaxOrderByAggregateInput
    _min?: VentaMinOrderByAggregateInput
    _sum?: VentaSumOrderByAggregateInput
  }

  export type VentaScalarWhereWithAggregatesInput = {
    AND?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    OR?: VentaScalarWhereWithAggregatesInput[]
    NOT?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Venta"> | number
    clienteId?: IntNullableWithAggregatesFilter<"Venta"> | number | null
    fechaVenta?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    horaVenta?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    totalVenta?: FloatWithAggregatesFilter<"Venta"> | number
    sucursalId?: IntWithAggregatesFilter<"Venta"> | number
    nombreClienteFinal?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    telefonoClienteFinal?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    direccionClienteFinal?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    imei?: StringNullableWithAggregatesFilter<"Venta"> | string | null
    registroCajaId?: IntNullableWithAggregatesFilter<"Venta"> | number | null
  }

  export type TransferenciaProductoWhereInput = {
    AND?: TransferenciaProductoWhereInput | TransferenciaProductoWhereInput[]
    OR?: TransferenciaProductoWhereInput[]
    NOT?: TransferenciaProductoWhereInput | TransferenciaProductoWhereInput[]
    id?: IntFilter<"TransferenciaProducto"> | number
    productoId?: IntFilter<"TransferenciaProducto"> | number
    cantidad?: IntFilter<"TransferenciaProducto"> | number
    sucursalOrigenId?: IntFilter<"TransferenciaProducto"> | number
    sucursalDestinoId?: IntFilter<"TransferenciaProducto"> | number
    fechaTransferencia?: DateTimeFilter<"TransferenciaProducto"> | Date | string
    usuarioEncargadoId?: IntNullableFilter<"TransferenciaProducto"> | number | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    sucursalOrigen?: XOR<SucursalRelationFilter, SucursalWhereInput>
    sucursalDestino?: XOR<SucursalRelationFilter, SucursalWhereInput>
    usuarioEncargado?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type TransferenciaProductoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    fechaTransferencia?: SortOrder
    usuarioEncargadoId?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    sucursalOrigen?: SucursalOrderByWithRelationInput
    sucursalDestino?: SucursalOrderByWithRelationInput
    usuarioEncargado?: UsuarioOrderByWithRelationInput
  }

  export type TransferenciaProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransferenciaProductoWhereInput | TransferenciaProductoWhereInput[]
    OR?: TransferenciaProductoWhereInput[]
    NOT?: TransferenciaProductoWhereInput | TransferenciaProductoWhereInput[]
    productoId?: IntFilter<"TransferenciaProducto"> | number
    cantidad?: IntFilter<"TransferenciaProducto"> | number
    sucursalOrigenId?: IntFilter<"TransferenciaProducto"> | number
    sucursalDestinoId?: IntFilter<"TransferenciaProducto"> | number
    fechaTransferencia?: DateTimeFilter<"TransferenciaProducto"> | Date | string
    usuarioEncargadoId?: IntNullableFilter<"TransferenciaProducto"> | number | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    sucursalOrigen?: XOR<SucursalRelationFilter, SucursalWhereInput>
    sucursalDestino?: XOR<SucursalRelationFilter, SucursalWhereInput>
    usuarioEncargado?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type TransferenciaProductoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    fechaTransferencia?: SortOrder
    usuarioEncargadoId?: SortOrderInput | SortOrder
    _count?: TransferenciaProductoCountOrderByAggregateInput
    _avg?: TransferenciaProductoAvgOrderByAggregateInput
    _max?: TransferenciaProductoMaxOrderByAggregateInput
    _min?: TransferenciaProductoMinOrderByAggregateInput
    _sum?: TransferenciaProductoSumOrderByAggregateInput
  }

  export type TransferenciaProductoScalarWhereWithAggregatesInput = {
    AND?: TransferenciaProductoScalarWhereWithAggregatesInput | TransferenciaProductoScalarWhereWithAggregatesInput[]
    OR?: TransferenciaProductoScalarWhereWithAggregatesInput[]
    NOT?: TransferenciaProductoScalarWhereWithAggregatesInput | TransferenciaProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TransferenciaProducto"> | number
    productoId?: IntWithAggregatesFilter<"TransferenciaProducto"> | number
    cantidad?: IntWithAggregatesFilter<"TransferenciaProducto"> | number
    sucursalOrigenId?: IntWithAggregatesFilter<"TransferenciaProducto"> | number
    sucursalDestinoId?: IntWithAggregatesFilter<"TransferenciaProducto"> | number
    fechaTransferencia?: DateTimeWithAggregatesFilter<"TransferenciaProducto"> | Date | string
    usuarioEncargadoId?: IntNullableWithAggregatesFilter<"TransferenciaProducto"> | number | null
  }

  export type SolicitudTransferenciaProductoWhereInput = {
    AND?: SolicitudTransferenciaProductoWhereInput | SolicitudTransferenciaProductoWhereInput[]
    OR?: SolicitudTransferenciaProductoWhereInput[]
    NOT?: SolicitudTransferenciaProductoWhereInput | SolicitudTransferenciaProductoWhereInput[]
    id?: IntFilter<"SolicitudTransferenciaProducto"> | number
    productoId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    cantidad?: IntFilter<"SolicitudTransferenciaProducto"> | number
    sucursalOrigenId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    sucursalDestinoId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    usuarioSolicitanteId?: IntNullableFilter<"SolicitudTransferenciaProducto"> | number | null
    estado?: EnumEstadoSolicitudTransferenciaFilter<"SolicitudTransferenciaProducto"> | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFilter<"SolicitudTransferenciaProducto"> | Date | string
    fechaAprobacion?: DateTimeNullableFilter<"SolicitudTransferenciaProducto"> | Date | string | null
    administradorId?: IntNullableFilter<"SolicitudTransferenciaProducto"> | number | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    sucursalOrigen?: XOR<SucursalRelationFilter, SucursalWhereInput>
    sucursalDestino?: XOR<SucursalRelationFilter, SucursalWhereInput>
    usuarioSolicitante?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    administrador?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }

  export type SolicitudTransferenciaProductoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrderInput | SortOrder
    estado?: SortOrder
    fechaSolicitud?: SortOrder
    fechaAprobacion?: SortOrderInput | SortOrder
    administradorId?: SortOrderInput | SortOrder
    producto?: ProductoOrderByWithRelationInput
    sucursalOrigen?: SucursalOrderByWithRelationInput
    sucursalDestino?: SucursalOrderByWithRelationInput
    usuarioSolicitante?: UsuarioOrderByWithRelationInput
    administrador?: UsuarioOrderByWithRelationInput
  }

  export type SolicitudTransferenciaProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SolicitudTransferenciaProductoWhereInput | SolicitudTransferenciaProductoWhereInput[]
    OR?: SolicitudTransferenciaProductoWhereInput[]
    NOT?: SolicitudTransferenciaProductoWhereInput | SolicitudTransferenciaProductoWhereInput[]
    productoId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    cantidad?: IntFilter<"SolicitudTransferenciaProducto"> | number
    sucursalOrigenId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    sucursalDestinoId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    usuarioSolicitanteId?: IntNullableFilter<"SolicitudTransferenciaProducto"> | number | null
    estado?: EnumEstadoSolicitudTransferenciaFilter<"SolicitudTransferenciaProducto"> | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFilter<"SolicitudTransferenciaProducto"> | Date | string
    fechaAprobacion?: DateTimeNullableFilter<"SolicitudTransferenciaProducto"> | Date | string | null
    administradorId?: IntNullableFilter<"SolicitudTransferenciaProducto"> | number | null
    producto?: XOR<ProductoRelationFilter, ProductoWhereInput>
    sucursalOrigen?: XOR<SucursalRelationFilter, SucursalWhereInput>
    sucursalDestino?: XOR<SucursalRelationFilter, SucursalWhereInput>
    usuarioSolicitante?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
    administrador?: XOR<UsuarioNullableRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type SolicitudTransferenciaProductoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrderInput | SortOrder
    estado?: SortOrder
    fechaSolicitud?: SortOrder
    fechaAprobacion?: SortOrderInput | SortOrder
    administradorId?: SortOrderInput | SortOrder
    _count?: SolicitudTransferenciaProductoCountOrderByAggregateInput
    _avg?: SolicitudTransferenciaProductoAvgOrderByAggregateInput
    _max?: SolicitudTransferenciaProductoMaxOrderByAggregateInput
    _min?: SolicitudTransferenciaProductoMinOrderByAggregateInput
    _sum?: SolicitudTransferenciaProductoSumOrderByAggregateInput
  }

  export type SolicitudTransferenciaProductoScalarWhereWithAggregatesInput = {
    AND?: SolicitudTransferenciaProductoScalarWhereWithAggregatesInput | SolicitudTransferenciaProductoScalarWhereWithAggregatesInput[]
    OR?: SolicitudTransferenciaProductoScalarWhereWithAggregatesInput[]
    NOT?: SolicitudTransferenciaProductoScalarWhereWithAggregatesInput | SolicitudTransferenciaProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number
    productoId?: IntWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number
    cantidad?: IntWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number
    sucursalOrigenId?: IntWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number
    sucursalDestinoId?: IntWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number
    usuarioSolicitanteId?: IntNullableWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number | null
    estado?: EnumEstadoSolicitudTransferenciaWithAggregatesFilter<"SolicitudTransferenciaProducto"> | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeWithAggregatesFilter<"SolicitudTransferenciaProducto"> | Date | string
    fechaAprobacion?: DateTimeNullableWithAggregatesFilter<"SolicitudTransferenciaProducto"> | Date | string | null
    administradorId?: IntNullableWithAggregatesFilter<"SolicitudTransferenciaProducto"> | number | null
  }

  export type VentaProductoWhereInput = {
    AND?: VentaProductoWhereInput | VentaProductoWhereInput[]
    OR?: VentaProductoWhereInput[]
    NOT?: VentaProductoWhereInput | VentaProductoWhereInput[]
    id?: IntFilter<"VentaProducto"> | number
    ventaId?: IntFilter<"VentaProducto"> | number
    productoId?: IntNullableFilter<"VentaProducto"> | number | null
    cantidad?: IntFilter<"VentaProducto"> | number
    creadoEn?: DateTimeFilter<"VentaProducto"> | Date | string
    precioVenta?: FloatFilter<"VentaProducto"> | number
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
  }

  export type VentaProductoOrderByWithRelationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    creadoEn?: SortOrder
    precioVenta?: SortOrder
    venta?: VentaOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
  }

  export type VentaProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VentaProductoWhereInput | VentaProductoWhereInput[]
    OR?: VentaProductoWhereInput[]
    NOT?: VentaProductoWhereInput | VentaProductoWhereInput[]
    ventaId?: IntFilter<"VentaProducto"> | number
    productoId?: IntNullableFilter<"VentaProducto"> | number | null
    cantidad?: IntFilter<"VentaProducto"> | number
    creadoEn?: DateTimeFilter<"VentaProducto"> | Date | string
    precioVenta?: FloatFilter<"VentaProducto"> | number
    venta?: XOR<VentaRelationFilter, VentaWhereInput>
    producto?: XOR<ProductoNullableRelationFilter, ProductoWhereInput> | null
  }, "id">

  export type VentaProductoOrderByWithAggregationInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    creadoEn?: SortOrder
    precioVenta?: SortOrder
    _count?: VentaProductoCountOrderByAggregateInput
    _avg?: VentaProductoAvgOrderByAggregateInput
    _max?: VentaProductoMaxOrderByAggregateInput
    _min?: VentaProductoMinOrderByAggregateInput
    _sum?: VentaProductoSumOrderByAggregateInput
  }

  export type VentaProductoScalarWhereWithAggregatesInput = {
    AND?: VentaProductoScalarWhereWithAggregatesInput | VentaProductoScalarWhereWithAggregatesInput[]
    OR?: VentaProductoScalarWhereWithAggregatesInput[]
    NOT?: VentaProductoScalarWhereWithAggregatesInput | VentaProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VentaProducto"> | number
    ventaId?: IntWithAggregatesFilter<"VentaProducto"> | number
    productoId?: IntNullableWithAggregatesFilter<"VentaProducto"> | number | null
    cantidad?: IntWithAggregatesFilter<"VentaProducto"> | number
    creadoEn?: DateTimeWithAggregatesFilter<"VentaProducto"> | Date | string
    precioVenta?: FloatWithAggregatesFilter<"VentaProducto"> | number
  }

  export type ProveedorWhereInput = {
    AND?: ProveedorWhereInput | ProveedorWhereInput[]
    OR?: ProveedorWhereInput[]
    NOT?: ProveedorWhereInput | ProveedorWhereInput[]
    id?: IntFilter<"Proveedor"> | number
    nombre?: StringFilter<"Proveedor"> | string
    correo?: StringNullableFilter<"Proveedor"> | string | null
    telefono?: StringNullableFilter<"Proveedor"> | string | null
    direccion?: StringNullableFilter<"Proveedor"> | string | null
    razonSocial?: StringNullableFilter<"Proveedor"> | string | null
    rfc?: StringNullableFilter<"Proveedor"> | string | null
    nombreContacto?: StringNullableFilter<"Proveedor"> | string | null
    telefonoContacto?: StringNullableFilter<"Proveedor"> | string | null
    emailContacto?: StringNullableFilter<"Proveedor"> | string | null
    pais?: StringNullableFilter<"Proveedor"> | string | null
    ciudad?: StringNullableFilter<"Proveedor"> | string | null
    codigoPostal?: StringNullableFilter<"Proveedor"> | string | null
    latitud?: FloatNullableFilter<"Proveedor"> | number | null
    longitud?: FloatNullableFilter<"Proveedor"> | number | null
    activo?: BoolFilter<"Proveedor"> | boolean
    notas?: StringNullableFilter<"Proveedor"> | string | null
    creadoEn?: DateTimeFilter<"Proveedor"> | Date | string
    actualizadoEn?: DateTimeFilter<"Proveedor"> | Date | string
    entregasStock?: EntregaStockListRelationFilter
    Garantia?: GarantiaListRelationFilter
    RegistroGarantia?: RegistroGarantiaListRelationFilter
  }

  export type ProveedorOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    razonSocial?: SortOrderInput | SortOrder
    rfc?: SortOrderInput | SortOrder
    nombreContacto?: SortOrderInput | SortOrder
    telefonoContacto?: SortOrderInput | SortOrder
    emailContacto?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    codigoPostal?: SortOrderInput | SortOrder
    latitud?: SortOrderInput | SortOrder
    longitud?: SortOrderInput | SortOrder
    activo?: SortOrder
    notas?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    entregasStock?: EntregaStockOrderByRelationAggregateInput
    Garantia?: GarantiaOrderByRelationAggregateInput
    RegistroGarantia?: RegistroGarantiaOrderByRelationAggregateInput
  }

  export type ProveedorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProveedorWhereInput | ProveedorWhereInput[]
    OR?: ProveedorWhereInput[]
    NOT?: ProveedorWhereInput | ProveedorWhereInput[]
    nombre?: StringFilter<"Proveedor"> | string
    correo?: StringNullableFilter<"Proveedor"> | string | null
    telefono?: StringNullableFilter<"Proveedor"> | string | null
    direccion?: StringNullableFilter<"Proveedor"> | string | null
    razonSocial?: StringNullableFilter<"Proveedor"> | string | null
    rfc?: StringNullableFilter<"Proveedor"> | string | null
    nombreContacto?: StringNullableFilter<"Proveedor"> | string | null
    telefonoContacto?: StringNullableFilter<"Proveedor"> | string | null
    emailContacto?: StringNullableFilter<"Proveedor"> | string | null
    pais?: StringNullableFilter<"Proveedor"> | string | null
    ciudad?: StringNullableFilter<"Proveedor"> | string | null
    codigoPostal?: StringNullableFilter<"Proveedor"> | string | null
    latitud?: FloatNullableFilter<"Proveedor"> | number | null
    longitud?: FloatNullableFilter<"Proveedor"> | number | null
    activo?: BoolFilter<"Proveedor"> | boolean
    notas?: StringNullableFilter<"Proveedor"> | string | null
    creadoEn?: DateTimeFilter<"Proveedor"> | Date | string
    actualizadoEn?: DateTimeFilter<"Proveedor"> | Date | string
    entregasStock?: EntregaStockListRelationFilter
    Garantia?: GarantiaListRelationFilter
    RegistroGarantia?: RegistroGarantiaListRelationFilter
  }, "id">

  export type ProveedorOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    razonSocial?: SortOrderInput | SortOrder
    rfc?: SortOrderInput | SortOrder
    nombreContacto?: SortOrderInput | SortOrder
    telefonoContacto?: SortOrderInput | SortOrder
    emailContacto?: SortOrderInput | SortOrder
    pais?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    codigoPostal?: SortOrderInput | SortOrder
    latitud?: SortOrderInput | SortOrder
    longitud?: SortOrderInput | SortOrder
    activo?: SortOrder
    notas?: SortOrderInput | SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    _count?: ProveedorCountOrderByAggregateInput
    _avg?: ProveedorAvgOrderByAggregateInput
    _max?: ProveedorMaxOrderByAggregateInput
    _min?: ProveedorMinOrderByAggregateInput
    _sum?: ProveedorSumOrderByAggregateInput
  }

  export type ProveedorScalarWhereWithAggregatesInput = {
    AND?: ProveedorScalarWhereWithAggregatesInput | ProveedorScalarWhereWithAggregatesInput[]
    OR?: ProveedorScalarWhereWithAggregatesInput[]
    NOT?: ProveedorScalarWhereWithAggregatesInput | ProveedorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Proveedor"> | number
    nombre?: StringWithAggregatesFilter<"Proveedor"> | string
    correo?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    razonSocial?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    rfc?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    nombreContacto?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    telefonoContacto?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    emailContacto?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    pais?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    ciudad?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    codigoPostal?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    latitud?: FloatNullableWithAggregatesFilter<"Proveedor"> | number | null
    longitud?: FloatNullableWithAggregatesFilter<"Proveedor"> | number | null
    activo?: BoolWithAggregatesFilter<"Proveedor"> | boolean
    notas?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    creadoEn?: DateTimeWithAggregatesFilter<"Proveedor"> | Date | string
    actualizadoEn?: DateTimeWithAggregatesFilter<"Proveedor"> | Date | string
  }

  export type CategoriaWhereInput = {
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    id?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
    productos?: ProductoListRelationFilter
  }

  export type CategoriaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    productos?: ProductoOrderByRelationAggregateInput
  }

  export type CategoriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: CategoriaWhereInput | CategoriaWhereInput[]
    OR?: CategoriaWhereInput[]
    NOT?: CategoriaWhereInput | CategoriaWhereInput[]
    productos?: ProductoListRelationFilter
  }, "id" | "nombre">

  export type CategoriaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: CategoriaCountOrderByAggregateInput
    _avg?: CategoriaAvgOrderByAggregateInput
    _max?: CategoriaMaxOrderByAggregateInput
    _min?: CategoriaMinOrderByAggregateInput
    _sum?: CategoriaSumOrderByAggregateInput
  }

  export type CategoriaScalarWhereWithAggregatesInput = {
    AND?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    OR?: CategoriaScalarWhereWithAggregatesInput[]
    NOT?: CategoriaScalarWhereWithAggregatesInput | CategoriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categoria"> | number
    nombre?: StringWithAggregatesFilter<"Categoria"> | string
  }

  export type DepartamentoWhereInput = {
    AND?: DepartamentoWhereInput | DepartamentoWhereInput[]
    OR?: DepartamentoWhereInput[]
    NOT?: DepartamentoWhereInput | DepartamentoWhereInput[]
    id?: IntFilter<"Departamento"> | number
    nombre?: StringFilter<"Departamento"> | string
    municipios?: MunicipioListRelationFilter
    clientes?: ClienteListRelationFilter
  }

  export type DepartamentoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    municipios?: MunicipioOrderByRelationAggregateInput
    clientes?: ClienteOrderByRelationAggregateInput
  }

  export type DepartamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: DepartamentoWhereInput | DepartamentoWhereInput[]
    OR?: DepartamentoWhereInput[]
    NOT?: DepartamentoWhereInput | DepartamentoWhereInput[]
    municipios?: MunicipioListRelationFilter
    clientes?: ClienteListRelationFilter
  }, "id" | "nombre">

  export type DepartamentoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: DepartamentoCountOrderByAggregateInput
    _avg?: DepartamentoAvgOrderByAggregateInput
    _max?: DepartamentoMaxOrderByAggregateInput
    _min?: DepartamentoMinOrderByAggregateInput
    _sum?: DepartamentoSumOrderByAggregateInput
  }

  export type DepartamentoScalarWhereWithAggregatesInput = {
    AND?: DepartamentoScalarWhereWithAggregatesInput | DepartamentoScalarWhereWithAggregatesInput[]
    OR?: DepartamentoScalarWhereWithAggregatesInput[]
    NOT?: DepartamentoScalarWhereWithAggregatesInput | DepartamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Departamento"> | number
    nombre?: StringWithAggregatesFilter<"Departamento"> | string
  }

  export type MunicipioWhereInput = {
    AND?: MunicipioWhereInput | MunicipioWhereInput[]
    OR?: MunicipioWhereInput[]
    NOT?: MunicipioWhereInput | MunicipioWhereInput[]
    id?: IntFilter<"Municipio"> | number
    nombre?: StringFilter<"Municipio"> | string
    departamentoId?: IntFilter<"Municipio"> | number
    departamento?: XOR<DepartamentoRelationFilter, DepartamentoWhereInput>
    clientes?: ClienteListRelationFilter
  }

  export type MunicipioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    departamentoId?: SortOrder
    departamento?: DepartamentoOrderByWithRelationInput
    clientes?: ClienteOrderByRelationAggregateInput
  }

  export type MunicipioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: MunicipioWhereInput | MunicipioWhereInput[]
    OR?: MunicipioWhereInput[]
    NOT?: MunicipioWhereInput | MunicipioWhereInput[]
    departamentoId?: IntFilter<"Municipio"> | number
    departamento?: XOR<DepartamentoRelationFilter, DepartamentoWhereInput>
    clientes?: ClienteListRelationFilter
  }, "id" | "nombre">

  export type MunicipioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    departamentoId?: SortOrder
    _count?: MunicipioCountOrderByAggregateInput
    _avg?: MunicipioAvgOrderByAggregateInput
    _max?: MunicipioMaxOrderByAggregateInput
    _min?: MunicipioMinOrderByAggregateInput
    _sum?: MunicipioSumOrderByAggregateInput
  }

  export type MunicipioScalarWhereWithAggregatesInput = {
    AND?: MunicipioScalarWhereWithAggregatesInput | MunicipioScalarWhereWithAggregatesInput[]
    OR?: MunicipioScalarWhereWithAggregatesInput[]
    NOT?: MunicipioScalarWhereWithAggregatesInput | MunicipioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Municipio"> | number
    nombre?: StringWithAggregatesFilter<"Municipio"> | string
    departamentoId?: IntWithAggregatesFilter<"Municipio"> | number
  }

  export type ReparacionCreateInput = {
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutReparacionInput
    sucursal: SucursalCreateNestedOneWithoutReparacionInput
    cliente: ClienteCreateNestedOneWithoutReparacionInput
    producto?: ProductoCreateNestedOneWithoutReparacionInput
    registros?: RegistroReparacionCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionUncheckedCreateInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    registros?: RegistroReparacionUncheckedCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionUpdateInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutReparacionNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutReparacionNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutReparacionNestedInput
    producto?: ProductoUpdateOneWithoutReparacionNestedInput
    registros?: RegistroReparacionUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroReparacionUncheckedUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionCreateManyInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReparacionUpdateManyMutationInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReparacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroReparacionCreateInput = {
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
    reparacion: ReparacionCreateNestedOneWithoutRegistrosInput
    usuario: UsuarioCreateNestedOneWithoutRegistroReparacionInput
  }

  export type RegistroReparacionUncheckedCreateInput = {
    id?: number
    reparacionId: number
    usuarioId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
  }

  export type RegistroReparacionUpdateInput = {
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
    reparacion?: ReparacionUpdateOneRequiredWithoutRegistrosNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutRegistroReparacionNestedInput
  }

  export type RegistroReparacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    reparacionId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroReparacionCreateManyInput = {
    id?: number
    reparacionId: number
    usuarioId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
  }

  export type RegistroReparacionUpdateManyMutationInput = {
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroReparacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    reparacionId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaCuotaCreateInput = {
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    cliente: ClienteCreateNestedOneWithoutVentaCuotaInput
    usuario: UsuarioCreateNestedOneWithoutVentaCuotaInput
    sucursal: SucursalCreateNestedOneWithoutVentaCuotaInput
    cuotas?: CuotaCreateNestedManyWithoutVentaCuotaInput
    venta?: VentaCreateNestedOneWithoutVentaCuotaInput
  }

  export type VentaCuotaUncheckedCreateInput = {
    id?: number
    clienteId: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
    cuotas?: CuotaUncheckedCreateNestedManyWithoutVentaCuotaInput
  }

  export type VentaCuotaUpdateInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClienteUpdateOneRequiredWithoutVentaCuotaNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutVentaCuotaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaCuotaNestedInput
    cuotas?: CuotaUpdateManyWithoutVentaCuotaNestedInput
    venta?: VentaUpdateOneWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cuotas?: CuotaUncheckedUpdateManyWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaCreateManyInput = {
    id?: number
    clienteId: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
  }

  export type VentaCuotaUpdateManyMutationInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaCuotaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CuotaCreateInput = {
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
    ventaCuota: VentaCuotaCreateNestedOneWithoutCuotasInput
    usuario?: UsuarioCreateNestedOneWithoutCuotaInput
  }

  export type CuotaUncheckedCreateInput = {
    id?: number
    ventaCuotaId: number
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    usuarioId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
  }

  export type CuotaUpdateInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
    ventaCuota?: VentaCuotaUpdateOneRequiredWithoutCuotasNestedInput
    usuario?: UsuarioUpdateOneWithoutCuotaNestedInput
  }

  export type CuotaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaCuotaId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CuotaCreateManyInput = {
    id?: number
    ventaCuotaId: number
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    usuarioId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
  }

  export type CuotaUpdateManyMutationInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CuotaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaCuotaId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type PlantillaComprobanteCreateInput = {
    nombre: string
    texto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    sucursal?: SucursalCreateNestedOneWithoutPlantillaComprobanteInput
  }

  export type PlantillaComprobanteUncheckedCreateInput = {
    id?: number
    nombre: string
    texto: string
    sucursalId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type PlantillaComprobanteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursal?: SucursalUpdateOneWithoutPlantillaComprobanteNestedInput
  }

  export type PlantillaComprobanteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlantillaComprobanteCreateManyInput = {
    id?: number
    nombre: string
    texto: string
    sucursalId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type PlantillaComprobanteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlantillaComprobanteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaCreateInput = {
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    usuario: UsuarioCreateNestedOneWithoutVentaEliminadaInput
    cliente?: ClienteCreateNestedOneWithoutVentaEliminadaInput
    sucursal: SucursalCreateNestedOneWithoutVentaEliminadaInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaUncheckedCreateInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
    sucursalId: number
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaUpdateInput = {
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutVentaEliminadaNestedInput
    cliente?: ClienteUpdateOneWithoutVentaEliminadaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaEliminadaNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaCreateManyInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
    sucursalId: number
  }

  export type VentaEliminadaUpdateManyMutationInput = {
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaEliminadaProductoCreateInput = {
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
    ventaEliminada: VentaEliminadaCreateNestedOneWithoutVentaEliminadaProductoInput
    producto?: ProductoCreateNestedOneWithoutVentaEliminadaProductoInput
  }

  export type VentaEliminadaProductoUncheckedCreateInput = {
    id?: number
    ventaEliminadaId: number
    productoId?: number | null
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
  }

  export type VentaEliminadaProductoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    ventaEliminada?: VentaEliminadaUpdateOneRequiredWithoutVentaEliminadaProductoNestedInput
    producto?: ProductoUpdateOneWithoutVentaEliminadaProductoNestedInput
  }

  export type VentaEliminadaProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaEliminadaId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaProductoCreateManyInput = {
    id?: number
    ventaEliminadaId: number
    productoId?: number | null
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
  }

  export type VentaEliminadaProductoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaEliminadaId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoCreateInput = {
    saldoAcumulado?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
    sucursal: SucursalCreateNestedOneWithoutSucursalSaldoInput
  }

  export type SucursalSaldoUncheckedCreateInput = {
    id?: number
    sucursalId: number
    saldoAcumulado?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoUpdateInput = {
    saldoAcumulado?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursal?: SucursalUpdateOneRequiredWithoutSucursalSaldoNestedInput
  }

  export type SucursalSaldoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    saldoAcumulado?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoCreateManyInput = {
    id?: number
    sucursalId: number
    saldoAcumulado?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoUpdateManyMutationInput = {
    saldoAcumulado?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    saldoAcumulado?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroCajaCreateInput = {
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    sucursal?: SucursalCreateNestedOneWithoutRegistroCajaInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroCajaInput
    depositos?: DepositoCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUncheckedCreateInput = {
    id?: number
    sucursalId?: number | null
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    depositos?: DepositoUncheckedCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoUncheckedCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaUncheckedCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUpdateInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneWithoutRegistroCajaNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroCajaNestedInput
    depositos?: DepositoUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    depositos?: DepositoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaCreateManyInput = {
    id?: number
    sucursalId?: number | null
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
  }

  export type RegistroCajaUpdateManyMutationInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RegistroCajaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SucursalSaldoGlobalCreateInput = {
    saldoGlobal?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoGlobalUncheckedCreateInput = {
    id?: number
    saldoGlobal?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoGlobalUpdateInput = {
    saldoGlobal?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoGlobalUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    saldoGlobal?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoGlobalCreateManyInput = {
    id?: number
    saldoGlobal?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoGlobalUpdateManyMutationInput = {
    saldoGlobal?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoGlobalUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    saldoGlobal?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepositoCreateInput = {
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    registroCaja?: RegistroCajaCreateNestedOneWithoutDepositosInput
    sucursal?: SucursalCreateNestedOneWithoutDepositoInput
    usuario?: UsuarioCreateNestedOneWithoutDepositoInput
  }

  export type DepositoUncheckedCreateInput = {
    id?: number
    registroCajaId?: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type DepositoUpdateInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    registroCaja?: RegistroCajaUpdateOneWithoutDepositosNestedInput
    sucursal?: SucursalUpdateOneWithoutDepositoNestedInput
    usuario?: UsuarioUpdateOneWithoutDepositoNestedInput
  }

  export type DepositoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DepositoCreateManyInput = {
    id?: number
    registroCajaId?: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type DepositoUpdateManyMutationInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepositoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoCreateInput = {
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    registroCaja?: RegistroCajaCreateNestedOneWithoutEgresosInput
    sucursal?: SucursalCreateNestedOneWithoutEgresoInput
    usuario?: UsuarioCreateNestedOneWithoutEgresoInput
  }

  export type EgresoUncheckedCreateInput = {
    id?: number
    registroCajaId?: number | null
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type EgresoUpdateInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    registroCaja?: RegistroCajaUpdateOneWithoutEgresosNestedInput
    sucursal?: SucursalUpdateOneWithoutEgresoNestedInput
    usuario?: UsuarioUpdateOneWithoutEgresoNestedInput
  }

  export type EgresoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoCreateManyInput = {
    id?: number
    registroCajaId?: number | null
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type EgresoUpdateManyMutationInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EgresoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TicketSorteoCreateInput = {
    descripcionSorteo?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    estado: $Enums.EstadoTicket
  }

  export type TicketSorteoUncheckedCreateInput = {
    id?: number
    descripcionSorteo?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    estado: $Enums.EstadoTicket
  }

  export type TicketSorteoUpdateInput = {
    descripcionSorteo?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTicketFieldUpdateOperationsInput | $Enums.EstadoTicket
  }

  export type TicketSorteoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcionSorteo?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTicketFieldUpdateOperationsInput | $Enums.EstadoTicket
  }

  export type TicketSorteoCreateManyInput = {
    id?: number
    descripcionSorteo?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    estado: $Enums.EstadoTicket
  }

  export type TicketSorteoUpdateManyMutationInput = {
    descripcionSorteo?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTicketFieldUpdateOperationsInput | $Enums.EstadoTicket
  }

  export type TicketSorteoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcionSorteo?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoTicketFieldUpdateOperationsInput | $Enums.EstadoTicket
  }

  export type VencimientoCreateInput = {
    fechaVencimiento: Date | string
    estado?: $Enums.EstadoVencimiento
    descripcion?: string | null
    fechaCreacion?: Date | string
    stock?: StockCreateNestedOneWithoutVencimientoInput
  }

  export type VencimientoUncheckedCreateInput = {
    id?: number
    fechaVencimiento: Date | string
    estado?: $Enums.EstadoVencimiento
    descripcion?: string | null
    stockId?: number | null
    fechaCreacion?: Date | string
  }

  export type VencimientoUpdateInput = {
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    stock?: StockUpdateOneWithoutVencimientoNestedInput
  }

  export type VencimientoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VencimientoCreateManyInput = {
    id?: number
    fechaVencimiento: Date | string
    estado?: $Enums.EstadoVencimiento
    descripcion?: string | null
    stockId?: number | null
    fechaCreacion?: Date | string
  }

  export type VencimientoUpdateManyMutationInput = {
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VencimientoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionCreateInput = {
    mensaje: string
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    remitente?: UsuarioCreateNestedOneWithoutNotificacionesEnviadasInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutNotificacionInput
    Usuario?: UsuarioCreateNestedManyWithoutNotificacionesRecibidasInput
  }

  export type NotificacionUncheckedCreateInput = {
    id?: number
    mensaje: string
    remitenteId?: number | null
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutNotificacionInput
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutNotificacionesRecibidasInput
  }

  export type NotificacionUpdateInput = {
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    remitente?: UsuarioUpdateOneWithoutNotificacionesEnviadasNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutNotificacionNestedInput
    Usuario?: UsuarioUpdateManyWithoutNotificacionesRecibidasNestedInput
  }

  export type NotificacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    remitenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutNotificacionNestedInput
    Usuario?: UsuarioUncheckedUpdateManyWithoutNotificacionesRecibidasNestedInput
  }

  export type NotificacionCreateManyInput = {
    id?: number
    mensaje: string
    remitenteId?: number | null
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
  }

  export type NotificacionUpdateManyMutationInput = {
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    remitenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUsuariosCreateInput = {
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutNotificacionesUsuariosInput
    notificacion: NotificacionCreateNestedOneWithoutNotificacionesUsuariosInput
  }

  export type NotificacionesUsuariosUncheckedCreateInput = {
    id?: number
    usuarioId: number
    notificacionId: number
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
  }

  export type NotificacionesUsuariosUpdateInput = {
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutNotificacionesUsuariosNestedInput
    notificacion?: NotificacionUpdateOneRequiredWithoutNotificacionesUsuariosNestedInput
  }

  export type NotificacionesUsuariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    notificacionId?: IntFieldUpdateOperationsInput | number
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUsuariosCreateManyInput = {
    id?: number
    usuarioId: number
    notificacionId: number
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
  }

  export type NotificacionesUsuariosUpdateManyMutationInput = {
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUsuariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    notificacionId?: IntFieldUpdateOperationsInput | number
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitudPrecioCreateInput = {
    precioSolicitado: number
    estado?: $Enums.EstadoSolicitud
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudPrecioInput
    solicitadoPor: UsuarioCreateNestedOneWithoutSolicitudesPrecioInput
    aprobadoPor?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasInput
  }

  export type SolicitudPrecioUncheckedCreateInput = {
    id?: number
    productoId: number
    precioSolicitado: number
    solicitadoPorId: number
    estado?: $Enums.EstadoSolicitud
    aprobadoPorId?: number | null
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudPrecioUpdateInput = {
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudPrecioNestedInput
    solicitadoPor?: UsuarioUpdateOneRequiredWithoutSolicitudesPrecioNestedInput
    aprobadoPor?: UsuarioUpdateOneWithoutSolicitudesAprobadasNestedInput
  }

  export type SolicitudPrecioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    solicitadoPorId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    aprobadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudPrecioCreateManyInput = {
    id?: number
    productoId: number
    precioSolicitado: number
    solicitadoPorId: number
    estado?: $Enums.EstadoSolicitud
    aprobadoPorId?: number | null
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudPrecioUpdateManyMutationInput = {
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudPrecioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    solicitadoPorId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    aprobadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductoCreateInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
  }

  export type ProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type HistorialPrecioCostoCreateInput = {
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    producto: ProductoCreateNestedOneWithoutHistorialPrecioCostoInput
    modificadoPor?: UsuarioCreateNestedOneWithoutHistorialPrecioCostoInput
  }

  export type HistorialPrecioCostoUncheckedCreateInput = {
    id?: number
    productoId: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    modificadoPorId?: number | null
  }

  export type HistorialPrecioCostoUpdateInput = {
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutHistorialPrecioCostoNestedInput
    modificadoPor?: UsuarioUpdateOneWithoutHistorialPrecioCostoNestedInput
  }

  export type HistorialPrecioCostoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialPrecioCostoCreateManyInput = {
    id?: number
    productoId: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    modificadoPorId?: number | null
  }

  export type HistorialPrecioCostoUpdateManyMutationInput = {
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioCostoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PrecioProductoCreateInput = {
    precio: number
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
    producto?: ProductoCreateNestedOneWithoutPreciosInput
    creadoPor?: UsuarioCreateNestedOneWithoutPrecioProductoInput
  }

  export type PrecioProductoUncheckedCreateInput = {
    id?: number
    productoId?: number | null
    precio: number
    creadoPorId?: number | null
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
  }

  export type PrecioProductoUpdateInput = {
    precio?: FloatFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
    producto?: ProductoUpdateOneWithoutPreciosNestedInput
    creadoPor?: UsuarioUpdateOneWithoutPrecioProductoNestedInput
  }

  export type PrecioProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: FloatFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type PrecioProductoCreateManyInput = {
    id?: number
    productoId?: number | null
    precio: number
    creadoPorId?: number | null
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
  }

  export type PrecioProductoUpdateManyMutationInput = {
    precio?: FloatFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type PrecioProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: FloatFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type HistorialPrecioCreateInput = {
    precioAnterior: number
    precioNuevo: number
    fechaCambio?: Date | string
    producto: ProductoCreateNestedOneWithoutHistorialPrecioInput
  }

  export type HistorialPrecioUncheckedCreateInput = {
    id?: number
    productoId: number
    precioAnterior: number
    precioNuevo: number
    fechaCambio?: Date | string
  }

  export type HistorialPrecioUpdateInput = {
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutHistorialPrecioNestedInput
  }

  export type HistorialPrecioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioCreateManyInput = {
    id?: number
    productoId: number
    precioAnterior: number
    precioNuevo: number
    fechaCambio?: Date | string
  }

  export type HistorialPrecioUpdateManyMutationInput = {
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AjusteStockCreateInput = {
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    descripcion?: string | null
    producto: ProductoCreateNestedOneWithoutAjusteStockInput
    stock?: StockCreateNestedOneWithoutAjusteStockInput
    usuario?: UsuarioCreateNestedOneWithoutAjusteStockInput
  }

  export type AjusteStockUncheckedCreateInput = {
    id?: number
    productoId: number
    stockId?: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    usuarioId?: number | null
    descripcion?: string | null
  }

  export type AjusteStockUpdateInput = {
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutAjusteStockNestedInput
    stock?: StockUpdateOneWithoutAjusteStockNestedInput
    usuario?: UsuarioUpdateOneWithoutAjusteStockNestedInput
  }

  export type AjusteStockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AjusteStockCreateManyInput = {
    id?: number
    productoId: number
    stockId?: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    usuarioId?: number | null
    descripcion?: string | null
  }

  export type AjusteStockUpdateManyMutationInput = {
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AjusteStockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockCreateInput = {
    fechaHora?: Date | string
    motivo?: string | null
    producto: ProductoCreateNestedOneWithoutEliminacionStockInput
    usuario?: UsuarioCreateNestedOneWithoutEliminacionStockInput
    sucursal?: SucursalCreateNestedOneWithoutEliminacionStockInput
  }

  export type EliminacionStockUncheckedCreateInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    sucursalId?: number | null
    motivo?: string | null
  }

  export type EliminacionStockUpdateInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutEliminacionStockNestedInput
    usuario?: UsuarioUpdateOneWithoutEliminacionStockNestedInput
    sucursal?: SucursalUpdateOneWithoutEliminacionStockNestedInput
  }

  export type EliminacionStockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockCreateManyInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    sucursalId?: number | null
    motivo?: string | null
  }

  export type EliminacionStockUpdateManyMutationInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoCreateInput = {
    fechaHora?: Date | string
    motivo?: string | null
    producto: ProductoCreateNestedOneWithoutEliminacionProductoInput
    usuario?: UsuarioCreateNestedOneWithoutEliminacionProductoInput
  }

  export type EliminacionProductoUncheckedCreateInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionProductoUpdateInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutEliminacionProductoNestedInput
    usuario?: UsuarioUpdateOneWithoutEliminacionProductoNestedInput
  }

  export type EliminacionProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoCreateManyInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionProductoUpdateManyMutationInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionClienteCreateInput = {
    fechaHora?: Date | string
    motivo?: string | null
    cliente: ClienteCreateNestedOneWithoutEliminacionClienteInput
    usuario?: UsuarioCreateNestedOneWithoutEliminacionClienteInput
  }

  export type EliminacionClienteUncheckedCreateInput = {
    id?: number
    clienteId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionClienteUpdateInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneRequiredWithoutEliminacionClienteNestedInput
    usuario?: UsuarioUpdateOneWithoutEliminacionClienteNestedInput
  }

  export type EliminacionClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionClienteCreateManyInput = {
    id?: number
    clienteId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionClienteUpdateManyMutationInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockCreateInput = {
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    producto: ProductoCreateNestedOneWithoutStockInput
    entregaStock?: EntregaStockCreateNestedOneWithoutStockEntregadoInput
    sucursal: SucursalCreateNestedOneWithoutProductosInput
    Vencimiento?: VencimientoCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutStockInput
  }

  export type StockUncheckedCreateInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    sucursalId: number
    Vencimiento?: VencimientoUncheckedCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutStockNestedInput
    entregaStock?: EntregaStockUpdateOneWithoutStockEntregadoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutProductosNestedInput
    Vencimiento?: VencimientoUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: IntFieldUpdateOperationsInput | number
    Vencimiento?: VencimientoUncheckedUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockCreateManyInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    sucursalId: number
  }

  export type StockUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
  }

  export type StockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type SucursalCreateInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalCreateManyInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
  }

  export type SucursalUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SucursalUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EntregaStockCreateInput = {
    montoTotal: number
    fechaEntrega?: Date | string
    proveedor?: ProveedorCreateNestedOneWithoutEntregasStockInput
    stockEntregado?: StockCreateNestedManyWithoutEntregaStockInput
    usuarioRecibido?: UsuarioCreateNestedOneWithoutEntregasRecibidasInput
    sucursal?: SucursalCreateNestedOneWithoutEntregaStockInput
  }

  export type EntregaStockUncheckedCreateInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
    sucursalId?: number | null
    stockEntregado?: StockUncheckedCreateNestedManyWithoutEntregaStockInput
  }

  export type EntregaStockUpdateInput = {
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: ProveedorUpdateOneWithoutEntregasStockNestedInput
    stockEntregado?: StockUpdateManyWithoutEntregaStockNestedInput
    usuarioRecibido?: UsuarioUpdateOneWithoutEntregasRecibidasNestedInput
    sucursal?: SucursalUpdateOneWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    stockEntregado?: StockUncheckedUpdateManyWithoutEntregaStockNestedInput
  }

  export type EntregaStockCreateManyInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
    sucursalId?: number | null
  }

  export type EntregaStockUpdateManyMutationInput = {
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EntregaStockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UsuarioCreateInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetaUsuarioCreateInput = {
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
    usuario: UsuarioCreateNestedOneWithoutMetaUsuarioInput
    sucursal: SucursalCreateNestedOneWithoutMetaUsuarioInput
  }

  export type MetaUsuarioUncheckedCreateInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioUpdateInput = {
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
    usuario?: UsuarioUpdateOneRequiredWithoutMetaUsuarioNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutMetaUsuarioNestedInput
  }

  export type MetaUsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioCreateManyInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioUpdateManyMutationInput = {
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaCobrosCreateInput = {
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    usuario: UsuarioCreateNestedOneWithoutMetaCobrosInput
    sucursal: SucursalCreateNestedOneWithoutMetaCobrosInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutMetaCobroInput
  }

  export type MetaCobrosUncheckedCreateInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutMetaCobroInput
  }

  export type MetaCobrosUpdateInput = {
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    usuario?: UsuarioUpdateOneRequiredWithoutMetaCobrosNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutMetaCobrosNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutMetaCobroNestedInput
  }

  export type MetaCobrosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutMetaCobroNestedInput
  }

  export type MetaCobrosCreateManyInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
  }

  export type MetaCobrosUpdateManyMutationInput = {
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
  }

  export type MetaCobrosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
  }

  export type DepositoCobroCreateInput = {
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    usuario: UsuarioCreateNestedOneWithoutDepositoCobroInput
    sucursal: SucursalCreateNestedOneWithoutDepositoCobroInput
    metaCobro: MetaCobrosCreateNestedOneWithoutDepositoCobroInput
  }

  export type DepositoCobroUncheckedCreateInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    metaCobroId: number
  }

  export type DepositoCobroUpdateInput = {
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutDepositoCobroNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutDepositoCobroNestedInput
    metaCobro?: MetaCobrosUpdateOneRequiredWithoutDepositoCobroNestedInput
  }

  export type DepositoCobroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    metaCobroId?: IntFieldUpdateOperationsInput | number
  }

  export type DepositoCobroCreateManyInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    metaCobroId: number
  }

  export type DepositoCobroUpdateManyMutationInput = {
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepositoCobroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    metaCobroId?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteCreateInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
  }

  export type ClienteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GarantiaCreateInput = {
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    cliente: ClienteCreateNestedOneWithoutGarantiaInput
    producto: ProductoCreateNestedOneWithoutGarantiaInput
    usuarioRecibe?: UsuarioCreateNestedOneWithoutGarantiaInput
    registros?: RegistroGarantiaCreateNestedManyWithoutGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutGarantiaInput
  }

  export type GarantiaUncheckedCreateInput = {
    id?: number
    clienteId: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
    registros?: RegistroGarantiaUncheckedCreateNestedManyWithoutGarantiaInput
  }

  export type GarantiaUpdateInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutGarantiaNestedInput
    usuarioRecibe?: UsuarioUpdateOneWithoutGarantiaNestedInput
    registros?: RegistroGarantiaUpdateManyWithoutGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    registros?: RegistroGarantiaUncheckedUpdateManyWithoutGarantiaNestedInput
  }

  export type GarantiaCreateManyInput = {
    id?: number
    clienteId: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
  }

  export type GarantiaUpdateManyMutationInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GarantiaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroGarantiaCreateInput = {
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    garantia: GarantiaCreateNestedOneWithoutRegistrosInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroGarantiaInput
    producto: ProductoCreateNestedOneWithoutRegistroGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutRegistroGarantiaInput
  }

  export type RegistroGarantiaUncheckedCreateInput = {
    id?: number
    garantiaId: number
    usuarioId?: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaUpdateInput = {
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    garantia?: GarantiaUpdateOneRequiredWithoutRegistrosNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutRegistroGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutRegistroGarantiaNestedInput
  }

  export type RegistroGarantiaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroGarantiaCreateManyInput = {
    id?: number
    garantiaId: number
    usuarioId?: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaUpdateManyMutationInput = {
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroGarantiaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PagoCreateInput = {
    monto: number
    metodoPago: $Enums.MetodoPago
    fechaPago?: Date | string
    venta: VentaCreateNestedOneWithoutMetodoPagoInput
  }

  export type PagoUncheckedCreateInput = {
    id?: number
    ventaId: number
    monto: number
    metodoPago: $Enums.MetodoPago
    fechaPago?: Date | string
  }

  export type PagoUpdateInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
    venta?: VentaUpdateOneRequiredWithoutMetodoPagoNestedInput
  }

  export type PagoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoCreateManyInput = {
    id?: number
    ventaId: number
    monto: number
    metodoPago: $Enums.MetodoPago
    fechaPago?: Date | string
  }

  export type PagoUpdateManyMutationInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialStockCreateInput = {
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio?: Date | string
    producto: ProductoCreateNestedOneWithoutHistorialStockInput
  }

  export type HistorialStockUncheckedCreateInput = {
    id?: number
    productoId: number
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio?: Date | string
  }

  export type HistorialStockUpdateInput = {
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutHistorialStockNestedInput
  }

  export type HistorialStockUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialStockCreateManyInput = {
    id?: number
    productoId: number
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio?: Date | string
  }

  export type HistorialStockUpdateManyMutationInput = {
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialStockUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaCreateInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    cliente?: ClienteCreateNestedOneWithoutComprasInput
    productos?: VentaProductoCreateNestedManyWithoutVentaInput
    metodoPago?: PagoCreateNestedOneWithoutVentaInput
    sucursal: SucursalCreateNestedOneWithoutVentaInput
    registroCaja?: RegistroCajaCreateNestedOneWithoutVentasInput
    ventaCuota?: VentaCuotaCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
    productos?: VentaProductoUncheckedCreateNestedManyWithoutVentaInput
    metodoPago?: PagoUncheckedCreateNestedOneWithoutVentaInput
    ventaCuota?: VentaCuotaUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaUpdateInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutComprasNestedInput
    productos?: VentaProductoUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUpdateOneWithoutVentaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaNestedInput
    registroCaja?: RegistroCajaUpdateOneWithoutVentasNestedInput
    ventaCuota?: VentaCuotaUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: VentaProductoUncheckedUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUncheckedUpdateOneWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type VentaCreateManyInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
  }

  export type VentaUpdateManyMutationInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoCreateInput = {
    cantidad: number
    fechaTransferencia?: Date | string
    producto: ProductoCreateNestedOneWithoutTransferenciaProductoInput
    sucursalOrigen: SucursalCreateNestedOneWithoutTransferenciaProductoInput
    sucursalDestino: SucursalCreateNestedOneWithoutTransferenciaProductoDestinoInput
    usuarioEncargado?: UsuarioCreateNestedOneWithoutTransferenciaProductoInput
  }

  export type TransferenciaProductoUncheckedCreateInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type TransferenciaProductoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutTransferenciaProductoDestinoNestedInput
    usuarioEncargado?: UsuarioUpdateOneWithoutTransferenciaProductoNestedInput
  }

  export type TransferenciaProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoCreateManyInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type TransferenciaProductoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferenciaProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoCreateInput = {
    cantidad: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudesTransferenciaInput
    sucursalOrigen: SucursalCreateNestedOneWithoutSolicitudesOrigenInput
    sucursalDestino: SucursalCreateNestedOneWithoutSolicitudesDestinoInput
    usuarioSolicitante?: UsuarioCreateNestedOneWithoutSolicitudesEnviadasInput
    administrador?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasTransferenciaInput
  }

  export type SolicitudTransferenciaProductoUncheckedCreateInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudesTransferenciaNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutSolicitudesOrigenNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutSolicitudesDestinoNestedInput
    usuarioSolicitante?: UsuarioUpdateOneWithoutSolicitudesEnviadasNestedInput
    administrador?: UsuarioUpdateOneWithoutSolicitudesAprobadasTransferenciaNestedInput
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoCreateManyInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaProductoCreateInput = {
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
    venta: VentaCreateNestedOneWithoutProductosInput
    producto?: ProductoCreateNestedOneWithoutVentasInput
  }

  export type VentaProductoUncheckedCreateInput = {
    id?: number
    ventaId: number
    productoId?: number | null
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
  }

  export type VentaProductoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
    venta?: VentaUpdateOneRequiredWithoutProductosNestedInput
    producto?: ProductoUpdateOneWithoutVentasNestedInput
  }

  export type VentaProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type VentaProductoCreateManyInput = {
    id?: number
    ventaId: number
    productoId?: number | null
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
  }

  export type VentaProductoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type VentaProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type ProveedorCreateInput = {
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    entregasStock?: EntregaStockCreateNestedManyWithoutProveedorInput
    Garantia?: GarantiaCreateNestedManyWithoutProveedorInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUncheckedCreateInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    entregasStock?: EntregaStockUncheckedCreateNestedManyWithoutProveedorInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProveedorInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasStock?: EntregaStockUpdateManyWithoutProveedorNestedInput
    Garantia?: GarantiaUpdateManyWithoutProveedorNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasStock?: EntregaStockUncheckedUpdateManyWithoutProveedorNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProveedorNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorCreateManyInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ProveedorUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProveedorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriaCreateInput = {
    nombre: string
    productos?: ProductoCreateNestedManyWithoutCategoriasInput
  }

  export type CategoriaUncheckedCreateInput = {
    id?: number
    nombre: string
    productos?: ProductoUncheckedCreateNestedManyWithoutCategoriasInput
  }

  export type CategoriaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    productos?: ProductoUpdateManyWithoutCategoriasNestedInput
  }

  export type CategoriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    productos?: ProductoUncheckedUpdateManyWithoutCategoriasNestedInput
  }

  export type CategoriaCreateManyInput = {
    id?: number
    nombre: string
  }

  export type CategoriaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type DepartamentoCreateInput = {
    nombre: string
    municipios?: MunicipioCreateNestedManyWithoutDepartamentoInput
    clientes?: ClienteCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateInput = {
    id?: number
    nombre: string
    municipios?: MunicipioUncheckedCreateNestedManyWithoutDepartamentoInput
    clientes?: ClienteUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    municipios?: MunicipioUpdateManyWithoutDepartamentoNestedInput
    clientes?: ClienteUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    municipios?: MunicipioUncheckedUpdateManyWithoutDepartamentoNestedInput
    clientes?: ClienteUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoCreateManyInput = {
    id?: number
    nombre: string
  }

  export type DepartamentoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type DepartamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type MunicipioCreateInput = {
    nombre: string
    departamento: DepartamentoCreateNestedOneWithoutMunicipiosInput
    clientes?: ClienteCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioUncheckedCreateInput = {
    id?: number
    nombre: string
    departamentoId: number
    clientes?: ClienteUncheckedCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    departamento?: DepartamentoUpdateOneRequiredWithoutMunicipiosNestedInput
    clientes?: ClienteUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    departamentoId?: IntFieldUpdateOperationsInput | number
    clientes?: ClienteUncheckedUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioCreateManyInput = {
    id?: number
    nombre: string
    departamentoId: number
  }

  export type MunicipioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type MunicipioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    departamentoId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumEstadoReparacionFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReparacion | EnumEstadoReparacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReparacionFilter<$PrismaModel> | $Enums.EstadoReparacion
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type SucursalRelationFilter = {
    is?: SucursalWhereInput
    isNot?: SucursalWhereInput
  }

  export type ClienteRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type ProductoNullableRelationFilter = {
    is?: ProductoWhereInput | null
    isNot?: ProductoWhereInput | null
  }

  export type RegistroReparacionListRelationFilter = {
    every?: RegistroReparacionWhereInput
    some?: RegistroReparacionWhereInput
    none?: RegistroReparacionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type RegistroReparacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReparacionCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    productoExterno?: SortOrder
    problemas?: SortOrder
    observaciones?: SortOrder
    fechaRecibido?: SortOrder
    fechaEntregado?: SortOrder
    estado?: SortOrder
    hojaSolucion?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ReparacionAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
  }

  export type ReparacionMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    productoExterno?: SortOrder
    problemas?: SortOrder
    observaciones?: SortOrder
    fechaRecibido?: SortOrder
    fechaEntregado?: SortOrder
    estado?: SortOrder
    hojaSolucion?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ReparacionMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    productoExterno?: SortOrder
    problemas?: SortOrder
    observaciones?: SortOrder
    fechaRecibido?: SortOrder
    fechaEntregado?: SortOrder
    estado?: SortOrder
    hojaSolucion?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ReparacionSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumEstadoReparacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReparacion | EnumEstadoReparacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReparacionWithAggregatesFilter<$PrismaModel> | $Enums.EstadoReparacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoReparacionFilter<$PrismaModel>
    _max?: NestedEnumEstadoReparacionFilter<$PrismaModel>
  }

  export type ReparacionRelationFilter = {
    is?: ReparacionWhereInput
    isNot?: ReparacionWhereInput
  }

  export type RegistroReparacionCountOrderByAggregateInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    comentarioFinal?: SortOrder
    montoPagado?: SortOrder
  }

  export type RegistroReparacionAvgOrderByAggregateInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    montoPagado?: SortOrder
  }

  export type RegistroReparacionMaxOrderByAggregateInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    comentarioFinal?: SortOrder
    montoPagado?: SortOrder
  }

  export type RegistroReparacionMinOrderByAggregateInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    comentarioFinal?: SortOrder
    montoPagado?: SortOrder
  }

  export type RegistroReparacionSumOrderByAggregateInput = {
    id?: SortOrder
    reparacionId?: SortOrder
    usuarioId?: SortOrder
    montoPagado?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumEstadoCuotaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCuota | EnumEstadoCuotaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCuotaFilter<$PrismaModel> | $Enums.EstadoCuota
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type CuotaListRelationFilter = {
    every?: CuotaWhereInput
    some?: CuotaWhereInput
    none?: CuotaWhereInput
  }

  export type VentaNullableRelationFilter = {
    is?: VentaWhereInput | null
    isNot?: VentaWhereInput | null
  }

  export type CuotaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaCuotaCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    fechaInicio?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    dpi?: SortOrder
    testigos?: SortOrder
    fechaContrato?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    comentario?: SortOrder
    ventaId?: SortOrder
    montoTotalConInteres?: SortOrder
  }

  export type VentaCuotaAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    ventaId?: SortOrder
    montoTotalConInteres?: SortOrder
  }

  export type VentaCuotaMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    fechaInicio?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    dpi?: SortOrder
    fechaContrato?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    comentario?: SortOrder
    ventaId?: SortOrder
    montoTotalConInteres?: SortOrder
  }

  export type VentaCuotaMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    fechaInicio?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    dpi?: SortOrder
    fechaContrato?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    comentario?: SortOrder
    ventaId?: SortOrder
    montoTotalConInteres?: SortOrder
  }

  export type VentaCuotaSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    totalVenta?: SortOrder
    cuotaInicial?: SortOrder
    cuotasTotales?: SortOrder
    montoVenta?: SortOrder
    garantiaMeses?: SortOrder
    totalPagado?: SortOrder
    diasEntrePagos?: SortOrder
    interes?: SortOrder
    ventaId?: SortOrder
    montoTotalConInteres?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumEstadoCuotaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCuota | EnumEstadoCuotaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCuotaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCuota
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoCuotaFilter<$PrismaModel>
    _max?: NestedEnumEstadoCuotaFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumEstadoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPago | EnumEstadoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPagoFilter<$PrismaModel> | $Enums.EstadoPago
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type VentaCuotaRelationFilter = {
    is?: VentaCuotaWhereInput
    isNot?: VentaCuotaWhereInput
  }

  export type UsuarioNullableRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type CuotaCountOrderByAggregateInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    fechaVencimiento?: SortOrder
    fechaPago?: SortOrder
    estado?: SortOrder
    usuarioId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    comentario?: SortOrder
    montoEsperado?: SortOrder
  }

  export type CuotaAvgOrderByAggregateInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    usuarioId?: SortOrder
    montoEsperado?: SortOrder
  }

  export type CuotaMaxOrderByAggregateInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    fechaVencimiento?: SortOrder
    fechaPago?: SortOrder
    estado?: SortOrder
    usuarioId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    comentario?: SortOrder
    montoEsperado?: SortOrder
  }

  export type CuotaMinOrderByAggregateInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    fechaVencimiento?: SortOrder
    fechaPago?: SortOrder
    estado?: SortOrder
    usuarioId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    comentario?: SortOrder
    montoEsperado?: SortOrder
  }

  export type CuotaSumOrderByAggregateInput = {
    id?: SortOrder
    ventaCuotaId?: SortOrder
    monto?: SortOrder
    usuarioId?: SortOrder
    montoEsperado?: SortOrder
  }

  export type EnumEstadoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPago | EnumEstadoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPagoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPagoFilter<$PrismaModel>
    _max?: NestedEnumEstadoPagoFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type SucursalNullableRelationFilter = {
    is?: SucursalWhereInput | null
    isNot?: SucursalWhereInput | null
  }

  export type PlantillaComprobanteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    texto?: SortOrder
    sucursalId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type PlantillaComprobanteAvgOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
  }

  export type PlantillaComprobanteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    texto?: SortOrder
    sucursalId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type PlantillaComprobanteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    texto?: SortOrder
    sucursalId?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type PlantillaComprobanteSumOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
  }

  export type ClienteNullableRelationFilter = {
    is?: ClienteWhereInput | null
    isNot?: ClienteWhereInput | null
  }

  export type VentaEliminadaProductoListRelationFilter = {
    every?: VentaEliminadaProductoWhereInput
    some?: VentaEliminadaProductoWhereInput
    none?: VentaEliminadaProductoWhereInput
  }

  export type VentaEliminadaProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaEliminadaCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrder
    fechaEliminacion?: SortOrder
    sucursalId?: SortOrder
  }

  export type VentaEliminadaAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrder
    sucursalId?: SortOrder
  }

  export type VentaEliminadaMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrder
    fechaEliminacion?: SortOrder
    sucursalId?: SortOrder
  }

  export type VentaEliminadaMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrder
    fechaEliminacion?: SortOrder
    sucursalId?: SortOrder
  }

  export type VentaEliminadaSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    totalVenta?: SortOrder
    clienteId?: SortOrder
    sucursalId?: SortOrder
  }

  export type VentaEliminadaRelationFilter = {
    is?: VentaEliminadaWhereInput
    isNot?: VentaEliminadaWhereInput
  }

  export type VentaEliminadaProductoCountOrderByAggregateInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
    creadoEn?: SortOrder
  }

  export type VentaEliminadaProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
  }

  export type VentaEliminadaProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
    creadoEn?: SortOrder
  }

  export type VentaEliminadaProductoMinOrderByAggregateInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
    creadoEn?: SortOrder
  }

  export type VentaEliminadaProductoSumOrderByAggregateInput = {
    id?: SortOrder
    ventaEliminadaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
  }

  export type SucursalSaldoCountOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoAvgOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
  }

  export type SucursalSaldoMaxOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoMinOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoSumOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    saldoAcumulado?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
  }

  export type EnumEstadoCajaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCaja | EnumEstadoCajaFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoCajaNullableFilter<$PrismaModel> | $Enums.EstadoCaja | null
  }

  export type DepositoListRelationFilter = {
    every?: DepositoWhereInput
    some?: DepositoWhereInput
    none?: DepositoWhereInput
  }

  export type EgresoListRelationFilter = {
    every?: EgresoWhereInput
    some?: EgresoWhereInput
    none?: EgresoWhereInput
  }

  export type VentaListRelationFilter = {
    every?: VentaWhereInput
    some?: VentaWhereInput
    none?: VentaWhereInput
  }

  export type DepositoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EgresoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegistroCajaCountOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    fechaInicio?: SortOrder
    fechaCierre?: SortOrder
    estado?: SortOrder
    comentario?: SortOrder
  }

  export type RegistroCajaAvgOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
  }

  export type RegistroCajaMaxOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    fechaInicio?: SortOrder
    fechaCierre?: SortOrder
    estado?: SortOrder
    comentario?: SortOrder
  }

  export type RegistroCajaMinOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    fechaInicio?: SortOrder
    fechaCierre?: SortOrder
    estado?: SortOrder
    comentario?: SortOrder
  }

  export type RegistroCajaSumOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
  }

  export type EnumEstadoCajaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCaja | EnumEstadoCajaFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoCajaNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCaja | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoCajaNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoCajaNullableFilter<$PrismaModel>
  }

  export type SucursalSaldoGlobalCountOrderByAggregateInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoGlobalAvgOrderByAggregateInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
  }

  export type SucursalSaldoGlobalMaxOrderByAggregateInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoGlobalMinOrderByAggregateInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type SucursalSaldoGlobalSumOrderByAggregateInput = {
    id?: SortOrder
    saldoGlobal?: SortOrder
    totalIngresos?: SortOrder
    totalEgresos?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type RegistroCajaNullableRelationFilter = {
    is?: RegistroCajaWhereInput | null
    isNot?: RegistroCajaWhereInput | null
  }

  export type DepositoCountOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    numeroBoleta?: SortOrder
    banco?: SortOrder
    fechaDeposito?: SortOrder
    usadoParaCierre?: SortOrder
    descripcion?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type DepositoAvgOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type DepositoMaxOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    numeroBoleta?: SortOrder
    banco?: SortOrder
    fechaDeposito?: SortOrder
    usadoParaCierre?: SortOrder
    descripcion?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type DepositoMinOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    numeroBoleta?: SortOrder
    banco?: SortOrder
    fechaDeposito?: SortOrder
    usadoParaCierre?: SortOrder
    descripcion?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type DepositoSumOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EgresoCountOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    descripcion?: SortOrder
    monto?: SortOrder
    fechaEgreso?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EgresoAvgOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EgresoMaxOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    descripcion?: SortOrder
    monto?: SortOrder
    fechaEgreso?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EgresoMinOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    descripcion?: SortOrder
    monto?: SortOrder
    fechaEgreso?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EgresoSumOrderByAggregateInput = {
    id?: SortOrder
    registroCajaId?: SortOrder
    monto?: SortOrder
    sucursalId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EnumEstadoTicketFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTicket | EnumEstadoTicketFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTicketFilter<$PrismaModel> | $Enums.EstadoTicket
  }

  export type TicketSorteoCountOrderByAggregateInput = {
    id?: SortOrder
    descripcionSorteo?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    estado?: SortOrder
  }

  export type TicketSorteoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TicketSorteoMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcionSorteo?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    estado?: SortOrder
  }

  export type TicketSorteoMinOrderByAggregateInput = {
    id?: SortOrder
    descripcionSorteo?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    estado?: SortOrder
  }

  export type TicketSorteoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumEstadoTicketWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTicket | EnumEstadoTicketFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTicketWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTicket
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTicketFilter<$PrismaModel>
    _max?: NestedEnumEstadoTicketFilter<$PrismaModel>
  }

  export type EnumEstadoVencimientoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoVencimiento | EnumEstadoVencimientoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoVencimientoFilter<$PrismaModel> | $Enums.EstadoVencimiento
  }

  export type StockNullableRelationFilter = {
    is?: StockWhereInput | null
    isNot?: StockWhereInput | null
  }

  export type VencimientoCountOrderByAggregateInput = {
    id?: SortOrder
    fechaVencimiento?: SortOrder
    estado?: SortOrder
    descripcion?: SortOrder
    stockId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type VencimientoAvgOrderByAggregateInput = {
    id?: SortOrder
    stockId?: SortOrder
  }

  export type VencimientoMaxOrderByAggregateInput = {
    id?: SortOrder
    fechaVencimiento?: SortOrder
    estado?: SortOrder
    descripcion?: SortOrder
    stockId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type VencimientoMinOrderByAggregateInput = {
    id?: SortOrder
    fechaVencimiento?: SortOrder
    estado?: SortOrder
    descripcion?: SortOrder
    stockId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type VencimientoSumOrderByAggregateInput = {
    id?: SortOrder
    stockId?: SortOrder
  }

  export type EnumEstadoVencimientoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoVencimiento | EnumEstadoVencimientoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoVencimientoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoVencimiento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoVencimientoFilter<$PrismaModel>
    _max?: NestedEnumEstadoVencimientoFilter<$PrismaModel>
  }

  export type EnumTipoNotificacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacion | EnumTipoNotificacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacionFilter<$PrismaModel> | $Enums.TipoNotificacion
  }

  export type NotificacionesUsuariosListRelationFilter = {
    every?: NotificacionesUsuariosWhereInput
    some?: NotificacionesUsuariosWhereInput
    none?: NotificacionesUsuariosWhereInput
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type NotificacionesUsuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificacionCountOrderByAggregateInput = {
    id?: SortOrder
    mensaje?: SortOrder
    remitenteId?: SortOrder
    tipoNotificacion?: SortOrder
    referenciaId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type NotificacionAvgOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    referenciaId?: SortOrder
  }

  export type NotificacionMaxOrderByAggregateInput = {
    id?: SortOrder
    mensaje?: SortOrder
    remitenteId?: SortOrder
    tipoNotificacion?: SortOrder
    referenciaId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type NotificacionMinOrderByAggregateInput = {
    id?: SortOrder
    mensaje?: SortOrder
    remitenteId?: SortOrder
    tipoNotificacion?: SortOrder
    referenciaId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type NotificacionSumOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    referenciaId?: SortOrder
  }

  export type EnumTipoNotificacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacion | EnumTipoNotificacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoNotificacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoNotificacionFilter<$PrismaModel>
    _max?: NestedEnumTipoNotificacionFilter<$PrismaModel>
  }

  export type NotificacionRelationFilter = {
    is?: NotificacionWhereInput
    isNot?: NotificacionWhereInput
  }

  export type NotificacionesUsuariosCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
    leido?: SortOrder
    eliminado?: SortOrder
    leidoEn?: SortOrder
    recibidoEn?: SortOrder
  }

  export type NotificacionesUsuariosAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
  }

  export type NotificacionesUsuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
    leido?: SortOrder
    eliminado?: SortOrder
    leidoEn?: SortOrder
    recibidoEn?: SortOrder
  }

  export type NotificacionesUsuariosMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
    leido?: SortOrder
    eliminado?: SortOrder
    leidoEn?: SortOrder
    recibidoEn?: SortOrder
  }

  export type NotificacionesUsuariosSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    notificacionId?: SortOrder
  }

  export type EnumEstadoSolicitudFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitud | EnumEstadoSolicitudFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudFilter<$PrismaModel> | $Enums.EstadoSolicitud
  }

  export type ProductoRelationFilter = {
    is?: ProductoWhereInput
    isNot?: ProductoWhereInput
  }

  export type SolicitudPrecioCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    estado?: SortOrder
    aprobadoPorId?: SortOrder
    fechaSolicitud?: SortOrder
    fechaRespuesta?: SortOrder
  }

  export type SolicitudPrecioAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    aprobadoPorId?: SortOrder
  }

  export type SolicitudPrecioMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    estado?: SortOrder
    aprobadoPorId?: SortOrder
    fechaSolicitud?: SortOrder
    fechaRespuesta?: SortOrder
  }

  export type SolicitudPrecioMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    estado?: SortOrder
    aprobadoPorId?: SortOrder
    fechaSolicitud?: SortOrder
    fechaRespuesta?: SortOrder
  }

  export type SolicitudPrecioSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioSolicitado?: SortOrder
    solicitadoPorId?: SortOrder
    aprobadoPorId?: SortOrder
  }

  export type EnumEstadoSolicitudWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitud | EnumEstadoSolicitudFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudWithAggregatesFilter<$PrismaModel> | $Enums.EstadoSolicitud
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoSolicitudFilter<$PrismaModel>
    _max?: NestedEnumEstadoSolicitudFilter<$PrismaModel>
  }

  export type StockListRelationFilter = {
    every?: StockWhereInput
    some?: StockWhereInput
    none?: StockWhereInput
  }

  export type CategoriaListRelationFilter = {
    every?: CategoriaWhereInput
    some?: CategoriaWhereInput
    none?: CategoriaWhereInput
  }

  export type VentaProductoListRelationFilter = {
    every?: VentaProductoWhereInput
    some?: VentaProductoWhereInput
    none?: VentaProductoWhereInput
  }

  export type HistorialStockListRelationFilter = {
    every?: HistorialStockWhereInput
    some?: HistorialStockWhereInput
    none?: HistorialStockWhereInput
  }

  export type HistorialPrecioListRelationFilter = {
    every?: HistorialPrecioWhereInput
    some?: HistorialPrecioWhereInput
    none?: HistorialPrecioWhereInput
  }

  export type TransferenciaProductoListRelationFilter = {
    every?: TransferenciaProductoWhereInput
    some?: TransferenciaProductoWhereInput
    none?: TransferenciaProductoWhereInput
  }

  export type PrecioProductoListRelationFilter = {
    every?: PrecioProductoWhereInput
    some?: PrecioProductoWhereInput
    none?: PrecioProductoWhereInput
  }

  export type SolicitudPrecioListRelationFilter = {
    every?: SolicitudPrecioWhereInput
    some?: SolicitudPrecioWhereInput
    none?: SolicitudPrecioWhereInput
  }

  export type SolicitudTransferenciaProductoListRelationFilter = {
    every?: SolicitudTransferenciaProductoWhereInput
    some?: SolicitudTransferenciaProductoWhereInput
    none?: SolicitudTransferenciaProductoWhereInput
  }

  export type HistorialPrecioCostoListRelationFilter = {
    every?: HistorialPrecioCostoWhereInput
    some?: HistorialPrecioCostoWhereInput
    none?: HistorialPrecioCostoWhereInput
  }

  export type AjusteStockListRelationFilter = {
    every?: AjusteStockWhereInput
    some?: AjusteStockWhereInput
    none?: AjusteStockWhereInput
  }

  export type EliminacionProductoListRelationFilter = {
    every?: EliminacionProductoWhereInput
    some?: EliminacionProductoWhereInput
    none?: EliminacionProductoWhereInput
  }

  export type EliminacionStockListRelationFilter = {
    every?: EliminacionStockWhereInput
    some?: EliminacionStockWhereInput
    none?: EliminacionStockWhereInput
  }

  export type GarantiaListRelationFilter = {
    every?: GarantiaWhereInput
    some?: GarantiaWhereInput
    none?: GarantiaWhereInput
  }

  export type RegistroGarantiaListRelationFilter = {
    every?: RegistroGarantiaWhereInput
    some?: RegistroGarantiaWhereInput
    none?: RegistroGarantiaWhereInput
  }

  export type ReparacionListRelationFilter = {
    every?: ReparacionWhereInput
    some?: ReparacionWhereInput
    none?: ReparacionWhereInput
  }

  export type StockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistorialStockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistorialPrecioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransferenciaProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PrecioProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SolicitudPrecioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SolicitudTransferenciaProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistorialPrecioCostoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AjusteStockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EliminacionProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EliminacionStockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GarantiaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegistroGarantiaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReparacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    codigoProducto?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    precioCostoActual?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    precioCostoActual?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    codigoProducto?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    precioCostoActual?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    codigoProducto?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    precioCostoActual?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    id?: SortOrder
    precioCostoActual?: SortOrder
  }

  export type HistorialPrecioCostoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    fechaCambio?: SortOrder
    modificadoPorId?: SortOrder
  }

  export type HistorialPrecioCostoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    modificadoPorId?: SortOrder
  }

  export type HistorialPrecioCostoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    fechaCambio?: SortOrder
    modificadoPorId?: SortOrder
  }

  export type HistorialPrecioCostoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    fechaCambio?: SortOrder
    modificadoPorId?: SortOrder
  }

  export type HistorialPrecioCostoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioCostoAnterior?: SortOrder
    precioCostoNuevo?: SortOrder
    modificadoPorId?: SortOrder
  }

  export type EnumEstadoPrecioFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPrecio | EnumEstadoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPrecioFilter<$PrismaModel> | $Enums.EstadoPrecio
  }

  export type EnumTipoPrecioFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPrecio | EnumTipoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPrecioFilter<$PrismaModel> | $Enums.TipoPrecio
  }

  export type PrecioProductoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrder
    fechaCreacion?: SortOrder
    estado?: SortOrder
    usado?: SortOrder
    tipo?: SortOrder
  }

  export type PrecioProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrder
  }

  export type PrecioProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrder
    fechaCreacion?: SortOrder
    estado?: SortOrder
    usado?: SortOrder
    tipo?: SortOrder
  }

  export type PrecioProductoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrder
    fechaCreacion?: SortOrder
    estado?: SortOrder
    usado?: SortOrder
    tipo?: SortOrder
  }

  export type PrecioProductoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precio?: SortOrder
    creadoPorId?: SortOrder
  }

  export type EnumEstadoPrecioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPrecio | EnumEstadoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPrecioWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPrecio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPrecioFilter<$PrismaModel>
    _max?: NestedEnumEstadoPrecioFilter<$PrismaModel>
  }

  export type EnumTipoPrecioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPrecio | EnumTipoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPrecioWithAggregatesFilter<$PrismaModel> | $Enums.TipoPrecio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPrecioFilter<$PrismaModel>
    _max?: NestedEnumTipoPrecioFilter<$PrismaModel>
  }

  export type HistorialPrecioCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
    fechaCambio?: SortOrder
  }

  export type HistorialPrecioAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
  }

  export type HistorialPrecioMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
    fechaCambio?: SortOrder
  }

  export type HistorialPrecioMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
    fechaCambio?: SortOrder
  }

  export type HistorialPrecioSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    precioAnterior?: SortOrder
    precioNuevo?: SortOrder
  }

  export type EnumTipoAjusteFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAjuste | EnumTipoAjusteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAjusteFilter<$PrismaModel> | $Enums.TipoAjuste
  }

  export type AjusteStockCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrder
    cantidadAjustada?: SortOrder
    tipoAjuste?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    descripcion?: SortOrder
  }

  export type AjusteStockAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrder
    cantidadAjustada?: SortOrder
    usuarioId?: SortOrder
  }

  export type AjusteStockMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrder
    cantidadAjustada?: SortOrder
    tipoAjuste?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    descripcion?: SortOrder
  }

  export type AjusteStockMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrder
    cantidadAjustada?: SortOrder
    tipoAjuste?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    descripcion?: SortOrder
  }

  export type AjusteStockSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    stockId?: SortOrder
    cantidadAjustada?: SortOrder
    usuarioId?: SortOrder
  }

  export type EnumTipoAjusteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAjuste | EnumTipoAjusteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAjusteWithAggregatesFilter<$PrismaModel> | $Enums.TipoAjuste
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoAjusteFilter<$PrismaModel>
    _max?: NestedEnumTipoAjusteFilter<$PrismaModel>
  }

  export type EliminacionStockCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionStockAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EliminacionStockMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionStockMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionStockSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EliminacionProductoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EliminacionProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionProductoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionProductoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EliminacionClienteCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionClienteAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EliminacionClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionClienteMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaHora?: SortOrder
    usuarioId?: SortOrder
    motivo?: SortOrder
  }

  export type EliminacionClienteSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EntregaStockNullableRelationFilter = {
    is?: EntregaStockWhereInput | null
    isNot?: EntregaStockWhereInput | null
  }

  export type VencimientoListRelationFilter = {
    every?: VencimientoWhereInput
    some?: VencimientoWhereInput
    none?: VencimientoWhereInput
  }

  export type VencimientoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    creadoEn?: SortOrder
    fechaIngreso?: SortOrder
    fechaVencimiento?: SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrder
    sucursalId?: SortOrder
  }

  export type StockAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrder
    sucursalId?: SortOrder
  }

  export type StockMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    creadoEn?: SortOrder
    fechaIngreso?: SortOrder
    fechaVencimiento?: SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrder
    sucursalId?: SortOrder
  }

  export type StockMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    creadoEn?: SortOrder
    fechaIngreso?: SortOrder
    fechaVencimiento?: SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrder
    sucursalId?: SortOrder
  }

  export type StockSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    costoTotal?: SortOrder
    precioCosto?: SortOrder
    entregaStockId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EnumTipoSucursalFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoSucursal | EnumTipoSucursalFieldRefInput<$PrismaModel>
    in?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoSucursalFilter<$PrismaModel> | $Enums.TipoSucursal
  }

  export type EntregaStockListRelationFilter = {
    every?: EntregaStockWhereInput
    some?: EntregaStockWhereInput
    none?: EntregaStockWhereInput
  }

  export type RegistroCajaListRelationFilter = {
    every?: RegistroCajaWhereInput
    some?: RegistroCajaWhereInput
    none?: RegistroCajaWhereInput
  }

  export type SucursalSaldoNullableRelationFilter = {
    is?: SucursalSaldoWhereInput | null
    isNot?: SucursalSaldoWhereInput | null
  }

  export type VentaEliminadaListRelationFilter = {
    every?: VentaEliminadaWhereInput
    some?: VentaEliminadaWhereInput
    none?: VentaEliminadaWhereInput
  }

  export type VentaCuotaListRelationFilter = {
    every?: VentaCuotaWhereInput
    some?: VentaCuotaWhereInput
    none?: VentaCuotaWhereInput
  }

  export type PlantillaComprobanteListRelationFilter = {
    every?: PlantillaComprobanteWhereInput
    some?: PlantillaComprobanteWhereInput
    none?: PlantillaComprobanteWhereInput
  }

  export type MetaUsuarioListRelationFilter = {
    every?: MetaUsuarioWhereInput
    some?: MetaUsuarioWhereInput
    none?: MetaUsuarioWhereInput
  }

  export type MetaCobrosListRelationFilter = {
    every?: MetaCobrosWhereInput
    some?: MetaCobrosWhereInput
    none?: MetaCobrosWhereInput
  }

  export type DepositoCobroListRelationFilter = {
    every?: DepositoCobroWhereInput
    some?: DepositoCobroWhereInput
    none?: DepositoCobroWhereInput
  }

  export type EntregaStockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegistroCajaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaEliminadaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VentaCuotaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PlantillaComprobanteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MetaUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MetaCobrosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepositoCobroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SucursalCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    pbx?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    tipoSucursal?: SortOrder
    estadoOperacion?: SortOrder
  }

  export type SucursalAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SucursalMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    pbx?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    tipoSucursal?: SortOrder
    estadoOperacion?: SortOrder
  }

  export type SucursalMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    pbx?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    tipoSucursal?: SortOrder
    estadoOperacion?: SortOrder
  }

  export type SucursalSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumTipoSucursalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoSucursal | EnumTipoSucursalFieldRefInput<$PrismaModel>
    in?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoSucursalWithAggregatesFilter<$PrismaModel> | $Enums.TipoSucursal
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoSucursalFilter<$PrismaModel>
    _max?: NestedEnumTipoSucursalFilter<$PrismaModel>
  }

  export type ProveedorNullableRelationFilter = {
    is?: ProveedorWhereInput | null
    isNot?: ProveedorWhereInput | null
  }

  export type EntregaStockCountOrderByAggregateInput = {
    id?: SortOrder
    proveedorId?: SortOrder
    montoTotal?: SortOrder
    fechaEntrega?: SortOrder
    recibidoPorId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EntregaStockAvgOrderByAggregateInput = {
    id?: SortOrder
    proveedorId?: SortOrder
    montoTotal?: SortOrder
    recibidoPorId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EntregaStockMaxOrderByAggregateInput = {
    id?: SortOrder
    proveedorId?: SortOrder
    montoTotal?: SortOrder
    fechaEntrega?: SortOrder
    recibidoPorId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EntregaStockMinOrderByAggregateInput = {
    id?: SortOrder
    proveedorId?: SortOrder
    montoTotal?: SortOrder
    fechaEntrega?: SortOrder
    recibidoPorId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EntregaStockSumOrderByAggregateInput = {
    id?: SortOrder
    proveedorId?: SortOrder
    montoTotal?: SortOrder
    recibidoPorId?: SortOrder
    sucursalId?: SortOrder
  }

  export type EnumRolFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolFilter<$PrismaModel> | $Enums.Rol
  }

  export type NotificacionListRelationFilter = {
    every?: NotificacionWhereInput
    some?: NotificacionWhereInput
    none?: NotificacionWhereInput
  }

  export type EliminacionClienteListRelationFilter = {
    every?: EliminacionClienteWhereInput
    some?: EliminacionClienteWhereInput
    none?: EliminacionClienteWhereInput
  }

  export type NotificacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EliminacionClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    rol?: SortOrder
    contrasena?: SortOrder
    activo?: SortOrder
    correo?: SortOrder
    sucursalId?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    rol?: SortOrder
    contrasena?: SortOrder
    activo?: SortOrder
    correo?: SortOrder
    sucursalId?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    rol?: SortOrder
    contrasena?: SortOrder
    activo?: SortOrder
    correo?: SortOrder
    sucursalId?: SortOrder
    fecha_creacion?: SortOrder
    fecha_actualizacion?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    sucursalId?: SortOrder
  }

  export type EnumRolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolWithAggregatesFilter<$PrismaModel> | $Enums.Rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolFilter<$PrismaModel>
    _max?: NestedEnumRolFilter<$PrismaModel>
  }

  export type EnumEstadoMetaTiendaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaTienda | EnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaTiendaFilter<$PrismaModel> | $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrder
    numeroVentas?: SortOrder
    tituloMeta?: SortOrder
    estado?: SortOrder
  }

  export type MetaUsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    numeroVentas?: SortOrder
  }

  export type MetaUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrder
    numeroVentas?: SortOrder
    tituloMeta?: SortOrder
    estado?: SortOrder
  }

  export type MetaUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrder
    numeroVentas?: SortOrder
    tituloMeta?: SortOrder
    estado?: SortOrder
  }

  export type MetaUsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    numeroVentas?: SortOrder
  }

  export type EnumEstadoMetaTiendaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaTienda | EnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaTiendaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoMetaTienda
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoMetaTiendaFilter<$PrismaModel>
    _max?: NestedEnumEstadoMetaTiendaFilter<$PrismaModel>
  }

  export type EnumEstadoMetaCobroFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaCobro | EnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaCobroFilter<$PrismaModel> | $Enums.EstadoMetaCobro
  }

  export type MetaCobrosCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaCreado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrder
    numeroDepositos?: SortOrder
    tituloMeta?: SortOrder
    estado?: SortOrder
  }

  export type MetaCobrosAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    numeroDepositos?: SortOrder
  }

  export type MetaCobrosMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaCreado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrder
    numeroDepositos?: SortOrder
    tituloMeta?: SortOrder
    estado?: SortOrder
  }

  export type MetaCobrosMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    fechaCreado?: SortOrder
    fechaInicio?: SortOrder
    fechaFin?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    cumplida?: SortOrder
    fechaCumplida?: SortOrder
    numeroDepositos?: SortOrder
    tituloMeta?: SortOrder
    estado?: SortOrder
  }

  export type MetaCobrosSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    montoMeta?: SortOrder
    montoActual?: SortOrder
    numeroDepositos?: SortOrder
  }

  export type EnumEstadoMetaCobroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaCobro | EnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaCobroWithAggregatesFilter<$PrismaModel> | $Enums.EstadoMetaCobro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoMetaCobroFilter<$PrismaModel>
    _max?: NestedEnumEstadoMetaCobroFilter<$PrismaModel>
  }

  export type MetaCobrosRelationFilter = {
    is?: MetaCobrosWhereInput
    isNot?: MetaCobrosWhereInput
  }

  export type DepositoCobroCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    numeroBoleta?: SortOrder
    fechaRegistro?: SortOrder
    montoDepositado?: SortOrder
    descripcion?: SortOrder
    metaCobroId?: SortOrder
  }

  export type DepositoCobroAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    montoDepositado?: SortOrder
    metaCobroId?: SortOrder
  }

  export type DepositoCobroMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    numeroBoleta?: SortOrder
    fechaRegistro?: SortOrder
    montoDepositado?: SortOrder
    descripcion?: SortOrder
    metaCobroId?: SortOrder
  }

  export type DepositoCobroMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    numeroBoleta?: SortOrder
    fechaRegistro?: SortOrder
    montoDepositado?: SortOrder
    descripcion?: SortOrder
    metaCobroId?: SortOrder
  }

  export type DepositoCobroSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    sucursalId?: SortOrder
    montoDepositado?: SortOrder
    metaCobroId?: SortOrder
  }

  export type MunicipioNullableRelationFilter = {
    is?: MunicipioWhereInput | null
    isNot?: MunicipioWhereInput | null
  }

  export type DepartamentoNullableRelationFilter = {
    is?: DepartamentoWhereInput | null
    isNot?: DepartamentoWhereInput | null
  }

  export type ClienteDpiIdCompoundUniqueInput = {
    dpi: string
    id: number
  }

  export type ClienteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    municipioId?: SortOrder
    departamentoId?: SortOrder
    dpi?: SortOrder
    iPInternet?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    id?: SortOrder
    municipioId?: SortOrder
    departamentoId?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    municipioId?: SortOrder
    departamentoId?: SortOrder
    dpi?: SortOrder
    iPInternet?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    municipioId?: SortOrder
    departamentoId?: SortOrder
    dpi?: SortOrder
    iPInternet?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    id?: SortOrder
    municipioId?: SortOrder
    departamentoId?: SortOrder
  }

  export type EnumEstadoGarantiaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoGarantia | EnumEstadoGarantiaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoGarantiaFilter<$PrismaModel> | $Enums.EstadoGarantia
  }

  export type GarantiaCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrder
    comentario?: SortOrder
    descripcionProblema?: SortOrder
    fechaRecepcion?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    proveedorId?: SortOrder
  }

  export type GarantiaAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrder
    proveedorId?: SortOrder
  }

  export type GarantiaMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrder
    comentario?: SortOrder
    descripcionProblema?: SortOrder
    fechaRecepcion?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    proveedorId?: SortOrder
  }

  export type GarantiaMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrder
    comentario?: SortOrder
    descripcionProblema?: SortOrder
    fechaRecepcion?: SortOrder
    estado?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
    proveedorId?: SortOrder
  }

  export type GarantiaSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    productoId?: SortOrder
    usuarioIdRecibe?: SortOrder
    proveedorId?: SortOrder
  }

  export type EnumEstadoGarantiaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoGarantia | EnumEstadoGarantiaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoGarantiaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoGarantia
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoGarantiaFilter<$PrismaModel>
    _max?: NestedEnumEstadoGarantiaFilter<$PrismaModel>
  }

  export type GarantiaRelationFilter = {
    is?: GarantiaWhereInput
    isNot?: GarantiaWhereInput
  }

  export type RegistroGarantiaCountOrderByAggregateInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    estado?: SortOrder
    conclusion?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    proveedorId?: SortOrder
  }

  export type RegistroGarantiaAvgOrderByAggregateInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    proveedorId?: SortOrder
  }

  export type RegistroGarantiaMaxOrderByAggregateInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    estado?: SortOrder
    conclusion?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    proveedorId?: SortOrder
  }

  export type RegistroGarantiaMinOrderByAggregateInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    estado?: SortOrder
    conclusion?: SortOrder
    accionesRealizadas?: SortOrder
    fechaRegistro?: SortOrder
    proveedorId?: SortOrder
  }

  export type RegistroGarantiaSumOrderByAggregateInput = {
    id?: SortOrder
    garantiaId?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    proveedorId?: SortOrder
  }

  export type EnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type VentaRelationFilter = {
    is?: VentaWhereInput
    isNot?: VentaWhereInput
  }

  export type PagoCountOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
    metodoPago?: SortOrder
    fechaPago?: SortOrder
  }

  export type PagoAvgOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
  }

  export type PagoMaxOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
    metodoPago?: SortOrder
    fechaPago?: SortOrder
  }

  export type PagoMinOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
    metodoPago?: SortOrder
    fechaPago?: SortOrder
  }

  export type PagoSumOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    monto?: SortOrder
  }

  export type EnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }

  export type HistorialStockCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
    fechaCambio?: SortOrder
  }

  export type HistorialStockAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
  }

  export type HistorialStockMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
    fechaCambio?: SortOrder
  }

  export type HistorialStockMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
    fechaCambio?: SortOrder
  }

  export type HistorialStockSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidadAnterior?: SortOrder
    cantidadNueva?: SortOrder
  }

  export type PagoNullableRelationFilter = {
    is?: PagoWhereInput | null
    isNot?: PagoWhereInput | null
  }

  export type VentaCuotaNullableRelationFilter = {
    is?: VentaCuotaWhereInput | null
    isNot?: VentaCuotaWhereInput | null
  }

  export type VentaImeiIdCompoundUniqueInput = {
    imei: string
    id: number
  }

  export type VentaCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaVenta?: SortOrder
    horaVenta?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    nombreClienteFinal?: SortOrder
    telefonoClienteFinal?: SortOrder
    direccionClienteFinal?: SortOrder
    imei?: SortOrder
    registroCajaId?: SortOrder
  }

  export type VentaAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    registroCajaId?: SortOrder
  }

  export type VentaMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaVenta?: SortOrder
    horaVenta?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    nombreClienteFinal?: SortOrder
    telefonoClienteFinal?: SortOrder
    direccionClienteFinal?: SortOrder
    imei?: SortOrder
    registroCajaId?: SortOrder
  }

  export type VentaMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    fechaVenta?: SortOrder
    horaVenta?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    nombreClienteFinal?: SortOrder
    telefonoClienteFinal?: SortOrder
    direccionClienteFinal?: SortOrder
    imei?: SortOrder
    registroCajaId?: SortOrder
  }

  export type VentaSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    totalVenta?: SortOrder
    sucursalId?: SortOrder
    registroCajaId?: SortOrder
  }

  export type TransferenciaProductoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    fechaTransferencia?: SortOrder
    usuarioEncargadoId?: SortOrder
  }

  export type TransferenciaProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioEncargadoId?: SortOrder
  }

  export type TransferenciaProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    fechaTransferencia?: SortOrder
    usuarioEncargadoId?: SortOrder
  }

  export type TransferenciaProductoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    fechaTransferencia?: SortOrder
    usuarioEncargadoId?: SortOrder
  }

  export type TransferenciaProductoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioEncargadoId?: SortOrder
  }

  export type EnumEstadoSolicitudTransferenciaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitudTransferencia | EnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel> | $Enums.EstadoSolicitudTransferencia
  }

  export type SolicitudTransferenciaProductoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrder
    estado?: SortOrder
    fechaSolicitud?: SortOrder
    fechaAprobacion?: SortOrder
    administradorId?: SortOrder
  }

  export type SolicitudTransferenciaProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrder
    administradorId?: SortOrder
  }

  export type SolicitudTransferenciaProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrder
    estado?: SortOrder
    fechaSolicitud?: SortOrder
    fechaAprobacion?: SortOrder
    administradorId?: SortOrder
  }

  export type SolicitudTransferenciaProductoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrder
    estado?: SortOrder
    fechaSolicitud?: SortOrder
    fechaAprobacion?: SortOrder
    administradorId?: SortOrder
  }

  export type SolicitudTransferenciaProductoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    sucursalOrigenId?: SortOrder
    sucursalDestinoId?: SortOrder
    usuarioSolicitanteId?: SortOrder
    administradorId?: SortOrder
  }

  export type EnumEstadoSolicitudTransferenciaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitudTransferencia | EnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudTransferenciaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoSolicitudTransferencia
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel>
    _max?: NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel>
  }

  export type VentaProductoCountOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    creadoEn?: SortOrder
    precioVenta?: SortOrder
  }

  export type VentaProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
  }

  export type VentaProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    creadoEn?: SortOrder
    precioVenta?: SortOrder
  }

  export type VentaProductoMinOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    creadoEn?: SortOrder
    precioVenta?: SortOrder
  }

  export type VentaProductoSumOrderByAggregateInput = {
    id?: SortOrder
    ventaId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    precioVenta?: SortOrder
  }

  export type ProveedorCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    razonSocial?: SortOrder
    rfc?: SortOrder
    nombreContacto?: SortOrder
    telefonoContacto?: SortOrder
    emailContacto?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    codigoPostal?: SortOrder
    latitud?: SortOrder
    longitud?: SortOrder
    activo?: SortOrder
    notas?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ProveedorAvgOrderByAggregateInput = {
    id?: SortOrder
    latitud?: SortOrder
    longitud?: SortOrder
  }

  export type ProveedorMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    razonSocial?: SortOrder
    rfc?: SortOrder
    nombreContacto?: SortOrder
    telefonoContacto?: SortOrder
    emailContacto?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    codigoPostal?: SortOrder
    latitud?: SortOrder
    longitud?: SortOrder
    activo?: SortOrder
    notas?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ProveedorMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    razonSocial?: SortOrder
    rfc?: SortOrder
    nombreContacto?: SortOrder
    telefonoContacto?: SortOrder
    emailContacto?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    codigoPostal?: SortOrder
    latitud?: SortOrder
    longitud?: SortOrder
    activo?: SortOrder
    notas?: SortOrder
    creadoEn?: SortOrder
    actualizadoEn?: SortOrder
  }

  export type ProveedorSumOrderByAggregateInput = {
    id?: SortOrder
    latitud?: SortOrder
    longitud?: SortOrder
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type CategoriaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoriaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type CategoriaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type CategoriaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MunicipioListRelationFilter = {
    every?: MunicipioWhereInput
    some?: MunicipioWhereInput
    none?: MunicipioWhereInput
  }

  export type ClienteListRelationFilter = {
    every?: ClienteWhereInput
    some?: ClienteWhereInput
    none?: ClienteWhereInput
  }

  export type MunicipioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepartamentoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type DepartamentoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DepartamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type DepartamentoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type DepartamentoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DepartamentoRelationFilter = {
    is?: DepartamentoWhereInput
    isNot?: DepartamentoWhereInput
  }

  export type MunicipioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    departamentoId?: SortOrder
  }

  export type MunicipioAvgOrderByAggregateInput = {
    id?: SortOrder
    departamentoId?: SortOrder
  }

  export type MunicipioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    departamentoId?: SortOrder
  }

  export type MunicipioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    departamentoId?: SortOrder
  }

  export type MunicipioSumOrderByAggregateInput = {
    id?: SortOrder
    departamentoId?: SortOrder
  }

  export type UsuarioCreateNestedOneWithoutReparacionInput = {
    create?: XOR<UsuarioCreateWithoutReparacionInput, UsuarioUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutReparacionInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutReparacionInput = {
    create?: XOR<SucursalCreateWithoutReparacionInput, SucursalUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutReparacionInput
    connect?: SucursalWhereUniqueInput
  }

  export type ClienteCreateNestedOneWithoutReparacionInput = {
    create?: XOR<ClienteCreateWithoutReparacionInput, ClienteUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutReparacionInput
    connect?: ClienteWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutReparacionInput = {
    create?: XOR<ProductoCreateWithoutReparacionInput, ProductoUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutReparacionInput
    connect?: ProductoWhereUniqueInput
  }

  export type RegistroReparacionCreateNestedManyWithoutReparacionInput = {
    create?: XOR<RegistroReparacionCreateWithoutReparacionInput, RegistroReparacionUncheckedCreateWithoutReparacionInput> | RegistroReparacionCreateWithoutReparacionInput[] | RegistroReparacionUncheckedCreateWithoutReparacionInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutReparacionInput | RegistroReparacionCreateOrConnectWithoutReparacionInput[]
    createMany?: RegistroReparacionCreateManyReparacionInputEnvelope
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
  }

  export type RegistroReparacionUncheckedCreateNestedManyWithoutReparacionInput = {
    create?: XOR<RegistroReparacionCreateWithoutReparacionInput, RegistroReparacionUncheckedCreateWithoutReparacionInput> | RegistroReparacionCreateWithoutReparacionInput[] | RegistroReparacionUncheckedCreateWithoutReparacionInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutReparacionInput | RegistroReparacionCreateOrConnectWithoutReparacionInput[]
    createMany?: RegistroReparacionCreateManyReparacionInputEnvelope
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumEstadoReparacionFieldUpdateOperationsInput = {
    set?: $Enums.EstadoReparacion
  }

  export type UsuarioUpdateOneRequiredWithoutReparacionNestedInput = {
    create?: XOR<UsuarioCreateWithoutReparacionInput, UsuarioUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutReparacionInput
    upsert?: UsuarioUpsertWithoutReparacionInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutReparacionInput, UsuarioUpdateWithoutReparacionInput>, UsuarioUncheckedUpdateWithoutReparacionInput>
  }

  export type SucursalUpdateOneRequiredWithoutReparacionNestedInput = {
    create?: XOR<SucursalCreateWithoutReparacionInput, SucursalUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutReparacionInput
    upsert?: SucursalUpsertWithoutReparacionInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutReparacionInput, SucursalUpdateWithoutReparacionInput>, SucursalUncheckedUpdateWithoutReparacionInput>
  }

  export type ClienteUpdateOneRequiredWithoutReparacionNestedInput = {
    create?: XOR<ClienteCreateWithoutReparacionInput, ClienteUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutReparacionInput
    upsert?: ClienteUpsertWithoutReparacionInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutReparacionInput, ClienteUpdateWithoutReparacionInput>, ClienteUncheckedUpdateWithoutReparacionInput>
  }

  export type ProductoUpdateOneWithoutReparacionNestedInput = {
    create?: XOR<ProductoCreateWithoutReparacionInput, ProductoUncheckedCreateWithoutReparacionInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutReparacionInput
    upsert?: ProductoUpsertWithoutReparacionInput
    disconnect?: ProductoWhereInput | boolean
    delete?: ProductoWhereInput | boolean
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutReparacionInput, ProductoUpdateWithoutReparacionInput>, ProductoUncheckedUpdateWithoutReparacionInput>
  }

  export type RegistroReparacionUpdateManyWithoutReparacionNestedInput = {
    create?: XOR<RegistroReparacionCreateWithoutReparacionInput, RegistroReparacionUncheckedCreateWithoutReparacionInput> | RegistroReparacionCreateWithoutReparacionInput[] | RegistroReparacionUncheckedCreateWithoutReparacionInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutReparacionInput | RegistroReparacionCreateOrConnectWithoutReparacionInput[]
    upsert?: RegistroReparacionUpsertWithWhereUniqueWithoutReparacionInput | RegistroReparacionUpsertWithWhereUniqueWithoutReparacionInput[]
    createMany?: RegistroReparacionCreateManyReparacionInputEnvelope
    set?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    disconnect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    delete?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    update?: RegistroReparacionUpdateWithWhereUniqueWithoutReparacionInput | RegistroReparacionUpdateWithWhereUniqueWithoutReparacionInput[]
    updateMany?: RegistroReparacionUpdateManyWithWhereWithoutReparacionInput | RegistroReparacionUpdateManyWithWhereWithoutReparacionInput[]
    deleteMany?: RegistroReparacionScalarWhereInput | RegistroReparacionScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RegistroReparacionUncheckedUpdateManyWithoutReparacionNestedInput = {
    create?: XOR<RegistroReparacionCreateWithoutReparacionInput, RegistroReparacionUncheckedCreateWithoutReparacionInput> | RegistroReparacionCreateWithoutReparacionInput[] | RegistroReparacionUncheckedCreateWithoutReparacionInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutReparacionInput | RegistroReparacionCreateOrConnectWithoutReparacionInput[]
    upsert?: RegistroReparacionUpsertWithWhereUniqueWithoutReparacionInput | RegistroReparacionUpsertWithWhereUniqueWithoutReparacionInput[]
    createMany?: RegistroReparacionCreateManyReparacionInputEnvelope
    set?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    disconnect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    delete?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    update?: RegistroReparacionUpdateWithWhereUniqueWithoutReparacionInput | RegistroReparacionUpdateWithWhereUniqueWithoutReparacionInput[]
    updateMany?: RegistroReparacionUpdateManyWithWhereWithoutReparacionInput | RegistroReparacionUpdateManyWithWhereWithoutReparacionInput[]
    deleteMany?: RegistroReparacionScalarWhereInput | RegistroReparacionScalarWhereInput[]
  }

  export type ReparacionCreateNestedOneWithoutRegistrosInput = {
    create?: XOR<ReparacionCreateWithoutRegistrosInput, ReparacionUncheckedCreateWithoutRegistrosInput>
    connectOrCreate?: ReparacionCreateOrConnectWithoutRegistrosInput
    connect?: ReparacionWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutRegistroReparacionInput = {
    create?: XOR<UsuarioCreateWithoutRegistroReparacionInput, UsuarioUncheckedCreateWithoutRegistroReparacionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRegistroReparacionInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ReparacionUpdateOneRequiredWithoutRegistrosNestedInput = {
    create?: XOR<ReparacionCreateWithoutRegistrosInput, ReparacionUncheckedCreateWithoutRegistrosInput>
    connectOrCreate?: ReparacionCreateOrConnectWithoutRegistrosInput
    upsert?: ReparacionUpsertWithoutRegistrosInput
    connect?: ReparacionWhereUniqueInput
    update?: XOR<XOR<ReparacionUpdateToOneWithWhereWithoutRegistrosInput, ReparacionUpdateWithoutRegistrosInput>, ReparacionUncheckedUpdateWithoutRegistrosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutRegistroReparacionNestedInput = {
    create?: XOR<UsuarioCreateWithoutRegistroReparacionInput, UsuarioUncheckedCreateWithoutRegistroReparacionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRegistroReparacionInput
    upsert?: UsuarioUpsertWithoutRegistroReparacionInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutRegistroReparacionInput, UsuarioUpdateWithoutRegistroReparacionInput>, UsuarioUncheckedUpdateWithoutRegistroReparacionInput>
  }

  export type ClienteCreateNestedOneWithoutVentaCuotaInput = {
    create?: XOR<ClienteCreateWithoutVentaCuotaInput, ClienteUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutVentaCuotaInput
    connect?: ClienteWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutVentaCuotaInput = {
    create?: XOR<UsuarioCreateWithoutVentaCuotaInput, UsuarioUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutVentaCuotaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutVentaCuotaInput = {
    create?: XOR<SucursalCreateWithoutVentaCuotaInput, SucursalUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentaCuotaInput
    connect?: SucursalWhereUniqueInput
  }

  export type CuotaCreateNestedManyWithoutVentaCuotaInput = {
    create?: XOR<CuotaCreateWithoutVentaCuotaInput, CuotaUncheckedCreateWithoutVentaCuotaInput> | CuotaCreateWithoutVentaCuotaInput[] | CuotaUncheckedCreateWithoutVentaCuotaInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutVentaCuotaInput | CuotaCreateOrConnectWithoutVentaCuotaInput[]
    createMany?: CuotaCreateManyVentaCuotaInputEnvelope
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
  }

  export type VentaCreateNestedOneWithoutVentaCuotaInput = {
    create?: XOR<VentaCreateWithoutVentaCuotaInput, VentaUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: VentaCreateOrConnectWithoutVentaCuotaInput
    connect?: VentaWhereUniqueInput
  }

  export type CuotaUncheckedCreateNestedManyWithoutVentaCuotaInput = {
    create?: XOR<CuotaCreateWithoutVentaCuotaInput, CuotaUncheckedCreateWithoutVentaCuotaInput> | CuotaCreateWithoutVentaCuotaInput[] | CuotaUncheckedCreateWithoutVentaCuotaInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutVentaCuotaInput | CuotaCreateOrConnectWithoutVentaCuotaInput[]
    createMany?: CuotaCreateManyVentaCuotaInputEnvelope
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumEstadoCuotaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoCuota
  }

  export type ClienteUpdateOneRequiredWithoutVentaCuotaNestedInput = {
    create?: XOR<ClienteCreateWithoutVentaCuotaInput, ClienteUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutVentaCuotaInput
    upsert?: ClienteUpsertWithoutVentaCuotaInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutVentaCuotaInput, ClienteUpdateWithoutVentaCuotaInput>, ClienteUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type UsuarioUpdateOneRequiredWithoutVentaCuotaNestedInput = {
    create?: XOR<UsuarioCreateWithoutVentaCuotaInput, UsuarioUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutVentaCuotaInput
    upsert?: UsuarioUpsertWithoutVentaCuotaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutVentaCuotaInput, UsuarioUpdateWithoutVentaCuotaInput>, UsuarioUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type SucursalUpdateOneRequiredWithoutVentaCuotaNestedInput = {
    create?: XOR<SucursalCreateWithoutVentaCuotaInput, SucursalUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentaCuotaInput
    upsert?: SucursalUpsertWithoutVentaCuotaInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutVentaCuotaInput, SucursalUpdateWithoutVentaCuotaInput>, SucursalUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type CuotaUpdateManyWithoutVentaCuotaNestedInput = {
    create?: XOR<CuotaCreateWithoutVentaCuotaInput, CuotaUncheckedCreateWithoutVentaCuotaInput> | CuotaCreateWithoutVentaCuotaInput[] | CuotaUncheckedCreateWithoutVentaCuotaInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutVentaCuotaInput | CuotaCreateOrConnectWithoutVentaCuotaInput[]
    upsert?: CuotaUpsertWithWhereUniqueWithoutVentaCuotaInput | CuotaUpsertWithWhereUniqueWithoutVentaCuotaInput[]
    createMany?: CuotaCreateManyVentaCuotaInputEnvelope
    set?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    disconnect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    delete?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    update?: CuotaUpdateWithWhereUniqueWithoutVentaCuotaInput | CuotaUpdateWithWhereUniqueWithoutVentaCuotaInput[]
    updateMany?: CuotaUpdateManyWithWhereWithoutVentaCuotaInput | CuotaUpdateManyWithWhereWithoutVentaCuotaInput[]
    deleteMany?: CuotaScalarWhereInput | CuotaScalarWhereInput[]
  }

  export type VentaUpdateOneWithoutVentaCuotaNestedInput = {
    create?: XOR<VentaCreateWithoutVentaCuotaInput, VentaUncheckedCreateWithoutVentaCuotaInput>
    connectOrCreate?: VentaCreateOrConnectWithoutVentaCuotaInput
    upsert?: VentaUpsertWithoutVentaCuotaInput
    disconnect?: VentaWhereInput | boolean
    delete?: VentaWhereInput | boolean
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutVentaCuotaInput, VentaUpdateWithoutVentaCuotaInput>, VentaUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type CuotaUncheckedUpdateManyWithoutVentaCuotaNestedInput = {
    create?: XOR<CuotaCreateWithoutVentaCuotaInput, CuotaUncheckedCreateWithoutVentaCuotaInput> | CuotaCreateWithoutVentaCuotaInput[] | CuotaUncheckedCreateWithoutVentaCuotaInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutVentaCuotaInput | CuotaCreateOrConnectWithoutVentaCuotaInput[]
    upsert?: CuotaUpsertWithWhereUniqueWithoutVentaCuotaInput | CuotaUpsertWithWhereUniqueWithoutVentaCuotaInput[]
    createMany?: CuotaCreateManyVentaCuotaInputEnvelope
    set?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    disconnect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    delete?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    update?: CuotaUpdateWithWhereUniqueWithoutVentaCuotaInput | CuotaUpdateWithWhereUniqueWithoutVentaCuotaInput[]
    updateMany?: CuotaUpdateManyWithWhereWithoutVentaCuotaInput | CuotaUpdateManyWithWhereWithoutVentaCuotaInput[]
    deleteMany?: CuotaScalarWhereInput | CuotaScalarWhereInput[]
  }

  export type VentaCuotaCreateNestedOneWithoutCuotasInput = {
    create?: XOR<VentaCuotaCreateWithoutCuotasInput, VentaCuotaUncheckedCreateWithoutCuotasInput>
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutCuotasInput
    connect?: VentaCuotaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutCuotaInput = {
    create?: XOR<UsuarioCreateWithoutCuotaInput, UsuarioUncheckedCreateWithoutCuotaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCuotaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumEstadoPagoFieldUpdateOperationsInput = {
    set?: $Enums.EstadoPago
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type VentaCuotaUpdateOneRequiredWithoutCuotasNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutCuotasInput, VentaCuotaUncheckedCreateWithoutCuotasInput>
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutCuotasInput
    upsert?: VentaCuotaUpsertWithoutCuotasInput
    connect?: VentaCuotaWhereUniqueInput
    update?: XOR<XOR<VentaCuotaUpdateToOneWithWhereWithoutCuotasInput, VentaCuotaUpdateWithoutCuotasInput>, VentaCuotaUncheckedUpdateWithoutCuotasInput>
  }

  export type UsuarioUpdateOneWithoutCuotaNestedInput = {
    create?: XOR<UsuarioCreateWithoutCuotaInput, UsuarioUncheckedCreateWithoutCuotaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCuotaInput
    upsert?: UsuarioUpsertWithoutCuotaInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCuotaInput, UsuarioUpdateWithoutCuotaInput>, UsuarioUncheckedUpdateWithoutCuotaInput>
  }

  export type SucursalCreateNestedOneWithoutPlantillaComprobanteInput = {
    create?: XOR<SucursalCreateWithoutPlantillaComprobanteInput, SucursalUncheckedCreateWithoutPlantillaComprobanteInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutPlantillaComprobanteInput
    connect?: SucursalWhereUniqueInput
  }

  export type SucursalUpdateOneWithoutPlantillaComprobanteNestedInput = {
    create?: XOR<SucursalCreateWithoutPlantillaComprobanteInput, SucursalUncheckedCreateWithoutPlantillaComprobanteInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutPlantillaComprobanteInput
    upsert?: SucursalUpsertWithoutPlantillaComprobanteInput
    disconnect?: SucursalWhereInput | boolean
    delete?: SucursalWhereInput | boolean
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutPlantillaComprobanteInput, SucursalUpdateWithoutPlantillaComprobanteInput>, SucursalUncheckedUpdateWithoutPlantillaComprobanteInput>
  }

  export type UsuarioCreateNestedOneWithoutVentaEliminadaInput = {
    create?: XOR<UsuarioCreateWithoutVentaEliminadaInput, UsuarioUncheckedCreateWithoutVentaEliminadaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutVentaEliminadaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ClienteCreateNestedOneWithoutVentaEliminadaInput = {
    create?: XOR<ClienteCreateWithoutVentaEliminadaInput, ClienteUncheckedCreateWithoutVentaEliminadaInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutVentaEliminadaInput
    connect?: ClienteWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutVentaEliminadaInput = {
    create?: XOR<SucursalCreateWithoutVentaEliminadaInput, SucursalUncheckedCreateWithoutVentaEliminadaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentaEliminadaInput
    connect?: SucursalWhereUniqueInput
  }

  export type VentaEliminadaProductoCreateNestedManyWithoutVentaEliminadaInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput> | VentaEliminadaProductoCreateWithoutVentaEliminadaInput[] | VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput | VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput[]
    createMany?: VentaEliminadaProductoCreateManyVentaEliminadaInputEnvelope
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
  }

  export type VentaEliminadaProductoUncheckedCreateNestedManyWithoutVentaEliminadaInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput> | VentaEliminadaProductoCreateWithoutVentaEliminadaInput[] | VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput | VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput[]
    createMany?: VentaEliminadaProductoCreateManyVentaEliminadaInputEnvelope
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutVentaEliminadaNestedInput = {
    create?: XOR<UsuarioCreateWithoutVentaEliminadaInput, UsuarioUncheckedCreateWithoutVentaEliminadaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutVentaEliminadaInput
    upsert?: UsuarioUpsertWithoutVentaEliminadaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutVentaEliminadaInput, UsuarioUpdateWithoutVentaEliminadaInput>, UsuarioUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type ClienteUpdateOneWithoutVentaEliminadaNestedInput = {
    create?: XOR<ClienteCreateWithoutVentaEliminadaInput, ClienteUncheckedCreateWithoutVentaEliminadaInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutVentaEliminadaInput
    upsert?: ClienteUpsertWithoutVentaEliminadaInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutVentaEliminadaInput, ClienteUpdateWithoutVentaEliminadaInput>, ClienteUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type SucursalUpdateOneRequiredWithoutVentaEliminadaNestedInput = {
    create?: XOR<SucursalCreateWithoutVentaEliminadaInput, SucursalUncheckedCreateWithoutVentaEliminadaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentaEliminadaInput
    upsert?: SucursalUpsertWithoutVentaEliminadaInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutVentaEliminadaInput, SucursalUpdateWithoutVentaEliminadaInput>, SucursalUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type VentaEliminadaProductoUpdateManyWithoutVentaEliminadaNestedInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput> | VentaEliminadaProductoCreateWithoutVentaEliminadaInput[] | VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput | VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput[]
    upsert?: VentaEliminadaProductoUpsertWithWhereUniqueWithoutVentaEliminadaInput | VentaEliminadaProductoUpsertWithWhereUniqueWithoutVentaEliminadaInput[]
    createMany?: VentaEliminadaProductoCreateManyVentaEliminadaInputEnvelope
    set?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    disconnect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    delete?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    update?: VentaEliminadaProductoUpdateWithWhereUniqueWithoutVentaEliminadaInput | VentaEliminadaProductoUpdateWithWhereUniqueWithoutVentaEliminadaInput[]
    updateMany?: VentaEliminadaProductoUpdateManyWithWhereWithoutVentaEliminadaInput | VentaEliminadaProductoUpdateManyWithWhereWithoutVentaEliminadaInput[]
    deleteMany?: VentaEliminadaProductoScalarWhereInput | VentaEliminadaProductoScalarWhereInput[]
  }

  export type VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaNestedInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput> | VentaEliminadaProductoCreateWithoutVentaEliminadaInput[] | VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput | VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput[]
    upsert?: VentaEliminadaProductoUpsertWithWhereUniqueWithoutVentaEliminadaInput | VentaEliminadaProductoUpsertWithWhereUniqueWithoutVentaEliminadaInput[]
    createMany?: VentaEliminadaProductoCreateManyVentaEliminadaInputEnvelope
    set?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    disconnect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    delete?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    update?: VentaEliminadaProductoUpdateWithWhereUniqueWithoutVentaEliminadaInput | VentaEliminadaProductoUpdateWithWhereUniqueWithoutVentaEliminadaInput[]
    updateMany?: VentaEliminadaProductoUpdateManyWithWhereWithoutVentaEliminadaInput | VentaEliminadaProductoUpdateManyWithWhereWithoutVentaEliminadaInput[]
    deleteMany?: VentaEliminadaProductoScalarWhereInput | VentaEliminadaProductoScalarWhereInput[]
  }

  export type VentaEliminadaCreateNestedOneWithoutVentaEliminadaProductoInput = {
    create?: XOR<VentaEliminadaCreateWithoutVentaEliminadaProductoInput, VentaEliminadaUncheckedCreateWithoutVentaEliminadaProductoInput>
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutVentaEliminadaProductoInput
    connect?: VentaEliminadaWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutVentaEliminadaProductoInput = {
    create?: XOR<ProductoCreateWithoutVentaEliminadaProductoInput, ProductoUncheckedCreateWithoutVentaEliminadaProductoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutVentaEliminadaProductoInput
    connect?: ProductoWhereUniqueInput
  }

  export type VentaEliminadaUpdateOneRequiredWithoutVentaEliminadaProductoNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutVentaEliminadaProductoInput, VentaEliminadaUncheckedCreateWithoutVentaEliminadaProductoInput>
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutVentaEliminadaProductoInput
    upsert?: VentaEliminadaUpsertWithoutVentaEliminadaProductoInput
    connect?: VentaEliminadaWhereUniqueInput
    update?: XOR<XOR<VentaEliminadaUpdateToOneWithWhereWithoutVentaEliminadaProductoInput, VentaEliminadaUpdateWithoutVentaEliminadaProductoInput>, VentaEliminadaUncheckedUpdateWithoutVentaEliminadaProductoInput>
  }

  export type ProductoUpdateOneWithoutVentaEliminadaProductoNestedInput = {
    create?: XOR<ProductoCreateWithoutVentaEliminadaProductoInput, ProductoUncheckedCreateWithoutVentaEliminadaProductoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutVentaEliminadaProductoInput
    upsert?: ProductoUpsertWithoutVentaEliminadaProductoInput
    disconnect?: ProductoWhereInput | boolean
    delete?: ProductoWhereInput | boolean
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutVentaEliminadaProductoInput, ProductoUpdateWithoutVentaEliminadaProductoInput>, ProductoUncheckedUpdateWithoutVentaEliminadaProductoInput>
  }

  export type SucursalCreateNestedOneWithoutSucursalSaldoInput = {
    create?: XOR<SucursalCreateWithoutSucursalSaldoInput, SucursalUncheckedCreateWithoutSucursalSaldoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutSucursalSaldoInput
    connect?: SucursalWhereUniqueInput
  }

  export type SucursalUpdateOneRequiredWithoutSucursalSaldoNestedInput = {
    create?: XOR<SucursalCreateWithoutSucursalSaldoInput, SucursalUncheckedCreateWithoutSucursalSaldoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutSucursalSaldoInput
    upsert?: SucursalUpsertWithoutSucursalSaldoInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutSucursalSaldoInput, SucursalUpdateWithoutSucursalSaldoInput>, SucursalUncheckedUpdateWithoutSucursalSaldoInput>
  }

  export type SucursalCreateNestedOneWithoutRegistroCajaInput = {
    create?: XOR<SucursalCreateWithoutRegistroCajaInput, SucursalUncheckedCreateWithoutRegistroCajaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutRegistroCajaInput
    connect?: SucursalWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutRegistroCajaInput = {
    create?: XOR<UsuarioCreateWithoutRegistroCajaInput, UsuarioUncheckedCreateWithoutRegistroCajaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRegistroCajaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DepositoCreateNestedManyWithoutRegistroCajaInput = {
    create?: XOR<DepositoCreateWithoutRegistroCajaInput, DepositoUncheckedCreateWithoutRegistroCajaInput> | DepositoCreateWithoutRegistroCajaInput[] | DepositoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutRegistroCajaInput | DepositoCreateOrConnectWithoutRegistroCajaInput[]
    createMany?: DepositoCreateManyRegistroCajaInputEnvelope
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
  }

  export type EgresoCreateNestedManyWithoutRegistroCajaInput = {
    create?: XOR<EgresoCreateWithoutRegistroCajaInput, EgresoUncheckedCreateWithoutRegistroCajaInput> | EgresoCreateWithoutRegistroCajaInput[] | EgresoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutRegistroCajaInput | EgresoCreateOrConnectWithoutRegistroCajaInput[]
    createMany?: EgresoCreateManyRegistroCajaInputEnvelope
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
  }

  export type VentaCreateNestedManyWithoutRegistroCajaInput = {
    create?: XOR<VentaCreateWithoutRegistroCajaInput, VentaUncheckedCreateWithoutRegistroCajaInput> | VentaCreateWithoutRegistroCajaInput[] | VentaUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutRegistroCajaInput | VentaCreateOrConnectWithoutRegistroCajaInput[]
    createMany?: VentaCreateManyRegistroCajaInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type DepositoUncheckedCreateNestedManyWithoutRegistroCajaInput = {
    create?: XOR<DepositoCreateWithoutRegistroCajaInput, DepositoUncheckedCreateWithoutRegistroCajaInput> | DepositoCreateWithoutRegistroCajaInput[] | DepositoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutRegistroCajaInput | DepositoCreateOrConnectWithoutRegistroCajaInput[]
    createMany?: DepositoCreateManyRegistroCajaInputEnvelope
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
  }

  export type EgresoUncheckedCreateNestedManyWithoutRegistroCajaInput = {
    create?: XOR<EgresoCreateWithoutRegistroCajaInput, EgresoUncheckedCreateWithoutRegistroCajaInput> | EgresoCreateWithoutRegistroCajaInput[] | EgresoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutRegistroCajaInput | EgresoCreateOrConnectWithoutRegistroCajaInput[]
    createMany?: EgresoCreateManyRegistroCajaInputEnvelope
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutRegistroCajaInput = {
    create?: XOR<VentaCreateWithoutRegistroCajaInput, VentaUncheckedCreateWithoutRegistroCajaInput> | VentaCreateWithoutRegistroCajaInput[] | VentaUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutRegistroCajaInput | VentaCreateOrConnectWithoutRegistroCajaInput[]
    createMany?: VentaCreateManyRegistroCajaInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type NullableEnumEstadoCajaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoCaja | null
  }

  export type SucursalUpdateOneWithoutRegistroCajaNestedInput = {
    create?: XOR<SucursalCreateWithoutRegistroCajaInput, SucursalUncheckedCreateWithoutRegistroCajaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutRegistroCajaInput
    upsert?: SucursalUpsertWithoutRegistroCajaInput
    disconnect?: SucursalWhereInput | boolean
    delete?: SucursalWhereInput | boolean
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutRegistroCajaInput, SucursalUpdateWithoutRegistroCajaInput>, SucursalUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type UsuarioUpdateOneWithoutRegistroCajaNestedInput = {
    create?: XOR<UsuarioCreateWithoutRegistroCajaInput, UsuarioUncheckedCreateWithoutRegistroCajaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRegistroCajaInput
    upsert?: UsuarioUpsertWithoutRegistroCajaInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutRegistroCajaInput, UsuarioUpdateWithoutRegistroCajaInput>, UsuarioUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type DepositoUpdateManyWithoutRegistroCajaNestedInput = {
    create?: XOR<DepositoCreateWithoutRegistroCajaInput, DepositoUncheckedCreateWithoutRegistroCajaInput> | DepositoCreateWithoutRegistroCajaInput[] | DepositoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutRegistroCajaInput | DepositoCreateOrConnectWithoutRegistroCajaInput[]
    upsert?: DepositoUpsertWithWhereUniqueWithoutRegistroCajaInput | DepositoUpsertWithWhereUniqueWithoutRegistroCajaInput[]
    createMany?: DepositoCreateManyRegistroCajaInputEnvelope
    set?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    disconnect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    delete?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    update?: DepositoUpdateWithWhereUniqueWithoutRegistroCajaInput | DepositoUpdateWithWhereUniqueWithoutRegistroCajaInput[]
    updateMany?: DepositoUpdateManyWithWhereWithoutRegistroCajaInput | DepositoUpdateManyWithWhereWithoutRegistroCajaInput[]
    deleteMany?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
  }

  export type EgresoUpdateManyWithoutRegistroCajaNestedInput = {
    create?: XOR<EgresoCreateWithoutRegistroCajaInput, EgresoUncheckedCreateWithoutRegistroCajaInput> | EgresoCreateWithoutRegistroCajaInput[] | EgresoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutRegistroCajaInput | EgresoCreateOrConnectWithoutRegistroCajaInput[]
    upsert?: EgresoUpsertWithWhereUniqueWithoutRegistroCajaInput | EgresoUpsertWithWhereUniqueWithoutRegistroCajaInput[]
    createMany?: EgresoCreateManyRegistroCajaInputEnvelope
    set?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    disconnect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    delete?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    update?: EgresoUpdateWithWhereUniqueWithoutRegistroCajaInput | EgresoUpdateWithWhereUniqueWithoutRegistroCajaInput[]
    updateMany?: EgresoUpdateManyWithWhereWithoutRegistroCajaInput | EgresoUpdateManyWithWhereWithoutRegistroCajaInput[]
    deleteMany?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
  }

  export type VentaUpdateManyWithoutRegistroCajaNestedInput = {
    create?: XOR<VentaCreateWithoutRegistroCajaInput, VentaUncheckedCreateWithoutRegistroCajaInput> | VentaCreateWithoutRegistroCajaInput[] | VentaUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutRegistroCajaInput | VentaCreateOrConnectWithoutRegistroCajaInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutRegistroCajaInput | VentaUpsertWithWhereUniqueWithoutRegistroCajaInput[]
    createMany?: VentaCreateManyRegistroCajaInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutRegistroCajaInput | VentaUpdateWithWhereUniqueWithoutRegistroCajaInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutRegistroCajaInput | VentaUpdateManyWithWhereWithoutRegistroCajaInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type DepositoUncheckedUpdateManyWithoutRegistroCajaNestedInput = {
    create?: XOR<DepositoCreateWithoutRegistroCajaInput, DepositoUncheckedCreateWithoutRegistroCajaInput> | DepositoCreateWithoutRegistroCajaInput[] | DepositoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutRegistroCajaInput | DepositoCreateOrConnectWithoutRegistroCajaInput[]
    upsert?: DepositoUpsertWithWhereUniqueWithoutRegistroCajaInput | DepositoUpsertWithWhereUniqueWithoutRegistroCajaInput[]
    createMany?: DepositoCreateManyRegistroCajaInputEnvelope
    set?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    disconnect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    delete?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    update?: DepositoUpdateWithWhereUniqueWithoutRegistroCajaInput | DepositoUpdateWithWhereUniqueWithoutRegistroCajaInput[]
    updateMany?: DepositoUpdateManyWithWhereWithoutRegistroCajaInput | DepositoUpdateManyWithWhereWithoutRegistroCajaInput[]
    deleteMany?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
  }

  export type EgresoUncheckedUpdateManyWithoutRegistroCajaNestedInput = {
    create?: XOR<EgresoCreateWithoutRegistroCajaInput, EgresoUncheckedCreateWithoutRegistroCajaInput> | EgresoCreateWithoutRegistroCajaInput[] | EgresoUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutRegistroCajaInput | EgresoCreateOrConnectWithoutRegistroCajaInput[]
    upsert?: EgresoUpsertWithWhereUniqueWithoutRegistroCajaInput | EgresoUpsertWithWhereUniqueWithoutRegistroCajaInput[]
    createMany?: EgresoCreateManyRegistroCajaInputEnvelope
    set?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    disconnect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    delete?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    update?: EgresoUpdateWithWhereUniqueWithoutRegistroCajaInput | EgresoUpdateWithWhereUniqueWithoutRegistroCajaInput[]
    updateMany?: EgresoUpdateManyWithWhereWithoutRegistroCajaInput | EgresoUpdateManyWithWhereWithoutRegistroCajaInput[]
    deleteMany?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutRegistroCajaNestedInput = {
    create?: XOR<VentaCreateWithoutRegistroCajaInput, VentaUncheckedCreateWithoutRegistroCajaInput> | VentaCreateWithoutRegistroCajaInput[] | VentaUncheckedCreateWithoutRegistroCajaInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutRegistroCajaInput | VentaCreateOrConnectWithoutRegistroCajaInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutRegistroCajaInput | VentaUpsertWithWhereUniqueWithoutRegistroCajaInput[]
    createMany?: VentaCreateManyRegistroCajaInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutRegistroCajaInput | VentaUpdateWithWhereUniqueWithoutRegistroCajaInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutRegistroCajaInput | VentaUpdateManyWithWhereWithoutRegistroCajaInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type RegistroCajaCreateNestedOneWithoutDepositosInput = {
    create?: XOR<RegistroCajaCreateWithoutDepositosInput, RegistroCajaUncheckedCreateWithoutDepositosInput>
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutDepositosInput
    connect?: RegistroCajaWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutDepositoInput = {
    create?: XOR<SucursalCreateWithoutDepositoInput, SucursalUncheckedCreateWithoutDepositoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutDepositoInput
    connect?: SucursalWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutDepositoInput = {
    create?: XOR<UsuarioCreateWithoutDepositoInput, UsuarioUncheckedCreateWithoutDepositoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepositoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type RegistroCajaUpdateOneWithoutDepositosNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutDepositosInput, RegistroCajaUncheckedCreateWithoutDepositosInput>
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutDepositosInput
    upsert?: RegistroCajaUpsertWithoutDepositosInput
    disconnect?: RegistroCajaWhereInput | boolean
    delete?: RegistroCajaWhereInput | boolean
    connect?: RegistroCajaWhereUniqueInput
    update?: XOR<XOR<RegistroCajaUpdateToOneWithWhereWithoutDepositosInput, RegistroCajaUpdateWithoutDepositosInput>, RegistroCajaUncheckedUpdateWithoutDepositosInput>
  }

  export type SucursalUpdateOneWithoutDepositoNestedInput = {
    create?: XOR<SucursalCreateWithoutDepositoInput, SucursalUncheckedCreateWithoutDepositoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutDepositoInput
    upsert?: SucursalUpsertWithoutDepositoInput
    disconnect?: SucursalWhereInput | boolean
    delete?: SucursalWhereInput | boolean
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutDepositoInput, SucursalUpdateWithoutDepositoInput>, SucursalUncheckedUpdateWithoutDepositoInput>
  }

  export type UsuarioUpdateOneWithoutDepositoNestedInput = {
    create?: XOR<UsuarioCreateWithoutDepositoInput, UsuarioUncheckedCreateWithoutDepositoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepositoInput
    upsert?: UsuarioUpsertWithoutDepositoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDepositoInput, UsuarioUpdateWithoutDepositoInput>, UsuarioUncheckedUpdateWithoutDepositoInput>
  }

  export type RegistroCajaCreateNestedOneWithoutEgresosInput = {
    create?: XOR<RegistroCajaCreateWithoutEgresosInput, RegistroCajaUncheckedCreateWithoutEgresosInput>
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutEgresosInput
    connect?: RegistroCajaWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutEgresoInput = {
    create?: XOR<SucursalCreateWithoutEgresoInput, SucursalUncheckedCreateWithoutEgresoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutEgresoInput
    connect?: SucursalWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEgresoInput = {
    create?: XOR<UsuarioCreateWithoutEgresoInput, UsuarioUncheckedCreateWithoutEgresoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEgresoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type RegistroCajaUpdateOneWithoutEgresosNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutEgresosInput, RegistroCajaUncheckedCreateWithoutEgresosInput>
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutEgresosInput
    upsert?: RegistroCajaUpsertWithoutEgresosInput
    disconnect?: RegistroCajaWhereInput | boolean
    delete?: RegistroCajaWhereInput | boolean
    connect?: RegistroCajaWhereUniqueInput
    update?: XOR<XOR<RegistroCajaUpdateToOneWithWhereWithoutEgresosInput, RegistroCajaUpdateWithoutEgresosInput>, RegistroCajaUncheckedUpdateWithoutEgresosInput>
  }

  export type SucursalUpdateOneWithoutEgresoNestedInput = {
    create?: XOR<SucursalCreateWithoutEgresoInput, SucursalUncheckedCreateWithoutEgresoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutEgresoInput
    upsert?: SucursalUpsertWithoutEgresoInput
    disconnect?: SucursalWhereInput | boolean
    delete?: SucursalWhereInput | boolean
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutEgresoInput, SucursalUpdateWithoutEgresoInput>, SucursalUncheckedUpdateWithoutEgresoInput>
  }

  export type UsuarioUpdateOneWithoutEgresoNestedInput = {
    create?: XOR<UsuarioCreateWithoutEgresoInput, UsuarioUncheckedCreateWithoutEgresoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEgresoInput
    upsert?: UsuarioUpsertWithoutEgresoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEgresoInput, UsuarioUpdateWithoutEgresoInput>, UsuarioUncheckedUpdateWithoutEgresoInput>
  }

  export type EnumEstadoTicketFieldUpdateOperationsInput = {
    set?: $Enums.EstadoTicket
  }

  export type StockCreateNestedOneWithoutVencimientoInput = {
    create?: XOR<StockCreateWithoutVencimientoInput, StockUncheckedCreateWithoutVencimientoInput>
    connectOrCreate?: StockCreateOrConnectWithoutVencimientoInput
    connect?: StockWhereUniqueInput
  }

  export type EnumEstadoVencimientoFieldUpdateOperationsInput = {
    set?: $Enums.EstadoVencimiento
  }

  export type StockUpdateOneWithoutVencimientoNestedInput = {
    create?: XOR<StockCreateWithoutVencimientoInput, StockUncheckedCreateWithoutVencimientoInput>
    connectOrCreate?: StockCreateOrConnectWithoutVencimientoInput
    upsert?: StockUpsertWithoutVencimientoInput
    disconnect?: StockWhereInput | boolean
    delete?: StockWhereInput | boolean
    connect?: StockWhereUniqueInput
    update?: XOR<XOR<StockUpdateToOneWithWhereWithoutVencimientoInput, StockUpdateWithoutVencimientoInput>, StockUncheckedUpdateWithoutVencimientoInput>
  }

  export type UsuarioCreateNestedOneWithoutNotificacionesEnviadasInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesEnviadasInput, UsuarioUncheckedCreateWithoutNotificacionesEnviadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesEnviadasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type NotificacionesUsuariosCreateNestedManyWithoutNotificacionInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutNotificacionInput, NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput> | NotificacionesUsuariosCreateWithoutNotificacionInput[] | NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput | NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput[]
    createMany?: NotificacionesUsuariosCreateManyNotificacionInputEnvelope
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
  }

  export type UsuarioCreateNestedManyWithoutNotificacionesRecibidasInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesRecibidasInput, UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput> | UsuarioCreateWithoutNotificacionesRecibidasInput[] | UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput | UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type NotificacionesUsuariosUncheckedCreateNestedManyWithoutNotificacionInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutNotificacionInput, NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput> | NotificacionesUsuariosCreateWithoutNotificacionInput[] | NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput | NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput[]
    createMany?: NotificacionesUsuariosCreateManyNotificacionInputEnvelope
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutNotificacionesRecibidasInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesRecibidasInput, UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput> | UsuarioCreateWithoutNotificacionesRecibidasInput[] | UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput | UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type EnumTipoNotificacionFieldUpdateOperationsInput = {
    set?: $Enums.TipoNotificacion
  }

  export type UsuarioUpdateOneWithoutNotificacionesEnviadasNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesEnviadasInput, UsuarioUncheckedCreateWithoutNotificacionesEnviadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesEnviadasInput
    upsert?: UsuarioUpsertWithoutNotificacionesEnviadasInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutNotificacionesEnviadasInput, UsuarioUpdateWithoutNotificacionesEnviadasInput>, UsuarioUncheckedUpdateWithoutNotificacionesEnviadasInput>
  }

  export type NotificacionesUsuariosUpdateManyWithoutNotificacionNestedInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutNotificacionInput, NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput> | NotificacionesUsuariosCreateWithoutNotificacionInput[] | NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput | NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput[]
    upsert?: NotificacionesUsuariosUpsertWithWhereUniqueWithoutNotificacionInput | NotificacionesUsuariosUpsertWithWhereUniqueWithoutNotificacionInput[]
    createMany?: NotificacionesUsuariosCreateManyNotificacionInputEnvelope
    set?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    disconnect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    delete?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    update?: NotificacionesUsuariosUpdateWithWhereUniqueWithoutNotificacionInput | NotificacionesUsuariosUpdateWithWhereUniqueWithoutNotificacionInput[]
    updateMany?: NotificacionesUsuariosUpdateManyWithWhereWithoutNotificacionInput | NotificacionesUsuariosUpdateManyWithWhereWithoutNotificacionInput[]
    deleteMany?: NotificacionesUsuariosScalarWhereInput | NotificacionesUsuariosScalarWhereInput[]
  }

  export type UsuarioUpdateManyWithoutNotificacionesRecibidasNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesRecibidasInput, UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput> | UsuarioCreateWithoutNotificacionesRecibidasInput[] | UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput | UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutNotificacionesRecibidasInput | UsuarioUpsertWithWhereUniqueWithoutNotificacionesRecibidasInput[]
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutNotificacionesRecibidasInput | UsuarioUpdateWithWhereUniqueWithoutNotificacionesRecibidasInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutNotificacionesRecibidasInput | UsuarioUpdateManyWithWhereWithoutNotificacionesRecibidasInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type NotificacionesUsuariosUncheckedUpdateManyWithoutNotificacionNestedInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutNotificacionInput, NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput> | NotificacionesUsuariosCreateWithoutNotificacionInput[] | NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput | NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput[]
    upsert?: NotificacionesUsuariosUpsertWithWhereUniqueWithoutNotificacionInput | NotificacionesUsuariosUpsertWithWhereUniqueWithoutNotificacionInput[]
    createMany?: NotificacionesUsuariosCreateManyNotificacionInputEnvelope
    set?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    disconnect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    delete?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    update?: NotificacionesUsuariosUpdateWithWhereUniqueWithoutNotificacionInput | NotificacionesUsuariosUpdateWithWhereUniqueWithoutNotificacionInput[]
    updateMany?: NotificacionesUsuariosUpdateManyWithWhereWithoutNotificacionInput | NotificacionesUsuariosUpdateManyWithWhereWithoutNotificacionInput[]
    deleteMany?: NotificacionesUsuariosScalarWhereInput | NotificacionesUsuariosScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutNotificacionesRecibidasNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesRecibidasInput, UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput> | UsuarioCreateWithoutNotificacionesRecibidasInput[] | UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput | UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutNotificacionesRecibidasInput | UsuarioUpsertWithWhereUniqueWithoutNotificacionesRecibidasInput[]
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutNotificacionesRecibidasInput | UsuarioUpdateWithWhereUniqueWithoutNotificacionesRecibidasInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutNotificacionesRecibidasInput | UsuarioUpdateManyWithWhereWithoutNotificacionesRecibidasInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutNotificacionesUsuariosInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesUsuariosInput, UsuarioUncheckedCreateWithoutNotificacionesUsuariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesUsuariosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type NotificacionCreateNestedOneWithoutNotificacionesUsuariosInput = {
    create?: XOR<NotificacionCreateWithoutNotificacionesUsuariosInput, NotificacionUncheckedCreateWithoutNotificacionesUsuariosInput>
    connectOrCreate?: NotificacionCreateOrConnectWithoutNotificacionesUsuariosInput
    connect?: NotificacionWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutNotificacionesUsuariosNestedInput = {
    create?: XOR<UsuarioCreateWithoutNotificacionesUsuariosInput, UsuarioUncheckedCreateWithoutNotificacionesUsuariosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutNotificacionesUsuariosInput
    upsert?: UsuarioUpsertWithoutNotificacionesUsuariosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutNotificacionesUsuariosInput, UsuarioUpdateWithoutNotificacionesUsuariosInput>, UsuarioUncheckedUpdateWithoutNotificacionesUsuariosInput>
  }

  export type NotificacionUpdateOneRequiredWithoutNotificacionesUsuariosNestedInput = {
    create?: XOR<NotificacionCreateWithoutNotificacionesUsuariosInput, NotificacionUncheckedCreateWithoutNotificacionesUsuariosInput>
    connectOrCreate?: NotificacionCreateOrConnectWithoutNotificacionesUsuariosInput
    upsert?: NotificacionUpsertWithoutNotificacionesUsuariosInput
    connect?: NotificacionWhereUniqueInput
    update?: XOR<XOR<NotificacionUpdateToOneWithWhereWithoutNotificacionesUsuariosInput, NotificacionUpdateWithoutNotificacionesUsuariosInput>, NotificacionUncheckedUpdateWithoutNotificacionesUsuariosInput>
  }

  export type ProductoCreateNestedOneWithoutSolicitudPrecioInput = {
    create?: XOR<ProductoCreateWithoutSolicitudPrecioInput, ProductoUncheckedCreateWithoutSolicitudPrecioInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutSolicitudPrecioInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutSolicitudesPrecioInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesPrecioInput, UsuarioUncheckedCreateWithoutSolicitudesPrecioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesPrecioInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutSolicitudesAprobadasInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesAprobadasInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesAprobadasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumEstadoSolicitudFieldUpdateOperationsInput = {
    set?: $Enums.EstadoSolicitud
  }

  export type ProductoUpdateOneRequiredWithoutSolicitudPrecioNestedInput = {
    create?: XOR<ProductoCreateWithoutSolicitudPrecioInput, ProductoUncheckedCreateWithoutSolicitudPrecioInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutSolicitudPrecioInput
    upsert?: ProductoUpsertWithoutSolicitudPrecioInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutSolicitudPrecioInput, ProductoUpdateWithoutSolicitudPrecioInput>, ProductoUncheckedUpdateWithoutSolicitudPrecioInput>
  }

  export type UsuarioUpdateOneRequiredWithoutSolicitudesPrecioNestedInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesPrecioInput, UsuarioUncheckedCreateWithoutSolicitudesPrecioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesPrecioInput
    upsert?: UsuarioUpsertWithoutSolicitudesPrecioInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutSolicitudesPrecioInput, UsuarioUpdateWithoutSolicitudesPrecioInput>, UsuarioUncheckedUpdateWithoutSolicitudesPrecioInput>
  }

  export type UsuarioUpdateOneWithoutSolicitudesAprobadasNestedInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesAprobadasInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesAprobadasInput
    upsert?: UsuarioUpsertWithoutSolicitudesAprobadasInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutSolicitudesAprobadasInput, UsuarioUpdateWithoutSolicitudesAprobadasInput>, UsuarioUncheckedUpdateWithoutSolicitudesAprobadasInput>
  }

  export type StockCreateNestedManyWithoutProductoInput = {
    create?: XOR<StockCreateWithoutProductoInput, StockUncheckedCreateWithoutProductoInput> | StockCreateWithoutProductoInput[] | StockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductoInput | StockCreateOrConnectWithoutProductoInput[]
    createMany?: StockCreateManyProductoInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type CategoriaCreateNestedManyWithoutProductosInput = {
    create?: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput> | CategoriaCreateWithoutProductosInput[] | CategoriaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutProductosInput | CategoriaCreateOrConnectWithoutProductosInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
  }

  export type VentaProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<VentaProductoCreateWithoutProductoInput, VentaProductoUncheckedCreateWithoutProductoInput> | VentaProductoCreateWithoutProductoInput[] | VentaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutProductoInput | VentaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: VentaProductoCreateManyProductoInputEnvelope
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
  }

  export type HistorialStockCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialStockCreateWithoutProductoInput, HistorialStockUncheckedCreateWithoutProductoInput> | HistorialStockCreateWithoutProductoInput[] | HistorialStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialStockCreateOrConnectWithoutProductoInput | HistorialStockCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialStockCreateManyProductoInputEnvelope
    connect?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
  }

  export type HistorialPrecioCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type TransferenciaProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<TransferenciaProductoCreateWithoutProductoInput, TransferenciaProductoUncheckedCreateWithoutProductoInput> | TransferenciaProductoCreateWithoutProductoInput[] | TransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutProductoInput | TransferenciaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: TransferenciaProductoCreateManyProductoInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type PrecioProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<PrecioProductoCreateWithoutProductoInput, PrecioProductoUncheckedCreateWithoutProductoInput> | PrecioProductoCreateWithoutProductoInput[] | PrecioProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutProductoInput | PrecioProductoCreateOrConnectWithoutProductoInput[]
    createMany?: PrecioProductoCreateManyProductoInputEnvelope
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
  }

  export type SolicitudPrecioCreateNestedManyWithoutProductoInput = {
    create?: XOR<SolicitudPrecioCreateWithoutProductoInput, SolicitudPrecioUncheckedCreateWithoutProductoInput> | SolicitudPrecioCreateWithoutProductoInput[] | SolicitudPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutProductoInput | SolicitudPrecioCreateOrConnectWithoutProductoInput[]
    createMany?: SolicitudPrecioCreateManyProductoInputEnvelope
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput> | SolicitudTransferenciaProductoCreateWithoutProductoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyProductoInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type HistorialPrecioCostoCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutProductoInput, HistorialPrecioCostoUncheckedCreateWithoutProductoInput> | HistorialPrecioCostoCreateWithoutProductoInput[] | HistorialPrecioCostoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutProductoInput | HistorialPrecioCostoCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialPrecioCostoCreateManyProductoInputEnvelope
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
  }

  export type AjusteStockCreateNestedManyWithoutProductoInput = {
    create?: XOR<AjusteStockCreateWithoutProductoInput, AjusteStockUncheckedCreateWithoutProductoInput> | AjusteStockCreateWithoutProductoInput[] | AjusteStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutProductoInput | AjusteStockCreateOrConnectWithoutProductoInput[]
    createMany?: AjusteStockCreateManyProductoInputEnvelope
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
  }

  export type EliminacionProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<EliminacionProductoCreateWithoutProductoInput, EliminacionProductoUncheckedCreateWithoutProductoInput> | EliminacionProductoCreateWithoutProductoInput[] | EliminacionProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutProductoInput | EliminacionProductoCreateOrConnectWithoutProductoInput[]
    createMany?: EliminacionProductoCreateManyProductoInputEnvelope
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
  }

  export type EliminacionStockCreateNestedManyWithoutProductoInput = {
    create?: XOR<EliminacionStockCreateWithoutProductoInput, EliminacionStockUncheckedCreateWithoutProductoInput> | EliminacionStockCreateWithoutProductoInput[] | EliminacionStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutProductoInput | EliminacionStockCreateOrConnectWithoutProductoInput[]
    createMany?: EliminacionStockCreateManyProductoInputEnvelope
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
  }

  export type GarantiaCreateNestedManyWithoutProductoInput = {
    create?: XOR<GarantiaCreateWithoutProductoInput, GarantiaUncheckedCreateWithoutProductoInput> | GarantiaCreateWithoutProductoInput[] | GarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProductoInput | GarantiaCreateOrConnectWithoutProductoInput[]
    createMany?: GarantiaCreateManyProductoInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type RegistroGarantiaCreateNestedManyWithoutProductoInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProductoInput, RegistroGarantiaUncheckedCreateWithoutProductoInput> | RegistroGarantiaCreateWithoutProductoInput[] | RegistroGarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProductoInput | RegistroGarantiaCreateOrConnectWithoutProductoInput[]
    createMany?: RegistroGarantiaCreateManyProductoInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type VentaEliminadaProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutProductoInput, VentaEliminadaProductoUncheckedCreateWithoutProductoInput> | VentaEliminadaProductoCreateWithoutProductoInput[] | VentaEliminadaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutProductoInput | VentaEliminadaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: VentaEliminadaProductoCreateManyProductoInputEnvelope
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
  }

  export type ReparacionCreateNestedManyWithoutProductoInput = {
    create?: XOR<ReparacionCreateWithoutProductoInput, ReparacionUncheckedCreateWithoutProductoInput> | ReparacionCreateWithoutProductoInput[] | ReparacionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutProductoInput | ReparacionCreateOrConnectWithoutProductoInput[]
    createMany?: ReparacionCreateManyProductoInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type StockUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<StockCreateWithoutProductoInput, StockUncheckedCreateWithoutProductoInput> | StockCreateWithoutProductoInput[] | StockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductoInput | StockCreateOrConnectWithoutProductoInput[]
    createMany?: StockCreateManyProductoInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type CategoriaUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput> | CategoriaCreateWithoutProductosInput[] | CategoriaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutProductosInput | CategoriaCreateOrConnectWithoutProductosInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
  }

  export type VentaProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<VentaProductoCreateWithoutProductoInput, VentaProductoUncheckedCreateWithoutProductoInput> | VentaProductoCreateWithoutProductoInput[] | VentaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutProductoInput | VentaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: VentaProductoCreateManyProductoInputEnvelope
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
  }

  export type HistorialStockUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialStockCreateWithoutProductoInput, HistorialStockUncheckedCreateWithoutProductoInput> | HistorialStockCreateWithoutProductoInput[] | HistorialStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialStockCreateOrConnectWithoutProductoInput | HistorialStockCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialStockCreateManyProductoInputEnvelope
    connect?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
  }

  export type HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<TransferenciaProductoCreateWithoutProductoInput, TransferenciaProductoUncheckedCreateWithoutProductoInput> | TransferenciaProductoCreateWithoutProductoInput[] | TransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutProductoInput | TransferenciaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: TransferenciaProductoCreateManyProductoInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type PrecioProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<PrecioProductoCreateWithoutProductoInput, PrecioProductoUncheckedCreateWithoutProductoInput> | PrecioProductoCreateWithoutProductoInput[] | PrecioProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutProductoInput | PrecioProductoCreateOrConnectWithoutProductoInput[]
    createMany?: PrecioProductoCreateManyProductoInputEnvelope
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
  }

  export type SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<SolicitudPrecioCreateWithoutProductoInput, SolicitudPrecioUncheckedCreateWithoutProductoInput> | SolicitudPrecioCreateWithoutProductoInput[] | SolicitudPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutProductoInput | SolicitudPrecioCreateOrConnectWithoutProductoInput[]
    createMany?: SolicitudPrecioCreateManyProductoInputEnvelope
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput> | SolicitudTransferenciaProductoCreateWithoutProductoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyProductoInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutProductoInput, HistorialPrecioCostoUncheckedCreateWithoutProductoInput> | HistorialPrecioCostoCreateWithoutProductoInput[] | HistorialPrecioCostoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutProductoInput | HistorialPrecioCostoCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialPrecioCostoCreateManyProductoInputEnvelope
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
  }

  export type AjusteStockUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<AjusteStockCreateWithoutProductoInput, AjusteStockUncheckedCreateWithoutProductoInput> | AjusteStockCreateWithoutProductoInput[] | AjusteStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutProductoInput | AjusteStockCreateOrConnectWithoutProductoInput[]
    createMany?: AjusteStockCreateManyProductoInputEnvelope
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
  }

  export type EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<EliminacionProductoCreateWithoutProductoInput, EliminacionProductoUncheckedCreateWithoutProductoInput> | EliminacionProductoCreateWithoutProductoInput[] | EliminacionProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutProductoInput | EliminacionProductoCreateOrConnectWithoutProductoInput[]
    createMany?: EliminacionProductoCreateManyProductoInputEnvelope
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
  }

  export type EliminacionStockUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<EliminacionStockCreateWithoutProductoInput, EliminacionStockUncheckedCreateWithoutProductoInput> | EliminacionStockCreateWithoutProductoInput[] | EliminacionStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutProductoInput | EliminacionStockCreateOrConnectWithoutProductoInput[]
    createMany?: EliminacionStockCreateManyProductoInputEnvelope
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
  }

  export type GarantiaUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<GarantiaCreateWithoutProductoInput, GarantiaUncheckedCreateWithoutProductoInput> | GarantiaCreateWithoutProductoInput[] | GarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProductoInput | GarantiaCreateOrConnectWithoutProductoInput[]
    createMany?: GarantiaCreateManyProductoInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProductoInput, RegistroGarantiaUncheckedCreateWithoutProductoInput> | RegistroGarantiaCreateWithoutProductoInput[] | RegistroGarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProductoInput | RegistroGarantiaCreateOrConnectWithoutProductoInput[]
    createMany?: RegistroGarantiaCreateManyProductoInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutProductoInput, VentaEliminadaProductoUncheckedCreateWithoutProductoInput> | VentaEliminadaProductoCreateWithoutProductoInput[] | VentaEliminadaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutProductoInput | VentaEliminadaProductoCreateOrConnectWithoutProductoInput[]
    createMany?: VentaEliminadaProductoCreateManyProductoInputEnvelope
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
  }

  export type ReparacionUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ReparacionCreateWithoutProductoInput, ReparacionUncheckedCreateWithoutProductoInput> | ReparacionCreateWithoutProductoInput[] | ReparacionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutProductoInput | ReparacionCreateOrConnectWithoutProductoInput[]
    createMany?: ReparacionCreateManyProductoInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type StockUpdateManyWithoutProductoNestedInput = {
    create?: XOR<StockCreateWithoutProductoInput, StockUncheckedCreateWithoutProductoInput> | StockCreateWithoutProductoInput[] | StockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductoInput | StockCreateOrConnectWithoutProductoInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutProductoInput | StockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: StockCreateManyProductoInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutProductoInput | StockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: StockUpdateManyWithWhereWithoutProductoInput | StockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type CategoriaUpdateManyWithoutProductosNestedInput = {
    create?: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput> | CategoriaCreateWithoutProductosInput[] | CategoriaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutProductosInput | CategoriaCreateOrConnectWithoutProductosInput[]
    upsert?: CategoriaUpsertWithWhereUniqueWithoutProductosInput | CategoriaUpsertWithWhereUniqueWithoutProductosInput[]
    set?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    disconnect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    delete?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    update?: CategoriaUpdateWithWhereUniqueWithoutProductosInput | CategoriaUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: CategoriaUpdateManyWithWhereWithoutProductosInput | CategoriaUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
  }

  export type VentaProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<VentaProductoCreateWithoutProductoInput, VentaProductoUncheckedCreateWithoutProductoInput> | VentaProductoCreateWithoutProductoInput[] | VentaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutProductoInput | VentaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: VentaProductoUpsertWithWhereUniqueWithoutProductoInput | VentaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: VentaProductoCreateManyProductoInputEnvelope
    set?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    disconnect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    delete?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    update?: VentaProductoUpdateWithWhereUniqueWithoutProductoInput | VentaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: VentaProductoUpdateManyWithWhereWithoutProductoInput | VentaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: VentaProductoScalarWhereInput | VentaProductoScalarWhereInput[]
  }

  export type HistorialStockUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialStockCreateWithoutProductoInput, HistorialStockUncheckedCreateWithoutProductoInput> | HistorialStockCreateWithoutProductoInput[] | HistorialStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialStockCreateOrConnectWithoutProductoInput | HistorialStockCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialStockUpsertWithWhereUniqueWithoutProductoInput | HistorialStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialStockCreateManyProductoInputEnvelope
    set?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    disconnect?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    delete?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    connect?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    update?: HistorialStockUpdateWithWhereUniqueWithoutProductoInput | HistorialStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialStockUpdateManyWithWhereWithoutProductoInput | HistorialStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialStockScalarWhereInput | HistorialStockScalarWhereInput[]
  }

  export type HistorialPrecioUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput | HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput | HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutProductoInput | HistorialPrecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type TransferenciaProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutProductoInput, TransferenciaProductoUncheckedCreateWithoutProductoInput> | TransferenciaProductoCreateWithoutProductoInput[] | TransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutProductoInput | TransferenciaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput | TransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: TransferenciaProductoCreateManyProductoInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput | TransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutProductoInput | TransferenciaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type PrecioProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<PrecioProductoCreateWithoutProductoInput, PrecioProductoUncheckedCreateWithoutProductoInput> | PrecioProductoCreateWithoutProductoInput[] | PrecioProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutProductoInput | PrecioProductoCreateOrConnectWithoutProductoInput[]
    upsert?: PrecioProductoUpsertWithWhereUniqueWithoutProductoInput | PrecioProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: PrecioProductoCreateManyProductoInputEnvelope
    set?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    disconnect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    delete?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    update?: PrecioProductoUpdateWithWhereUniqueWithoutProductoInput | PrecioProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: PrecioProductoUpdateManyWithWhereWithoutProductoInput | PrecioProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: PrecioProductoScalarWhereInput | PrecioProductoScalarWhereInput[]
  }

  export type SolicitudPrecioUpdateManyWithoutProductoNestedInput = {
    create?: XOR<SolicitudPrecioCreateWithoutProductoInput, SolicitudPrecioUncheckedCreateWithoutProductoInput> | SolicitudPrecioCreateWithoutProductoInput[] | SolicitudPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutProductoInput | SolicitudPrecioCreateOrConnectWithoutProductoInput[]
    upsert?: SolicitudPrecioUpsertWithWhereUniqueWithoutProductoInput | SolicitudPrecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: SolicitudPrecioCreateManyProductoInputEnvelope
    set?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    disconnect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    delete?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    update?: SolicitudPrecioUpdateWithWhereUniqueWithoutProductoInput | SolicitudPrecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: SolicitudPrecioUpdateManyWithWhereWithoutProductoInput | SolicitudPrecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput> | SolicitudTransferenciaProductoCreateWithoutProductoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyProductoInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutProductoInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type HistorialPrecioCostoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutProductoInput, HistorialPrecioCostoUncheckedCreateWithoutProductoInput> | HistorialPrecioCostoCreateWithoutProductoInput[] | HistorialPrecioCostoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutProductoInput | HistorialPrecioCostoCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialPrecioCostoUpsertWithWhereUniqueWithoutProductoInput | HistorialPrecioCostoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialPrecioCostoCreateManyProductoInputEnvelope
    set?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    disconnect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    delete?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    update?: HistorialPrecioCostoUpdateWithWhereUniqueWithoutProductoInput | HistorialPrecioCostoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialPrecioCostoUpdateManyWithWhereWithoutProductoInput | HistorialPrecioCostoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialPrecioCostoScalarWhereInput | HistorialPrecioCostoScalarWhereInput[]
  }

  export type AjusteStockUpdateManyWithoutProductoNestedInput = {
    create?: XOR<AjusteStockCreateWithoutProductoInput, AjusteStockUncheckedCreateWithoutProductoInput> | AjusteStockCreateWithoutProductoInput[] | AjusteStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutProductoInput | AjusteStockCreateOrConnectWithoutProductoInput[]
    upsert?: AjusteStockUpsertWithWhereUniqueWithoutProductoInput | AjusteStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: AjusteStockCreateManyProductoInputEnvelope
    set?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    disconnect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    delete?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    update?: AjusteStockUpdateWithWhereUniqueWithoutProductoInput | AjusteStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: AjusteStockUpdateManyWithWhereWithoutProductoInput | AjusteStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
  }

  export type EliminacionProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<EliminacionProductoCreateWithoutProductoInput, EliminacionProductoUncheckedCreateWithoutProductoInput> | EliminacionProductoCreateWithoutProductoInput[] | EliminacionProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutProductoInput | EliminacionProductoCreateOrConnectWithoutProductoInput[]
    upsert?: EliminacionProductoUpsertWithWhereUniqueWithoutProductoInput | EliminacionProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: EliminacionProductoCreateManyProductoInputEnvelope
    set?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    disconnect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    delete?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    update?: EliminacionProductoUpdateWithWhereUniqueWithoutProductoInput | EliminacionProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: EliminacionProductoUpdateManyWithWhereWithoutProductoInput | EliminacionProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: EliminacionProductoScalarWhereInput | EliminacionProductoScalarWhereInput[]
  }

  export type EliminacionStockUpdateManyWithoutProductoNestedInput = {
    create?: XOR<EliminacionStockCreateWithoutProductoInput, EliminacionStockUncheckedCreateWithoutProductoInput> | EliminacionStockCreateWithoutProductoInput[] | EliminacionStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutProductoInput | EliminacionStockCreateOrConnectWithoutProductoInput[]
    upsert?: EliminacionStockUpsertWithWhereUniqueWithoutProductoInput | EliminacionStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: EliminacionStockCreateManyProductoInputEnvelope
    set?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    disconnect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    delete?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    update?: EliminacionStockUpdateWithWhereUniqueWithoutProductoInput | EliminacionStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: EliminacionStockUpdateManyWithWhereWithoutProductoInput | EliminacionStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
  }

  export type GarantiaUpdateManyWithoutProductoNestedInput = {
    create?: XOR<GarantiaCreateWithoutProductoInput, GarantiaUncheckedCreateWithoutProductoInput> | GarantiaCreateWithoutProductoInput[] | GarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProductoInput | GarantiaCreateOrConnectWithoutProductoInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutProductoInput | GarantiaUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: GarantiaCreateManyProductoInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutProductoInput | GarantiaUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutProductoInput | GarantiaUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type RegistroGarantiaUpdateManyWithoutProductoNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProductoInput, RegistroGarantiaUncheckedCreateWithoutProductoInput> | RegistroGarantiaCreateWithoutProductoInput[] | RegistroGarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProductoInput | RegistroGarantiaCreateOrConnectWithoutProductoInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutProductoInput | RegistroGarantiaUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: RegistroGarantiaCreateManyProductoInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutProductoInput | RegistroGarantiaUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutProductoInput | RegistroGarantiaUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type VentaEliminadaProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutProductoInput, VentaEliminadaProductoUncheckedCreateWithoutProductoInput> | VentaEliminadaProductoCreateWithoutProductoInput[] | VentaEliminadaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutProductoInput | VentaEliminadaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: VentaEliminadaProductoUpsertWithWhereUniqueWithoutProductoInput | VentaEliminadaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: VentaEliminadaProductoCreateManyProductoInputEnvelope
    set?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    disconnect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    delete?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    update?: VentaEliminadaProductoUpdateWithWhereUniqueWithoutProductoInput | VentaEliminadaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: VentaEliminadaProductoUpdateManyWithWhereWithoutProductoInput | VentaEliminadaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: VentaEliminadaProductoScalarWhereInput | VentaEliminadaProductoScalarWhereInput[]
  }

  export type ReparacionUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ReparacionCreateWithoutProductoInput, ReparacionUncheckedCreateWithoutProductoInput> | ReparacionCreateWithoutProductoInput[] | ReparacionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutProductoInput | ReparacionCreateOrConnectWithoutProductoInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutProductoInput | ReparacionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ReparacionCreateManyProductoInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutProductoInput | ReparacionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutProductoInput | ReparacionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type StockUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<StockCreateWithoutProductoInput, StockUncheckedCreateWithoutProductoInput> | StockCreateWithoutProductoInput[] | StockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductoInput | StockCreateOrConnectWithoutProductoInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutProductoInput | StockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: StockCreateManyProductoInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutProductoInput | StockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: StockUpdateManyWithWhereWithoutProductoInput | StockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type CategoriaUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput> | CategoriaCreateWithoutProductosInput[] | CategoriaUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: CategoriaCreateOrConnectWithoutProductosInput | CategoriaCreateOrConnectWithoutProductosInput[]
    upsert?: CategoriaUpsertWithWhereUniqueWithoutProductosInput | CategoriaUpsertWithWhereUniqueWithoutProductosInput[]
    set?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    disconnect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    delete?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    connect?: CategoriaWhereUniqueInput | CategoriaWhereUniqueInput[]
    update?: CategoriaUpdateWithWhereUniqueWithoutProductosInput | CategoriaUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: CategoriaUpdateManyWithWhereWithoutProductosInput | CategoriaUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
  }

  export type VentaProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<VentaProductoCreateWithoutProductoInput, VentaProductoUncheckedCreateWithoutProductoInput> | VentaProductoCreateWithoutProductoInput[] | VentaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutProductoInput | VentaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: VentaProductoUpsertWithWhereUniqueWithoutProductoInput | VentaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: VentaProductoCreateManyProductoInputEnvelope
    set?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    disconnect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    delete?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    update?: VentaProductoUpdateWithWhereUniqueWithoutProductoInput | VentaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: VentaProductoUpdateManyWithWhereWithoutProductoInput | VentaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: VentaProductoScalarWhereInput | VentaProductoScalarWhereInput[]
  }

  export type HistorialStockUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialStockCreateWithoutProductoInput, HistorialStockUncheckedCreateWithoutProductoInput> | HistorialStockCreateWithoutProductoInput[] | HistorialStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialStockCreateOrConnectWithoutProductoInput | HistorialStockCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialStockUpsertWithWhereUniqueWithoutProductoInput | HistorialStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialStockCreateManyProductoInputEnvelope
    set?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    disconnect?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    delete?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    connect?: HistorialStockWhereUniqueInput | HistorialStockWhereUniqueInput[]
    update?: HistorialStockUpdateWithWhereUniqueWithoutProductoInput | HistorialStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialStockUpdateManyWithWhereWithoutProductoInput | HistorialStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialStockScalarWhereInput | HistorialStockScalarWhereInput[]
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput | HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput | HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutProductoInput | HistorialPrecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutProductoInput, TransferenciaProductoUncheckedCreateWithoutProductoInput> | TransferenciaProductoCreateWithoutProductoInput[] | TransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutProductoInput | TransferenciaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput | TransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: TransferenciaProductoCreateManyProductoInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput | TransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutProductoInput | TransferenciaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<PrecioProductoCreateWithoutProductoInput, PrecioProductoUncheckedCreateWithoutProductoInput> | PrecioProductoCreateWithoutProductoInput[] | PrecioProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutProductoInput | PrecioProductoCreateOrConnectWithoutProductoInput[]
    upsert?: PrecioProductoUpsertWithWhereUniqueWithoutProductoInput | PrecioProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: PrecioProductoCreateManyProductoInputEnvelope
    set?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    disconnect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    delete?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    update?: PrecioProductoUpdateWithWhereUniqueWithoutProductoInput | PrecioProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: PrecioProductoUpdateManyWithWhereWithoutProductoInput | PrecioProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: PrecioProductoScalarWhereInput | PrecioProductoScalarWhereInput[]
  }

  export type SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<SolicitudPrecioCreateWithoutProductoInput, SolicitudPrecioUncheckedCreateWithoutProductoInput> | SolicitudPrecioCreateWithoutProductoInput[] | SolicitudPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutProductoInput | SolicitudPrecioCreateOrConnectWithoutProductoInput[]
    upsert?: SolicitudPrecioUpsertWithWhereUniqueWithoutProductoInput | SolicitudPrecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: SolicitudPrecioCreateManyProductoInputEnvelope
    set?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    disconnect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    delete?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    update?: SolicitudPrecioUpdateWithWhereUniqueWithoutProductoInput | SolicitudPrecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: SolicitudPrecioUpdateManyWithWhereWithoutProductoInput | SolicitudPrecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput> | SolicitudTransferenciaProductoCreateWithoutProductoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyProductoInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutProductoInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutProductoInput, HistorialPrecioCostoUncheckedCreateWithoutProductoInput> | HistorialPrecioCostoCreateWithoutProductoInput[] | HistorialPrecioCostoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutProductoInput | HistorialPrecioCostoCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialPrecioCostoUpsertWithWhereUniqueWithoutProductoInput | HistorialPrecioCostoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialPrecioCostoCreateManyProductoInputEnvelope
    set?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    disconnect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    delete?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    update?: HistorialPrecioCostoUpdateWithWhereUniqueWithoutProductoInput | HistorialPrecioCostoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialPrecioCostoUpdateManyWithWhereWithoutProductoInput | HistorialPrecioCostoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialPrecioCostoScalarWhereInput | HistorialPrecioCostoScalarWhereInput[]
  }

  export type AjusteStockUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<AjusteStockCreateWithoutProductoInput, AjusteStockUncheckedCreateWithoutProductoInput> | AjusteStockCreateWithoutProductoInput[] | AjusteStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutProductoInput | AjusteStockCreateOrConnectWithoutProductoInput[]
    upsert?: AjusteStockUpsertWithWhereUniqueWithoutProductoInput | AjusteStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: AjusteStockCreateManyProductoInputEnvelope
    set?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    disconnect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    delete?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    update?: AjusteStockUpdateWithWhereUniqueWithoutProductoInput | AjusteStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: AjusteStockUpdateManyWithWhereWithoutProductoInput | AjusteStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
  }

  export type EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<EliminacionProductoCreateWithoutProductoInput, EliminacionProductoUncheckedCreateWithoutProductoInput> | EliminacionProductoCreateWithoutProductoInput[] | EliminacionProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutProductoInput | EliminacionProductoCreateOrConnectWithoutProductoInput[]
    upsert?: EliminacionProductoUpsertWithWhereUniqueWithoutProductoInput | EliminacionProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: EliminacionProductoCreateManyProductoInputEnvelope
    set?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    disconnect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    delete?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    update?: EliminacionProductoUpdateWithWhereUniqueWithoutProductoInput | EliminacionProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: EliminacionProductoUpdateManyWithWhereWithoutProductoInput | EliminacionProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: EliminacionProductoScalarWhereInput | EliminacionProductoScalarWhereInput[]
  }

  export type EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<EliminacionStockCreateWithoutProductoInput, EliminacionStockUncheckedCreateWithoutProductoInput> | EliminacionStockCreateWithoutProductoInput[] | EliminacionStockUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutProductoInput | EliminacionStockCreateOrConnectWithoutProductoInput[]
    upsert?: EliminacionStockUpsertWithWhereUniqueWithoutProductoInput | EliminacionStockUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: EliminacionStockCreateManyProductoInputEnvelope
    set?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    disconnect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    delete?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    update?: EliminacionStockUpdateWithWhereUniqueWithoutProductoInput | EliminacionStockUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: EliminacionStockUpdateManyWithWhereWithoutProductoInput | EliminacionStockUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
  }

  export type GarantiaUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<GarantiaCreateWithoutProductoInput, GarantiaUncheckedCreateWithoutProductoInput> | GarantiaCreateWithoutProductoInput[] | GarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProductoInput | GarantiaCreateOrConnectWithoutProductoInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutProductoInput | GarantiaUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: GarantiaCreateManyProductoInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutProductoInput | GarantiaUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutProductoInput | GarantiaUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProductoInput, RegistroGarantiaUncheckedCreateWithoutProductoInput> | RegistroGarantiaCreateWithoutProductoInput[] | RegistroGarantiaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProductoInput | RegistroGarantiaCreateOrConnectWithoutProductoInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutProductoInput | RegistroGarantiaUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: RegistroGarantiaCreateManyProductoInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutProductoInput | RegistroGarantiaUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutProductoInput | RegistroGarantiaUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<VentaEliminadaProductoCreateWithoutProductoInput, VentaEliminadaProductoUncheckedCreateWithoutProductoInput> | VentaEliminadaProductoCreateWithoutProductoInput[] | VentaEliminadaProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: VentaEliminadaProductoCreateOrConnectWithoutProductoInput | VentaEliminadaProductoCreateOrConnectWithoutProductoInput[]
    upsert?: VentaEliminadaProductoUpsertWithWhereUniqueWithoutProductoInput | VentaEliminadaProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: VentaEliminadaProductoCreateManyProductoInputEnvelope
    set?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    disconnect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    delete?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    connect?: VentaEliminadaProductoWhereUniqueInput | VentaEliminadaProductoWhereUniqueInput[]
    update?: VentaEliminadaProductoUpdateWithWhereUniqueWithoutProductoInput | VentaEliminadaProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: VentaEliminadaProductoUpdateManyWithWhereWithoutProductoInput | VentaEliminadaProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: VentaEliminadaProductoScalarWhereInput | VentaEliminadaProductoScalarWhereInput[]
  }

  export type ReparacionUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ReparacionCreateWithoutProductoInput, ReparacionUncheckedCreateWithoutProductoInput> | ReparacionCreateWithoutProductoInput[] | ReparacionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutProductoInput | ReparacionCreateOrConnectWithoutProductoInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutProductoInput | ReparacionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ReparacionCreateManyProductoInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutProductoInput | ReparacionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutProductoInput | ReparacionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type ProductoCreateNestedOneWithoutHistorialPrecioCostoInput = {
    create?: XOR<ProductoCreateWithoutHistorialPrecioCostoInput, ProductoUncheckedCreateWithoutHistorialPrecioCostoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialPrecioCostoInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutHistorialPrecioCostoInput = {
    create?: XOR<UsuarioCreateWithoutHistorialPrecioCostoInput, UsuarioUncheckedCreateWithoutHistorialPrecioCostoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialPrecioCostoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutHistorialPrecioCostoNestedInput = {
    create?: XOR<ProductoCreateWithoutHistorialPrecioCostoInput, ProductoUncheckedCreateWithoutHistorialPrecioCostoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialPrecioCostoInput
    upsert?: ProductoUpsertWithoutHistorialPrecioCostoInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutHistorialPrecioCostoInput, ProductoUpdateWithoutHistorialPrecioCostoInput>, ProductoUncheckedUpdateWithoutHistorialPrecioCostoInput>
  }

  export type UsuarioUpdateOneWithoutHistorialPrecioCostoNestedInput = {
    create?: XOR<UsuarioCreateWithoutHistorialPrecioCostoInput, UsuarioUncheckedCreateWithoutHistorialPrecioCostoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialPrecioCostoInput
    upsert?: UsuarioUpsertWithoutHistorialPrecioCostoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutHistorialPrecioCostoInput, UsuarioUpdateWithoutHistorialPrecioCostoInput>, UsuarioUncheckedUpdateWithoutHistorialPrecioCostoInput>
  }

  export type ProductoCreateNestedOneWithoutPreciosInput = {
    create?: XOR<ProductoCreateWithoutPreciosInput, ProductoUncheckedCreateWithoutPreciosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutPreciosInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutPrecioProductoInput = {
    create?: XOR<UsuarioCreateWithoutPrecioProductoInput, UsuarioUncheckedCreateWithoutPrecioProductoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPrecioProductoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumEstadoPrecioFieldUpdateOperationsInput = {
    set?: $Enums.EstadoPrecio
  }

  export type EnumTipoPrecioFieldUpdateOperationsInput = {
    set?: $Enums.TipoPrecio
  }

  export type ProductoUpdateOneWithoutPreciosNestedInput = {
    create?: XOR<ProductoCreateWithoutPreciosInput, ProductoUncheckedCreateWithoutPreciosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutPreciosInput
    upsert?: ProductoUpsertWithoutPreciosInput
    disconnect?: ProductoWhereInput | boolean
    delete?: ProductoWhereInput | boolean
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutPreciosInput, ProductoUpdateWithoutPreciosInput>, ProductoUncheckedUpdateWithoutPreciosInput>
  }

  export type UsuarioUpdateOneWithoutPrecioProductoNestedInput = {
    create?: XOR<UsuarioCreateWithoutPrecioProductoInput, UsuarioUncheckedCreateWithoutPrecioProductoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPrecioProductoInput
    upsert?: UsuarioUpsertWithoutPrecioProductoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPrecioProductoInput, UsuarioUpdateWithoutPrecioProductoInput>, UsuarioUncheckedUpdateWithoutPrecioProductoInput>
  }

  export type ProductoCreateNestedOneWithoutHistorialPrecioInput = {
    create?: XOR<ProductoCreateWithoutHistorialPrecioInput, ProductoUncheckedCreateWithoutHistorialPrecioInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialPrecioInput
    connect?: ProductoWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutHistorialPrecioNestedInput = {
    create?: XOR<ProductoCreateWithoutHistorialPrecioInput, ProductoUncheckedCreateWithoutHistorialPrecioInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialPrecioInput
    upsert?: ProductoUpsertWithoutHistorialPrecioInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutHistorialPrecioInput, ProductoUpdateWithoutHistorialPrecioInput>, ProductoUncheckedUpdateWithoutHistorialPrecioInput>
  }

  export type ProductoCreateNestedOneWithoutAjusteStockInput = {
    create?: XOR<ProductoCreateWithoutAjusteStockInput, ProductoUncheckedCreateWithoutAjusteStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutAjusteStockInput
    connect?: ProductoWhereUniqueInput
  }

  export type StockCreateNestedOneWithoutAjusteStockInput = {
    create?: XOR<StockCreateWithoutAjusteStockInput, StockUncheckedCreateWithoutAjusteStockInput>
    connectOrCreate?: StockCreateOrConnectWithoutAjusteStockInput
    connect?: StockWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutAjusteStockInput = {
    create?: XOR<UsuarioCreateWithoutAjusteStockInput, UsuarioUncheckedCreateWithoutAjusteStockInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAjusteStockInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumTipoAjusteFieldUpdateOperationsInput = {
    set?: $Enums.TipoAjuste
  }

  export type ProductoUpdateOneRequiredWithoutAjusteStockNestedInput = {
    create?: XOR<ProductoCreateWithoutAjusteStockInput, ProductoUncheckedCreateWithoutAjusteStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutAjusteStockInput
    upsert?: ProductoUpsertWithoutAjusteStockInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutAjusteStockInput, ProductoUpdateWithoutAjusteStockInput>, ProductoUncheckedUpdateWithoutAjusteStockInput>
  }

  export type StockUpdateOneWithoutAjusteStockNestedInput = {
    create?: XOR<StockCreateWithoutAjusteStockInput, StockUncheckedCreateWithoutAjusteStockInput>
    connectOrCreate?: StockCreateOrConnectWithoutAjusteStockInput
    upsert?: StockUpsertWithoutAjusteStockInput
    disconnect?: StockWhereInput | boolean
    delete?: StockWhereInput | boolean
    connect?: StockWhereUniqueInput
    update?: XOR<XOR<StockUpdateToOneWithWhereWithoutAjusteStockInput, StockUpdateWithoutAjusteStockInput>, StockUncheckedUpdateWithoutAjusteStockInput>
  }

  export type UsuarioUpdateOneWithoutAjusteStockNestedInput = {
    create?: XOR<UsuarioCreateWithoutAjusteStockInput, UsuarioUncheckedCreateWithoutAjusteStockInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAjusteStockInput
    upsert?: UsuarioUpsertWithoutAjusteStockInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAjusteStockInput, UsuarioUpdateWithoutAjusteStockInput>, UsuarioUncheckedUpdateWithoutAjusteStockInput>
  }

  export type ProductoCreateNestedOneWithoutEliminacionStockInput = {
    create?: XOR<ProductoCreateWithoutEliminacionStockInput, ProductoUncheckedCreateWithoutEliminacionStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutEliminacionStockInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEliminacionStockInput = {
    create?: XOR<UsuarioCreateWithoutEliminacionStockInput, UsuarioUncheckedCreateWithoutEliminacionStockInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEliminacionStockInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutEliminacionStockInput = {
    create?: XOR<SucursalCreateWithoutEliminacionStockInput, SucursalUncheckedCreateWithoutEliminacionStockInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutEliminacionStockInput
    connect?: SucursalWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutEliminacionStockNestedInput = {
    create?: XOR<ProductoCreateWithoutEliminacionStockInput, ProductoUncheckedCreateWithoutEliminacionStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutEliminacionStockInput
    upsert?: ProductoUpsertWithoutEliminacionStockInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutEliminacionStockInput, ProductoUpdateWithoutEliminacionStockInput>, ProductoUncheckedUpdateWithoutEliminacionStockInput>
  }

  export type UsuarioUpdateOneWithoutEliminacionStockNestedInput = {
    create?: XOR<UsuarioCreateWithoutEliminacionStockInput, UsuarioUncheckedCreateWithoutEliminacionStockInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEliminacionStockInput
    upsert?: UsuarioUpsertWithoutEliminacionStockInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEliminacionStockInput, UsuarioUpdateWithoutEliminacionStockInput>, UsuarioUncheckedUpdateWithoutEliminacionStockInput>
  }

  export type SucursalUpdateOneWithoutEliminacionStockNestedInput = {
    create?: XOR<SucursalCreateWithoutEliminacionStockInput, SucursalUncheckedCreateWithoutEliminacionStockInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutEliminacionStockInput
    upsert?: SucursalUpsertWithoutEliminacionStockInput
    disconnect?: SucursalWhereInput | boolean
    delete?: SucursalWhereInput | boolean
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutEliminacionStockInput, SucursalUpdateWithoutEliminacionStockInput>, SucursalUncheckedUpdateWithoutEliminacionStockInput>
  }

  export type ProductoCreateNestedOneWithoutEliminacionProductoInput = {
    create?: XOR<ProductoCreateWithoutEliminacionProductoInput, ProductoUncheckedCreateWithoutEliminacionProductoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutEliminacionProductoInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEliminacionProductoInput = {
    create?: XOR<UsuarioCreateWithoutEliminacionProductoInput, UsuarioUncheckedCreateWithoutEliminacionProductoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEliminacionProductoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutEliminacionProductoNestedInput = {
    create?: XOR<ProductoCreateWithoutEliminacionProductoInput, ProductoUncheckedCreateWithoutEliminacionProductoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutEliminacionProductoInput
    upsert?: ProductoUpsertWithoutEliminacionProductoInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutEliminacionProductoInput, ProductoUpdateWithoutEliminacionProductoInput>, ProductoUncheckedUpdateWithoutEliminacionProductoInput>
  }

  export type UsuarioUpdateOneWithoutEliminacionProductoNestedInput = {
    create?: XOR<UsuarioCreateWithoutEliminacionProductoInput, UsuarioUncheckedCreateWithoutEliminacionProductoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEliminacionProductoInput
    upsert?: UsuarioUpsertWithoutEliminacionProductoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEliminacionProductoInput, UsuarioUpdateWithoutEliminacionProductoInput>, UsuarioUncheckedUpdateWithoutEliminacionProductoInput>
  }

  export type ClienteCreateNestedOneWithoutEliminacionClienteInput = {
    create?: XOR<ClienteCreateWithoutEliminacionClienteInput, ClienteUncheckedCreateWithoutEliminacionClienteInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutEliminacionClienteInput
    connect?: ClienteWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutEliminacionClienteInput = {
    create?: XOR<UsuarioCreateWithoutEliminacionClienteInput, UsuarioUncheckedCreateWithoutEliminacionClienteInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEliminacionClienteInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ClienteUpdateOneRequiredWithoutEliminacionClienteNestedInput = {
    create?: XOR<ClienteCreateWithoutEliminacionClienteInput, ClienteUncheckedCreateWithoutEliminacionClienteInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutEliminacionClienteInput
    upsert?: ClienteUpsertWithoutEliminacionClienteInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutEliminacionClienteInput, ClienteUpdateWithoutEliminacionClienteInput>, ClienteUncheckedUpdateWithoutEliminacionClienteInput>
  }

  export type UsuarioUpdateOneWithoutEliminacionClienteNestedInput = {
    create?: XOR<UsuarioCreateWithoutEliminacionClienteInput, UsuarioUncheckedCreateWithoutEliminacionClienteInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEliminacionClienteInput
    upsert?: UsuarioUpsertWithoutEliminacionClienteInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEliminacionClienteInput, UsuarioUpdateWithoutEliminacionClienteInput>, UsuarioUncheckedUpdateWithoutEliminacionClienteInput>
  }

  export type ProductoCreateNestedOneWithoutStockInput = {
    create?: XOR<ProductoCreateWithoutStockInput, ProductoUncheckedCreateWithoutStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutStockInput
    connect?: ProductoWhereUniqueInput
  }

  export type EntregaStockCreateNestedOneWithoutStockEntregadoInput = {
    create?: XOR<EntregaStockCreateWithoutStockEntregadoInput, EntregaStockUncheckedCreateWithoutStockEntregadoInput>
    connectOrCreate?: EntregaStockCreateOrConnectWithoutStockEntregadoInput
    connect?: EntregaStockWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutProductosInput = {
    create?: XOR<SucursalCreateWithoutProductosInput, SucursalUncheckedCreateWithoutProductosInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutProductosInput
    connect?: SucursalWhereUniqueInput
  }

  export type VencimientoCreateNestedManyWithoutStockInput = {
    create?: XOR<VencimientoCreateWithoutStockInput, VencimientoUncheckedCreateWithoutStockInput> | VencimientoCreateWithoutStockInput[] | VencimientoUncheckedCreateWithoutStockInput[]
    connectOrCreate?: VencimientoCreateOrConnectWithoutStockInput | VencimientoCreateOrConnectWithoutStockInput[]
    createMany?: VencimientoCreateManyStockInputEnvelope
    connect?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
  }

  export type AjusteStockCreateNestedManyWithoutStockInput = {
    create?: XOR<AjusteStockCreateWithoutStockInput, AjusteStockUncheckedCreateWithoutStockInput> | AjusteStockCreateWithoutStockInput[] | AjusteStockUncheckedCreateWithoutStockInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutStockInput | AjusteStockCreateOrConnectWithoutStockInput[]
    createMany?: AjusteStockCreateManyStockInputEnvelope
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
  }

  export type VencimientoUncheckedCreateNestedManyWithoutStockInput = {
    create?: XOR<VencimientoCreateWithoutStockInput, VencimientoUncheckedCreateWithoutStockInput> | VencimientoCreateWithoutStockInput[] | VencimientoUncheckedCreateWithoutStockInput[]
    connectOrCreate?: VencimientoCreateOrConnectWithoutStockInput | VencimientoCreateOrConnectWithoutStockInput[]
    createMany?: VencimientoCreateManyStockInputEnvelope
    connect?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
  }

  export type AjusteStockUncheckedCreateNestedManyWithoutStockInput = {
    create?: XOR<AjusteStockCreateWithoutStockInput, AjusteStockUncheckedCreateWithoutStockInput> | AjusteStockCreateWithoutStockInput[] | AjusteStockUncheckedCreateWithoutStockInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutStockInput | AjusteStockCreateOrConnectWithoutStockInput[]
    createMany?: AjusteStockCreateManyStockInputEnvelope
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
  }

  export type ProductoUpdateOneRequiredWithoutStockNestedInput = {
    create?: XOR<ProductoCreateWithoutStockInput, ProductoUncheckedCreateWithoutStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutStockInput
    upsert?: ProductoUpsertWithoutStockInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutStockInput, ProductoUpdateWithoutStockInput>, ProductoUncheckedUpdateWithoutStockInput>
  }

  export type EntregaStockUpdateOneWithoutStockEntregadoNestedInput = {
    create?: XOR<EntregaStockCreateWithoutStockEntregadoInput, EntregaStockUncheckedCreateWithoutStockEntregadoInput>
    connectOrCreate?: EntregaStockCreateOrConnectWithoutStockEntregadoInput
    upsert?: EntregaStockUpsertWithoutStockEntregadoInput
    disconnect?: EntregaStockWhereInput | boolean
    delete?: EntregaStockWhereInput | boolean
    connect?: EntregaStockWhereUniqueInput
    update?: XOR<XOR<EntregaStockUpdateToOneWithWhereWithoutStockEntregadoInput, EntregaStockUpdateWithoutStockEntregadoInput>, EntregaStockUncheckedUpdateWithoutStockEntregadoInput>
  }

  export type SucursalUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<SucursalCreateWithoutProductosInput, SucursalUncheckedCreateWithoutProductosInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutProductosInput
    upsert?: SucursalUpsertWithoutProductosInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutProductosInput, SucursalUpdateWithoutProductosInput>, SucursalUncheckedUpdateWithoutProductosInput>
  }

  export type VencimientoUpdateManyWithoutStockNestedInput = {
    create?: XOR<VencimientoCreateWithoutStockInput, VencimientoUncheckedCreateWithoutStockInput> | VencimientoCreateWithoutStockInput[] | VencimientoUncheckedCreateWithoutStockInput[]
    connectOrCreate?: VencimientoCreateOrConnectWithoutStockInput | VencimientoCreateOrConnectWithoutStockInput[]
    upsert?: VencimientoUpsertWithWhereUniqueWithoutStockInput | VencimientoUpsertWithWhereUniqueWithoutStockInput[]
    createMany?: VencimientoCreateManyStockInputEnvelope
    set?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    disconnect?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    delete?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    connect?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    update?: VencimientoUpdateWithWhereUniqueWithoutStockInput | VencimientoUpdateWithWhereUniqueWithoutStockInput[]
    updateMany?: VencimientoUpdateManyWithWhereWithoutStockInput | VencimientoUpdateManyWithWhereWithoutStockInput[]
    deleteMany?: VencimientoScalarWhereInput | VencimientoScalarWhereInput[]
  }

  export type AjusteStockUpdateManyWithoutStockNestedInput = {
    create?: XOR<AjusteStockCreateWithoutStockInput, AjusteStockUncheckedCreateWithoutStockInput> | AjusteStockCreateWithoutStockInput[] | AjusteStockUncheckedCreateWithoutStockInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutStockInput | AjusteStockCreateOrConnectWithoutStockInput[]
    upsert?: AjusteStockUpsertWithWhereUniqueWithoutStockInput | AjusteStockUpsertWithWhereUniqueWithoutStockInput[]
    createMany?: AjusteStockCreateManyStockInputEnvelope
    set?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    disconnect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    delete?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    update?: AjusteStockUpdateWithWhereUniqueWithoutStockInput | AjusteStockUpdateWithWhereUniqueWithoutStockInput[]
    updateMany?: AjusteStockUpdateManyWithWhereWithoutStockInput | AjusteStockUpdateManyWithWhereWithoutStockInput[]
    deleteMany?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
  }

  export type VencimientoUncheckedUpdateManyWithoutStockNestedInput = {
    create?: XOR<VencimientoCreateWithoutStockInput, VencimientoUncheckedCreateWithoutStockInput> | VencimientoCreateWithoutStockInput[] | VencimientoUncheckedCreateWithoutStockInput[]
    connectOrCreate?: VencimientoCreateOrConnectWithoutStockInput | VencimientoCreateOrConnectWithoutStockInput[]
    upsert?: VencimientoUpsertWithWhereUniqueWithoutStockInput | VencimientoUpsertWithWhereUniqueWithoutStockInput[]
    createMany?: VencimientoCreateManyStockInputEnvelope
    set?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    disconnect?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    delete?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    connect?: VencimientoWhereUniqueInput | VencimientoWhereUniqueInput[]
    update?: VencimientoUpdateWithWhereUniqueWithoutStockInput | VencimientoUpdateWithWhereUniqueWithoutStockInput[]
    updateMany?: VencimientoUpdateManyWithWhereWithoutStockInput | VencimientoUpdateManyWithWhereWithoutStockInput[]
    deleteMany?: VencimientoScalarWhereInput | VencimientoScalarWhereInput[]
  }

  export type AjusteStockUncheckedUpdateManyWithoutStockNestedInput = {
    create?: XOR<AjusteStockCreateWithoutStockInput, AjusteStockUncheckedCreateWithoutStockInput> | AjusteStockCreateWithoutStockInput[] | AjusteStockUncheckedCreateWithoutStockInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutStockInput | AjusteStockCreateOrConnectWithoutStockInput[]
    upsert?: AjusteStockUpsertWithWhereUniqueWithoutStockInput | AjusteStockUpsertWithWhereUniqueWithoutStockInput[]
    createMany?: AjusteStockCreateManyStockInputEnvelope
    set?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    disconnect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    delete?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    update?: AjusteStockUpdateWithWhereUniqueWithoutStockInput | AjusteStockUpdateWithWhereUniqueWithoutStockInput[]
    updateMany?: AjusteStockUpdateManyWithWhereWithoutStockInput | AjusteStockUpdateManyWithWhereWithoutStockInput[]
    deleteMany?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
  }

  export type StockCreateNestedManyWithoutSucursalInput = {
    create?: XOR<StockCreateWithoutSucursalInput, StockUncheckedCreateWithoutSucursalInput> | StockCreateWithoutSucursalInput[] | StockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: StockCreateOrConnectWithoutSucursalInput | StockCreateOrConnectWithoutSucursalInput[]
    createMany?: StockCreateManySucursalInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type UsuarioCreateNestedManyWithoutSucursalInput = {
    create?: XOR<UsuarioCreateWithoutSucursalInput, UsuarioUncheckedCreateWithoutSucursalInput> | UsuarioCreateWithoutSucursalInput[] | UsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutSucursalInput | UsuarioCreateOrConnectWithoutSucursalInput[]
    createMany?: UsuarioCreateManySucursalInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type VentaCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | TransferenciaProductoCreateWithoutSucursalOrigenInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    createMany?: TransferenciaProductoCreateManySucursalOrigenInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | TransferenciaProductoCreateWithoutSucursalDestinoInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    createMany?: TransferenciaProductoCreateManySucursalDestinoInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type EntregaStockCreateNestedManyWithoutSucursalInput = {
    create?: XOR<EntregaStockCreateWithoutSucursalInput, EntregaStockUncheckedCreateWithoutSucursalInput> | EntregaStockCreateWithoutSucursalInput[] | EntregaStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutSucursalInput | EntregaStockCreateOrConnectWithoutSucursalInput[]
    createMany?: EntregaStockCreateManySucursalInputEnvelope
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalOrigenInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalDestinoInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type EliminacionStockCreateNestedManyWithoutSucursalInput = {
    create?: XOR<EliminacionStockCreateWithoutSucursalInput, EliminacionStockUncheckedCreateWithoutSucursalInput> | EliminacionStockCreateWithoutSucursalInput[] | EliminacionStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutSucursalInput | EliminacionStockCreateOrConnectWithoutSucursalInput[]
    createMany?: EliminacionStockCreateManySucursalInputEnvelope
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
  }

  export type RegistroCajaCreateNestedManyWithoutSucursalInput = {
    create?: XOR<RegistroCajaCreateWithoutSucursalInput, RegistroCajaUncheckedCreateWithoutSucursalInput> | RegistroCajaCreateWithoutSucursalInput[] | RegistroCajaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutSucursalInput | RegistroCajaCreateOrConnectWithoutSucursalInput[]
    createMany?: RegistroCajaCreateManySucursalInputEnvelope
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
  }

  export type DepositoCreateNestedManyWithoutSucursalInput = {
    create?: XOR<DepositoCreateWithoutSucursalInput, DepositoUncheckedCreateWithoutSucursalInput> | DepositoCreateWithoutSucursalInput[] | DepositoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutSucursalInput | DepositoCreateOrConnectWithoutSucursalInput[]
    createMany?: DepositoCreateManySucursalInputEnvelope
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
  }

  export type EgresoCreateNestedManyWithoutSucursalInput = {
    create?: XOR<EgresoCreateWithoutSucursalInput, EgresoUncheckedCreateWithoutSucursalInput> | EgresoCreateWithoutSucursalInput[] | EgresoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutSucursalInput | EgresoCreateOrConnectWithoutSucursalInput[]
    createMany?: EgresoCreateManySucursalInputEnvelope
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
  }

  export type SucursalSaldoCreateNestedOneWithoutSucursalInput = {
    create?: XOR<SucursalSaldoCreateWithoutSucursalInput, SucursalSaldoUncheckedCreateWithoutSucursalInput>
    connectOrCreate?: SucursalSaldoCreateOrConnectWithoutSucursalInput
    connect?: SucursalSaldoWhereUniqueInput
  }

  export type VentaEliminadaCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaEliminadaCreateWithoutSucursalInput, VentaEliminadaUncheckedCreateWithoutSucursalInput> | VentaEliminadaCreateWithoutSucursalInput[] | VentaEliminadaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutSucursalInput | VentaEliminadaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaEliminadaCreateManySucursalInputEnvelope
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
  }

  export type VentaCuotaCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaCuotaCreateWithoutSucursalInput, VentaCuotaUncheckedCreateWithoutSucursalInput> | VentaCuotaCreateWithoutSucursalInput[] | VentaCuotaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutSucursalInput | VentaCuotaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaCuotaCreateManySucursalInputEnvelope
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
  }

  export type PlantillaComprobanteCreateNestedManyWithoutSucursalInput = {
    create?: XOR<PlantillaComprobanteCreateWithoutSucursalInput, PlantillaComprobanteUncheckedCreateWithoutSucursalInput> | PlantillaComprobanteCreateWithoutSucursalInput[] | PlantillaComprobanteUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: PlantillaComprobanteCreateOrConnectWithoutSucursalInput | PlantillaComprobanteCreateOrConnectWithoutSucursalInput[]
    createMany?: PlantillaComprobanteCreateManySucursalInputEnvelope
    connect?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
  }

  export type ReparacionCreateNestedManyWithoutSucursalInput = {
    create?: XOR<ReparacionCreateWithoutSucursalInput, ReparacionUncheckedCreateWithoutSucursalInput> | ReparacionCreateWithoutSucursalInput[] | ReparacionUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutSucursalInput | ReparacionCreateOrConnectWithoutSucursalInput[]
    createMany?: ReparacionCreateManySucursalInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type MetaUsuarioCreateNestedManyWithoutSucursalInput = {
    create?: XOR<MetaUsuarioCreateWithoutSucursalInput, MetaUsuarioUncheckedCreateWithoutSucursalInput> | MetaUsuarioCreateWithoutSucursalInput[] | MetaUsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutSucursalInput | MetaUsuarioCreateOrConnectWithoutSucursalInput[]
    createMany?: MetaUsuarioCreateManySucursalInputEnvelope
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
  }

  export type MetaCobrosCreateNestedManyWithoutSucursalInput = {
    create?: XOR<MetaCobrosCreateWithoutSucursalInput, MetaCobrosUncheckedCreateWithoutSucursalInput> | MetaCobrosCreateWithoutSucursalInput[] | MetaCobrosUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutSucursalInput | MetaCobrosCreateOrConnectWithoutSucursalInput[]
    createMany?: MetaCobrosCreateManySucursalInputEnvelope
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
  }

  export type DepositoCobroCreateNestedManyWithoutSucursalInput = {
    create?: XOR<DepositoCobroCreateWithoutSucursalInput, DepositoCobroUncheckedCreateWithoutSucursalInput> | DepositoCobroCreateWithoutSucursalInput[] | DepositoCobroUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutSucursalInput | DepositoCobroCreateOrConnectWithoutSucursalInput[]
    createMany?: DepositoCobroCreateManySucursalInputEnvelope
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
  }

  export type StockUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<StockCreateWithoutSucursalInput, StockUncheckedCreateWithoutSucursalInput> | StockCreateWithoutSucursalInput[] | StockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: StockCreateOrConnectWithoutSucursalInput | StockCreateOrConnectWithoutSucursalInput[]
    createMany?: StockCreateManySucursalInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<UsuarioCreateWithoutSucursalInput, UsuarioUncheckedCreateWithoutSucursalInput> | UsuarioCreateWithoutSucursalInput[] | UsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutSucursalInput | UsuarioCreateOrConnectWithoutSucursalInput[]
    createMany?: UsuarioCreateManySucursalInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | TransferenciaProductoCreateWithoutSucursalOrigenInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    createMany?: TransferenciaProductoCreateManySucursalOrigenInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | TransferenciaProductoCreateWithoutSucursalDestinoInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    createMany?: TransferenciaProductoCreateManySucursalDestinoInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type EntregaStockUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<EntregaStockCreateWithoutSucursalInput, EntregaStockUncheckedCreateWithoutSucursalInput> | EntregaStockCreateWithoutSucursalInput[] | EntregaStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutSucursalInput | EntregaStockCreateOrConnectWithoutSucursalInput[]
    createMany?: EntregaStockCreateManySucursalInputEnvelope
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalOrigenInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalDestinoInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<EliminacionStockCreateWithoutSucursalInput, EliminacionStockUncheckedCreateWithoutSucursalInput> | EliminacionStockCreateWithoutSucursalInput[] | EliminacionStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutSucursalInput | EliminacionStockCreateOrConnectWithoutSucursalInput[]
    createMany?: EliminacionStockCreateManySucursalInputEnvelope
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
  }

  export type RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<RegistroCajaCreateWithoutSucursalInput, RegistroCajaUncheckedCreateWithoutSucursalInput> | RegistroCajaCreateWithoutSucursalInput[] | RegistroCajaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutSucursalInput | RegistroCajaCreateOrConnectWithoutSucursalInput[]
    createMany?: RegistroCajaCreateManySucursalInputEnvelope
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
  }

  export type DepositoUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<DepositoCreateWithoutSucursalInput, DepositoUncheckedCreateWithoutSucursalInput> | DepositoCreateWithoutSucursalInput[] | DepositoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutSucursalInput | DepositoCreateOrConnectWithoutSucursalInput[]
    createMany?: DepositoCreateManySucursalInputEnvelope
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
  }

  export type EgresoUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<EgresoCreateWithoutSucursalInput, EgresoUncheckedCreateWithoutSucursalInput> | EgresoCreateWithoutSucursalInput[] | EgresoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutSucursalInput | EgresoCreateOrConnectWithoutSucursalInput[]
    createMany?: EgresoCreateManySucursalInputEnvelope
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
  }

  export type SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput = {
    create?: XOR<SucursalSaldoCreateWithoutSucursalInput, SucursalSaldoUncheckedCreateWithoutSucursalInput>
    connectOrCreate?: SucursalSaldoCreateOrConnectWithoutSucursalInput
    connect?: SucursalSaldoWhereUniqueInput
  }

  export type VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaEliminadaCreateWithoutSucursalInput, VentaEliminadaUncheckedCreateWithoutSucursalInput> | VentaEliminadaCreateWithoutSucursalInput[] | VentaEliminadaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutSucursalInput | VentaEliminadaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaEliminadaCreateManySucursalInputEnvelope
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
  }

  export type VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaCuotaCreateWithoutSucursalInput, VentaCuotaUncheckedCreateWithoutSucursalInput> | VentaCuotaCreateWithoutSucursalInput[] | VentaCuotaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutSucursalInput | VentaCuotaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaCuotaCreateManySucursalInputEnvelope
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
  }

  export type PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<PlantillaComprobanteCreateWithoutSucursalInput, PlantillaComprobanteUncheckedCreateWithoutSucursalInput> | PlantillaComprobanteCreateWithoutSucursalInput[] | PlantillaComprobanteUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: PlantillaComprobanteCreateOrConnectWithoutSucursalInput | PlantillaComprobanteCreateOrConnectWithoutSucursalInput[]
    createMany?: PlantillaComprobanteCreateManySucursalInputEnvelope
    connect?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
  }

  export type ReparacionUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<ReparacionCreateWithoutSucursalInput, ReparacionUncheckedCreateWithoutSucursalInput> | ReparacionCreateWithoutSucursalInput[] | ReparacionUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutSucursalInput | ReparacionCreateOrConnectWithoutSucursalInput[]
    createMany?: ReparacionCreateManySucursalInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<MetaUsuarioCreateWithoutSucursalInput, MetaUsuarioUncheckedCreateWithoutSucursalInput> | MetaUsuarioCreateWithoutSucursalInput[] | MetaUsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutSucursalInput | MetaUsuarioCreateOrConnectWithoutSucursalInput[]
    createMany?: MetaUsuarioCreateManySucursalInputEnvelope
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
  }

  export type MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<MetaCobrosCreateWithoutSucursalInput, MetaCobrosUncheckedCreateWithoutSucursalInput> | MetaCobrosCreateWithoutSucursalInput[] | MetaCobrosUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutSucursalInput | MetaCobrosCreateOrConnectWithoutSucursalInput[]
    createMany?: MetaCobrosCreateManySucursalInputEnvelope
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
  }

  export type DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<DepositoCobroCreateWithoutSucursalInput, DepositoCobroUncheckedCreateWithoutSucursalInput> | DepositoCobroCreateWithoutSucursalInput[] | DepositoCobroUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutSucursalInput | DepositoCobroCreateOrConnectWithoutSucursalInput[]
    createMany?: DepositoCobroCreateManySucursalInputEnvelope
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
  }

  export type EnumTipoSucursalFieldUpdateOperationsInput = {
    set?: $Enums.TipoSucursal
  }

  export type StockUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<StockCreateWithoutSucursalInput, StockUncheckedCreateWithoutSucursalInput> | StockCreateWithoutSucursalInput[] | StockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: StockCreateOrConnectWithoutSucursalInput | StockCreateOrConnectWithoutSucursalInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutSucursalInput | StockUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: StockCreateManySucursalInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutSucursalInput | StockUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: StockUpdateManyWithWhereWithoutSucursalInput | StockUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type UsuarioUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<UsuarioCreateWithoutSucursalInput, UsuarioUncheckedCreateWithoutSucursalInput> | UsuarioCreateWithoutSucursalInput[] | UsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutSucursalInput | UsuarioCreateOrConnectWithoutSucursalInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutSucursalInput | UsuarioUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: UsuarioCreateManySucursalInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutSucursalInput | UsuarioUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutSucursalInput | UsuarioUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type VentaUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutSucursalInput | VentaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutSucursalInput | VentaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutSucursalInput | VentaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | TransferenciaProductoCreateWithoutSucursalOrigenInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput | TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput[]
    createMany?: TransferenciaProductoCreateManySucursalOrigenInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput | TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput | TransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | TransferenciaProductoCreateWithoutSucursalDestinoInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput | TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput[]
    createMany?: TransferenciaProductoCreateManySucursalDestinoInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput | TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput | TransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type EntregaStockUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<EntregaStockCreateWithoutSucursalInput, EntregaStockUncheckedCreateWithoutSucursalInput> | EntregaStockCreateWithoutSucursalInput[] | EntregaStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutSucursalInput | EntregaStockCreateOrConnectWithoutSucursalInput[]
    upsert?: EntregaStockUpsertWithWhereUniqueWithoutSucursalInput | EntregaStockUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: EntregaStockCreateManySucursalInputEnvelope
    set?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    disconnect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    delete?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    update?: EntregaStockUpdateWithWhereUniqueWithoutSucursalInput | EntregaStockUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: EntregaStockUpdateManyWithWhereWithoutSucursalInput | EntregaStockUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalOrigenInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalDestinoInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type EliminacionStockUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<EliminacionStockCreateWithoutSucursalInput, EliminacionStockUncheckedCreateWithoutSucursalInput> | EliminacionStockCreateWithoutSucursalInput[] | EliminacionStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutSucursalInput | EliminacionStockCreateOrConnectWithoutSucursalInput[]
    upsert?: EliminacionStockUpsertWithWhereUniqueWithoutSucursalInput | EliminacionStockUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: EliminacionStockCreateManySucursalInputEnvelope
    set?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    disconnect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    delete?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    update?: EliminacionStockUpdateWithWhereUniqueWithoutSucursalInput | EliminacionStockUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: EliminacionStockUpdateManyWithWhereWithoutSucursalInput | EliminacionStockUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
  }

  export type RegistroCajaUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutSucursalInput, RegistroCajaUncheckedCreateWithoutSucursalInput> | RegistroCajaCreateWithoutSucursalInput[] | RegistroCajaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutSucursalInput | RegistroCajaCreateOrConnectWithoutSucursalInput[]
    upsert?: RegistroCajaUpsertWithWhereUniqueWithoutSucursalInput | RegistroCajaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: RegistroCajaCreateManySucursalInputEnvelope
    set?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    disconnect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    delete?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    update?: RegistroCajaUpdateWithWhereUniqueWithoutSucursalInput | RegistroCajaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: RegistroCajaUpdateManyWithWhereWithoutSucursalInput | RegistroCajaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: RegistroCajaScalarWhereInput | RegistroCajaScalarWhereInput[]
  }

  export type DepositoUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<DepositoCreateWithoutSucursalInput, DepositoUncheckedCreateWithoutSucursalInput> | DepositoCreateWithoutSucursalInput[] | DepositoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutSucursalInput | DepositoCreateOrConnectWithoutSucursalInput[]
    upsert?: DepositoUpsertWithWhereUniqueWithoutSucursalInput | DepositoUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: DepositoCreateManySucursalInputEnvelope
    set?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    disconnect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    delete?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    update?: DepositoUpdateWithWhereUniqueWithoutSucursalInput | DepositoUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: DepositoUpdateManyWithWhereWithoutSucursalInput | DepositoUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
  }

  export type EgresoUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<EgresoCreateWithoutSucursalInput, EgresoUncheckedCreateWithoutSucursalInput> | EgresoCreateWithoutSucursalInput[] | EgresoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutSucursalInput | EgresoCreateOrConnectWithoutSucursalInput[]
    upsert?: EgresoUpsertWithWhereUniqueWithoutSucursalInput | EgresoUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: EgresoCreateManySucursalInputEnvelope
    set?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    disconnect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    delete?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    update?: EgresoUpdateWithWhereUniqueWithoutSucursalInput | EgresoUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: EgresoUpdateManyWithWhereWithoutSucursalInput | EgresoUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
  }

  export type SucursalSaldoUpdateOneWithoutSucursalNestedInput = {
    create?: XOR<SucursalSaldoCreateWithoutSucursalInput, SucursalSaldoUncheckedCreateWithoutSucursalInput>
    connectOrCreate?: SucursalSaldoCreateOrConnectWithoutSucursalInput
    upsert?: SucursalSaldoUpsertWithoutSucursalInput
    disconnect?: SucursalSaldoWhereInput | boolean
    delete?: SucursalSaldoWhereInput | boolean
    connect?: SucursalSaldoWhereUniqueInput
    update?: XOR<XOR<SucursalSaldoUpdateToOneWithWhereWithoutSucursalInput, SucursalSaldoUpdateWithoutSucursalInput>, SucursalSaldoUncheckedUpdateWithoutSucursalInput>
  }

  export type VentaEliminadaUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutSucursalInput, VentaEliminadaUncheckedCreateWithoutSucursalInput> | VentaEliminadaCreateWithoutSucursalInput[] | VentaEliminadaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutSucursalInput | VentaEliminadaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaEliminadaUpsertWithWhereUniqueWithoutSucursalInput | VentaEliminadaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaEliminadaCreateManySucursalInputEnvelope
    set?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    disconnect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    delete?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    update?: VentaEliminadaUpdateWithWhereUniqueWithoutSucursalInput | VentaEliminadaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaEliminadaUpdateManyWithWhereWithoutSucursalInput | VentaEliminadaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
  }

  export type VentaCuotaUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutSucursalInput, VentaCuotaUncheckedCreateWithoutSucursalInput> | VentaCuotaCreateWithoutSucursalInput[] | VentaCuotaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutSucursalInput | VentaCuotaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaCuotaUpsertWithWhereUniqueWithoutSucursalInput | VentaCuotaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaCuotaCreateManySucursalInputEnvelope
    set?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    disconnect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    delete?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    update?: VentaCuotaUpdateWithWhereUniqueWithoutSucursalInput | VentaCuotaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaCuotaUpdateManyWithWhereWithoutSucursalInput | VentaCuotaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
  }

  export type PlantillaComprobanteUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<PlantillaComprobanteCreateWithoutSucursalInput, PlantillaComprobanteUncheckedCreateWithoutSucursalInput> | PlantillaComprobanteCreateWithoutSucursalInput[] | PlantillaComprobanteUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: PlantillaComprobanteCreateOrConnectWithoutSucursalInput | PlantillaComprobanteCreateOrConnectWithoutSucursalInput[]
    upsert?: PlantillaComprobanteUpsertWithWhereUniqueWithoutSucursalInput | PlantillaComprobanteUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: PlantillaComprobanteCreateManySucursalInputEnvelope
    set?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    disconnect?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    delete?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    connect?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    update?: PlantillaComprobanteUpdateWithWhereUniqueWithoutSucursalInput | PlantillaComprobanteUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: PlantillaComprobanteUpdateManyWithWhereWithoutSucursalInput | PlantillaComprobanteUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: PlantillaComprobanteScalarWhereInput | PlantillaComprobanteScalarWhereInput[]
  }

  export type ReparacionUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<ReparacionCreateWithoutSucursalInput, ReparacionUncheckedCreateWithoutSucursalInput> | ReparacionCreateWithoutSucursalInput[] | ReparacionUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutSucursalInput | ReparacionCreateOrConnectWithoutSucursalInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutSucursalInput | ReparacionUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: ReparacionCreateManySucursalInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutSucursalInput | ReparacionUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutSucursalInput | ReparacionUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type MetaUsuarioUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<MetaUsuarioCreateWithoutSucursalInput, MetaUsuarioUncheckedCreateWithoutSucursalInput> | MetaUsuarioCreateWithoutSucursalInput[] | MetaUsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutSucursalInput | MetaUsuarioCreateOrConnectWithoutSucursalInput[]
    upsert?: MetaUsuarioUpsertWithWhereUniqueWithoutSucursalInput | MetaUsuarioUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: MetaUsuarioCreateManySucursalInputEnvelope
    set?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    disconnect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    delete?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    update?: MetaUsuarioUpdateWithWhereUniqueWithoutSucursalInput | MetaUsuarioUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: MetaUsuarioUpdateManyWithWhereWithoutSucursalInput | MetaUsuarioUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: MetaUsuarioScalarWhereInput | MetaUsuarioScalarWhereInput[]
  }

  export type MetaCobrosUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<MetaCobrosCreateWithoutSucursalInput, MetaCobrosUncheckedCreateWithoutSucursalInput> | MetaCobrosCreateWithoutSucursalInput[] | MetaCobrosUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutSucursalInput | MetaCobrosCreateOrConnectWithoutSucursalInput[]
    upsert?: MetaCobrosUpsertWithWhereUniqueWithoutSucursalInput | MetaCobrosUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: MetaCobrosCreateManySucursalInputEnvelope
    set?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    disconnect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    delete?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    update?: MetaCobrosUpdateWithWhereUniqueWithoutSucursalInput | MetaCobrosUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: MetaCobrosUpdateManyWithWhereWithoutSucursalInput | MetaCobrosUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: MetaCobrosScalarWhereInput | MetaCobrosScalarWhereInput[]
  }

  export type DepositoCobroUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<DepositoCobroCreateWithoutSucursalInput, DepositoCobroUncheckedCreateWithoutSucursalInput> | DepositoCobroCreateWithoutSucursalInput[] | DepositoCobroUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutSucursalInput | DepositoCobroCreateOrConnectWithoutSucursalInput[]
    upsert?: DepositoCobroUpsertWithWhereUniqueWithoutSucursalInput | DepositoCobroUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: DepositoCobroCreateManySucursalInputEnvelope
    set?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    disconnect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    delete?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    update?: DepositoCobroUpdateWithWhereUniqueWithoutSucursalInput | DepositoCobroUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: DepositoCobroUpdateManyWithWhereWithoutSucursalInput | DepositoCobroUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
  }

  export type StockUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<StockCreateWithoutSucursalInput, StockUncheckedCreateWithoutSucursalInput> | StockCreateWithoutSucursalInput[] | StockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: StockCreateOrConnectWithoutSucursalInput | StockCreateOrConnectWithoutSucursalInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutSucursalInput | StockUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: StockCreateManySucursalInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutSucursalInput | StockUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: StockUpdateManyWithWhereWithoutSucursalInput | StockUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<UsuarioCreateWithoutSucursalInput, UsuarioUncheckedCreateWithoutSucursalInput> | UsuarioCreateWithoutSucursalInput[] | UsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutSucursalInput | UsuarioCreateOrConnectWithoutSucursalInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutSucursalInput | UsuarioUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: UsuarioCreateManySucursalInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutSucursalInput | UsuarioUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutSucursalInput | UsuarioUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutSucursalInput | VentaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutSucursalInput | VentaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutSucursalInput | VentaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | TransferenciaProductoCreateWithoutSucursalOrigenInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput | TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput[]
    createMany?: TransferenciaProductoCreateManySucursalOrigenInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput | TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput | TransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | TransferenciaProductoCreateWithoutSucursalDestinoInput[] | TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput | TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput[]
    createMany?: TransferenciaProductoCreateManySucursalDestinoInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput | TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput | TransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<EntregaStockCreateWithoutSucursalInput, EntregaStockUncheckedCreateWithoutSucursalInput> | EntregaStockCreateWithoutSucursalInput[] | EntregaStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutSucursalInput | EntregaStockCreateOrConnectWithoutSucursalInput[]
    upsert?: EntregaStockUpsertWithWhereUniqueWithoutSucursalInput | EntregaStockUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: EntregaStockCreateManySucursalInputEnvelope
    set?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    disconnect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    delete?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    update?: EntregaStockUpdateWithWhereUniqueWithoutSucursalInput | EntregaStockUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: EntregaStockUpdateManyWithWhereWithoutSucursalInput | EntregaStockUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput> | SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalOrigenInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput> | SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput | SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput[]
    createMany?: SolicitudTransferenciaProductoCreateManySucursalDestinoInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<EliminacionStockCreateWithoutSucursalInput, EliminacionStockUncheckedCreateWithoutSucursalInput> | EliminacionStockCreateWithoutSucursalInput[] | EliminacionStockUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutSucursalInput | EliminacionStockCreateOrConnectWithoutSucursalInput[]
    upsert?: EliminacionStockUpsertWithWhereUniqueWithoutSucursalInput | EliminacionStockUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: EliminacionStockCreateManySucursalInputEnvelope
    set?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    disconnect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    delete?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    update?: EliminacionStockUpdateWithWhereUniqueWithoutSucursalInput | EliminacionStockUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: EliminacionStockUpdateManyWithWhereWithoutSucursalInput | EliminacionStockUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
  }

  export type RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutSucursalInput, RegistroCajaUncheckedCreateWithoutSucursalInput> | RegistroCajaCreateWithoutSucursalInput[] | RegistroCajaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutSucursalInput | RegistroCajaCreateOrConnectWithoutSucursalInput[]
    upsert?: RegistroCajaUpsertWithWhereUniqueWithoutSucursalInput | RegistroCajaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: RegistroCajaCreateManySucursalInputEnvelope
    set?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    disconnect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    delete?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    update?: RegistroCajaUpdateWithWhereUniqueWithoutSucursalInput | RegistroCajaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: RegistroCajaUpdateManyWithWhereWithoutSucursalInput | RegistroCajaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: RegistroCajaScalarWhereInput | RegistroCajaScalarWhereInput[]
  }

  export type DepositoUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<DepositoCreateWithoutSucursalInput, DepositoUncheckedCreateWithoutSucursalInput> | DepositoCreateWithoutSucursalInput[] | DepositoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutSucursalInput | DepositoCreateOrConnectWithoutSucursalInput[]
    upsert?: DepositoUpsertWithWhereUniqueWithoutSucursalInput | DepositoUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: DepositoCreateManySucursalInputEnvelope
    set?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    disconnect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    delete?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    update?: DepositoUpdateWithWhereUniqueWithoutSucursalInput | DepositoUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: DepositoUpdateManyWithWhereWithoutSucursalInput | DepositoUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
  }

  export type EgresoUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<EgresoCreateWithoutSucursalInput, EgresoUncheckedCreateWithoutSucursalInput> | EgresoCreateWithoutSucursalInput[] | EgresoUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutSucursalInput | EgresoCreateOrConnectWithoutSucursalInput[]
    upsert?: EgresoUpsertWithWhereUniqueWithoutSucursalInput | EgresoUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: EgresoCreateManySucursalInputEnvelope
    set?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    disconnect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    delete?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    update?: EgresoUpdateWithWhereUniqueWithoutSucursalInput | EgresoUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: EgresoUpdateManyWithWhereWithoutSucursalInput | EgresoUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
  }

  export type SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput = {
    create?: XOR<SucursalSaldoCreateWithoutSucursalInput, SucursalSaldoUncheckedCreateWithoutSucursalInput>
    connectOrCreate?: SucursalSaldoCreateOrConnectWithoutSucursalInput
    upsert?: SucursalSaldoUpsertWithoutSucursalInput
    disconnect?: SucursalSaldoWhereInput | boolean
    delete?: SucursalSaldoWhereInput | boolean
    connect?: SucursalSaldoWhereUniqueInput
    update?: XOR<XOR<SucursalSaldoUpdateToOneWithWhereWithoutSucursalInput, SucursalSaldoUpdateWithoutSucursalInput>, SucursalSaldoUncheckedUpdateWithoutSucursalInput>
  }

  export type VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutSucursalInput, VentaEliminadaUncheckedCreateWithoutSucursalInput> | VentaEliminadaCreateWithoutSucursalInput[] | VentaEliminadaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutSucursalInput | VentaEliminadaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaEliminadaUpsertWithWhereUniqueWithoutSucursalInput | VentaEliminadaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaEliminadaCreateManySucursalInputEnvelope
    set?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    disconnect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    delete?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    update?: VentaEliminadaUpdateWithWhereUniqueWithoutSucursalInput | VentaEliminadaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaEliminadaUpdateManyWithWhereWithoutSucursalInput | VentaEliminadaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
  }

  export type VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutSucursalInput, VentaCuotaUncheckedCreateWithoutSucursalInput> | VentaCuotaCreateWithoutSucursalInput[] | VentaCuotaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutSucursalInput | VentaCuotaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaCuotaUpsertWithWhereUniqueWithoutSucursalInput | VentaCuotaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaCuotaCreateManySucursalInputEnvelope
    set?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    disconnect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    delete?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    update?: VentaCuotaUpdateWithWhereUniqueWithoutSucursalInput | VentaCuotaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaCuotaUpdateManyWithWhereWithoutSucursalInput | VentaCuotaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
  }

  export type PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<PlantillaComprobanteCreateWithoutSucursalInput, PlantillaComprobanteUncheckedCreateWithoutSucursalInput> | PlantillaComprobanteCreateWithoutSucursalInput[] | PlantillaComprobanteUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: PlantillaComprobanteCreateOrConnectWithoutSucursalInput | PlantillaComprobanteCreateOrConnectWithoutSucursalInput[]
    upsert?: PlantillaComprobanteUpsertWithWhereUniqueWithoutSucursalInput | PlantillaComprobanteUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: PlantillaComprobanteCreateManySucursalInputEnvelope
    set?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    disconnect?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    delete?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    connect?: PlantillaComprobanteWhereUniqueInput | PlantillaComprobanteWhereUniqueInput[]
    update?: PlantillaComprobanteUpdateWithWhereUniqueWithoutSucursalInput | PlantillaComprobanteUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: PlantillaComprobanteUpdateManyWithWhereWithoutSucursalInput | PlantillaComprobanteUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: PlantillaComprobanteScalarWhereInput | PlantillaComprobanteScalarWhereInput[]
  }

  export type ReparacionUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<ReparacionCreateWithoutSucursalInput, ReparacionUncheckedCreateWithoutSucursalInput> | ReparacionCreateWithoutSucursalInput[] | ReparacionUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutSucursalInput | ReparacionCreateOrConnectWithoutSucursalInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutSucursalInput | ReparacionUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: ReparacionCreateManySucursalInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutSucursalInput | ReparacionUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutSucursalInput | ReparacionUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<MetaUsuarioCreateWithoutSucursalInput, MetaUsuarioUncheckedCreateWithoutSucursalInput> | MetaUsuarioCreateWithoutSucursalInput[] | MetaUsuarioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutSucursalInput | MetaUsuarioCreateOrConnectWithoutSucursalInput[]
    upsert?: MetaUsuarioUpsertWithWhereUniqueWithoutSucursalInput | MetaUsuarioUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: MetaUsuarioCreateManySucursalInputEnvelope
    set?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    disconnect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    delete?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    update?: MetaUsuarioUpdateWithWhereUniqueWithoutSucursalInput | MetaUsuarioUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: MetaUsuarioUpdateManyWithWhereWithoutSucursalInput | MetaUsuarioUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: MetaUsuarioScalarWhereInput | MetaUsuarioScalarWhereInput[]
  }

  export type MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<MetaCobrosCreateWithoutSucursalInput, MetaCobrosUncheckedCreateWithoutSucursalInput> | MetaCobrosCreateWithoutSucursalInput[] | MetaCobrosUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutSucursalInput | MetaCobrosCreateOrConnectWithoutSucursalInput[]
    upsert?: MetaCobrosUpsertWithWhereUniqueWithoutSucursalInput | MetaCobrosUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: MetaCobrosCreateManySucursalInputEnvelope
    set?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    disconnect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    delete?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    update?: MetaCobrosUpdateWithWhereUniqueWithoutSucursalInput | MetaCobrosUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: MetaCobrosUpdateManyWithWhereWithoutSucursalInput | MetaCobrosUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: MetaCobrosScalarWhereInput | MetaCobrosScalarWhereInput[]
  }

  export type DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<DepositoCobroCreateWithoutSucursalInput, DepositoCobroUncheckedCreateWithoutSucursalInput> | DepositoCobroCreateWithoutSucursalInput[] | DepositoCobroUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutSucursalInput | DepositoCobroCreateOrConnectWithoutSucursalInput[]
    upsert?: DepositoCobroUpsertWithWhereUniqueWithoutSucursalInput | DepositoCobroUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: DepositoCobroCreateManySucursalInputEnvelope
    set?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    disconnect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    delete?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    update?: DepositoCobroUpdateWithWhereUniqueWithoutSucursalInput | DepositoCobroUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: DepositoCobroUpdateManyWithWhereWithoutSucursalInput | DepositoCobroUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
  }

  export type ProveedorCreateNestedOneWithoutEntregasStockInput = {
    create?: XOR<ProveedorCreateWithoutEntregasStockInput, ProveedorUncheckedCreateWithoutEntregasStockInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutEntregasStockInput
    connect?: ProveedorWhereUniqueInput
  }

  export type StockCreateNestedManyWithoutEntregaStockInput = {
    create?: XOR<StockCreateWithoutEntregaStockInput, StockUncheckedCreateWithoutEntregaStockInput> | StockCreateWithoutEntregaStockInput[] | StockUncheckedCreateWithoutEntregaStockInput[]
    connectOrCreate?: StockCreateOrConnectWithoutEntregaStockInput | StockCreateOrConnectWithoutEntregaStockInput[]
    createMany?: StockCreateManyEntregaStockInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type UsuarioCreateNestedOneWithoutEntregasRecibidasInput = {
    create?: XOR<UsuarioCreateWithoutEntregasRecibidasInput, UsuarioUncheckedCreateWithoutEntregasRecibidasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEntregasRecibidasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutEntregaStockInput = {
    create?: XOR<SucursalCreateWithoutEntregaStockInput, SucursalUncheckedCreateWithoutEntregaStockInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutEntregaStockInput
    connect?: SucursalWhereUniqueInput
  }

  export type StockUncheckedCreateNestedManyWithoutEntregaStockInput = {
    create?: XOR<StockCreateWithoutEntregaStockInput, StockUncheckedCreateWithoutEntregaStockInput> | StockCreateWithoutEntregaStockInput[] | StockUncheckedCreateWithoutEntregaStockInput[]
    connectOrCreate?: StockCreateOrConnectWithoutEntregaStockInput | StockCreateOrConnectWithoutEntregaStockInput[]
    createMany?: StockCreateManyEntregaStockInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type ProveedorUpdateOneWithoutEntregasStockNestedInput = {
    create?: XOR<ProveedorCreateWithoutEntregasStockInput, ProveedorUncheckedCreateWithoutEntregasStockInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutEntregasStockInput
    upsert?: ProveedorUpsertWithoutEntregasStockInput
    disconnect?: ProveedorWhereInput | boolean
    delete?: ProveedorWhereInput | boolean
    connect?: ProveedorWhereUniqueInput
    update?: XOR<XOR<ProveedorUpdateToOneWithWhereWithoutEntregasStockInput, ProveedorUpdateWithoutEntregasStockInput>, ProveedorUncheckedUpdateWithoutEntregasStockInput>
  }

  export type StockUpdateManyWithoutEntregaStockNestedInput = {
    create?: XOR<StockCreateWithoutEntregaStockInput, StockUncheckedCreateWithoutEntregaStockInput> | StockCreateWithoutEntregaStockInput[] | StockUncheckedCreateWithoutEntregaStockInput[]
    connectOrCreate?: StockCreateOrConnectWithoutEntregaStockInput | StockCreateOrConnectWithoutEntregaStockInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutEntregaStockInput | StockUpsertWithWhereUniqueWithoutEntregaStockInput[]
    createMany?: StockCreateManyEntregaStockInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutEntregaStockInput | StockUpdateWithWhereUniqueWithoutEntregaStockInput[]
    updateMany?: StockUpdateManyWithWhereWithoutEntregaStockInput | StockUpdateManyWithWhereWithoutEntregaStockInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type UsuarioUpdateOneWithoutEntregasRecibidasNestedInput = {
    create?: XOR<UsuarioCreateWithoutEntregasRecibidasInput, UsuarioUncheckedCreateWithoutEntregasRecibidasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEntregasRecibidasInput
    upsert?: UsuarioUpsertWithoutEntregasRecibidasInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEntregasRecibidasInput, UsuarioUpdateWithoutEntregasRecibidasInput>, UsuarioUncheckedUpdateWithoutEntregasRecibidasInput>
  }

  export type SucursalUpdateOneWithoutEntregaStockNestedInput = {
    create?: XOR<SucursalCreateWithoutEntregaStockInput, SucursalUncheckedCreateWithoutEntregaStockInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutEntregaStockInput
    upsert?: SucursalUpsertWithoutEntregaStockInput
    disconnect?: SucursalWhereInput | boolean
    delete?: SucursalWhereInput | boolean
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutEntregaStockInput, SucursalUpdateWithoutEntregaStockInput>, SucursalUncheckedUpdateWithoutEntregaStockInput>
  }

  export type StockUncheckedUpdateManyWithoutEntregaStockNestedInput = {
    create?: XOR<StockCreateWithoutEntregaStockInput, StockUncheckedCreateWithoutEntregaStockInput> | StockCreateWithoutEntregaStockInput[] | StockUncheckedCreateWithoutEntregaStockInput[]
    connectOrCreate?: StockCreateOrConnectWithoutEntregaStockInput | StockCreateOrConnectWithoutEntregaStockInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutEntregaStockInput | StockUpsertWithWhereUniqueWithoutEntregaStockInput[]
    createMany?: StockCreateManyEntregaStockInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutEntregaStockInput | StockUpdateWithWhereUniqueWithoutEntregaStockInput[]
    updateMany?: StockUpdateManyWithWhereWithoutEntregaStockInput | StockUpdateManyWithWhereWithoutEntregaStockInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput = {
    create?: XOR<EntregaStockCreateWithoutUsuarioRecibidoInput, EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput> | EntregaStockCreateWithoutUsuarioRecibidoInput[] | EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput | EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput[]
    createMany?: EntregaStockCreateManyUsuarioRecibidoInputEnvelope
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
  }

  export type SucursalCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<SucursalCreateWithoutUsuariosInput, SucursalUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutUsuariosInput
    connect?: SucursalWhereUniqueInput
  }

  export type TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput = {
    create?: XOR<TransferenciaProductoCreateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput> | TransferenciaProductoCreateWithoutUsuarioEncargadoInput[] | TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput | TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput[]
    createMany?: TransferenciaProductoCreateManyUsuarioEncargadoInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type PrecioProductoCreateNestedManyWithoutCreadoPorInput = {
    create?: XOR<PrecioProductoCreateWithoutCreadoPorInput, PrecioProductoUncheckedCreateWithoutCreadoPorInput> | PrecioProductoCreateWithoutCreadoPorInput[] | PrecioProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutCreadoPorInput | PrecioProductoCreateOrConnectWithoutCreadoPorInput[]
    createMany?: PrecioProductoCreateManyCreadoPorInputEnvelope
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
  }

  export type SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput = {
    create?: XOR<SolicitudPrecioCreateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput> | SolicitudPrecioCreateWithoutSolicitadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput | SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput[]
    createMany?: SolicitudPrecioCreateManySolicitadoPorInputEnvelope
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
  }

  export type SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput = {
    create?: XOR<SolicitudPrecioCreateWithoutAprobadoPorInput, SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput> | SolicitudPrecioCreateWithoutAprobadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput | SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput[]
    createMany?: SolicitudPrecioCreateManyAprobadoPorInputEnvelope
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
  }

  export type NotificacionCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<NotificacionCreateWithoutRemitenteInput, NotificacionUncheckedCreateWithoutRemitenteInput> | NotificacionCreateWithoutRemitenteInput[] | NotificacionUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutRemitenteInput | NotificacionCreateOrConnectWithoutRemitenteInput[]
    createMany?: NotificacionCreateManyRemitenteInputEnvelope
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type NotificacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutUsuarioInput, NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput> | NotificacionesUsuariosCreateWithoutUsuarioInput[] | NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput | NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacionesUsuariosCreateManyUsuarioInputEnvelope
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput> | SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput> | SolicitudTransferenciaProductoCreateWithoutAdministradorInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput | SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyAdministradorInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput> | HistorialPrecioCostoCreateWithoutModificadoPorInput[] | HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput | HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput[]
    createMany?: HistorialPrecioCostoCreateManyModificadoPorInputEnvelope
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
  }

  export type AjusteStockCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AjusteStockCreateWithoutUsuarioInput, AjusteStockUncheckedCreateWithoutUsuarioInput> | AjusteStockCreateWithoutUsuarioInput[] | AjusteStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutUsuarioInput | AjusteStockCreateOrConnectWithoutUsuarioInput[]
    createMany?: AjusteStockCreateManyUsuarioInputEnvelope
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
  }

  export type EliminacionProductoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EliminacionProductoCreateWithoutUsuarioInput, EliminacionProductoUncheckedCreateWithoutUsuarioInput> | EliminacionProductoCreateWithoutUsuarioInput[] | EliminacionProductoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutUsuarioInput | EliminacionProductoCreateOrConnectWithoutUsuarioInput[]
    createMany?: EliminacionProductoCreateManyUsuarioInputEnvelope
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
  }

  export type EliminacionClienteCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EliminacionClienteCreateWithoutUsuarioInput, EliminacionClienteUncheckedCreateWithoutUsuarioInput> | EliminacionClienteCreateWithoutUsuarioInput[] | EliminacionClienteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutUsuarioInput | EliminacionClienteCreateOrConnectWithoutUsuarioInput[]
    createMany?: EliminacionClienteCreateManyUsuarioInputEnvelope
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
  }

  export type EliminacionStockCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EliminacionStockCreateWithoutUsuarioInput, EliminacionStockUncheckedCreateWithoutUsuarioInput> | EliminacionStockCreateWithoutUsuarioInput[] | EliminacionStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutUsuarioInput | EliminacionStockCreateOrConnectWithoutUsuarioInput[]
    createMany?: EliminacionStockCreateManyUsuarioInputEnvelope
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
  }

  export type RegistroGarantiaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RegistroGarantiaCreateWithoutUsuarioInput, RegistroGarantiaUncheckedCreateWithoutUsuarioInput> | RegistroGarantiaCreateWithoutUsuarioInput[] | RegistroGarantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutUsuarioInput | RegistroGarantiaCreateOrConnectWithoutUsuarioInput[]
    createMany?: RegistroGarantiaCreateManyUsuarioInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type GarantiaCreateNestedManyWithoutUsuarioRecibeInput = {
    create?: XOR<GarantiaCreateWithoutUsuarioRecibeInput, GarantiaUncheckedCreateWithoutUsuarioRecibeInput> | GarantiaCreateWithoutUsuarioRecibeInput[] | GarantiaUncheckedCreateWithoutUsuarioRecibeInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutUsuarioRecibeInput | GarantiaCreateOrConnectWithoutUsuarioRecibeInput[]
    createMany?: GarantiaCreateManyUsuarioRecibeInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type RegistroCajaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RegistroCajaCreateWithoutUsuarioInput, RegistroCajaUncheckedCreateWithoutUsuarioInput> | RegistroCajaCreateWithoutUsuarioInput[] | RegistroCajaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutUsuarioInput | RegistroCajaCreateOrConnectWithoutUsuarioInput[]
    createMany?: RegistroCajaCreateManyUsuarioInputEnvelope
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
  }

  export type DepositoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DepositoCreateWithoutUsuarioInput, DepositoUncheckedCreateWithoutUsuarioInput> | DepositoCreateWithoutUsuarioInput[] | DepositoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutUsuarioInput | DepositoCreateOrConnectWithoutUsuarioInput[]
    createMany?: DepositoCreateManyUsuarioInputEnvelope
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
  }

  export type EgresoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EgresoCreateWithoutUsuarioInput, EgresoUncheckedCreateWithoutUsuarioInput> | EgresoCreateWithoutUsuarioInput[] | EgresoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutUsuarioInput | EgresoCreateOrConnectWithoutUsuarioInput[]
    createMany?: EgresoCreateManyUsuarioInputEnvelope
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
  }

  export type VentaEliminadaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<VentaEliminadaCreateWithoutUsuarioInput, VentaEliminadaUncheckedCreateWithoutUsuarioInput> | VentaEliminadaCreateWithoutUsuarioInput[] | VentaEliminadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutUsuarioInput | VentaEliminadaCreateOrConnectWithoutUsuarioInput[]
    createMany?: VentaEliminadaCreateManyUsuarioInputEnvelope
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
  }

  export type VentaCuotaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<VentaCuotaCreateWithoutUsuarioInput, VentaCuotaUncheckedCreateWithoutUsuarioInput> | VentaCuotaCreateWithoutUsuarioInput[] | VentaCuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutUsuarioInput | VentaCuotaCreateOrConnectWithoutUsuarioInput[]
    createMany?: VentaCuotaCreateManyUsuarioInputEnvelope
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
  }

  export type CuotaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CuotaCreateWithoutUsuarioInput, CuotaUncheckedCreateWithoutUsuarioInput> | CuotaCreateWithoutUsuarioInput[] | CuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutUsuarioInput | CuotaCreateOrConnectWithoutUsuarioInput[]
    createMany?: CuotaCreateManyUsuarioInputEnvelope
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
  }

  export type ReparacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ReparacionCreateWithoutUsuarioInput, ReparacionUncheckedCreateWithoutUsuarioInput> | ReparacionCreateWithoutUsuarioInput[] | ReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutUsuarioInput | ReparacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: ReparacionCreateManyUsuarioInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type RegistroReparacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RegistroReparacionCreateWithoutUsuarioInput, RegistroReparacionUncheckedCreateWithoutUsuarioInput> | RegistroReparacionCreateWithoutUsuarioInput[] | RegistroReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutUsuarioInput | RegistroReparacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: RegistroReparacionCreateManyUsuarioInputEnvelope
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
  }

  export type MetaUsuarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MetaUsuarioCreateWithoutUsuarioInput, MetaUsuarioUncheckedCreateWithoutUsuarioInput> | MetaUsuarioCreateWithoutUsuarioInput[] | MetaUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutUsuarioInput | MetaUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: MetaUsuarioCreateManyUsuarioInputEnvelope
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
  }

  export type MetaCobrosCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MetaCobrosCreateWithoutUsuarioInput, MetaCobrosUncheckedCreateWithoutUsuarioInput> | MetaCobrosCreateWithoutUsuarioInput[] | MetaCobrosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutUsuarioInput | MetaCobrosCreateOrConnectWithoutUsuarioInput[]
    createMany?: MetaCobrosCreateManyUsuarioInputEnvelope
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
  }

  export type DepositoCobroCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DepositoCobroCreateWithoutUsuarioInput, DepositoCobroUncheckedCreateWithoutUsuarioInput> | DepositoCobroCreateWithoutUsuarioInput[] | DepositoCobroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutUsuarioInput | DepositoCobroCreateOrConnectWithoutUsuarioInput[]
    createMany?: DepositoCobroCreateManyUsuarioInputEnvelope
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
  }

  export type EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput = {
    create?: XOR<EntregaStockCreateWithoutUsuarioRecibidoInput, EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput> | EntregaStockCreateWithoutUsuarioRecibidoInput[] | EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput | EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput[]
    createMany?: EntregaStockCreateManyUsuarioRecibidoInputEnvelope
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
  }

  export type TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput = {
    create?: XOR<TransferenciaProductoCreateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput> | TransferenciaProductoCreateWithoutUsuarioEncargadoInput[] | TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput | TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput[]
    createMany?: TransferenciaProductoCreateManyUsuarioEncargadoInputEnvelope
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
  }

  export type PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput = {
    create?: XOR<PrecioProductoCreateWithoutCreadoPorInput, PrecioProductoUncheckedCreateWithoutCreadoPorInput> | PrecioProductoCreateWithoutCreadoPorInput[] | PrecioProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutCreadoPorInput | PrecioProductoCreateOrConnectWithoutCreadoPorInput[]
    createMany?: PrecioProductoCreateManyCreadoPorInputEnvelope
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
  }

  export type SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput = {
    create?: XOR<SolicitudPrecioCreateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput> | SolicitudPrecioCreateWithoutSolicitadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput | SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput[]
    createMany?: SolicitudPrecioCreateManySolicitadoPorInputEnvelope
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
  }

  export type SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput = {
    create?: XOR<SolicitudPrecioCreateWithoutAprobadoPorInput, SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput> | SolicitudPrecioCreateWithoutAprobadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput | SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput[]
    createMany?: SolicitudPrecioCreateManyAprobadoPorInputEnvelope
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
  }

  export type NotificacionUncheckedCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<NotificacionCreateWithoutRemitenteInput, NotificacionUncheckedCreateWithoutRemitenteInput> | NotificacionCreateWithoutRemitenteInput[] | NotificacionUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutRemitenteInput | NotificacionCreateOrConnectWithoutRemitenteInput[]
    createMany?: NotificacionCreateManyRemitenteInputEnvelope
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type NotificacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
  }

  export type NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutUsuarioInput, NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput> | NotificacionesUsuariosCreateWithoutUsuarioInput[] | NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput | NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacionesUsuariosCreateManyUsuarioInputEnvelope
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput> | SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput> | SolicitudTransferenciaProductoCreateWithoutAdministradorInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput | SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyAdministradorInputEnvelope
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
  }

  export type HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput> | HistorialPrecioCostoCreateWithoutModificadoPorInput[] | HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput | HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput[]
    createMany?: HistorialPrecioCostoCreateManyModificadoPorInputEnvelope
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
  }

  export type AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AjusteStockCreateWithoutUsuarioInput, AjusteStockUncheckedCreateWithoutUsuarioInput> | AjusteStockCreateWithoutUsuarioInput[] | AjusteStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutUsuarioInput | AjusteStockCreateOrConnectWithoutUsuarioInput[]
    createMany?: AjusteStockCreateManyUsuarioInputEnvelope
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
  }

  export type EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EliminacionProductoCreateWithoutUsuarioInput, EliminacionProductoUncheckedCreateWithoutUsuarioInput> | EliminacionProductoCreateWithoutUsuarioInput[] | EliminacionProductoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutUsuarioInput | EliminacionProductoCreateOrConnectWithoutUsuarioInput[]
    createMany?: EliminacionProductoCreateManyUsuarioInputEnvelope
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
  }

  export type EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EliminacionClienteCreateWithoutUsuarioInput, EliminacionClienteUncheckedCreateWithoutUsuarioInput> | EliminacionClienteCreateWithoutUsuarioInput[] | EliminacionClienteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutUsuarioInput | EliminacionClienteCreateOrConnectWithoutUsuarioInput[]
    createMany?: EliminacionClienteCreateManyUsuarioInputEnvelope
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
  }

  export type EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EliminacionStockCreateWithoutUsuarioInput, EliminacionStockUncheckedCreateWithoutUsuarioInput> | EliminacionStockCreateWithoutUsuarioInput[] | EliminacionStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutUsuarioInput | EliminacionStockCreateOrConnectWithoutUsuarioInput[]
    createMany?: EliminacionStockCreateManyUsuarioInputEnvelope
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
  }

  export type RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RegistroGarantiaCreateWithoutUsuarioInput, RegistroGarantiaUncheckedCreateWithoutUsuarioInput> | RegistroGarantiaCreateWithoutUsuarioInput[] | RegistroGarantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutUsuarioInput | RegistroGarantiaCreateOrConnectWithoutUsuarioInput[]
    createMany?: RegistroGarantiaCreateManyUsuarioInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput = {
    create?: XOR<GarantiaCreateWithoutUsuarioRecibeInput, GarantiaUncheckedCreateWithoutUsuarioRecibeInput> | GarantiaCreateWithoutUsuarioRecibeInput[] | GarantiaUncheckedCreateWithoutUsuarioRecibeInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutUsuarioRecibeInput | GarantiaCreateOrConnectWithoutUsuarioRecibeInput[]
    createMany?: GarantiaCreateManyUsuarioRecibeInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RegistroCajaCreateWithoutUsuarioInput, RegistroCajaUncheckedCreateWithoutUsuarioInput> | RegistroCajaCreateWithoutUsuarioInput[] | RegistroCajaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutUsuarioInput | RegistroCajaCreateOrConnectWithoutUsuarioInput[]
    createMany?: RegistroCajaCreateManyUsuarioInputEnvelope
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
  }

  export type DepositoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DepositoCreateWithoutUsuarioInput, DepositoUncheckedCreateWithoutUsuarioInput> | DepositoCreateWithoutUsuarioInput[] | DepositoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutUsuarioInput | DepositoCreateOrConnectWithoutUsuarioInput[]
    createMany?: DepositoCreateManyUsuarioInputEnvelope
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
  }

  export type EgresoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EgresoCreateWithoutUsuarioInput, EgresoUncheckedCreateWithoutUsuarioInput> | EgresoCreateWithoutUsuarioInput[] | EgresoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutUsuarioInput | EgresoCreateOrConnectWithoutUsuarioInput[]
    createMany?: EgresoCreateManyUsuarioInputEnvelope
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
  }

  export type VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<VentaEliminadaCreateWithoutUsuarioInput, VentaEliminadaUncheckedCreateWithoutUsuarioInput> | VentaEliminadaCreateWithoutUsuarioInput[] | VentaEliminadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutUsuarioInput | VentaEliminadaCreateOrConnectWithoutUsuarioInput[]
    createMany?: VentaEliminadaCreateManyUsuarioInputEnvelope
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
  }

  export type VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<VentaCuotaCreateWithoutUsuarioInput, VentaCuotaUncheckedCreateWithoutUsuarioInput> | VentaCuotaCreateWithoutUsuarioInput[] | VentaCuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutUsuarioInput | VentaCuotaCreateOrConnectWithoutUsuarioInput[]
    createMany?: VentaCuotaCreateManyUsuarioInputEnvelope
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
  }

  export type CuotaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CuotaCreateWithoutUsuarioInput, CuotaUncheckedCreateWithoutUsuarioInput> | CuotaCreateWithoutUsuarioInput[] | CuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutUsuarioInput | CuotaCreateOrConnectWithoutUsuarioInput[]
    createMany?: CuotaCreateManyUsuarioInputEnvelope
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
  }

  export type ReparacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ReparacionCreateWithoutUsuarioInput, ReparacionUncheckedCreateWithoutUsuarioInput> | ReparacionCreateWithoutUsuarioInput[] | ReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutUsuarioInput | ReparacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: ReparacionCreateManyUsuarioInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<RegistroReparacionCreateWithoutUsuarioInput, RegistroReparacionUncheckedCreateWithoutUsuarioInput> | RegistroReparacionCreateWithoutUsuarioInput[] | RegistroReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutUsuarioInput | RegistroReparacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: RegistroReparacionCreateManyUsuarioInputEnvelope
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
  }

  export type MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MetaUsuarioCreateWithoutUsuarioInput, MetaUsuarioUncheckedCreateWithoutUsuarioInput> | MetaUsuarioCreateWithoutUsuarioInput[] | MetaUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutUsuarioInput | MetaUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: MetaUsuarioCreateManyUsuarioInputEnvelope
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
  }

  export type MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MetaCobrosCreateWithoutUsuarioInput, MetaCobrosUncheckedCreateWithoutUsuarioInput> | MetaCobrosCreateWithoutUsuarioInput[] | MetaCobrosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutUsuarioInput | MetaCobrosCreateOrConnectWithoutUsuarioInput[]
    createMany?: MetaCobrosCreateManyUsuarioInputEnvelope
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
  }

  export type DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DepositoCobroCreateWithoutUsuarioInput, DepositoCobroUncheckedCreateWithoutUsuarioInput> | DepositoCobroCreateWithoutUsuarioInput[] | DepositoCobroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutUsuarioInput | DepositoCobroCreateOrConnectWithoutUsuarioInput[]
    createMany?: DepositoCobroCreateManyUsuarioInputEnvelope
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
  }

  export type EnumRolFieldUpdateOperationsInput = {
    set?: $Enums.Rol
  }

  export type EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput = {
    create?: XOR<EntregaStockCreateWithoutUsuarioRecibidoInput, EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput> | EntregaStockCreateWithoutUsuarioRecibidoInput[] | EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput | EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput[]
    upsert?: EntregaStockUpsertWithWhereUniqueWithoutUsuarioRecibidoInput | EntregaStockUpsertWithWhereUniqueWithoutUsuarioRecibidoInput[]
    createMany?: EntregaStockCreateManyUsuarioRecibidoInputEnvelope
    set?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    disconnect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    delete?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    update?: EntregaStockUpdateWithWhereUniqueWithoutUsuarioRecibidoInput | EntregaStockUpdateWithWhereUniqueWithoutUsuarioRecibidoInput[]
    updateMany?: EntregaStockUpdateManyWithWhereWithoutUsuarioRecibidoInput | EntregaStockUpdateManyWithWhereWithoutUsuarioRecibidoInput[]
    deleteMany?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
  }

  export type SucursalUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<SucursalCreateWithoutUsuariosInput, SucursalUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutUsuariosInput
    upsert?: SucursalUpsertWithoutUsuariosInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutUsuariosInput, SucursalUpdateWithoutUsuariosInput>, SucursalUncheckedUpdateWithoutUsuariosInput>
  }

  export type TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput> | TransferenciaProductoCreateWithoutUsuarioEncargadoInput[] | TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput | TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioEncargadoInput | TransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioEncargadoInput[]
    createMany?: TransferenciaProductoCreateManyUsuarioEncargadoInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioEncargadoInput | TransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioEncargadoInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutUsuarioEncargadoInput | TransferenciaProductoUpdateManyWithWhereWithoutUsuarioEncargadoInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type PrecioProductoUpdateManyWithoutCreadoPorNestedInput = {
    create?: XOR<PrecioProductoCreateWithoutCreadoPorInput, PrecioProductoUncheckedCreateWithoutCreadoPorInput> | PrecioProductoCreateWithoutCreadoPorInput[] | PrecioProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutCreadoPorInput | PrecioProductoCreateOrConnectWithoutCreadoPorInput[]
    upsert?: PrecioProductoUpsertWithWhereUniqueWithoutCreadoPorInput | PrecioProductoUpsertWithWhereUniqueWithoutCreadoPorInput[]
    createMany?: PrecioProductoCreateManyCreadoPorInputEnvelope
    set?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    disconnect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    delete?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    update?: PrecioProductoUpdateWithWhereUniqueWithoutCreadoPorInput | PrecioProductoUpdateWithWhereUniqueWithoutCreadoPorInput[]
    updateMany?: PrecioProductoUpdateManyWithWhereWithoutCreadoPorInput | PrecioProductoUpdateManyWithWhereWithoutCreadoPorInput[]
    deleteMany?: PrecioProductoScalarWhereInput | PrecioProductoScalarWhereInput[]
  }

  export type SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput = {
    create?: XOR<SolicitudPrecioCreateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput> | SolicitudPrecioCreateWithoutSolicitadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput | SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput[]
    upsert?: SolicitudPrecioUpsertWithWhereUniqueWithoutSolicitadoPorInput | SolicitudPrecioUpsertWithWhereUniqueWithoutSolicitadoPorInput[]
    createMany?: SolicitudPrecioCreateManySolicitadoPorInputEnvelope
    set?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    disconnect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    delete?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    update?: SolicitudPrecioUpdateWithWhereUniqueWithoutSolicitadoPorInput | SolicitudPrecioUpdateWithWhereUniqueWithoutSolicitadoPorInput[]
    updateMany?: SolicitudPrecioUpdateManyWithWhereWithoutSolicitadoPorInput | SolicitudPrecioUpdateManyWithWhereWithoutSolicitadoPorInput[]
    deleteMany?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
  }

  export type SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput = {
    create?: XOR<SolicitudPrecioCreateWithoutAprobadoPorInput, SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput> | SolicitudPrecioCreateWithoutAprobadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput | SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput[]
    upsert?: SolicitudPrecioUpsertWithWhereUniqueWithoutAprobadoPorInput | SolicitudPrecioUpsertWithWhereUniqueWithoutAprobadoPorInput[]
    createMany?: SolicitudPrecioCreateManyAprobadoPorInputEnvelope
    set?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    disconnect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    delete?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    update?: SolicitudPrecioUpdateWithWhereUniqueWithoutAprobadoPorInput | SolicitudPrecioUpdateWithWhereUniqueWithoutAprobadoPorInput[]
    updateMany?: SolicitudPrecioUpdateManyWithWhereWithoutAprobadoPorInput | SolicitudPrecioUpdateManyWithWhereWithoutAprobadoPorInput[]
    deleteMany?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
  }

  export type NotificacionUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<NotificacionCreateWithoutRemitenteInput, NotificacionUncheckedCreateWithoutRemitenteInput> | NotificacionCreateWithoutRemitenteInput[] | NotificacionUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutRemitenteInput | NotificacionCreateOrConnectWithoutRemitenteInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutRemitenteInput | NotificacionUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: NotificacionCreateManyRemitenteInputEnvelope
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutRemitenteInput | NotificacionUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutRemitenteInput | NotificacionUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type NotificacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutUsuarioInput | NotificacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutUsuarioInput, NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput> | NotificacionesUsuariosCreateWithoutUsuarioInput[] | NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput | NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionesUsuariosUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionesUsuariosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacionesUsuariosCreateManyUsuarioInputEnvelope
    set?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    disconnect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    delete?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    update?: NotificacionesUsuariosUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionesUsuariosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionesUsuariosUpdateManyWithWhereWithoutUsuarioInput | NotificacionesUsuariosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionesUsuariosScalarWhereInput | NotificacionesUsuariosScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput> | SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioSolicitanteInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioSolicitanteInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutUsuarioSolicitanteInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput> | SolicitudTransferenciaProductoCreateWithoutAdministradorInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput | SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutAdministradorInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyAdministradorInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutAdministradorInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutAdministradorInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput> | HistorialPrecioCostoCreateWithoutModificadoPorInput[] | HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput | HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput[]
    upsert?: HistorialPrecioCostoUpsertWithWhereUniqueWithoutModificadoPorInput | HistorialPrecioCostoUpsertWithWhereUniqueWithoutModificadoPorInput[]
    createMany?: HistorialPrecioCostoCreateManyModificadoPorInputEnvelope
    set?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    disconnect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    delete?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    update?: HistorialPrecioCostoUpdateWithWhereUniqueWithoutModificadoPorInput | HistorialPrecioCostoUpdateWithWhereUniqueWithoutModificadoPorInput[]
    updateMany?: HistorialPrecioCostoUpdateManyWithWhereWithoutModificadoPorInput | HistorialPrecioCostoUpdateManyWithWhereWithoutModificadoPorInput[]
    deleteMany?: HistorialPrecioCostoScalarWhereInput | HistorialPrecioCostoScalarWhereInput[]
  }

  export type AjusteStockUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AjusteStockCreateWithoutUsuarioInput, AjusteStockUncheckedCreateWithoutUsuarioInput> | AjusteStockCreateWithoutUsuarioInput[] | AjusteStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutUsuarioInput | AjusteStockCreateOrConnectWithoutUsuarioInput[]
    upsert?: AjusteStockUpsertWithWhereUniqueWithoutUsuarioInput | AjusteStockUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AjusteStockCreateManyUsuarioInputEnvelope
    set?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    disconnect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    delete?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    update?: AjusteStockUpdateWithWhereUniqueWithoutUsuarioInput | AjusteStockUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AjusteStockUpdateManyWithWhereWithoutUsuarioInput | AjusteStockUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
  }

  export type EliminacionProductoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EliminacionProductoCreateWithoutUsuarioInput, EliminacionProductoUncheckedCreateWithoutUsuarioInput> | EliminacionProductoCreateWithoutUsuarioInput[] | EliminacionProductoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutUsuarioInput | EliminacionProductoCreateOrConnectWithoutUsuarioInput[]
    upsert?: EliminacionProductoUpsertWithWhereUniqueWithoutUsuarioInput | EliminacionProductoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EliminacionProductoCreateManyUsuarioInputEnvelope
    set?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    disconnect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    delete?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    update?: EliminacionProductoUpdateWithWhereUniqueWithoutUsuarioInput | EliminacionProductoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EliminacionProductoUpdateManyWithWhereWithoutUsuarioInput | EliminacionProductoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EliminacionProductoScalarWhereInput | EliminacionProductoScalarWhereInput[]
  }

  export type EliminacionClienteUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EliminacionClienteCreateWithoutUsuarioInput, EliminacionClienteUncheckedCreateWithoutUsuarioInput> | EliminacionClienteCreateWithoutUsuarioInput[] | EliminacionClienteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutUsuarioInput | EliminacionClienteCreateOrConnectWithoutUsuarioInput[]
    upsert?: EliminacionClienteUpsertWithWhereUniqueWithoutUsuarioInput | EliminacionClienteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EliminacionClienteCreateManyUsuarioInputEnvelope
    set?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    disconnect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    delete?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    update?: EliminacionClienteUpdateWithWhereUniqueWithoutUsuarioInput | EliminacionClienteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EliminacionClienteUpdateManyWithWhereWithoutUsuarioInput | EliminacionClienteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EliminacionClienteScalarWhereInput | EliminacionClienteScalarWhereInput[]
  }

  export type EliminacionStockUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EliminacionStockCreateWithoutUsuarioInput, EliminacionStockUncheckedCreateWithoutUsuarioInput> | EliminacionStockCreateWithoutUsuarioInput[] | EliminacionStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutUsuarioInput | EliminacionStockCreateOrConnectWithoutUsuarioInput[]
    upsert?: EliminacionStockUpsertWithWhereUniqueWithoutUsuarioInput | EliminacionStockUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EliminacionStockCreateManyUsuarioInputEnvelope
    set?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    disconnect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    delete?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    update?: EliminacionStockUpdateWithWhereUniqueWithoutUsuarioInput | EliminacionStockUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EliminacionStockUpdateManyWithWhereWithoutUsuarioInput | EliminacionStockUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
  }

  export type RegistroGarantiaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutUsuarioInput, RegistroGarantiaUncheckedCreateWithoutUsuarioInput> | RegistroGarantiaCreateWithoutUsuarioInput[] | RegistroGarantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutUsuarioInput | RegistroGarantiaCreateOrConnectWithoutUsuarioInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutUsuarioInput | RegistroGarantiaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RegistroGarantiaCreateManyUsuarioInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutUsuarioInput | RegistroGarantiaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutUsuarioInput | RegistroGarantiaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type GarantiaUpdateManyWithoutUsuarioRecibeNestedInput = {
    create?: XOR<GarantiaCreateWithoutUsuarioRecibeInput, GarantiaUncheckedCreateWithoutUsuarioRecibeInput> | GarantiaCreateWithoutUsuarioRecibeInput[] | GarantiaUncheckedCreateWithoutUsuarioRecibeInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutUsuarioRecibeInput | GarantiaCreateOrConnectWithoutUsuarioRecibeInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutUsuarioRecibeInput | GarantiaUpsertWithWhereUniqueWithoutUsuarioRecibeInput[]
    createMany?: GarantiaCreateManyUsuarioRecibeInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutUsuarioRecibeInput | GarantiaUpdateWithWhereUniqueWithoutUsuarioRecibeInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutUsuarioRecibeInput | GarantiaUpdateManyWithWhereWithoutUsuarioRecibeInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type RegistroCajaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutUsuarioInput, RegistroCajaUncheckedCreateWithoutUsuarioInput> | RegistroCajaCreateWithoutUsuarioInput[] | RegistroCajaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutUsuarioInput | RegistroCajaCreateOrConnectWithoutUsuarioInput[]
    upsert?: RegistroCajaUpsertWithWhereUniqueWithoutUsuarioInput | RegistroCajaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RegistroCajaCreateManyUsuarioInputEnvelope
    set?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    disconnect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    delete?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    update?: RegistroCajaUpdateWithWhereUniqueWithoutUsuarioInput | RegistroCajaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RegistroCajaUpdateManyWithWhereWithoutUsuarioInput | RegistroCajaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RegistroCajaScalarWhereInput | RegistroCajaScalarWhereInput[]
  }

  export type DepositoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DepositoCreateWithoutUsuarioInput, DepositoUncheckedCreateWithoutUsuarioInput> | DepositoCreateWithoutUsuarioInput[] | DepositoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutUsuarioInput | DepositoCreateOrConnectWithoutUsuarioInput[]
    upsert?: DepositoUpsertWithWhereUniqueWithoutUsuarioInput | DepositoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DepositoCreateManyUsuarioInputEnvelope
    set?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    disconnect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    delete?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    update?: DepositoUpdateWithWhereUniqueWithoutUsuarioInput | DepositoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DepositoUpdateManyWithWhereWithoutUsuarioInput | DepositoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
  }

  export type EgresoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EgresoCreateWithoutUsuarioInput, EgresoUncheckedCreateWithoutUsuarioInput> | EgresoCreateWithoutUsuarioInput[] | EgresoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutUsuarioInput | EgresoCreateOrConnectWithoutUsuarioInput[]
    upsert?: EgresoUpsertWithWhereUniqueWithoutUsuarioInput | EgresoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EgresoCreateManyUsuarioInputEnvelope
    set?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    disconnect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    delete?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    update?: EgresoUpdateWithWhereUniqueWithoutUsuarioInput | EgresoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EgresoUpdateManyWithWhereWithoutUsuarioInput | EgresoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
  }

  export type VentaEliminadaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutUsuarioInput, VentaEliminadaUncheckedCreateWithoutUsuarioInput> | VentaEliminadaCreateWithoutUsuarioInput[] | VentaEliminadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutUsuarioInput | VentaEliminadaCreateOrConnectWithoutUsuarioInput[]
    upsert?: VentaEliminadaUpsertWithWhereUniqueWithoutUsuarioInput | VentaEliminadaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: VentaEliminadaCreateManyUsuarioInputEnvelope
    set?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    disconnect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    delete?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    update?: VentaEliminadaUpdateWithWhereUniqueWithoutUsuarioInput | VentaEliminadaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: VentaEliminadaUpdateManyWithWhereWithoutUsuarioInput | VentaEliminadaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
  }

  export type VentaCuotaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutUsuarioInput, VentaCuotaUncheckedCreateWithoutUsuarioInput> | VentaCuotaCreateWithoutUsuarioInput[] | VentaCuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutUsuarioInput | VentaCuotaCreateOrConnectWithoutUsuarioInput[]
    upsert?: VentaCuotaUpsertWithWhereUniqueWithoutUsuarioInput | VentaCuotaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: VentaCuotaCreateManyUsuarioInputEnvelope
    set?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    disconnect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    delete?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    update?: VentaCuotaUpdateWithWhereUniqueWithoutUsuarioInput | VentaCuotaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: VentaCuotaUpdateManyWithWhereWithoutUsuarioInput | VentaCuotaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
  }

  export type CuotaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CuotaCreateWithoutUsuarioInput, CuotaUncheckedCreateWithoutUsuarioInput> | CuotaCreateWithoutUsuarioInput[] | CuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutUsuarioInput | CuotaCreateOrConnectWithoutUsuarioInput[]
    upsert?: CuotaUpsertWithWhereUniqueWithoutUsuarioInput | CuotaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CuotaCreateManyUsuarioInputEnvelope
    set?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    disconnect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    delete?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    update?: CuotaUpdateWithWhereUniqueWithoutUsuarioInput | CuotaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CuotaUpdateManyWithWhereWithoutUsuarioInput | CuotaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CuotaScalarWhereInput | CuotaScalarWhereInput[]
  }

  export type ReparacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ReparacionCreateWithoutUsuarioInput, ReparacionUncheckedCreateWithoutUsuarioInput> | ReparacionCreateWithoutUsuarioInput[] | ReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutUsuarioInput | ReparacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutUsuarioInput | ReparacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ReparacionCreateManyUsuarioInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutUsuarioInput | ReparacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutUsuarioInput | ReparacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type RegistroReparacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RegistroReparacionCreateWithoutUsuarioInput, RegistroReparacionUncheckedCreateWithoutUsuarioInput> | RegistroReparacionCreateWithoutUsuarioInput[] | RegistroReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutUsuarioInput | RegistroReparacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: RegistroReparacionUpsertWithWhereUniqueWithoutUsuarioInput | RegistroReparacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RegistroReparacionCreateManyUsuarioInputEnvelope
    set?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    disconnect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    delete?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    update?: RegistroReparacionUpdateWithWhereUniqueWithoutUsuarioInput | RegistroReparacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RegistroReparacionUpdateManyWithWhereWithoutUsuarioInput | RegistroReparacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RegistroReparacionScalarWhereInput | RegistroReparacionScalarWhereInput[]
  }

  export type MetaUsuarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MetaUsuarioCreateWithoutUsuarioInput, MetaUsuarioUncheckedCreateWithoutUsuarioInput> | MetaUsuarioCreateWithoutUsuarioInput[] | MetaUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutUsuarioInput | MetaUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: MetaUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | MetaUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MetaUsuarioCreateManyUsuarioInputEnvelope
    set?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    disconnect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    delete?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    update?: MetaUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | MetaUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MetaUsuarioUpdateManyWithWhereWithoutUsuarioInput | MetaUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MetaUsuarioScalarWhereInput | MetaUsuarioScalarWhereInput[]
  }

  export type MetaCobrosUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MetaCobrosCreateWithoutUsuarioInput, MetaCobrosUncheckedCreateWithoutUsuarioInput> | MetaCobrosCreateWithoutUsuarioInput[] | MetaCobrosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutUsuarioInput | MetaCobrosCreateOrConnectWithoutUsuarioInput[]
    upsert?: MetaCobrosUpsertWithWhereUniqueWithoutUsuarioInput | MetaCobrosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MetaCobrosCreateManyUsuarioInputEnvelope
    set?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    disconnect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    delete?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    update?: MetaCobrosUpdateWithWhereUniqueWithoutUsuarioInput | MetaCobrosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MetaCobrosUpdateManyWithWhereWithoutUsuarioInput | MetaCobrosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MetaCobrosScalarWhereInput | MetaCobrosScalarWhereInput[]
  }

  export type DepositoCobroUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DepositoCobroCreateWithoutUsuarioInput, DepositoCobroUncheckedCreateWithoutUsuarioInput> | DepositoCobroCreateWithoutUsuarioInput[] | DepositoCobroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutUsuarioInput | DepositoCobroCreateOrConnectWithoutUsuarioInput[]
    upsert?: DepositoCobroUpsertWithWhereUniqueWithoutUsuarioInput | DepositoCobroUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DepositoCobroCreateManyUsuarioInputEnvelope
    set?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    disconnect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    delete?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    update?: DepositoCobroUpdateWithWhereUniqueWithoutUsuarioInput | DepositoCobroUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DepositoCobroUpdateManyWithWhereWithoutUsuarioInput | DepositoCobroUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
  }

  export type EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput = {
    create?: XOR<EntregaStockCreateWithoutUsuarioRecibidoInput, EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput> | EntregaStockCreateWithoutUsuarioRecibidoInput[] | EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput | EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput[]
    upsert?: EntregaStockUpsertWithWhereUniqueWithoutUsuarioRecibidoInput | EntregaStockUpsertWithWhereUniqueWithoutUsuarioRecibidoInput[]
    createMany?: EntregaStockCreateManyUsuarioRecibidoInputEnvelope
    set?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    disconnect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    delete?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    update?: EntregaStockUpdateWithWhereUniqueWithoutUsuarioRecibidoInput | EntregaStockUpdateWithWhereUniqueWithoutUsuarioRecibidoInput[]
    updateMany?: EntregaStockUpdateManyWithWhereWithoutUsuarioRecibidoInput | EntregaStockUpdateManyWithWhereWithoutUsuarioRecibidoInput[]
    deleteMany?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput = {
    create?: XOR<TransferenciaProductoCreateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput> | TransferenciaProductoCreateWithoutUsuarioEncargadoInput[] | TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput[]
    connectOrCreate?: TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput | TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput[]
    upsert?: TransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioEncargadoInput | TransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioEncargadoInput[]
    createMany?: TransferenciaProductoCreateManyUsuarioEncargadoInputEnvelope
    set?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    disconnect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    delete?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    connect?: TransferenciaProductoWhereUniqueInput | TransferenciaProductoWhereUniqueInput[]
    update?: TransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioEncargadoInput | TransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioEncargadoInput[]
    updateMany?: TransferenciaProductoUpdateManyWithWhereWithoutUsuarioEncargadoInput | TransferenciaProductoUpdateManyWithWhereWithoutUsuarioEncargadoInput[]
    deleteMany?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
  }

  export type PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput = {
    create?: XOR<PrecioProductoCreateWithoutCreadoPorInput, PrecioProductoUncheckedCreateWithoutCreadoPorInput> | PrecioProductoCreateWithoutCreadoPorInput[] | PrecioProductoUncheckedCreateWithoutCreadoPorInput[]
    connectOrCreate?: PrecioProductoCreateOrConnectWithoutCreadoPorInput | PrecioProductoCreateOrConnectWithoutCreadoPorInput[]
    upsert?: PrecioProductoUpsertWithWhereUniqueWithoutCreadoPorInput | PrecioProductoUpsertWithWhereUniqueWithoutCreadoPorInput[]
    createMany?: PrecioProductoCreateManyCreadoPorInputEnvelope
    set?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    disconnect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    delete?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    connect?: PrecioProductoWhereUniqueInput | PrecioProductoWhereUniqueInput[]
    update?: PrecioProductoUpdateWithWhereUniqueWithoutCreadoPorInput | PrecioProductoUpdateWithWhereUniqueWithoutCreadoPorInput[]
    updateMany?: PrecioProductoUpdateManyWithWhereWithoutCreadoPorInput | PrecioProductoUpdateManyWithWhereWithoutCreadoPorInput[]
    deleteMany?: PrecioProductoScalarWhereInput | PrecioProductoScalarWhereInput[]
  }

  export type SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput = {
    create?: XOR<SolicitudPrecioCreateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput> | SolicitudPrecioCreateWithoutSolicitadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput | SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput[]
    upsert?: SolicitudPrecioUpsertWithWhereUniqueWithoutSolicitadoPorInput | SolicitudPrecioUpsertWithWhereUniqueWithoutSolicitadoPorInput[]
    createMany?: SolicitudPrecioCreateManySolicitadoPorInputEnvelope
    set?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    disconnect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    delete?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    update?: SolicitudPrecioUpdateWithWhereUniqueWithoutSolicitadoPorInput | SolicitudPrecioUpdateWithWhereUniqueWithoutSolicitadoPorInput[]
    updateMany?: SolicitudPrecioUpdateManyWithWhereWithoutSolicitadoPorInput | SolicitudPrecioUpdateManyWithWhereWithoutSolicitadoPorInput[]
    deleteMany?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
  }

  export type SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput = {
    create?: XOR<SolicitudPrecioCreateWithoutAprobadoPorInput, SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput> | SolicitudPrecioCreateWithoutAprobadoPorInput[] | SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput[]
    connectOrCreate?: SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput | SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput[]
    upsert?: SolicitudPrecioUpsertWithWhereUniqueWithoutAprobadoPorInput | SolicitudPrecioUpsertWithWhereUniqueWithoutAprobadoPorInput[]
    createMany?: SolicitudPrecioCreateManyAprobadoPorInputEnvelope
    set?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    disconnect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    delete?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    connect?: SolicitudPrecioWhereUniqueInput | SolicitudPrecioWhereUniqueInput[]
    update?: SolicitudPrecioUpdateWithWhereUniqueWithoutAprobadoPorInput | SolicitudPrecioUpdateWithWhereUniqueWithoutAprobadoPorInput[]
    updateMany?: SolicitudPrecioUpdateManyWithWhereWithoutAprobadoPorInput | SolicitudPrecioUpdateManyWithWhereWithoutAprobadoPorInput[]
    deleteMany?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
  }

  export type NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<NotificacionCreateWithoutRemitenteInput, NotificacionUncheckedCreateWithoutRemitenteInput> | NotificacionCreateWithoutRemitenteInput[] | NotificacionUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutRemitenteInput | NotificacionCreateOrConnectWithoutRemitenteInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutRemitenteInput | NotificacionUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: NotificacionCreateManyRemitenteInputEnvelope
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutRemitenteInput | NotificacionUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutRemitenteInput | NotificacionUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput> | NotificacionCreateWithoutUsuarioInput[] | NotificacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionCreateOrConnectWithoutUsuarioInput | NotificacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    set?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    disconnect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    delete?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    connect?: NotificacionWhereUniqueInput | NotificacionWhereUniqueInput[]
    update?: NotificacionUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionUpdateManyWithWhereWithoutUsuarioInput | NotificacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
  }

  export type NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionesUsuariosCreateWithoutUsuarioInput, NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput> | NotificacionesUsuariosCreateWithoutUsuarioInput[] | NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput | NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionesUsuariosUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionesUsuariosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacionesUsuariosCreateManyUsuarioInputEnvelope
    set?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    disconnect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    delete?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    connect?: NotificacionesUsuariosWhereUniqueInput | NotificacionesUsuariosWhereUniqueInput[]
    update?: NotificacionesUsuariosUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionesUsuariosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionesUsuariosUpdateManyWithWhereWithoutUsuarioInput | NotificacionesUsuariosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionesUsuariosScalarWhereInput | NotificacionesUsuariosScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput> | SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioSolicitanteInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioSolicitanteInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutUsuarioSolicitanteInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutUsuarioSolicitanteInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<SolicitudTransferenciaProductoCreateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput> | SolicitudTransferenciaProductoCreateWithoutAdministradorInput[] | SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput | SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput[]
    upsert?: SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutAdministradorInput | SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: SolicitudTransferenciaProductoCreateManyAdministradorInputEnvelope
    set?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    disconnect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    delete?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    connect?: SolicitudTransferenciaProductoWhereUniqueInput | SolicitudTransferenciaProductoWhereUniqueInput[]
    update?: SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutAdministradorInput | SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: SolicitudTransferenciaProductoUpdateManyWithWhereWithoutAdministradorInput | SolicitudTransferenciaProductoUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
  }

  export type HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput = {
    create?: XOR<HistorialPrecioCostoCreateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput> | HistorialPrecioCostoCreateWithoutModificadoPorInput[] | HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput[]
    connectOrCreate?: HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput | HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput[]
    upsert?: HistorialPrecioCostoUpsertWithWhereUniqueWithoutModificadoPorInput | HistorialPrecioCostoUpsertWithWhereUniqueWithoutModificadoPorInput[]
    createMany?: HistorialPrecioCostoCreateManyModificadoPorInputEnvelope
    set?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    disconnect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    delete?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    connect?: HistorialPrecioCostoWhereUniqueInput | HistorialPrecioCostoWhereUniqueInput[]
    update?: HistorialPrecioCostoUpdateWithWhereUniqueWithoutModificadoPorInput | HistorialPrecioCostoUpdateWithWhereUniqueWithoutModificadoPorInput[]
    updateMany?: HistorialPrecioCostoUpdateManyWithWhereWithoutModificadoPorInput | HistorialPrecioCostoUpdateManyWithWhereWithoutModificadoPorInput[]
    deleteMany?: HistorialPrecioCostoScalarWhereInput | HistorialPrecioCostoScalarWhereInput[]
  }

  export type AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AjusteStockCreateWithoutUsuarioInput, AjusteStockUncheckedCreateWithoutUsuarioInput> | AjusteStockCreateWithoutUsuarioInput[] | AjusteStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AjusteStockCreateOrConnectWithoutUsuarioInput | AjusteStockCreateOrConnectWithoutUsuarioInput[]
    upsert?: AjusteStockUpsertWithWhereUniqueWithoutUsuarioInput | AjusteStockUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AjusteStockCreateManyUsuarioInputEnvelope
    set?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    disconnect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    delete?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    connect?: AjusteStockWhereUniqueInput | AjusteStockWhereUniqueInput[]
    update?: AjusteStockUpdateWithWhereUniqueWithoutUsuarioInput | AjusteStockUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AjusteStockUpdateManyWithWhereWithoutUsuarioInput | AjusteStockUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
  }

  export type EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EliminacionProductoCreateWithoutUsuarioInput, EliminacionProductoUncheckedCreateWithoutUsuarioInput> | EliminacionProductoCreateWithoutUsuarioInput[] | EliminacionProductoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionProductoCreateOrConnectWithoutUsuarioInput | EliminacionProductoCreateOrConnectWithoutUsuarioInput[]
    upsert?: EliminacionProductoUpsertWithWhereUniqueWithoutUsuarioInput | EliminacionProductoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EliminacionProductoCreateManyUsuarioInputEnvelope
    set?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    disconnect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    delete?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    connect?: EliminacionProductoWhereUniqueInput | EliminacionProductoWhereUniqueInput[]
    update?: EliminacionProductoUpdateWithWhereUniqueWithoutUsuarioInput | EliminacionProductoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EliminacionProductoUpdateManyWithWhereWithoutUsuarioInput | EliminacionProductoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EliminacionProductoScalarWhereInput | EliminacionProductoScalarWhereInput[]
  }

  export type EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EliminacionClienteCreateWithoutUsuarioInput, EliminacionClienteUncheckedCreateWithoutUsuarioInput> | EliminacionClienteCreateWithoutUsuarioInput[] | EliminacionClienteUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutUsuarioInput | EliminacionClienteCreateOrConnectWithoutUsuarioInput[]
    upsert?: EliminacionClienteUpsertWithWhereUniqueWithoutUsuarioInput | EliminacionClienteUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EliminacionClienteCreateManyUsuarioInputEnvelope
    set?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    disconnect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    delete?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    update?: EliminacionClienteUpdateWithWhereUniqueWithoutUsuarioInput | EliminacionClienteUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EliminacionClienteUpdateManyWithWhereWithoutUsuarioInput | EliminacionClienteUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EliminacionClienteScalarWhereInput | EliminacionClienteScalarWhereInput[]
  }

  export type EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EliminacionStockCreateWithoutUsuarioInput, EliminacionStockUncheckedCreateWithoutUsuarioInput> | EliminacionStockCreateWithoutUsuarioInput[] | EliminacionStockUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EliminacionStockCreateOrConnectWithoutUsuarioInput | EliminacionStockCreateOrConnectWithoutUsuarioInput[]
    upsert?: EliminacionStockUpsertWithWhereUniqueWithoutUsuarioInput | EliminacionStockUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EliminacionStockCreateManyUsuarioInputEnvelope
    set?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    disconnect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    delete?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    connect?: EliminacionStockWhereUniqueInput | EliminacionStockWhereUniqueInput[]
    update?: EliminacionStockUpdateWithWhereUniqueWithoutUsuarioInput | EliminacionStockUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EliminacionStockUpdateManyWithWhereWithoutUsuarioInput | EliminacionStockUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutUsuarioInput, RegistroGarantiaUncheckedCreateWithoutUsuarioInput> | RegistroGarantiaCreateWithoutUsuarioInput[] | RegistroGarantiaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutUsuarioInput | RegistroGarantiaCreateOrConnectWithoutUsuarioInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutUsuarioInput | RegistroGarantiaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RegistroGarantiaCreateManyUsuarioInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutUsuarioInput | RegistroGarantiaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutUsuarioInput | RegistroGarantiaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput = {
    create?: XOR<GarantiaCreateWithoutUsuarioRecibeInput, GarantiaUncheckedCreateWithoutUsuarioRecibeInput> | GarantiaCreateWithoutUsuarioRecibeInput[] | GarantiaUncheckedCreateWithoutUsuarioRecibeInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutUsuarioRecibeInput | GarantiaCreateOrConnectWithoutUsuarioRecibeInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutUsuarioRecibeInput | GarantiaUpsertWithWhereUniqueWithoutUsuarioRecibeInput[]
    createMany?: GarantiaCreateManyUsuarioRecibeInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutUsuarioRecibeInput | GarantiaUpdateWithWhereUniqueWithoutUsuarioRecibeInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutUsuarioRecibeInput | GarantiaUpdateManyWithWhereWithoutUsuarioRecibeInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutUsuarioInput, RegistroCajaUncheckedCreateWithoutUsuarioInput> | RegistroCajaCreateWithoutUsuarioInput[] | RegistroCajaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutUsuarioInput | RegistroCajaCreateOrConnectWithoutUsuarioInput[]
    upsert?: RegistroCajaUpsertWithWhereUniqueWithoutUsuarioInput | RegistroCajaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RegistroCajaCreateManyUsuarioInputEnvelope
    set?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    disconnect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    delete?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    connect?: RegistroCajaWhereUniqueInput | RegistroCajaWhereUniqueInput[]
    update?: RegistroCajaUpdateWithWhereUniqueWithoutUsuarioInput | RegistroCajaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RegistroCajaUpdateManyWithWhereWithoutUsuarioInput | RegistroCajaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RegistroCajaScalarWhereInput | RegistroCajaScalarWhereInput[]
  }

  export type DepositoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DepositoCreateWithoutUsuarioInput, DepositoUncheckedCreateWithoutUsuarioInput> | DepositoCreateWithoutUsuarioInput[] | DepositoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCreateOrConnectWithoutUsuarioInput | DepositoCreateOrConnectWithoutUsuarioInput[]
    upsert?: DepositoUpsertWithWhereUniqueWithoutUsuarioInput | DepositoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DepositoCreateManyUsuarioInputEnvelope
    set?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    disconnect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    delete?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    connect?: DepositoWhereUniqueInput | DepositoWhereUniqueInput[]
    update?: DepositoUpdateWithWhereUniqueWithoutUsuarioInput | DepositoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DepositoUpdateManyWithWhereWithoutUsuarioInput | DepositoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
  }

  export type EgresoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EgresoCreateWithoutUsuarioInput, EgresoUncheckedCreateWithoutUsuarioInput> | EgresoCreateWithoutUsuarioInput[] | EgresoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EgresoCreateOrConnectWithoutUsuarioInput | EgresoCreateOrConnectWithoutUsuarioInput[]
    upsert?: EgresoUpsertWithWhereUniqueWithoutUsuarioInput | EgresoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EgresoCreateManyUsuarioInputEnvelope
    set?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    disconnect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    delete?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    connect?: EgresoWhereUniqueInput | EgresoWhereUniqueInput[]
    update?: EgresoUpdateWithWhereUniqueWithoutUsuarioInput | EgresoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EgresoUpdateManyWithWhereWithoutUsuarioInput | EgresoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
  }

  export type VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutUsuarioInput, VentaEliminadaUncheckedCreateWithoutUsuarioInput> | VentaEliminadaCreateWithoutUsuarioInput[] | VentaEliminadaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutUsuarioInput | VentaEliminadaCreateOrConnectWithoutUsuarioInput[]
    upsert?: VentaEliminadaUpsertWithWhereUniqueWithoutUsuarioInput | VentaEliminadaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: VentaEliminadaCreateManyUsuarioInputEnvelope
    set?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    disconnect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    delete?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    update?: VentaEliminadaUpdateWithWhereUniqueWithoutUsuarioInput | VentaEliminadaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: VentaEliminadaUpdateManyWithWhereWithoutUsuarioInput | VentaEliminadaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
  }

  export type VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutUsuarioInput, VentaCuotaUncheckedCreateWithoutUsuarioInput> | VentaCuotaCreateWithoutUsuarioInput[] | VentaCuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutUsuarioInput | VentaCuotaCreateOrConnectWithoutUsuarioInput[]
    upsert?: VentaCuotaUpsertWithWhereUniqueWithoutUsuarioInput | VentaCuotaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: VentaCuotaCreateManyUsuarioInputEnvelope
    set?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    disconnect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    delete?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    update?: VentaCuotaUpdateWithWhereUniqueWithoutUsuarioInput | VentaCuotaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: VentaCuotaUpdateManyWithWhereWithoutUsuarioInput | VentaCuotaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
  }

  export type CuotaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CuotaCreateWithoutUsuarioInput, CuotaUncheckedCreateWithoutUsuarioInput> | CuotaCreateWithoutUsuarioInput[] | CuotaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CuotaCreateOrConnectWithoutUsuarioInput | CuotaCreateOrConnectWithoutUsuarioInput[]
    upsert?: CuotaUpsertWithWhereUniqueWithoutUsuarioInput | CuotaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CuotaCreateManyUsuarioInputEnvelope
    set?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    disconnect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    delete?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    connect?: CuotaWhereUniqueInput | CuotaWhereUniqueInput[]
    update?: CuotaUpdateWithWhereUniqueWithoutUsuarioInput | CuotaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CuotaUpdateManyWithWhereWithoutUsuarioInput | CuotaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CuotaScalarWhereInput | CuotaScalarWhereInput[]
  }

  export type ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ReparacionCreateWithoutUsuarioInput, ReparacionUncheckedCreateWithoutUsuarioInput> | ReparacionCreateWithoutUsuarioInput[] | ReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutUsuarioInput | ReparacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutUsuarioInput | ReparacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ReparacionCreateManyUsuarioInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutUsuarioInput | ReparacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutUsuarioInput | ReparacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<RegistroReparacionCreateWithoutUsuarioInput, RegistroReparacionUncheckedCreateWithoutUsuarioInput> | RegistroReparacionCreateWithoutUsuarioInput[] | RegistroReparacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: RegistroReparacionCreateOrConnectWithoutUsuarioInput | RegistroReparacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: RegistroReparacionUpsertWithWhereUniqueWithoutUsuarioInput | RegistroReparacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: RegistroReparacionCreateManyUsuarioInputEnvelope
    set?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    disconnect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    delete?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    connect?: RegistroReparacionWhereUniqueInput | RegistroReparacionWhereUniqueInput[]
    update?: RegistroReparacionUpdateWithWhereUniqueWithoutUsuarioInput | RegistroReparacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: RegistroReparacionUpdateManyWithWhereWithoutUsuarioInput | RegistroReparacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: RegistroReparacionScalarWhereInput | RegistroReparacionScalarWhereInput[]
  }

  export type MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MetaUsuarioCreateWithoutUsuarioInput, MetaUsuarioUncheckedCreateWithoutUsuarioInput> | MetaUsuarioCreateWithoutUsuarioInput[] | MetaUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaUsuarioCreateOrConnectWithoutUsuarioInput | MetaUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: MetaUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | MetaUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MetaUsuarioCreateManyUsuarioInputEnvelope
    set?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    disconnect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    delete?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    connect?: MetaUsuarioWhereUniqueInput | MetaUsuarioWhereUniqueInput[]
    update?: MetaUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | MetaUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MetaUsuarioUpdateManyWithWhereWithoutUsuarioInput | MetaUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MetaUsuarioScalarWhereInput | MetaUsuarioScalarWhereInput[]
  }

  export type MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MetaCobrosCreateWithoutUsuarioInput, MetaCobrosUncheckedCreateWithoutUsuarioInput> | MetaCobrosCreateWithoutUsuarioInput[] | MetaCobrosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutUsuarioInput | MetaCobrosCreateOrConnectWithoutUsuarioInput[]
    upsert?: MetaCobrosUpsertWithWhereUniqueWithoutUsuarioInput | MetaCobrosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MetaCobrosCreateManyUsuarioInputEnvelope
    set?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    disconnect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    delete?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    connect?: MetaCobrosWhereUniqueInput | MetaCobrosWhereUniqueInput[]
    update?: MetaCobrosUpdateWithWhereUniqueWithoutUsuarioInput | MetaCobrosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MetaCobrosUpdateManyWithWhereWithoutUsuarioInput | MetaCobrosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MetaCobrosScalarWhereInput | MetaCobrosScalarWhereInput[]
  }

  export type DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DepositoCobroCreateWithoutUsuarioInput, DepositoCobroUncheckedCreateWithoutUsuarioInput> | DepositoCobroCreateWithoutUsuarioInput[] | DepositoCobroUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutUsuarioInput | DepositoCobroCreateOrConnectWithoutUsuarioInput[]
    upsert?: DepositoCobroUpsertWithWhereUniqueWithoutUsuarioInput | DepositoCobroUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DepositoCobroCreateManyUsuarioInputEnvelope
    set?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    disconnect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    delete?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    update?: DepositoCobroUpdateWithWhereUniqueWithoutUsuarioInput | DepositoCobroUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DepositoCobroUpdateManyWithWhereWithoutUsuarioInput | DepositoCobroUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutMetaUsuarioInput = {
    create?: XOR<UsuarioCreateWithoutMetaUsuarioInput, UsuarioUncheckedCreateWithoutMetaUsuarioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMetaUsuarioInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutMetaUsuarioInput = {
    create?: XOR<SucursalCreateWithoutMetaUsuarioInput, SucursalUncheckedCreateWithoutMetaUsuarioInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutMetaUsuarioInput
    connect?: SucursalWhereUniqueInput
  }

  export type EnumEstadoMetaTiendaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoMetaTienda
  }

  export type UsuarioUpdateOneRequiredWithoutMetaUsuarioNestedInput = {
    create?: XOR<UsuarioCreateWithoutMetaUsuarioInput, UsuarioUncheckedCreateWithoutMetaUsuarioInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMetaUsuarioInput
    upsert?: UsuarioUpsertWithoutMetaUsuarioInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutMetaUsuarioInput, UsuarioUpdateWithoutMetaUsuarioInput>, UsuarioUncheckedUpdateWithoutMetaUsuarioInput>
  }

  export type SucursalUpdateOneRequiredWithoutMetaUsuarioNestedInput = {
    create?: XOR<SucursalCreateWithoutMetaUsuarioInput, SucursalUncheckedCreateWithoutMetaUsuarioInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutMetaUsuarioInput
    upsert?: SucursalUpsertWithoutMetaUsuarioInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutMetaUsuarioInput, SucursalUpdateWithoutMetaUsuarioInput>, SucursalUncheckedUpdateWithoutMetaUsuarioInput>
  }

  export type UsuarioCreateNestedOneWithoutMetaCobrosInput = {
    create?: XOR<UsuarioCreateWithoutMetaCobrosInput, UsuarioUncheckedCreateWithoutMetaCobrosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMetaCobrosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutMetaCobrosInput = {
    create?: XOR<SucursalCreateWithoutMetaCobrosInput, SucursalUncheckedCreateWithoutMetaCobrosInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutMetaCobrosInput
    connect?: SucursalWhereUniqueInput
  }

  export type DepositoCobroCreateNestedManyWithoutMetaCobroInput = {
    create?: XOR<DepositoCobroCreateWithoutMetaCobroInput, DepositoCobroUncheckedCreateWithoutMetaCobroInput> | DepositoCobroCreateWithoutMetaCobroInput[] | DepositoCobroUncheckedCreateWithoutMetaCobroInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutMetaCobroInput | DepositoCobroCreateOrConnectWithoutMetaCobroInput[]
    createMany?: DepositoCobroCreateManyMetaCobroInputEnvelope
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
  }

  export type DepositoCobroUncheckedCreateNestedManyWithoutMetaCobroInput = {
    create?: XOR<DepositoCobroCreateWithoutMetaCobroInput, DepositoCobroUncheckedCreateWithoutMetaCobroInput> | DepositoCobroCreateWithoutMetaCobroInput[] | DepositoCobroUncheckedCreateWithoutMetaCobroInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutMetaCobroInput | DepositoCobroCreateOrConnectWithoutMetaCobroInput[]
    createMany?: DepositoCobroCreateManyMetaCobroInputEnvelope
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
  }

  export type EnumEstadoMetaCobroFieldUpdateOperationsInput = {
    set?: $Enums.EstadoMetaCobro
  }

  export type UsuarioUpdateOneRequiredWithoutMetaCobrosNestedInput = {
    create?: XOR<UsuarioCreateWithoutMetaCobrosInput, UsuarioUncheckedCreateWithoutMetaCobrosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMetaCobrosInput
    upsert?: UsuarioUpsertWithoutMetaCobrosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutMetaCobrosInput, UsuarioUpdateWithoutMetaCobrosInput>, UsuarioUncheckedUpdateWithoutMetaCobrosInput>
  }

  export type SucursalUpdateOneRequiredWithoutMetaCobrosNestedInput = {
    create?: XOR<SucursalCreateWithoutMetaCobrosInput, SucursalUncheckedCreateWithoutMetaCobrosInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutMetaCobrosInput
    upsert?: SucursalUpsertWithoutMetaCobrosInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutMetaCobrosInput, SucursalUpdateWithoutMetaCobrosInput>, SucursalUncheckedUpdateWithoutMetaCobrosInput>
  }

  export type DepositoCobroUpdateManyWithoutMetaCobroNestedInput = {
    create?: XOR<DepositoCobroCreateWithoutMetaCobroInput, DepositoCobroUncheckedCreateWithoutMetaCobroInput> | DepositoCobroCreateWithoutMetaCobroInput[] | DepositoCobroUncheckedCreateWithoutMetaCobroInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutMetaCobroInput | DepositoCobroCreateOrConnectWithoutMetaCobroInput[]
    upsert?: DepositoCobroUpsertWithWhereUniqueWithoutMetaCobroInput | DepositoCobroUpsertWithWhereUniqueWithoutMetaCobroInput[]
    createMany?: DepositoCobroCreateManyMetaCobroInputEnvelope
    set?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    disconnect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    delete?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    update?: DepositoCobroUpdateWithWhereUniqueWithoutMetaCobroInput | DepositoCobroUpdateWithWhereUniqueWithoutMetaCobroInput[]
    updateMany?: DepositoCobroUpdateManyWithWhereWithoutMetaCobroInput | DepositoCobroUpdateManyWithWhereWithoutMetaCobroInput[]
    deleteMany?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
  }

  export type DepositoCobroUncheckedUpdateManyWithoutMetaCobroNestedInput = {
    create?: XOR<DepositoCobroCreateWithoutMetaCobroInput, DepositoCobroUncheckedCreateWithoutMetaCobroInput> | DepositoCobroCreateWithoutMetaCobroInput[] | DepositoCobroUncheckedCreateWithoutMetaCobroInput[]
    connectOrCreate?: DepositoCobroCreateOrConnectWithoutMetaCobroInput | DepositoCobroCreateOrConnectWithoutMetaCobroInput[]
    upsert?: DepositoCobroUpsertWithWhereUniqueWithoutMetaCobroInput | DepositoCobroUpsertWithWhereUniqueWithoutMetaCobroInput[]
    createMany?: DepositoCobroCreateManyMetaCobroInputEnvelope
    set?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    disconnect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    delete?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    connect?: DepositoCobroWhereUniqueInput | DepositoCobroWhereUniqueInput[]
    update?: DepositoCobroUpdateWithWhereUniqueWithoutMetaCobroInput | DepositoCobroUpdateWithWhereUniqueWithoutMetaCobroInput[]
    updateMany?: DepositoCobroUpdateManyWithWhereWithoutMetaCobroInput | DepositoCobroUpdateManyWithWhereWithoutMetaCobroInput[]
    deleteMany?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutDepositoCobroInput = {
    create?: XOR<UsuarioCreateWithoutDepositoCobroInput, UsuarioUncheckedCreateWithoutDepositoCobroInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepositoCobroInput
    connect?: UsuarioWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutDepositoCobroInput = {
    create?: XOR<SucursalCreateWithoutDepositoCobroInput, SucursalUncheckedCreateWithoutDepositoCobroInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutDepositoCobroInput
    connect?: SucursalWhereUniqueInput
  }

  export type MetaCobrosCreateNestedOneWithoutDepositoCobroInput = {
    create?: XOR<MetaCobrosCreateWithoutDepositoCobroInput, MetaCobrosUncheckedCreateWithoutDepositoCobroInput>
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutDepositoCobroInput
    connect?: MetaCobrosWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutDepositoCobroNestedInput = {
    create?: XOR<UsuarioCreateWithoutDepositoCobroInput, UsuarioUncheckedCreateWithoutDepositoCobroInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDepositoCobroInput
    upsert?: UsuarioUpsertWithoutDepositoCobroInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDepositoCobroInput, UsuarioUpdateWithoutDepositoCobroInput>, UsuarioUncheckedUpdateWithoutDepositoCobroInput>
  }

  export type SucursalUpdateOneRequiredWithoutDepositoCobroNestedInput = {
    create?: XOR<SucursalCreateWithoutDepositoCobroInput, SucursalUncheckedCreateWithoutDepositoCobroInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutDepositoCobroInput
    upsert?: SucursalUpsertWithoutDepositoCobroInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutDepositoCobroInput, SucursalUpdateWithoutDepositoCobroInput>, SucursalUncheckedUpdateWithoutDepositoCobroInput>
  }

  export type MetaCobrosUpdateOneRequiredWithoutDepositoCobroNestedInput = {
    create?: XOR<MetaCobrosCreateWithoutDepositoCobroInput, MetaCobrosUncheckedCreateWithoutDepositoCobroInput>
    connectOrCreate?: MetaCobrosCreateOrConnectWithoutDepositoCobroInput
    upsert?: MetaCobrosUpsertWithoutDepositoCobroInput
    connect?: MetaCobrosWhereUniqueInput
    update?: XOR<XOR<MetaCobrosUpdateToOneWithWhereWithoutDepositoCobroInput, MetaCobrosUpdateWithoutDepositoCobroInput>, MetaCobrosUncheckedUpdateWithoutDepositoCobroInput>
  }

  export type VentaCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type MunicipioCreateNestedOneWithoutClientesInput = {
    create?: XOR<MunicipioCreateWithoutClientesInput, MunicipioUncheckedCreateWithoutClientesInput>
    connectOrCreate?: MunicipioCreateOrConnectWithoutClientesInput
    connect?: MunicipioWhereUniqueInput
  }

  export type DepartamentoCreateNestedOneWithoutClientesInput = {
    create?: XOR<DepartamentoCreateWithoutClientesInput, DepartamentoUncheckedCreateWithoutClientesInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutClientesInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type EliminacionClienteCreateNestedManyWithoutClienteInput = {
    create?: XOR<EliminacionClienteCreateWithoutClienteInput, EliminacionClienteUncheckedCreateWithoutClienteInput> | EliminacionClienteCreateWithoutClienteInput[] | EliminacionClienteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutClienteInput | EliminacionClienteCreateOrConnectWithoutClienteInput[]
    createMany?: EliminacionClienteCreateManyClienteInputEnvelope
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
  }

  export type GarantiaCreateNestedManyWithoutClienteInput = {
    create?: XOR<GarantiaCreateWithoutClienteInput, GarantiaUncheckedCreateWithoutClienteInput> | GarantiaCreateWithoutClienteInput[] | GarantiaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutClienteInput | GarantiaCreateOrConnectWithoutClienteInput[]
    createMany?: GarantiaCreateManyClienteInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type VentaEliminadaCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaEliminadaCreateWithoutClienteInput, VentaEliminadaUncheckedCreateWithoutClienteInput> | VentaEliminadaCreateWithoutClienteInput[] | VentaEliminadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutClienteInput | VentaEliminadaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaEliminadaCreateManyClienteInputEnvelope
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
  }

  export type VentaCuotaCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaCuotaCreateWithoutClienteInput, VentaCuotaUncheckedCreateWithoutClienteInput> | VentaCuotaCreateWithoutClienteInput[] | VentaCuotaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutClienteInput | VentaCuotaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaCuotaCreateManyClienteInputEnvelope
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
  }

  export type ReparacionCreateNestedManyWithoutClienteInput = {
    create?: XOR<ReparacionCreateWithoutClienteInput, ReparacionUncheckedCreateWithoutClienteInput> | ReparacionCreateWithoutClienteInput[] | ReparacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutClienteInput | ReparacionCreateOrConnectWithoutClienteInput[]
    createMany?: ReparacionCreateManyClienteInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<EliminacionClienteCreateWithoutClienteInput, EliminacionClienteUncheckedCreateWithoutClienteInput> | EliminacionClienteCreateWithoutClienteInput[] | EliminacionClienteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutClienteInput | EliminacionClienteCreateOrConnectWithoutClienteInput[]
    createMany?: EliminacionClienteCreateManyClienteInputEnvelope
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
  }

  export type GarantiaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<GarantiaCreateWithoutClienteInput, GarantiaUncheckedCreateWithoutClienteInput> | GarantiaCreateWithoutClienteInput[] | GarantiaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutClienteInput | GarantiaCreateOrConnectWithoutClienteInput[]
    createMany?: GarantiaCreateManyClienteInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaEliminadaCreateWithoutClienteInput, VentaEliminadaUncheckedCreateWithoutClienteInput> | VentaEliminadaCreateWithoutClienteInput[] | VentaEliminadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutClienteInput | VentaEliminadaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaEliminadaCreateManyClienteInputEnvelope
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
  }

  export type VentaCuotaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<VentaCuotaCreateWithoutClienteInput, VentaCuotaUncheckedCreateWithoutClienteInput> | VentaCuotaCreateWithoutClienteInput[] | VentaCuotaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutClienteInput | VentaCuotaCreateOrConnectWithoutClienteInput[]
    createMany?: VentaCuotaCreateManyClienteInputEnvelope
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
  }

  export type ReparacionUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ReparacionCreateWithoutClienteInput, ReparacionUncheckedCreateWithoutClienteInput> | ReparacionCreateWithoutClienteInput[] | ReparacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutClienteInput | ReparacionCreateOrConnectWithoutClienteInput[]
    createMany?: ReparacionCreateManyClienteInputEnvelope
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
  }

  export type VentaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutClienteInput | VentaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutClienteInput | VentaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutClienteInput | VentaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type MunicipioUpdateOneWithoutClientesNestedInput = {
    create?: XOR<MunicipioCreateWithoutClientesInput, MunicipioUncheckedCreateWithoutClientesInput>
    connectOrCreate?: MunicipioCreateOrConnectWithoutClientesInput
    upsert?: MunicipioUpsertWithoutClientesInput
    disconnect?: MunicipioWhereInput | boolean
    delete?: MunicipioWhereInput | boolean
    connect?: MunicipioWhereUniqueInput
    update?: XOR<XOR<MunicipioUpdateToOneWithWhereWithoutClientesInput, MunicipioUpdateWithoutClientesInput>, MunicipioUncheckedUpdateWithoutClientesInput>
  }

  export type DepartamentoUpdateOneWithoutClientesNestedInput = {
    create?: XOR<DepartamentoCreateWithoutClientesInput, DepartamentoUncheckedCreateWithoutClientesInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutClientesInput
    upsert?: DepartamentoUpsertWithoutClientesInput
    disconnect?: DepartamentoWhereInput | boolean
    delete?: DepartamentoWhereInput | boolean
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutClientesInput, DepartamentoUpdateWithoutClientesInput>, DepartamentoUncheckedUpdateWithoutClientesInput>
  }

  export type EliminacionClienteUpdateManyWithoutClienteNestedInput = {
    create?: XOR<EliminacionClienteCreateWithoutClienteInput, EliminacionClienteUncheckedCreateWithoutClienteInput> | EliminacionClienteCreateWithoutClienteInput[] | EliminacionClienteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutClienteInput | EliminacionClienteCreateOrConnectWithoutClienteInput[]
    upsert?: EliminacionClienteUpsertWithWhereUniqueWithoutClienteInput | EliminacionClienteUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: EliminacionClienteCreateManyClienteInputEnvelope
    set?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    disconnect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    delete?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    update?: EliminacionClienteUpdateWithWhereUniqueWithoutClienteInput | EliminacionClienteUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: EliminacionClienteUpdateManyWithWhereWithoutClienteInput | EliminacionClienteUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: EliminacionClienteScalarWhereInput | EliminacionClienteScalarWhereInput[]
  }

  export type GarantiaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<GarantiaCreateWithoutClienteInput, GarantiaUncheckedCreateWithoutClienteInput> | GarantiaCreateWithoutClienteInput[] | GarantiaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutClienteInput | GarantiaCreateOrConnectWithoutClienteInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutClienteInput | GarantiaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: GarantiaCreateManyClienteInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutClienteInput | GarantiaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutClienteInput | GarantiaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type VentaEliminadaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutClienteInput, VentaEliminadaUncheckedCreateWithoutClienteInput> | VentaEliminadaCreateWithoutClienteInput[] | VentaEliminadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutClienteInput | VentaEliminadaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaEliminadaUpsertWithWhereUniqueWithoutClienteInput | VentaEliminadaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaEliminadaCreateManyClienteInputEnvelope
    set?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    disconnect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    delete?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    update?: VentaEliminadaUpdateWithWhereUniqueWithoutClienteInput | VentaEliminadaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaEliminadaUpdateManyWithWhereWithoutClienteInput | VentaEliminadaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
  }

  export type VentaCuotaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutClienteInput, VentaCuotaUncheckedCreateWithoutClienteInput> | VentaCuotaCreateWithoutClienteInput[] | VentaCuotaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutClienteInput | VentaCuotaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaCuotaUpsertWithWhereUniqueWithoutClienteInput | VentaCuotaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaCuotaCreateManyClienteInputEnvelope
    set?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    disconnect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    delete?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    update?: VentaCuotaUpdateWithWhereUniqueWithoutClienteInput | VentaCuotaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaCuotaUpdateManyWithWhereWithoutClienteInput | VentaCuotaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
  }

  export type ReparacionUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ReparacionCreateWithoutClienteInput, ReparacionUncheckedCreateWithoutClienteInput> | ReparacionCreateWithoutClienteInput[] | ReparacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutClienteInput | ReparacionCreateOrConnectWithoutClienteInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutClienteInput | ReparacionUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ReparacionCreateManyClienteInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutClienteInput | ReparacionUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutClienteInput | ReparacionUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput> | VentaCreateWithoutClienteInput[] | VentaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutClienteInput | VentaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutClienteInput | VentaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaCreateManyClienteInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutClienteInput | VentaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutClienteInput | VentaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<EliminacionClienteCreateWithoutClienteInput, EliminacionClienteUncheckedCreateWithoutClienteInput> | EliminacionClienteCreateWithoutClienteInput[] | EliminacionClienteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EliminacionClienteCreateOrConnectWithoutClienteInput | EliminacionClienteCreateOrConnectWithoutClienteInput[]
    upsert?: EliminacionClienteUpsertWithWhereUniqueWithoutClienteInput | EliminacionClienteUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: EliminacionClienteCreateManyClienteInputEnvelope
    set?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    disconnect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    delete?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    connect?: EliminacionClienteWhereUniqueInput | EliminacionClienteWhereUniqueInput[]
    update?: EliminacionClienteUpdateWithWhereUniqueWithoutClienteInput | EliminacionClienteUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: EliminacionClienteUpdateManyWithWhereWithoutClienteInput | EliminacionClienteUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: EliminacionClienteScalarWhereInput | EliminacionClienteScalarWhereInput[]
  }

  export type GarantiaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<GarantiaCreateWithoutClienteInput, GarantiaUncheckedCreateWithoutClienteInput> | GarantiaCreateWithoutClienteInput[] | GarantiaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutClienteInput | GarantiaCreateOrConnectWithoutClienteInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutClienteInput | GarantiaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: GarantiaCreateManyClienteInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutClienteInput | GarantiaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutClienteInput | GarantiaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaEliminadaCreateWithoutClienteInput, VentaEliminadaUncheckedCreateWithoutClienteInput> | VentaEliminadaCreateWithoutClienteInput[] | VentaEliminadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaEliminadaCreateOrConnectWithoutClienteInput | VentaEliminadaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaEliminadaUpsertWithWhereUniqueWithoutClienteInput | VentaEliminadaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaEliminadaCreateManyClienteInputEnvelope
    set?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    disconnect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    delete?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    connect?: VentaEliminadaWhereUniqueInput | VentaEliminadaWhereUniqueInput[]
    update?: VentaEliminadaUpdateWithWhereUniqueWithoutClienteInput | VentaEliminadaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaEliminadaUpdateManyWithWhereWithoutClienteInput | VentaEliminadaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
  }

  export type VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutClienteInput, VentaCuotaUncheckedCreateWithoutClienteInput> | VentaCuotaCreateWithoutClienteInput[] | VentaCuotaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutClienteInput | VentaCuotaCreateOrConnectWithoutClienteInput[]
    upsert?: VentaCuotaUpsertWithWhereUniqueWithoutClienteInput | VentaCuotaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: VentaCuotaCreateManyClienteInputEnvelope
    set?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    disconnect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    delete?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    connect?: VentaCuotaWhereUniqueInput | VentaCuotaWhereUniqueInput[]
    update?: VentaCuotaUpdateWithWhereUniqueWithoutClienteInput | VentaCuotaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: VentaCuotaUpdateManyWithWhereWithoutClienteInput | VentaCuotaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
  }

  export type ReparacionUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ReparacionCreateWithoutClienteInput, ReparacionUncheckedCreateWithoutClienteInput> | ReparacionCreateWithoutClienteInput[] | ReparacionUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReparacionCreateOrConnectWithoutClienteInput | ReparacionCreateOrConnectWithoutClienteInput[]
    upsert?: ReparacionUpsertWithWhereUniqueWithoutClienteInput | ReparacionUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ReparacionCreateManyClienteInputEnvelope
    set?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    disconnect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    delete?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    connect?: ReparacionWhereUniqueInput | ReparacionWhereUniqueInput[]
    update?: ReparacionUpdateWithWhereUniqueWithoutClienteInput | ReparacionUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ReparacionUpdateManyWithWhereWithoutClienteInput | ReparacionUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutGarantiaInput = {
    create?: XOR<ClienteCreateWithoutGarantiaInput, ClienteUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutGarantiaInput
    connect?: ClienteWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutGarantiaInput = {
    create?: XOR<ProductoCreateWithoutGarantiaInput, ProductoUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutGarantiaInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutGarantiaInput = {
    create?: XOR<UsuarioCreateWithoutGarantiaInput, UsuarioUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutGarantiaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type RegistroGarantiaCreateNestedManyWithoutGarantiaInput = {
    create?: XOR<RegistroGarantiaCreateWithoutGarantiaInput, RegistroGarantiaUncheckedCreateWithoutGarantiaInput> | RegistroGarantiaCreateWithoutGarantiaInput[] | RegistroGarantiaUncheckedCreateWithoutGarantiaInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutGarantiaInput | RegistroGarantiaCreateOrConnectWithoutGarantiaInput[]
    createMany?: RegistroGarantiaCreateManyGarantiaInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type ProveedorCreateNestedOneWithoutGarantiaInput = {
    create?: XOR<ProveedorCreateWithoutGarantiaInput, ProveedorUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutGarantiaInput
    connect?: ProveedorWhereUniqueInput
  }

  export type RegistroGarantiaUncheckedCreateNestedManyWithoutGarantiaInput = {
    create?: XOR<RegistroGarantiaCreateWithoutGarantiaInput, RegistroGarantiaUncheckedCreateWithoutGarantiaInput> | RegistroGarantiaCreateWithoutGarantiaInput[] | RegistroGarantiaUncheckedCreateWithoutGarantiaInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutGarantiaInput | RegistroGarantiaCreateOrConnectWithoutGarantiaInput[]
    createMany?: RegistroGarantiaCreateManyGarantiaInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type EnumEstadoGarantiaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoGarantia
  }

  export type ClienteUpdateOneRequiredWithoutGarantiaNestedInput = {
    create?: XOR<ClienteCreateWithoutGarantiaInput, ClienteUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutGarantiaInput
    upsert?: ClienteUpsertWithoutGarantiaInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutGarantiaInput, ClienteUpdateWithoutGarantiaInput>, ClienteUncheckedUpdateWithoutGarantiaInput>
  }

  export type ProductoUpdateOneRequiredWithoutGarantiaNestedInput = {
    create?: XOR<ProductoCreateWithoutGarantiaInput, ProductoUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutGarantiaInput
    upsert?: ProductoUpsertWithoutGarantiaInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutGarantiaInput, ProductoUpdateWithoutGarantiaInput>, ProductoUncheckedUpdateWithoutGarantiaInput>
  }

  export type UsuarioUpdateOneWithoutGarantiaNestedInput = {
    create?: XOR<UsuarioCreateWithoutGarantiaInput, UsuarioUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutGarantiaInput
    upsert?: UsuarioUpsertWithoutGarantiaInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutGarantiaInput, UsuarioUpdateWithoutGarantiaInput>, UsuarioUncheckedUpdateWithoutGarantiaInput>
  }

  export type RegistroGarantiaUpdateManyWithoutGarantiaNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutGarantiaInput, RegistroGarantiaUncheckedCreateWithoutGarantiaInput> | RegistroGarantiaCreateWithoutGarantiaInput[] | RegistroGarantiaUncheckedCreateWithoutGarantiaInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutGarantiaInput | RegistroGarantiaCreateOrConnectWithoutGarantiaInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutGarantiaInput | RegistroGarantiaUpsertWithWhereUniqueWithoutGarantiaInput[]
    createMany?: RegistroGarantiaCreateManyGarantiaInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutGarantiaInput | RegistroGarantiaUpdateWithWhereUniqueWithoutGarantiaInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutGarantiaInput | RegistroGarantiaUpdateManyWithWhereWithoutGarantiaInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type ProveedorUpdateOneWithoutGarantiaNestedInput = {
    create?: XOR<ProveedorCreateWithoutGarantiaInput, ProveedorUncheckedCreateWithoutGarantiaInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutGarantiaInput
    upsert?: ProveedorUpsertWithoutGarantiaInput
    disconnect?: ProveedorWhereInput | boolean
    delete?: ProveedorWhereInput | boolean
    connect?: ProveedorWhereUniqueInput
    update?: XOR<XOR<ProveedorUpdateToOneWithWhereWithoutGarantiaInput, ProveedorUpdateWithoutGarantiaInput>, ProveedorUncheckedUpdateWithoutGarantiaInput>
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutGarantiaNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutGarantiaInput, RegistroGarantiaUncheckedCreateWithoutGarantiaInput> | RegistroGarantiaCreateWithoutGarantiaInput[] | RegistroGarantiaUncheckedCreateWithoutGarantiaInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutGarantiaInput | RegistroGarantiaCreateOrConnectWithoutGarantiaInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutGarantiaInput | RegistroGarantiaUpsertWithWhereUniqueWithoutGarantiaInput[]
    createMany?: RegistroGarantiaCreateManyGarantiaInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutGarantiaInput | RegistroGarantiaUpdateWithWhereUniqueWithoutGarantiaInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutGarantiaInput | RegistroGarantiaUpdateManyWithWhereWithoutGarantiaInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type GarantiaCreateNestedOneWithoutRegistrosInput = {
    create?: XOR<GarantiaCreateWithoutRegistrosInput, GarantiaUncheckedCreateWithoutRegistrosInput>
    connectOrCreate?: GarantiaCreateOrConnectWithoutRegistrosInput
    connect?: GarantiaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutRegistroGarantiaInput = {
    create?: XOR<UsuarioCreateWithoutRegistroGarantiaInput, UsuarioUncheckedCreateWithoutRegistroGarantiaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRegistroGarantiaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutRegistroGarantiaInput = {
    create?: XOR<ProductoCreateWithoutRegistroGarantiaInput, ProductoUncheckedCreateWithoutRegistroGarantiaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutRegistroGarantiaInput
    connect?: ProductoWhereUniqueInput
  }

  export type ProveedorCreateNestedOneWithoutRegistroGarantiaInput = {
    create?: XOR<ProveedorCreateWithoutRegistroGarantiaInput, ProveedorUncheckedCreateWithoutRegistroGarantiaInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutRegistroGarantiaInput
    connect?: ProveedorWhereUniqueInput
  }

  export type GarantiaUpdateOneRequiredWithoutRegistrosNestedInput = {
    create?: XOR<GarantiaCreateWithoutRegistrosInput, GarantiaUncheckedCreateWithoutRegistrosInput>
    connectOrCreate?: GarantiaCreateOrConnectWithoutRegistrosInput
    upsert?: GarantiaUpsertWithoutRegistrosInput
    connect?: GarantiaWhereUniqueInput
    update?: XOR<XOR<GarantiaUpdateToOneWithWhereWithoutRegistrosInput, GarantiaUpdateWithoutRegistrosInput>, GarantiaUncheckedUpdateWithoutRegistrosInput>
  }

  export type UsuarioUpdateOneWithoutRegistroGarantiaNestedInput = {
    create?: XOR<UsuarioCreateWithoutRegistroGarantiaInput, UsuarioUncheckedCreateWithoutRegistroGarantiaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutRegistroGarantiaInput
    upsert?: UsuarioUpsertWithoutRegistroGarantiaInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutRegistroGarantiaInput, UsuarioUpdateWithoutRegistroGarantiaInput>, UsuarioUncheckedUpdateWithoutRegistroGarantiaInput>
  }

  export type ProductoUpdateOneRequiredWithoutRegistroGarantiaNestedInput = {
    create?: XOR<ProductoCreateWithoutRegistroGarantiaInput, ProductoUncheckedCreateWithoutRegistroGarantiaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutRegistroGarantiaInput
    upsert?: ProductoUpsertWithoutRegistroGarantiaInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutRegistroGarantiaInput, ProductoUpdateWithoutRegistroGarantiaInput>, ProductoUncheckedUpdateWithoutRegistroGarantiaInput>
  }

  export type ProveedorUpdateOneWithoutRegistroGarantiaNestedInput = {
    create?: XOR<ProveedorCreateWithoutRegistroGarantiaInput, ProveedorUncheckedCreateWithoutRegistroGarantiaInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutRegistroGarantiaInput
    upsert?: ProveedorUpsertWithoutRegistroGarantiaInput
    disconnect?: ProveedorWhereInput | boolean
    delete?: ProveedorWhereInput | boolean
    connect?: ProveedorWhereUniqueInput
    update?: XOR<XOR<ProveedorUpdateToOneWithWhereWithoutRegistroGarantiaInput, ProveedorUpdateWithoutRegistroGarantiaInput>, ProveedorUncheckedUpdateWithoutRegistroGarantiaInput>
  }

  export type VentaCreateNestedOneWithoutMetodoPagoInput = {
    create?: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput>
    connectOrCreate?: VentaCreateOrConnectWithoutMetodoPagoInput
    connect?: VentaWhereUniqueInput
  }

  export type EnumMetodoPagoFieldUpdateOperationsInput = {
    set?: $Enums.MetodoPago
  }

  export type VentaUpdateOneRequiredWithoutMetodoPagoNestedInput = {
    create?: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput>
    connectOrCreate?: VentaCreateOrConnectWithoutMetodoPagoInput
    upsert?: VentaUpsertWithoutMetodoPagoInput
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutMetodoPagoInput, VentaUpdateWithoutMetodoPagoInput>, VentaUncheckedUpdateWithoutMetodoPagoInput>
  }

  export type ProductoCreateNestedOneWithoutHistorialStockInput = {
    create?: XOR<ProductoCreateWithoutHistorialStockInput, ProductoUncheckedCreateWithoutHistorialStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialStockInput
    connect?: ProductoWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutHistorialStockNestedInput = {
    create?: XOR<ProductoCreateWithoutHistorialStockInput, ProductoUncheckedCreateWithoutHistorialStockInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialStockInput
    upsert?: ProductoUpsertWithoutHistorialStockInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutHistorialStockInput, ProductoUpdateWithoutHistorialStockInput>, ProductoUncheckedUpdateWithoutHistorialStockInput>
  }

  export type ClienteCreateNestedOneWithoutComprasInput = {
    create?: XOR<ClienteCreateWithoutComprasInput, ClienteUncheckedCreateWithoutComprasInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutComprasInput
    connect?: ClienteWhereUniqueInput
  }

  export type VentaProductoCreateNestedManyWithoutVentaInput = {
    create?: XOR<VentaProductoCreateWithoutVentaInput, VentaProductoUncheckedCreateWithoutVentaInput> | VentaProductoCreateWithoutVentaInput[] | VentaProductoUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutVentaInput | VentaProductoCreateOrConnectWithoutVentaInput[]
    createMany?: VentaProductoCreateManyVentaInputEnvelope
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
  }

  export type PagoCreateNestedOneWithoutVentaInput = {
    create?: XOR<PagoCreateWithoutVentaInput, PagoUncheckedCreateWithoutVentaInput>
    connectOrCreate?: PagoCreateOrConnectWithoutVentaInput
    connect?: PagoWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutVentaInput = {
    create?: XOR<SucursalCreateWithoutVentaInput, SucursalUncheckedCreateWithoutVentaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentaInput
    connect?: SucursalWhereUniqueInput
  }

  export type RegistroCajaCreateNestedOneWithoutVentasInput = {
    create?: XOR<RegistroCajaCreateWithoutVentasInput, RegistroCajaUncheckedCreateWithoutVentasInput>
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutVentasInput
    connect?: RegistroCajaWhereUniqueInput
  }

  export type VentaCuotaCreateNestedOneWithoutVentaInput = {
    create?: XOR<VentaCuotaCreateWithoutVentaInput, VentaCuotaUncheckedCreateWithoutVentaInput>
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutVentaInput
    connect?: VentaCuotaWhereUniqueInput
  }

  export type VentaProductoUncheckedCreateNestedManyWithoutVentaInput = {
    create?: XOR<VentaProductoCreateWithoutVentaInput, VentaProductoUncheckedCreateWithoutVentaInput> | VentaProductoCreateWithoutVentaInput[] | VentaProductoUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutVentaInput | VentaProductoCreateOrConnectWithoutVentaInput[]
    createMany?: VentaProductoCreateManyVentaInputEnvelope
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
  }

  export type PagoUncheckedCreateNestedOneWithoutVentaInput = {
    create?: XOR<PagoCreateWithoutVentaInput, PagoUncheckedCreateWithoutVentaInput>
    connectOrCreate?: PagoCreateOrConnectWithoutVentaInput
    connect?: PagoWhereUniqueInput
  }

  export type VentaCuotaUncheckedCreateNestedOneWithoutVentaInput = {
    create?: XOR<VentaCuotaCreateWithoutVentaInput, VentaCuotaUncheckedCreateWithoutVentaInput>
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutVentaInput
    connect?: VentaCuotaWhereUniqueInput
  }

  export type ClienteUpdateOneWithoutComprasNestedInput = {
    create?: XOR<ClienteCreateWithoutComprasInput, ClienteUncheckedCreateWithoutComprasInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutComprasInput
    upsert?: ClienteUpsertWithoutComprasInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutComprasInput, ClienteUpdateWithoutComprasInput>, ClienteUncheckedUpdateWithoutComprasInput>
  }

  export type VentaProductoUpdateManyWithoutVentaNestedInput = {
    create?: XOR<VentaProductoCreateWithoutVentaInput, VentaProductoUncheckedCreateWithoutVentaInput> | VentaProductoCreateWithoutVentaInput[] | VentaProductoUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutVentaInput | VentaProductoCreateOrConnectWithoutVentaInput[]
    upsert?: VentaProductoUpsertWithWhereUniqueWithoutVentaInput | VentaProductoUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: VentaProductoCreateManyVentaInputEnvelope
    set?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    disconnect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    delete?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    update?: VentaProductoUpdateWithWhereUniqueWithoutVentaInput | VentaProductoUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: VentaProductoUpdateManyWithWhereWithoutVentaInput | VentaProductoUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: VentaProductoScalarWhereInput | VentaProductoScalarWhereInput[]
  }

  export type PagoUpdateOneWithoutVentaNestedInput = {
    create?: XOR<PagoCreateWithoutVentaInput, PagoUncheckedCreateWithoutVentaInput>
    connectOrCreate?: PagoCreateOrConnectWithoutVentaInput
    upsert?: PagoUpsertWithoutVentaInput
    disconnect?: PagoWhereInput | boolean
    delete?: PagoWhereInput | boolean
    connect?: PagoWhereUniqueInput
    update?: XOR<XOR<PagoUpdateToOneWithWhereWithoutVentaInput, PagoUpdateWithoutVentaInput>, PagoUncheckedUpdateWithoutVentaInput>
  }

  export type SucursalUpdateOneRequiredWithoutVentaNestedInput = {
    create?: XOR<SucursalCreateWithoutVentaInput, SucursalUncheckedCreateWithoutVentaInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentaInput
    upsert?: SucursalUpsertWithoutVentaInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutVentaInput, SucursalUpdateWithoutVentaInput>, SucursalUncheckedUpdateWithoutVentaInput>
  }

  export type RegistroCajaUpdateOneWithoutVentasNestedInput = {
    create?: XOR<RegistroCajaCreateWithoutVentasInput, RegistroCajaUncheckedCreateWithoutVentasInput>
    connectOrCreate?: RegistroCajaCreateOrConnectWithoutVentasInput
    upsert?: RegistroCajaUpsertWithoutVentasInput
    disconnect?: RegistroCajaWhereInput | boolean
    delete?: RegistroCajaWhereInput | boolean
    connect?: RegistroCajaWhereUniqueInput
    update?: XOR<XOR<RegistroCajaUpdateToOneWithWhereWithoutVentasInput, RegistroCajaUpdateWithoutVentasInput>, RegistroCajaUncheckedUpdateWithoutVentasInput>
  }

  export type VentaCuotaUpdateOneWithoutVentaNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutVentaInput, VentaCuotaUncheckedCreateWithoutVentaInput>
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutVentaInput
    upsert?: VentaCuotaUpsertWithoutVentaInput
    disconnect?: VentaCuotaWhereInput | boolean
    delete?: VentaCuotaWhereInput | boolean
    connect?: VentaCuotaWhereUniqueInput
    update?: XOR<XOR<VentaCuotaUpdateToOneWithWhereWithoutVentaInput, VentaCuotaUpdateWithoutVentaInput>, VentaCuotaUncheckedUpdateWithoutVentaInput>
  }

  export type VentaProductoUncheckedUpdateManyWithoutVentaNestedInput = {
    create?: XOR<VentaProductoCreateWithoutVentaInput, VentaProductoUncheckedCreateWithoutVentaInput> | VentaProductoCreateWithoutVentaInput[] | VentaProductoUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: VentaProductoCreateOrConnectWithoutVentaInput | VentaProductoCreateOrConnectWithoutVentaInput[]
    upsert?: VentaProductoUpsertWithWhereUniqueWithoutVentaInput | VentaProductoUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: VentaProductoCreateManyVentaInputEnvelope
    set?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    disconnect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    delete?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    connect?: VentaProductoWhereUniqueInput | VentaProductoWhereUniqueInput[]
    update?: VentaProductoUpdateWithWhereUniqueWithoutVentaInput | VentaProductoUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: VentaProductoUpdateManyWithWhereWithoutVentaInput | VentaProductoUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: VentaProductoScalarWhereInput | VentaProductoScalarWhereInput[]
  }

  export type PagoUncheckedUpdateOneWithoutVentaNestedInput = {
    create?: XOR<PagoCreateWithoutVentaInput, PagoUncheckedCreateWithoutVentaInput>
    connectOrCreate?: PagoCreateOrConnectWithoutVentaInput
    upsert?: PagoUpsertWithoutVentaInput
    disconnect?: PagoWhereInput | boolean
    delete?: PagoWhereInput | boolean
    connect?: PagoWhereUniqueInput
    update?: XOR<XOR<PagoUpdateToOneWithWhereWithoutVentaInput, PagoUpdateWithoutVentaInput>, PagoUncheckedUpdateWithoutVentaInput>
  }

  export type VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput = {
    create?: XOR<VentaCuotaCreateWithoutVentaInput, VentaCuotaUncheckedCreateWithoutVentaInput>
    connectOrCreate?: VentaCuotaCreateOrConnectWithoutVentaInput
    upsert?: VentaCuotaUpsertWithoutVentaInput
    disconnect?: VentaCuotaWhereInput | boolean
    delete?: VentaCuotaWhereInput | boolean
    connect?: VentaCuotaWhereUniqueInput
    update?: XOR<XOR<VentaCuotaUpdateToOneWithWhereWithoutVentaInput, VentaCuotaUpdateWithoutVentaInput>, VentaCuotaUncheckedUpdateWithoutVentaInput>
  }

  export type ProductoCreateNestedOneWithoutTransferenciaProductoInput = {
    create?: XOR<ProductoCreateWithoutTransferenciaProductoInput, ProductoUncheckedCreateWithoutTransferenciaProductoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutTransferenciaProductoInput
    connect?: ProductoWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutTransferenciaProductoInput = {
    create?: XOR<SucursalCreateWithoutTransferenciaProductoInput, SucursalUncheckedCreateWithoutTransferenciaProductoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutTransferenciaProductoInput
    connect?: SucursalWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutTransferenciaProductoDestinoInput = {
    create?: XOR<SucursalCreateWithoutTransferenciaProductoDestinoInput, SucursalUncheckedCreateWithoutTransferenciaProductoDestinoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutTransferenciaProductoDestinoInput
    connect?: SucursalWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutTransferenciaProductoInput = {
    create?: XOR<UsuarioCreateWithoutTransferenciaProductoInput, UsuarioUncheckedCreateWithoutTransferenciaProductoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTransferenciaProductoInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutTransferenciaProductoNestedInput = {
    create?: XOR<ProductoCreateWithoutTransferenciaProductoInput, ProductoUncheckedCreateWithoutTransferenciaProductoInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutTransferenciaProductoInput
    upsert?: ProductoUpsertWithoutTransferenciaProductoInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutTransferenciaProductoInput, ProductoUpdateWithoutTransferenciaProductoInput>, ProductoUncheckedUpdateWithoutTransferenciaProductoInput>
  }

  export type SucursalUpdateOneRequiredWithoutTransferenciaProductoNestedInput = {
    create?: XOR<SucursalCreateWithoutTransferenciaProductoInput, SucursalUncheckedCreateWithoutTransferenciaProductoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutTransferenciaProductoInput
    upsert?: SucursalUpsertWithoutTransferenciaProductoInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutTransferenciaProductoInput, SucursalUpdateWithoutTransferenciaProductoInput>, SucursalUncheckedUpdateWithoutTransferenciaProductoInput>
  }

  export type SucursalUpdateOneRequiredWithoutTransferenciaProductoDestinoNestedInput = {
    create?: XOR<SucursalCreateWithoutTransferenciaProductoDestinoInput, SucursalUncheckedCreateWithoutTransferenciaProductoDestinoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutTransferenciaProductoDestinoInput
    upsert?: SucursalUpsertWithoutTransferenciaProductoDestinoInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutTransferenciaProductoDestinoInput, SucursalUpdateWithoutTransferenciaProductoDestinoInput>, SucursalUncheckedUpdateWithoutTransferenciaProductoDestinoInput>
  }

  export type UsuarioUpdateOneWithoutTransferenciaProductoNestedInput = {
    create?: XOR<UsuarioCreateWithoutTransferenciaProductoInput, UsuarioUncheckedCreateWithoutTransferenciaProductoInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutTransferenciaProductoInput
    upsert?: UsuarioUpsertWithoutTransferenciaProductoInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutTransferenciaProductoInput, UsuarioUpdateWithoutTransferenciaProductoInput>, UsuarioUncheckedUpdateWithoutTransferenciaProductoInput>
  }

  export type ProductoCreateNestedOneWithoutSolicitudesTransferenciaInput = {
    create?: XOR<ProductoCreateWithoutSolicitudesTransferenciaInput, ProductoUncheckedCreateWithoutSolicitudesTransferenciaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutSolicitudesTransferenciaInput
    connect?: ProductoWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutSolicitudesOrigenInput = {
    create?: XOR<SucursalCreateWithoutSolicitudesOrigenInput, SucursalUncheckedCreateWithoutSolicitudesOrigenInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutSolicitudesOrigenInput
    connect?: SucursalWhereUniqueInput
  }

  export type SucursalCreateNestedOneWithoutSolicitudesDestinoInput = {
    create?: XOR<SucursalCreateWithoutSolicitudesDestinoInput, SucursalUncheckedCreateWithoutSolicitudesDestinoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutSolicitudesDestinoInput
    connect?: SucursalWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutSolicitudesEnviadasInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesEnviadasInput, UsuarioUncheckedCreateWithoutSolicitudesEnviadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesEnviadasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutSolicitudesAprobadasTransferenciaInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasTransferenciaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesAprobadasTransferenciaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoSolicitudTransferencia
  }

  export type ProductoUpdateOneRequiredWithoutSolicitudesTransferenciaNestedInput = {
    create?: XOR<ProductoCreateWithoutSolicitudesTransferenciaInput, ProductoUncheckedCreateWithoutSolicitudesTransferenciaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutSolicitudesTransferenciaInput
    upsert?: ProductoUpsertWithoutSolicitudesTransferenciaInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutSolicitudesTransferenciaInput, ProductoUpdateWithoutSolicitudesTransferenciaInput>, ProductoUncheckedUpdateWithoutSolicitudesTransferenciaInput>
  }

  export type SucursalUpdateOneRequiredWithoutSolicitudesOrigenNestedInput = {
    create?: XOR<SucursalCreateWithoutSolicitudesOrigenInput, SucursalUncheckedCreateWithoutSolicitudesOrigenInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutSolicitudesOrigenInput
    upsert?: SucursalUpsertWithoutSolicitudesOrigenInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutSolicitudesOrigenInput, SucursalUpdateWithoutSolicitudesOrigenInput>, SucursalUncheckedUpdateWithoutSolicitudesOrigenInput>
  }

  export type SucursalUpdateOneRequiredWithoutSolicitudesDestinoNestedInput = {
    create?: XOR<SucursalCreateWithoutSolicitudesDestinoInput, SucursalUncheckedCreateWithoutSolicitudesDestinoInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutSolicitudesDestinoInput
    upsert?: SucursalUpsertWithoutSolicitudesDestinoInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutSolicitudesDestinoInput, SucursalUpdateWithoutSolicitudesDestinoInput>, SucursalUncheckedUpdateWithoutSolicitudesDestinoInput>
  }

  export type UsuarioUpdateOneWithoutSolicitudesEnviadasNestedInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesEnviadasInput, UsuarioUncheckedCreateWithoutSolicitudesEnviadasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesEnviadasInput
    upsert?: UsuarioUpsertWithoutSolicitudesEnviadasInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutSolicitudesEnviadasInput, UsuarioUpdateWithoutSolicitudesEnviadasInput>, UsuarioUncheckedUpdateWithoutSolicitudesEnviadasInput>
  }

  export type UsuarioUpdateOneWithoutSolicitudesAprobadasTransferenciaNestedInput = {
    create?: XOR<UsuarioCreateWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasTransferenciaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSolicitudesAprobadasTransferenciaInput
    upsert?: UsuarioUpsertWithoutSolicitudesAprobadasTransferenciaInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUpdateWithoutSolicitudesAprobadasTransferenciaInput>, UsuarioUncheckedUpdateWithoutSolicitudesAprobadasTransferenciaInput>
  }

  export type VentaCreateNestedOneWithoutProductosInput = {
    create?: XOR<VentaCreateWithoutProductosInput, VentaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: VentaCreateOrConnectWithoutProductosInput
    connect?: VentaWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutVentasInput = {
    create?: XOR<ProductoCreateWithoutVentasInput, ProductoUncheckedCreateWithoutVentasInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutVentasInput
    connect?: ProductoWhereUniqueInput
  }

  export type VentaUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<VentaCreateWithoutProductosInput, VentaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: VentaCreateOrConnectWithoutProductosInput
    upsert?: VentaUpsertWithoutProductosInput
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutProductosInput, VentaUpdateWithoutProductosInput>, VentaUncheckedUpdateWithoutProductosInput>
  }

  export type ProductoUpdateOneWithoutVentasNestedInput = {
    create?: XOR<ProductoCreateWithoutVentasInput, ProductoUncheckedCreateWithoutVentasInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutVentasInput
    upsert?: ProductoUpsertWithoutVentasInput
    disconnect?: ProductoWhereInput | boolean
    delete?: ProductoWhereInput | boolean
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutVentasInput, ProductoUpdateWithoutVentasInput>, ProductoUncheckedUpdateWithoutVentasInput>
  }

  export type EntregaStockCreateNestedManyWithoutProveedorInput = {
    create?: XOR<EntregaStockCreateWithoutProveedorInput, EntregaStockUncheckedCreateWithoutProveedorInput> | EntregaStockCreateWithoutProveedorInput[] | EntregaStockUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutProveedorInput | EntregaStockCreateOrConnectWithoutProveedorInput[]
    createMany?: EntregaStockCreateManyProveedorInputEnvelope
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
  }

  export type GarantiaCreateNestedManyWithoutProveedorInput = {
    create?: XOR<GarantiaCreateWithoutProveedorInput, GarantiaUncheckedCreateWithoutProveedorInput> | GarantiaCreateWithoutProveedorInput[] | GarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProveedorInput | GarantiaCreateOrConnectWithoutProveedorInput[]
    createMany?: GarantiaCreateManyProveedorInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type RegistroGarantiaCreateNestedManyWithoutProveedorInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProveedorInput, RegistroGarantiaUncheckedCreateWithoutProveedorInput> | RegistroGarantiaCreateWithoutProveedorInput[] | RegistroGarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProveedorInput | RegistroGarantiaCreateOrConnectWithoutProveedorInput[]
    createMany?: RegistroGarantiaCreateManyProveedorInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type EntregaStockUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<EntregaStockCreateWithoutProveedorInput, EntregaStockUncheckedCreateWithoutProveedorInput> | EntregaStockCreateWithoutProveedorInput[] | EntregaStockUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutProveedorInput | EntregaStockCreateOrConnectWithoutProveedorInput[]
    createMany?: EntregaStockCreateManyProveedorInputEnvelope
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
  }

  export type GarantiaUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<GarantiaCreateWithoutProveedorInput, GarantiaUncheckedCreateWithoutProveedorInput> | GarantiaCreateWithoutProveedorInput[] | GarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProveedorInput | GarantiaCreateOrConnectWithoutProveedorInput[]
    createMany?: GarantiaCreateManyProveedorInputEnvelope
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
  }

  export type RegistroGarantiaUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProveedorInput, RegistroGarantiaUncheckedCreateWithoutProveedorInput> | RegistroGarantiaCreateWithoutProveedorInput[] | RegistroGarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProveedorInput | RegistroGarantiaCreateOrConnectWithoutProveedorInput[]
    createMany?: RegistroGarantiaCreateManyProveedorInputEnvelope
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
  }

  export type EntregaStockUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<EntregaStockCreateWithoutProveedorInput, EntregaStockUncheckedCreateWithoutProveedorInput> | EntregaStockCreateWithoutProveedorInput[] | EntregaStockUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutProveedorInput | EntregaStockCreateOrConnectWithoutProveedorInput[]
    upsert?: EntregaStockUpsertWithWhereUniqueWithoutProveedorInput | EntregaStockUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: EntregaStockCreateManyProveedorInputEnvelope
    set?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    disconnect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    delete?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    update?: EntregaStockUpdateWithWhereUniqueWithoutProveedorInput | EntregaStockUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: EntregaStockUpdateManyWithWhereWithoutProveedorInput | EntregaStockUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
  }

  export type GarantiaUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<GarantiaCreateWithoutProveedorInput, GarantiaUncheckedCreateWithoutProveedorInput> | GarantiaCreateWithoutProveedorInput[] | GarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProveedorInput | GarantiaCreateOrConnectWithoutProveedorInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutProveedorInput | GarantiaUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: GarantiaCreateManyProveedorInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutProveedorInput | GarantiaUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutProveedorInput | GarantiaUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type RegistroGarantiaUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProveedorInput, RegistroGarantiaUncheckedCreateWithoutProveedorInput> | RegistroGarantiaCreateWithoutProveedorInput[] | RegistroGarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProveedorInput | RegistroGarantiaCreateOrConnectWithoutProveedorInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutProveedorInput | RegistroGarantiaUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: RegistroGarantiaCreateManyProveedorInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutProveedorInput | RegistroGarantiaUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutProveedorInput | RegistroGarantiaUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type EntregaStockUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<EntregaStockCreateWithoutProveedorInput, EntregaStockUncheckedCreateWithoutProveedorInput> | EntregaStockCreateWithoutProveedorInput[] | EntregaStockUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: EntregaStockCreateOrConnectWithoutProveedorInput | EntregaStockCreateOrConnectWithoutProveedorInput[]
    upsert?: EntregaStockUpsertWithWhereUniqueWithoutProveedorInput | EntregaStockUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: EntregaStockCreateManyProveedorInputEnvelope
    set?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    disconnect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    delete?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    connect?: EntregaStockWhereUniqueInput | EntregaStockWhereUniqueInput[]
    update?: EntregaStockUpdateWithWhereUniqueWithoutProveedorInput | EntregaStockUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: EntregaStockUpdateManyWithWhereWithoutProveedorInput | EntregaStockUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
  }

  export type GarantiaUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<GarantiaCreateWithoutProveedorInput, GarantiaUncheckedCreateWithoutProveedorInput> | GarantiaCreateWithoutProveedorInput[] | GarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GarantiaCreateOrConnectWithoutProveedorInput | GarantiaCreateOrConnectWithoutProveedorInput[]
    upsert?: GarantiaUpsertWithWhereUniqueWithoutProveedorInput | GarantiaUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: GarantiaCreateManyProveedorInputEnvelope
    set?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    disconnect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    delete?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    connect?: GarantiaWhereUniqueInput | GarantiaWhereUniqueInput[]
    update?: GarantiaUpdateWithWhereUniqueWithoutProveedorInput | GarantiaUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: GarantiaUpdateManyWithWhereWithoutProveedorInput | GarantiaUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<RegistroGarantiaCreateWithoutProveedorInput, RegistroGarantiaUncheckedCreateWithoutProveedorInput> | RegistroGarantiaCreateWithoutProveedorInput[] | RegistroGarantiaUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: RegistroGarantiaCreateOrConnectWithoutProveedorInput | RegistroGarantiaCreateOrConnectWithoutProveedorInput[]
    upsert?: RegistroGarantiaUpsertWithWhereUniqueWithoutProveedorInput | RegistroGarantiaUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: RegistroGarantiaCreateManyProveedorInputEnvelope
    set?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    disconnect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    delete?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    connect?: RegistroGarantiaWhereUniqueInput | RegistroGarantiaWhereUniqueInput[]
    update?: RegistroGarantiaUpdateWithWhereUniqueWithoutProveedorInput | RegistroGarantiaUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: RegistroGarantiaUpdateManyWithWhereWithoutProveedorInput | RegistroGarantiaUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
  }

  export type ProductoCreateNestedManyWithoutCategoriasInput = {
    create?: XOR<ProductoCreateWithoutCategoriasInput, ProductoUncheckedCreateWithoutCategoriasInput> | ProductoCreateWithoutCategoriasInput[] | ProductoUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriasInput | ProductoCreateOrConnectWithoutCategoriasInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutCategoriasInput = {
    create?: XOR<ProductoCreateWithoutCategoriasInput, ProductoUncheckedCreateWithoutCategoriasInput> | ProductoCreateWithoutCategoriasInput[] | ProductoUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriasInput | ProductoCreateOrConnectWithoutCategoriasInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUpdateManyWithoutCategoriasNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriasInput, ProductoUncheckedCreateWithoutCategoriasInput> | ProductoCreateWithoutCategoriasInput[] | ProductoUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriasInput | ProductoCreateOrConnectWithoutCategoriasInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriasInput | ProductoUpsertWithWhereUniqueWithoutCategoriasInput[]
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriasInput | ProductoUpdateWithWhereUniqueWithoutCategoriasInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriasInput | ProductoUpdateManyWithWhereWithoutCategoriasInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriasNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriasInput, ProductoUncheckedCreateWithoutCategoriasInput> | ProductoCreateWithoutCategoriasInput[] | ProductoUncheckedCreateWithoutCategoriasInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriasInput | ProductoCreateOrConnectWithoutCategoriasInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriasInput | ProductoUpsertWithWhereUniqueWithoutCategoriasInput[]
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriasInput | ProductoUpdateWithWhereUniqueWithoutCategoriasInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriasInput | ProductoUpdateManyWithWhereWithoutCategoriasInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type MunicipioCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<MunicipioCreateWithoutDepartamentoInput, MunicipioUncheckedCreateWithoutDepartamentoInput> | MunicipioCreateWithoutDepartamentoInput[] | MunicipioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutDepartamentoInput | MunicipioCreateOrConnectWithoutDepartamentoInput[]
    createMany?: MunicipioCreateManyDepartamentoInputEnvelope
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
  }

  export type ClienteCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<ClienteCreateWithoutDepartamentoInput, ClienteUncheckedCreateWithoutDepartamentoInput> | ClienteCreateWithoutDepartamentoInput[] | ClienteUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutDepartamentoInput | ClienteCreateOrConnectWithoutDepartamentoInput[]
    createMany?: ClienteCreateManyDepartamentoInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type MunicipioUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<MunicipioCreateWithoutDepartamentoInput, MunicipioUncheckedCreateWithoutDepartamentoInput> | MunicipioCreateWithoutDepartamentoInput[] | MunicipioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutDepartamentoInput | MunicipioCreateOrConnectWithoutDepartamentoInput[]
    createMany?: MunicipioCreateManyDepartamentoInputEnvelope
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutDepartamentoInput = {
    create?: XOR<ClienteCreateWithoutDepartamentoInput, ClienteUncheckedCreateWithoutDepartamentoInput> | ClienteCreateWithoutDepartamentoInput[] | ClienteUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutDepartamentoInput | ClienteCreateOrConnectWithoutDepartamentoInput[]
    createMany?: ClienteCreateManyDepartamentoInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type MunicipioUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<MunicipioCreateWithoutDepartamentoInput, MunicipioUncheckedCreateWithoutDepartamentoInput> | MunicipioCreateWithoutDepartamentoInput[] | MunicipioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutDepartamentoInput | MunicipioCreateOrConnectWithoutDepartamentoInput[]
    upsert?: MunicipioUpsertWithWhereUniqueWithoutDepartamentoInput | MunicipioUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: MunicipioCreateManyDepartamentoInputEnvelope
    set?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    disconnect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    delete?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    update?: MunicipioUpdateWithWhereUniqueWithoutDepartamentoInput | MunicipioUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: MunicipioUpdateManyWithWhereWithoutDepartamentoInput | MunicipioUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
  }

  export type ClienteUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<ClienteCreateWithoutDepartamentoInput, ClienteUncheckedCreateWithoutDepartamentoInput> | ClienteCreateWithoutDepartamentoInput[] | ClienteUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutDepartamentoInput | ClienteCreateOrConnectWithoutDepartamentoInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutDepartamentoInput | ClienteUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: ClienteCreateManyDepartamentoInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutDepartamentoInput | ClienteUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutDepartamentoInput | ClienteUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type MunicipioUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<MunicipioCreateWithoutDepartamentoInput, MunicipioUncheckedCreateWithoutDepartamentoInput> | MunicipioCreateWithoutDepartamentoInput[] | MunicipioUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: MunicipioCreateOrConnectWithoutDepartamentoInput | MunicipioCreateOrConnectWithoutDepartamentoInput[]
    upsert?: MunicipioUpsertWithWhereUniqueWithoutDepartamentoInput | MunicipioUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: MunicipioCreateManyDepartamentoInputEnvelope
    set?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    disconnect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    delete?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    connect?: MunicipioWhereUniqueInput | MunicipioWhereUniqueInput[]
    update?: MunicipioUpdateWithWhereUniqueWithoutDepartamentoInput | MunicipioUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: MunicipioUpdateManyWithWhereWithoutDepartamentoInput | MunicipioUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutDepartamentoNestedInput = {
    create?: XOR<ClienteCreateWithoutDepartamentoInput, ClienteUncheckedCreateWithoutDepartamentoInput> | ClienteCreateWithoutDepartamentoInput[] | ClienteUncheckedCreateWithoutDepartamentoInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutDepartamentoInput | ClienteCreateOrConnectWithoutDepartamentoInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutDepartamentoInput | ClienteUpsertWithWhereUniqueWithoutDepartamentoInput[]
    createMany?: ClienteCreateManyDepartamentoInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutDepartamentoInput | ClienteUpdateWithWhereUniqueWithoutDepartamentoInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutDepartamentoInput | ClienteUpdateManyWithWhereWithoutDepartamentoInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type DepartamentoCreateNestedOneWithoutMunicipiosInput = {
    create?: XOR<DepartamentoCreateWithoutMunicipiosInput, DepartamentoUncheckedCreateWithoutMunicipiosInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutMunicipiosInput
    connect?: DepartamentoWhereUniqueInput
  }

  export type ClienteCreateNestedManyWithoutMunicipioInput = {
    create?: XOR<ClienteCreateWithoutMunicipioInput, ClienteUncheckedCreateWithoutMunicipioInput> | ClienteCreateWithoutMunicipioInput[] | ClienteUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMunicipioInput | ClienteCreateOrConnectWithoutMunicipioInput[]
    createMany?: ClienteCreateManyMunicipioInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutMunicipioInput = {
    create?: XOR<ClienteCreateWithoutMunicipioInput, ClienteUncheckedCreateWithoutMunicipioInput> | ClienteCreateWithoutMunicipioInput[] | ClienteUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMunicipioInput | ClienteCreateOrConnectWithoutMunicipioInput[]
    createMany?: ClienteCreateManyMunicipioInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type DepartamentoUpdateOneRequiredWithoutMunicipiosNestedInput = {
    create?: XOR<DepartamentoCreateWithoutMunicipiosInput, DepartamentoUncheckedCreateWithoutMunicipiosInput>
    connectOrCreate?: DepartamentoCreateOrConnectWithoutMunicipiosInput
    upsert?: DepartamentoUpsertWithoutMunicipiosInput
    connect?: DepartamentoWhereUniqueInput
    update?: XOR<XOR<DepartamentoUpdateToOneWithWhereWithoutMunicipiosInput, DepartamentoUpdateWithoutMunicipiosInput>, DepartamentoUncheckedUpdateWithoutMunicipiosInput>
  }

  export type ClienteUpdateManyWithoutMunicipioNestedInput = {
    create?: XOR<ClienteCreateWithoutMunicipioInput, ClienteUncheckedCreateWithoutMunicipioInput> | ClienteCreateWithoutMunicipioInput[] | ClienteUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMunicipioInput | ClienteCreateOrConnectWithoutMunicipioInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutMunicipioInput | ClienteUpsertWithWhereUniqueWithoutMunicipioInput[]
    createMany?: ClienteCreateManyMunicipioInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutMunicipioInput | ClienteUpdateWithWhereUniqueWithoutMunicipioInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutMunicipioInput | ClienteUpdateManyWithWhereWithoutMunicipioInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutMunicipioNestedInput = {
    create?: XOR<ClienteCreateWithoutMunicipioInput, ClienteUncheckedCreateWithoutMunicipioInput> | ClienteCreateWithoutMunicipioInput[] | ClienteUncheckedCreateWithoutMunicipioInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutMunicipioInput | ClienteCreateOrConnectWithoutMunicipioInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutMunicipioInput | ClienteUpsertWithWhereUniqueWithoutMunicipioInput[]
    createMany?: ClienteCreateManyMunicipioInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutMunicipioInput | ClienteUpdateWithWhereUniqueWithoutMunicipioInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutMunicipioInput | ClienteUpdateManyWithWhereWithoutMunicipioInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumEstadoReparacionFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReparacion | EnumEstadoReparacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReparacionFilter<$PrismaModel> | $Enums.EstadoReparacion
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoReparacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoReparacion | EnumEstadoReparacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoReparacion[] | ListEnumEstadoReparacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoReparacionWithAggregatesFilter<$PrismaModel> | $Enums.EstadoReparacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoReparacionFilter<$PrismaModel>
    _max?: NestedEnumEstadoReparacionFilter<$PrismaModel>
  }

  export type NestedEnumEstadoCuotaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCuota | EnumEstadoCuotaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCuotaFilter<$PrismaModel> | $Enums.EstadoCuota
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumEstadoCuotaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCuota | EnumEstadoCuotaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoCuota[] | ListEnumEstadoCuotaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoCuotaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCuota
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoCuotaFilter<$PrismaModel>
    _max?: NestedEnumEstadoCuotaFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumEstadoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPago | EnumEstadoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPagoFilter<$PrismaModel> | $Enums.EstadoPago
  }

  export type NestedEnumEstadoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPago | EnumEstadoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPago[] | ListEnumEstadoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPagoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPagoFilter<$PrismaModel>
    _max?: NestedEnumEstadoPagoFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoCajaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCaja | EnumEstadoCajaFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoCajaNullableFilter<$PrismaModel> | $Enums.EstadoCaja | null
  }

  export type NestedEnumEstadoCajaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoCaja | EnumEstadoCajaFieldRefInput<$PrismaModel> | null
    in?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.EstadoCaja[] | ListEnumEstadoCajaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumEstadoCajaNullableWithAggregatesFilter<$PrismaModel> | $Enums.EstadoCaja | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumEstadoCajaNullableFilter<$PrismaModel>
    _max?: NestedEnumEstadoCajaNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumEstadoTicketFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTicket | EnumEstadoTicketFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTicketFilter<$PrismaModel> | $Enums.EstadoTicket
  }

  export type NestedEnumEstadoTicketWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTicket | EnumEstadoTicketFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTicket[] | ListEnumEstadoTicketFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTicketWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTicket
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTicketFilter<$PrismaModel>
    _max?: NestedEnumEstadoTicketFilter<$PrismaModel>
  }

  export type NestedEnumEstadoVencimientoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoVencimiento | EnumEstadoVencimientoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoVencimientoFilter<$PrismaModel> | $Enums.EstadoVencimiento
  }

  export type NestedEnumEstadoVencimientoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoVencimiento | EnumEstadoVencimientoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoVencimiento[] | ListEnumEstadoVencimientoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoVencimientoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoVencimiento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoVencimientoFilter<$PrismaModel>
    _max?: NestedEnumEstadoVencimientoFilter<$PrismaModel>
  }

  export type NestedEnumTipoNotificacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacion | EnumTipoNotificacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacionFilter<$PrismaModel> | $Enums.TipoNotificacion
  }

  export type NestedEnumTipoNotificacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoNotificacion | EnumTipoNotificacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoNotificacion[] | ListEnumTipoNotificacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoNotificacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoNotificacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoNotificacionFilter<$PrismaModel>
    _max?: NestedEnumTipoNotificacionFilter<$PrismaModel>
  }

  export type NestedEnumEstadoSolicitudFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitud | EnumEstadoSolicitudFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudFilter<$PrismaModel> | $Enums.EstadoSolicitud
  }

  export type NestedEnumEstadoSolicitudWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitud | EnumEstadoSolicitudFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitud[] | ListEnumEstadoSolicitudFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudWithAggregatesFilter<$PrismaModel> | $Enums.EstadoSolicitud
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoSolicitudFilter<$PrismaModel>
    _max?: NestedEnumEstadoSolicitudFilter<$PrismaModel>
  }

  export type NestedEnumEstadoPrecioFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPrecio | EnumEstadoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPrecioFilter<$PrismaModel> | $Enums.EstadoPrecio
  }

  export type NestedEnumTipoPrecioFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPrecio | EnumTipoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPrecioFilter<$PrismaModel> | $Enums.TipoPrecio
  }

  export type NestedEnumEstadoPrecioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPrecio | EnumEstadoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPrecio[] | ListEnumEstadoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPrecioWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPrecio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPrecioFilter<$PrismaModel>
    _max?: NestedEnumEstadoPrecioFilter<$PrismaModel>
  }

  export type NestedEnumTipoPrecioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPrecio | EnumTipoPrecioFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPrecio[] | ListEnumTipoPrecioFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPrecioWithAggregatesFilter<$PrismaModel> | $Enums.TipoPrecio
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPrecioFilter<$PrismaModel>
    _max?: NestedEnumTipoPrecioFilter<$PrismaModel>
  }

  export type NestedEnumTipoAjusteFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAjuste | EnumTipoAjusteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAjusteFilter<$PrismaModel> | $Enums.TipoAjuste
  }

  export type NestedEnumTipoAjusteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAjuste | EnumTipoAjusteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAjuste[] | ListEnumTipoAjusteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAjusteWithAggregatesFilter<$PrismaModel> | $Enums.TipoAjuste
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoAjusteFilter<$PrismaModel>
    _max?: NestedEnumTipoAjusteFilter<$PrismaModel>
  }

  export type NestedEnumTipoSucursalFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoSucursal | EnumTipoSucursalFieldRefInput<$PrismaModel>
    in?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoSucursalFilter<$PrismaModel> | $Enums.TipoSucursal
  }

  export type NestedEnumTipoSucursalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoSucursal | EnumTipoSucursalFieldRefInput<$PrismaModel>
    in?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoSucursal[] | ListEnumTipoSucursalFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoSucursalWithAggregatesFilter<$PrismaModel> | $Enums.TipoSucursal
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoSucursalFilter<$PrismaModel>
    _max?: NestedEnumTipoSucursalFilter<$PrismaModel>
  }

  export type NestedEnumRolFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolFilter<$PrismaModel> | $Enums.Rol
  }

  export type NestedEnumRolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolWithAggregatesFilter<$PrismaModel> | $Enums.Rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolFilter<$PrismaModel>
    _max?: NestedEnumRolFilter<$PrismaModel>
  }

  export type NestedEnumEstadoMetaTiendaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaTienda | EnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaTiendaFilter<$PrismaModel> | $Enums.EstadoMetaTienda
  }

  export type NestedEnumEstadoMetaTiendaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaTienda | EnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaTienda[] | ListEnumEstadoMetaTiendaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaTiendaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoMetaTienda
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoMetaTiendaFilter<$PrismaModel>
    _max?: NestedEnumEstadoMetaTiendaFilter<$PrismaModel>
  }

  export type NestedEnumEstadoMetaCobroFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaCobro | EnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaCobroFilter<$PrismaModel> | $Enums.EstadoMetaCobro
  }

  export type NestedEnumEstadoMetaCobroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoMetaCobro | EnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoMetaCobro[] | ListEnumEstadoMetaCobroFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoMetaCobroWithAggregatesFilter<$PrismaModel> | $Enums.EstadoMetaCobro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoMetaCobroFilter<$PrismaModel>
    _max?: NestedEnumEstadoMetaCobroFilter<$PrismaModel>
  }

  export type NestedEnumEstadoGarantiaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoGarantia | EnumEstadoGarantiaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoGarantiaFilter<$PrismaModel> | $Enums.EstadoGarantia
  }

  export type NestedEnumEstadoGarantiaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoGarantia | EnumEstadoGarantiaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoGarantia[] | ListEnumEstadoGarantiaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoGarantiaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoGarantia
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoGarantiaFilter<$PrismaModel>
    _max?: NestedEnumEstadoGarantiaFilter<$PrismaModel>
  }

  export type NestedEnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }

  export type NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitudTransferencia | EnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel> | $Enums.EstadoSolicitudTransferencia
  }

  export type NestedEnumEstadoSolicitudTransferenciaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoSolicitudTransferencia | EnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoSolicitudTransferencia[] | ListEnumEstadoSolicitudTransferenciaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoSolicitudTransferenciaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoSolicitudTransferencia
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel>
    _max?: NestedEnumEstadoSolicitudTransferenciaFilter<$PrismaModel>
  }

  export type UsuarioCreateWithoutReparacionInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutReparacionInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutReparacionInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutReparacionInput, UsuarioUncheckedCreateWithoutReparacionInput>
  }

  export type SucursalCreateWithoutReparacionInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutReparacionInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutReparacionInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutReparacionInput, SucursalUncheckedCreateWithoutReparacionInput>
  }

  export type ClienteCreateWithoutReparacionInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutReparacionInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutReparacionInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutReparacionInput, ClienteUncheckedCreateWithoutReparacionInput>
  }

  export type ProductoCreateWithoutReparacionInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutReparacionInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutReparacionInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutReparacionInput, ProductoUncheckedCreateWithoutReparacionInput>
  }

  export type RegistroReparacionCreateWithoutReparacionInput = {
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
    usuario: UsuarioCreateNestedOneWithoutRegistroReparacionInput
  }

  export type RegistroReparacionUncheckedCreateWithoutReparacionInput = {
    id?: number
    usuarioId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
  }

  export type RegistroReparacionCreateOrConnectWithoutReparacionInput = {
    where: RegistroReparacionWhereUniqueInput
    create: XOR<RegistroReparacionCreateWithoutReparacionInput, RegistroReparacionUncheckedCreateWithoutReparacionInput>
  }

  export type RegistroReparacionCreateManyReparacionInputEnvelope = {
    data: RegistroReparacionCreateManyReparacionInput | RegistroReparacionCreateManyReparacionInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutReparacionInput = {
    update: XOR<UsuarioUpdateWithoutReparacionInput, UsuarioUncheckedUpdateWithoutReparacionInput>
    create: XOR<UsuarioCreateWithoutReparacionInput, UsuarioUncheckedCreateWithoutReparacionInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutReparacionInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutReparacionInput, UsuarioUncheckedUpdateWithoutReparacionInput>
  }

  export type UsuarioUpdateWithoutReparacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutReparacionInput = {
    update: XOR<SucursalUpdateWithoutReparacionInput, SucursalUncheckedUpdateWithoutReparacionInput>
    create: XOR<SucursalCreateWithoutReparacionInput, SucursalUncheckedCreateWithoutReparacionInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutReparacionInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutReparacionInput, SucursalUncheckedUpdateWithoutReparacionInput>
  }

  export type SucursalUpdateWithoutReparacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type ClienteUpsertWithoutReparacionInput = {
    update: XOR<ClienteUpdateWithoutReparacionInput, ClienteUncheckedUpdateWithoutReparacionInput>
    create: XOR<ClienteCreateWithoutReparacionInput, ClienteUncheckedCreateWithoutReparacionInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutReparacionInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutReparacionInput, ClienteUncheckedUpdateWithoutReparacionInput>
  }

  export type ClienteUpdateWithoutReparacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ProductoUpsertWithoutReparacionInput = {
    update: XOR<ProductoUpdateWithoutReparacionInput, ProductoUncheckedUpdateWithoutReparacionInput>
    create: XOR<ProductoCreateWithoutReparacionInput, ProductoUncheckedCreateWithoutReparacionInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutReparacionInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutReparacionInput, ProductoUncheckedUpdateWithoutReparacionInput>
  }

  export type ProductoUpdateWithoutReparacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type RegistroReparacionUpsertWithWhereUniqueWithoutReparacionInput = {
    where: RegistroReparacionWhereUniqueInput
    update: XOR<RegistroReparacionUpdateWithoutReparacionInput, RegistroReparacionUncheckedUpdateWithoutReparacionInput>
    create: XOR<RegistroReparacionCreateWithoutReparacionInput, RegistroReparacionUncheckedCreateWithoutReparacionInput>
  }

  export type RegistroReparacionUpdateWithWhereUniqueWithoutReparacionInput = {
    where: RegistroReparacionWhereUniqueInput
    data: XOR<RegistroReparacionUpdateWithoutReparacionInput, RegistroReparacionUncheckedUpdateWithoutReparacionInput>
  }

  export type RegistroReparacionUpdateManyWithWhereWithoutReparacionInput = {
    where: RegistroReparacionScalarWhereInput
    data: XOR<RegistroReparacionUpdateManyMutationInput, RegistroReparacionUncheckedUpdateManyWithoutReparacionInput>
  }

  export type RegistroReparacionScalarWhereInput = {
    AND?: RegistroReparacionScalarWhereInput | RegistroReparacionScalarWhereInput[]
    OR?: RegistroReparacionScalarWhereInput[]
    NOT?: RegistroReparacionScalarWhereInput | RegistroReparacionScalarWhereInput[]
    id?: IntFilter<"RegistroReparacion"> | number
    reparacionId?: IntFilter<"RegistroReparacion"> | number
    usuarioId?: IntFilter<"RegistroReparacion"> | number
    estado?: EnumEstadoReparacionFilter<"RegistroReparacion"> | $Enums.EstadoReparacion
    accionesRealizadas?: StringFilter<"RegistroReparacion"> | string
    fechaRegistro?: DateTimeFilter<"RegistroReparacion"> | Date | string
    comentarioFinal?: StringNullableFilter<"RegistroReparacion"> | string | null
    montoPagado?: IntNullableFilter<"RegistroReparacion"> | number | null
  }

  export type ReparacionCreateWithoutRegistrosInput = {
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutReparacionInput
    sucursal: SucursalCreateNestedOneWithoutReparacionInput
    cliente: ClienteCreateNestedOneWithoutReparacionInput
    producto?: ProductoCreateNestedOneWithoutReparacionInput
  }

  export type ReparacionUncheckedCreateWithoutRegistrosInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReparacionCreateOrConnectWithoutRegistrosInput = {
    where: ReparacionWhereUniqueInput
    create: XOR<ReparacionCreateWithoutRegistrosInput, ReparacionUncheckedCreateWithoutRegistrosInput>
  }

  export type UsuarioCreateWithoutRegistroReparacionInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutRegistroReparacionInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutRegistroReparacionInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRegistroReparacionInput, UsuarioUncheckedCreateWithoutRegistroReparacionInput>
  }

  export type ReparacionUpsertWithoutRegistrosInput = {
    update: XOR<ReparacionUpdateWithoutRegistrosInput, ReparacionUncheckedUpdateWithoutRegistrosInput>
    create: XOR<ReparacionCreateWithoutRegistrosInput, ReparacionUncheckedCreateWithoutRegistrosInput>
    where?: ReparacionWhereInput
  }

  export type ReparacionUpdateToOneWithWhereWithoutRegistrosInput = {
    where?: ReparacionWhereInput
    data: XOR<ReparacionUpdateWithoutRegistrosInput, ReparacionUncheckedUpdateWithoutRegistrosInput>
  }

  export type ReparacionUpdateWithoutRegistrosInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutReparacionNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutReparacionNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutReparacionNestedInput
    producto?: ProductoUpdateOneWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateWithoutRegistrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUpsertWithoutRegistroReparacionInput = {
    update: XOR<UsuarioUpdateWithoutRegistroReparacionInput, UsuarioUncheckedUpdateWithoutRegistroReparacionInput>
    create: XOR<UsuarioCreateWithoutRegistroReparacionInput, UsuarioUncheckedCreateWithoutRegistroReparacionInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutRegistroReparacionInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutRegistroReparacionInput, UsuarioUncheckedUpdateWithoutRegistroReparacionInput>
  }

  export type UsuarioUpdateWithoutRegistroReparacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRegistroReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ClienteCreateWithoutVentaCuotaInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutVentaCuotaInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutVentaCuotaInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutVentaCuotaInput, ClienteUncheckedCreateWithoutVentaCuotaInput>
  }

  export type UsuarioCreateWithoutVentaCuotaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutVentaCuotaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutVentaCuotaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutVentaCuotaInput, UsuarioUncheckedCreateWithoutVentaCuotaInput>
  }

  export type SucursalCreateWithoutVentaCuotaInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutVentaCuotaInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutVentaCuotaInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutVentaCuotaInput, SucursalUncheckedCreateWithoutVentaCuotaInput>
  }

  export type CuotaCreateWithoutVentaCuotaInput = {
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
    usuario?: UsuarioCreateNestedOneWithoutCuotaInput
  }

  export type CuotaUncheckedCreateWithoutVentaCuotaInput = {
    id?: number
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    usuarioId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
  }

  export type CuotaCreateOrConnectWithoutVentaCuotaInput = {
    where: CuotaWhereUniqueInput
    create: XOR<CuotaCreateWithoutVentaCuotaInput, CuotaUncheckedCreateWithoutVentaCuotaInput>
  }

  export type CuotaCreateManyVentaCuotaInputEnvelope = {
    data: CuotaCreateManyVentaCuotaInput | CuotaCreateManyVentaCuotaInput[]
    skipDuplicates?: boolean
  }

  export type VentaCreateWithoutVentaCuotaInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    cliente?: ClienteCreateNestedOneWithoutComprasInput
    productos?: VentaProductoCreateNestedManyWithoutVentaInput
    metodoPago?: PagoCreateNestedOneWithoutVentaInput
    sucursal: SucursalCreateNestedOneWithoutVentaInput
    registroCaja?: RegistroCajaCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateWithoutVentaCuotaInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
    productos?: VentaProductoUncheckedCreateNestedManyWithoutVentaInput
    metodoPago?: PagoUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutVentaCuotaInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutVentaCuotaInput, VentaUncheckedCreateWithoutVentaCuotaInput>
  }

  export type ClienteUpsertWithoutVentaCuotaInput = {
    update: XOR<ClienteUpdateWithoutVentaCuotaInput, ClienteUncheckedUpdateWithoutVentaCuotaInput>
    create: XOR<ClienteCreateWithoutVentaCuotaInput, ClienteUncheckedCreateWithoutVentaCuotaInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutVentaCuotaInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutVentaCuotaInput, ClienteUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type ClienteUpdateWithoutVentaCuotaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutVentaCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type UsuarioUpsertWithoutVentaCuotaInput = {
    update: XOR<UsuarioUpdateWithoutVentaCuotaInput, UsuarioUncheckedUpdateWithoutVentaCuotaInput>
    create: XOR<UsuarioCreateWithoutVentaCuotaInput, UsuarioUncheckedCreateWithoutVentaCuotaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutVentaCuotaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutVentaCuotaInput, UsuarioUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type UsuarioUpdateWithoutVentaCuotaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutVentaCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutVentaCuotaInput = {
    update: XOR<SucursalUpdateWithoutVentaCuotaInput, SucursalUncheckedUpdateWithoutVentaCuotaInput>
    create: XOR<SucursalCreateWithoutVentaCuotaInput, SucursalUncheckedCreateWithoutVentaCuotaInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutVentaCuotaInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutVentaCuotaInput, SucursalUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type SucursalUpdateWithoutVentaCuotaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutVentaCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type CuotaUpsertWithWhereUniqueWithoutVentaCuotaInput = {
    where: CuotaWhereUniqueInput
    update: XOR<CuotaUpdateWithoutVentaCuotaInput, CuotaUncheckedUpdateWithoutVentaCuotaInput>
    create: XOR<CuotaCreateWithoutVentaCuotaInput, CuotaUncheckedCreateWithoutVentaCuotaInput>
  }

  export type CuotaUpdateWithWhereUniqueWithoutVentaCuotaInput = {
    where: CuotaWhereUniqueInput
    data: XOR<CuotaUpdateWithoutVentaCuotaInput, CuotaUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type CuotaUpdateManyWithWhereWithoutVentaCuotaInput = {
    where: CuotaScalarWhereInput
    data: XOR<CuotaUpdateManyMutationInput, CuotaUncheckedUpdateManyWithoutVentaCuotaInput>
  }

  export type CuotaScalarWhereInput = {
    AND?: CuotaScalarWhereInput | CuotaScalarWhereInput[]
    OR?: CuotaScalarWhereInput[]
    NOT?: CuotaScalarWhereInput | CuotaScalarWhereInput[]
    id?: IntFilter<"Cuota"> | number
    ventaCuotaId?: IntFilter<"Cuota"> | number
    monto?: FloatFilter<"Cuota"> | number
    fechaVencimiento?: DateTimeNullableFilter<"Cuota"> | Date | string | null
    fechaPago?: DateTimeNullableFilter<"Cuota"> | Date | string | null
    estado?: EnumEstadoPagoFilter<"Cuota"> | $Enums.EstadoPago
    usuarioId?: IntNullableFilter<"Cuota"> | number | null
    creadoEn?: DateTimeFilter<"Cuota"> | Date | string
    actualizadoEn?: DateTimeFilter<"Cuota"> | Date | string
    comentario?: StringNullableFilter<"Cuota"> | string | null
    montoEsperado?: FloatNullableFilter<"Cuota"> | number | null
  }

  export type VentaUpsertWithoutVentaCuotaInput = {
    update: XOR<VentaUpdateWithoutVentaCuotaInput, VentaUncheckedUpdateWithoutVentaCuotaInput>
    create: XOR<VentaCreateWithoutVentaCuotaInput, VentaUncheckedCreateWithoutVentaCuotaInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutVentaCuotaInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutVentaCuotaInput, VentaUncheckedUpdateWithoutVentaCuotaInput>
  }

  export type VentaUpdateWithoutVentaCuotaInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutComprasNestedInput
    productos?: VentaProductoUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUpdateOneWithoutVentaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaNestedInput
    registroCaja?: RegistroCajaUpdateOneWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateWithoutVentaCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: VentaProductoUncheckedUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type VentaCuotaCreateWithoutCuotasInput = {
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    cliente: ClienteCreateNestedOneWithoutVentaCuotaInput
    usuario: UsuarioCreateNestedOneWithoutVentaCuotaInput
    sucursal: SucursalCreateNestedOneWithoutVentaCuotaInput
    venta?: VentaCreateNestedOneWithoutVentaCuotaInput
  }

  export type VentaCuotaUncheckedCreateWithoutCuotasInput = {
    id?: number
    clienteId: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
  }

  export type VentaCuotaCreateOrConnectWithoutCuotasInput = {
    where: VentaCuotaWhereUniqueInput
    create: XOR<VentaCuotaCreateWithoutCuotasInput, VentaCuotaUncheckedCreateWithoutCuotasInput>
  }

  export type UsuarioCreateWithoutCuotaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCuotaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCuotaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCuotaInput, UsuarioUncheckedCreateWithoutCuotaInput>
  }

  export type VentaCuotaUpsertWithoutCuotasInput = {
    update: XOR<VentaCuotaUpdateWithoutCuotasInput, VentaCuotaUncheckedUpdateWithoutCuotasInput>
    create: XOR<VentaCuotaCreateWithoutCuotasInput, VentaCuotaUncheckedCreateWithoutCuotasInput>
    where?: VentaCuotaWhereInput
  }

  export type VentaCuotaUpdateToOneWithWhereWithoutCuotasInput = {
    where?: VentaCuotaWhereInput
    data: XOR<VentaCuotaUpdateWithoutCuotasInput, VentaCuotaUncheckedUpdateWithoutCuotasInput>
  }

  export type VentaCuotaUpdateWithoutCuotasInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClienteUpdateOneRequiredWithoutVentaCuotaNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutVentaCuotaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaCuotaNestedInput
    venta?: VentaUpdateOneWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateWithoutCuotasInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UsuarioUpsertWithoutCuotaInput = {
    update: XOR<UsuarioUpdateWithoutCuotaInput, UsuarioUncheckedUpdateWithoutCuotaInput>
    create: XOR<UsuarioCreateWithoutCuotaInput, UsuarioUncheckedCreateWithoutCuotaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCuotaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCuotaInput, UsuarioUncheckedUpdateWithoutCuotaInput>
  }

  export type UsuarioUpdateWithoutCuotaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalCreateWithoutPlantillaComprobanteInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutPlantillaComprobanteInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutPlantillaComprobanteInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutPlantillaComprobanteInput, SucursalUncheckedCreateWithoutPlantillaComprobanteInput>
  }

  export type SucursalUpsertWithoutPlantillaComprobanteInput = {
    update: XOR<SucursalUpdateWithoutPlantillaComprobanteInput, SucursalUncheckedUpdateWithoutPlantillaComprobanteInput>
    create: XOR<SucursalCreateWithoutPlantillaComprobanteInput, SucursalUncheckedCreateWithoutPlantillaComprobanteInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutPlantillaComprobanteInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutPlantillaComprobanteInput, SucursalUncheckedUpdateWithoutPlantillaComprobanteInput>
  }

  export type SucursalUpdateWithoutPlantillaComprobanteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutPlantillaComprobanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioCreateWithoutVentaEliminadaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutVentaEliminadaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutVentaEliminadaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutVentaEliminadaInput, UsuarioUncheckedCreateWithoutVentaEliminadaInput>
  }

  export type ClienteCreateWithoutVentaEliminadaInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutVentaEliminadaInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutVentaEliminadaInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutVentaEliminadaInput, ClienteUncheckedCreateWithoutVentaEliminadaInput>
  }

  export type SucursalCreateWithoutVentaEliminadaInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutVentaEliminadaInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutVentaEliminadaInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutVentaEliminadaInput, SucursalUncheckedCreateWithoutVentaEliminadaInput>
  }

  export type VentaEliminadaProductoCreateWithoutVentaEliminadaInput = {
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
    producto?: ProductoCreateNestedOneWithoutVentaEliminadaProductoInput
  }

  export type VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput = {
    id?: number
    productoId?: number | null
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
  }

  export type VentaEliminadaProductoCreateOrConnectWithoutVentaEliminadaInput = {
    where: VentaEliminadaProductoWhereUniqueInput
    create: XOR<VentaEliminadaProductoCreateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput>
  }

  export type VentaEliminadaProductoCreateManyVentaEliminadaInputEnvelope = {
    data: VentaEliminadaProductoCreateManyVentaEliminadaInput | VentaEliminadaProductoCreateManyVentaEliminadaInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutVentaEliminadaInput = {
    update: XOR<UsuarioUpdateWithoutVentaEliminadaInput, UsuarioUncheckedUpdateWithoutVentaEliminadaInput>
    create: XOR<UsuarioCreateWithoutVentaEliminadaInput, UsuarioUncheckedCreateWithoutVentaEliminadaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutVentaEliminadaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutVentaEliminadaInput, UsuarioUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type UsuarioUpdateWithoutVentaEliminadaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutVentaEliminadaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ClienteUpsertWithoutVentaEliminadaInput = {
    update: XOR<ClienteUpdateWithoutVentaEliminadaInput, ClienteUncheckedUpdateWithoutVentaEliminadaInput>
    create: XOR<ClienteCreateWithoutVentaEliminadaInput, ClienteUncheckedCreateWithoutVentaEliminadaInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutVentaEliminadaInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutVentaEliminadaInput, ClienteUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type ClienteUpdateWithoutVentaEliminadaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutVentaEliminadaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type SucursalUpsertWithoutVentaEliminadaInput = {
    update: XOR<SucursalUpdateWithoutVentaEliminadaInput, SucursalUncheckedUpdateWithoutVentaEliminadaInput>
    create: XOR<SucursalCreateWithoutVentaEliminadaInput, SucursalUncheckedCreateWithoutVentaEliminadaInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutVentaEliminadaInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutVentaEliminadaInput, SucursalUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type SucursalUpdateWithoutVentaEliminadaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutVentaEliminadaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type VentaEliminadaProductoUpsertWithWhereUniqueWithoutVentaEliminadaInput = {
    where: VentaEliminadaProductoWhereUniqueInput
    update: XOR<VentaEliminadaProductoUpdateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedUpdateWithoutVentaEliminadaInput>
    create: XOR<VentaEliminadaProductoCreateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedCreateWithoutVentaEliminadaInput>
  }

  export type VentaEliminadaProductoUpdateWithWhereUniqueWithoutVentaEliminadaInput = {
    where: VentaEliminadaProductoWhereUniqueInput
    data: XOR<VentaEliminadaProductoUpdateWithoutVentaEliminadaInput, VentaEliminadaProductoUncheckedUpdateWithoutVentaEliminadaInput>
  }

  export type VentaEliminadaProductoUpdateManyWithWhereWithoutVentaEliminadaInput = {
    where: VentaEliminadaProductoScalarWhereInput
    data: XOR<VentaEliminadaProductoUpdateManyMutationInput, VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaInput>
  }

  export type VentaEliminadaProductoScalarWhereInput = {
    AND?: VentaEliminadaProductoScalarWhereInput | VentaEliminadaProductoScalarWhereInput[]
    OR?: VentaEliminadaProductoScalarWhereInput[]
    NOT?: VentaEliminadaProductoScalarWhereInput | VentaEliminadaProductoScalarWhereInput[]
    id?: IntFilter<"VentaEliminadaProducto"> | number
    ventaEliminadaId?: IntFilter<"VentaEliminadaProducto"> | number
    productoId?: IntNullableFilter<"VentaEliminadaProducto"> | number | null
    cantidad?: IntFilter<"VentaEliminadaProducto"> | number
    precioVenta?: FloatFilter<"VentaEliminadaProducto"> | number
    creadoEn?: DateTimeFilter<"VentaEliminadaProducto"> | Date | string
  }

  export type VentaEliminadaCreateWithoutVentaEliminadaProductoInput = {
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    usuario: UsuarioCreateNestedOneWithoutVentaEliminadaInput
    cliente?: ClienteCreateNestedOneWithoutVentaEliminadaInput
    sucursal: SucursalCreateNestedOneWithoutVentaEliminadaInput
  }

  export type VentaEliminadaUncheckedCreateWithoutVentaEliminadaProductoInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
    sucursalId: number
  }

  export type VentaEliminadaCreateOrConnectWithoutVentaEliminadaProductoInput = {
    where: VentaEliminadaWhereUniqueInput
    create: XOR<VentaEliminadaCreateWithoutVentaEliminadaProductoInput, VentaEliminadaUncheckedCreateWithoutVentaEliminadaProductoInput>
  }

  export type ProductoCreateWithoutVentaEliminadaProductoInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutVentaEliminadaProductoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutVentaEliminadaProductoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutVentaEliminadaProductoInput, ProductoUncheckedCreateWithoutVentaEliminadaProductoInput>
  }

  export type VentaEliminadaUpsertWithoutVentaEliminadaProductoInput = {
    update: XOR<VentaEliminadaUpdateWithoutVentaEliminadaProductoInput, VentaEliminadaUncheckedUpdateWithoutVentaEliminadaProductoInput>
    create: XOR<VentaEliminadaCreateWithoutVentaEliminadaProductoInput, VentaEliminadaUncheckedCreateWithoutVentaEliminadaProductoInput>
    where?: VentaEliminadaWhereInput
  }

  export type VentaEliminadaUpdateToOneWithWhereWithoutVentaEliminadaProductoInput = {
    where?: VentaEliminadaWhereInput
    data: XOR<VentaEliminadaUpdateWithoutVentaEliminadaProductoInput, VentaEliminadaUncheckedUpdateWithoutVentaEliminadaProductoInput>
  }

  export type VentaEliminadaUpdateWithoutVentaEliminadaProductoInput = {
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutVentaEliminadaNestedInput
    cliente?: ClienteUpdateOneWithoutVentaEliminadaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateWithoutVentaEliminadaProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoUpsertWithoutVentaEliminadaProductoInput = {
    update: XOR<ProductoUpdateWithoutVentaEliminadaProductoInput, ProductoUncheckedUpdateWithoutVentaEliminadaProductoInput>
    create: XOR<ProductoCreateWithoutVentaEliminadaProductoInput, ProductoUncheckedCreateWithoutVentaEliminadaProductoInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutVentaEliminadaProductoInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutVentaEliminadaProductoInput, ProductoUncheckedUpdateWithoutVentaEliminadaProductoInput>
  }

  export type ProductoUpdateWithoutVentaEliminadaProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutVentaEliminadaProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type SucursalCreateWithoutSucursalSaldoInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutSucursalSaldoInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutSucursalSaldoInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutSucursalSaldoInput, SucursalUncheckedCreateWithoutSucursalSaldoInput>
  }

  export type SucursalUpsertWithoutSucursalSaldoInput = {
    update: XOR<SucursalUpdateWithoutSucursalSaldoInput, SucursalUncheckedUpdateWithoutSucursalSaldoInput>
    create: XOR<SucursalCreateWithoutSucursalSaldoInput, SucursalUncheckedCreateWithoutSucursalSaldoInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutSucursalSaldoInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutSucursalSaldoInput, SucursalUncheckedUpdateWithoutSucursalSaldoInput>
  }

  export type SucursalUpdateWithoutSucursalSaldoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutSucursalSaldoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalCreateWithoutRegistroCajaInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutRegistroCajaInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutRegistroCajaInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutRegistroCajaInput, SucursalUncheckedCreateWithoutRegistroCajaInput>
  }

  export type UsuarioCreateWithoutRegistroCajaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutRegistroCajaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutRegistroCajaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRegistroCajaInput, UsuarioUncheckedCreateWithoutRegistroCajaInput>
  }

  export type DepositoCreateWithoutRegistroCajaInput = {
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursal?: SucursalCreateNestedOneWithoutDepositoInput
    usuario?: UsuarioCreateNestedOneWithoutDepositoInput
  }

  export type DepositoUncheckedCreateWithoutRegistroCajaInput = {
    id?: number
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type DepositoCreateOrConnectWithoutRegistroCajaInput = {
    where: DepositoWhereUniqueInput
    create: XOR<DepositoCreateWithoutRegistroCajaInput, DepositoUncheckedCreateWithoutRegistroCajaInput>
  }

  export type DepositoCreateManyRegistroCajaInputEnvelope = {
    data: DepositoCreateManyRegistroCajaInput | DepositoCreateManyRegistroCajaInput[]
    skipDuplicates?: boolean
  }

  export type EgresoCreateWithoutRegistroCajaInput = {
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursal?: SucursalCreateNestedOneWithoutEgresoInput
    usuario?: UsuarioCreateNestedOneWithoutEgresoInput
  }

  export type EgresoUncheckedCreateWithoutRegistroCajaInput = {
    id?: number
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type EgresoCreateOrConnectWithoutRegistroCajaInput = {
    where: EgresoWhereUniqueInput
    create: XOR<EgresoCreateWithoutRegistroCajaInput, EgresoUncheckedCreateWithoutRegistroCajaInput>
  }

  export type EgresoCreateManyRegistroCajaInputEnvelope = {
    data: EgresoCreateManyRegistroCajaInput | EgresoCreateManyRegistroCajaInput[]
    skipDuplicates?: boolean
  }

  export type VentaCreateWithoutRegistroCajaInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    cliente?: ClienteCreateNestedOneWithoutComprasInput
    productos?: VentaProductoCreateNestedManyWithoutVentaInput
    metodoPago?: PagoCreateNestedOneWithoutVentaInput
    sucursal: SucursalCreateNestedOneWithoutVentaInput
    ventaCuota?: VentaCuotaCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutRegistroCajaInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    productos?: VentaProductoUncheckedCreateNestedManyWithoutVentaInput
    metodoPago?: PagoUncheckedCreateNestedOneWithoutVentaInput
    ventaCuota?: VentaCuotaUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutRegistroCajaInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutRegistroCajaInput, VentaUncheckedCreateWithoutRegistroCajaInput>
  }

  export type VentaCreateManyRegistroCajaInputEnvelope = {
    data: VentaCreateManyRegistroCajaInput | VentaCreateManyRegistroCajaInput[]
    skipDuplicates?: boolean
  }

  export type SucursalUpsertWithoutRegistroCajaInput = {
    update: XOR<SucursalUpdateWithoutRegistroCajaInput, SucursalUncheckedUpdateWithoutRegistroCajaInput>
    create: XOR<SucursalCreateWithoutRegistroCajaInput, SucursalUncheckedCreateWithoutRegistroCajaInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutRegistroCajaInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutRegistroCajaInput, SucursalUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type SucursalUpdateWithoutRegistroCajaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioUpsertWithoutRegistroCajaInput = {
    update: XOR<UsuarioUpdateWithoutRegistroCajaInput, UsuarioUncheckedUpdateWithoutRegistroCajaInput>
    create: XOR<UsuarioCreateWithoutRegistroCajaInput, UsuarioUncheckedCreateWithoutRegistroCajaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutRegistroCajaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutRegistroCajaInput, UsuarioUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type UsuarioUpdateWithoutRegistroCajaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type DepositoUpsertWithWhereUniqueWithoutRegistroCajaInput = {
    where: DepositoWhereUniqueInput
    update: XOR<DepositoUpdateWithoutRegistroCajaInput, DepositoUncheckedUpdateWithoutRegistroCajaInput>
    create: XOR<DepositoCreateWithoutRegistroCajaInput, DepositoUncheckedCreateWithoutRegistroCajaInput>
  }

  export type DepositoUpdateWithWhereUniqueWithoutRegistroCajaInput = {
    where: DepositoWhereUniqueInput
    data: XOR<DepositoUpdateWithoutRegistroCajaInput, DepositoUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type DepositoUpdateManyWithWhereWithoutRegistroCajaInput = {
    where: DepositoScalarWhereInput
    data: XOR<DepositoUpdateManyMutationInput, DepositoUncheckedUpdateManyWithoutRegistroCajaInput>
  }

  export type DepositoScalarWhereInput = {
    AND?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
    OR?: DepositoScalarWhereInput[]
    NOT?: DepositoScalarWhereInput | DepositoScalarWhereInput[]
    id?: IntFilter<"Deposito"> | number
    registroCajaId?: IntNullableFilter<"Deposito"> | number | null
    monto?: FloatFilter<"Deposito"> | number
    numeroBoleta?: StringFilter<"Deposito"> | string
    banco?: StringFilter<"Deposito"> | string
    fechaDeposito?: DateTimeFilter<"Deposito"> | Date | string
    usadoParaCierre?: BoolFilter<"Deposito"> | boolean
    descripcion?: StringNullableFilter<"Deposito"> | string | null
    sucursalId?: IntNullableFilter<"Deposito"> | number | null
    usuarioId?: IntNullableFilter<"Deposito"> | number | null
  }

  export type EgresoUpsertWithWhereUniqueWithoutRegistroCajaInput = {
    where: EgresoWhereUniqueInput
    update: XOR<EgresoUpdateWithoutRegistroCajaInput, EgresoUncheckedUpdateWithoutRegistroCajaInput>
    create: XOR<EgresoCreateWithoutRegistroCajaInput, EgresoUncheckedCreateWithoutRegistroCajaInput>
  }

  export type EgresoUpdateWithWhereUniqueWithoutRegistroCajaInput = {
    where: EgresoWhereUniqueInput
    data: XOR<EgresoUpdateWithoutRegistroCajaInput, EgresoUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type EgresoUpdateManyWithWhereWithoutRegistroCajaInput = {
    where: EgresoScalarWhereInput
    data: XOR<EgresoUpdateManyMutationInput, EgresoUncheckedUpdateManyWithoutRegistroCajaInput>
  }

  export type EgresoScalarWhereInput = {
    AND?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
    OR?: EgresoScalarWhereInput[]
    NOT?: EgresoScalarWhereInput | EgresoScalarWhereInput[]
    id?: IntFilter<"Egreso"> | number
    registroCajaId?: IntNullableFilter<"Egreso"> | number | null
    descripcion?: StringNullableFilter<"Egreso"> | string | null
    monto?: FloatFilter<"Egreso"> | number
    fechaEgreso?: DateTimeFilter<"Egreso"> | Date | string
    sucursalId?: IntNullableFilter<"Egreso"> | number | null
    usuarioId?: IntNullableFilter<"Egreso"> | number | null
  }

  export type VentaUpsertWithWhereUniqueWithoutRegistroCajaInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutRegistroCajaInput, VentaUncheckedUpdateWithoutRegistroCajaInput>
    create: XOR<VentaCreateWithoutRegistroCajaInput, VentaUncheckedCreateWithoutRegistroCajaInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutRegistroCajaInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutRegistroCajaInput, VentaUncheckedUpdateWithoutRegistroCajaInput>
  }

  export type VentaUpdateManyWithWhereWithoutRegistroCajaInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutRegistroCajaInput>
  }

  export type VentaScalarWhereInput = {
    AND?: VentaScalarWhereInput | VentaScalarWhereInput[]
    OR?: VentaScalarWhereInput[]
    NOT?: VentaScalarWhereInput | VentaScalarWhereInput[]
    id?: IntFilter<"Venta"> | number
    clienteId?: IntNullableFilter<"Venta"> | number | null
    fechaVenta?: DateTimeFilter<"Venta"> | Date | string
    horaVenta?: DateTimeFilter<"Venta"> | Date | string
    totalVenta?: FloatFilter<"Venta"> | number
    sucursalId?: IntFilter<"Venta"> | number
    nombreClienteFinal?: StringNullableFilter<"Venta"> | string | null
    telefonoClienteFinal?: StringNullableFilter<"Venta"> | string | null
    direccionClienteFinal?: StringNullableFilter<"Venta"> | string | null
    imei?: StringNullableFilter<"Venta"> | string | null
    registroCajaId?: IntNullableFilter<"Venta"> | number | null
  }

  export type RegistroCajaCreateWithoutDepositosInput = {
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    sucursal?: SucursalCreateNestedOneWithoutRegistroCajaInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroCajaInput
    egresos?: EgresoCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUncheckedCreateWithoutDepositosInput = {
    id?: number
    sucursalId?: number | null
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    egresos?: EgresoUncheckedCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaUncheckedCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaCreateOrConnectWithoutDepositosInput = {
    where: RegistroCajaWhereUniqueInput
    create: XOR<RegistroCajaCreateWithoutDepositosInput, RegistroCajaUncheckedCreateWithoutDepositosInput>
  }

  export type SucursalCreateWithoutDepositoInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutDepositoInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutDepositoInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutDepositoInput, SucursalUncheckedCreateWithoutDepositoInput>
  }

  export type UsuarioCreateWithoutDepositoInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDepositoInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDepositoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDepositoInput, UsuarioUncheckedCreateWithoutDepositoInput>
  }

  export type RegistroCajaUpsertWithoutDepositosInput = {
    update: XOR<RegistroCajaUpdateWithoutDepositosInput, RegistroCajaUncheckedUpdateWithoutDepositosInput>
    create: XOR<RegistroCajaCreateWithoutDepositosInput, RegistroCajaUncheckedCreateWithoutDepositosInput>
    where?: RegistroCajaWhereInput
  }

  export type RegistroCajaUpdateToOneWithWhereWithoutDepositosInput = {
    where?: RegistroCajaWhereInput
    data: XOR<RegistroCajaUpdateWithoutDepositosInput, RegistroCajaUncheckedUpdateWithoutDepositosInput>
  }

  export type RegistroCajaUpdateWithoutDepositosInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneWithoutRegistroCajaNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroCajaNestedInput
    egresos?: EgresoUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateWithoutDepositosInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    egresos?: EgresoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutRegistroCajaNestedInput
  }

  export type SucursalUpsertWithoutDepositoInput = {
    update: XOR<SucursalUpdateWithoutDepositoInput, SucursalUncheckedUpdateWithoutDepositoInput>
    create: XOR<SucursalCreateWithoutDepositoInput, SucursalUncheckedCreateWithoutDepositoInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutDepositoInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutDepositoInput, SucursalUncheckedUpdateWithoutDepositoInput>
  }

  export type SucursalUpdateWithoutDepositoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutDepositoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioUpsertWithoutDepositoInput = {
    update: XOR<UsuarioUpdateWithoutDepositoInput, UsuarioUncheckedUpdateWithoutDepositoInput>
    create: XOR<UsuarioCreateWithoutDepositoInput, UsuarioUncheckedCreateWithoutDepositoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDepositoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDepositoInput, UsuarioUncheckedUpdateWithoutDepositoInput>
  }

  export type UsuarioUpdateWithoutDepositoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDepositoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type RegistroCajaCreateWithoutEgresosInput = {
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    sucursal?: SucursalCreateNestedOneWithoutRegistroCajaInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroCajaInput
    depositos?: DepositoCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUncheckedCreateWithoutEgresosInput = {
    id?: number
    sucursalId?: number | null
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    depositos?: DepositoUncheckedCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaUncheckedCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaCreateOrConnectWithoutEgresosInput = {
    where: RegistroCajaWhereUniqueInput
    create: XOR<RegistroCajaCreateWithoutEgresosInput, RegistroCajaUncheckedCreateWithoutEgresosInput>
  }

  export type SucursalCreateWithoutEgresoInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutEgresoInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutEgresoInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutEgresoInput, SucursalUncheckedCreateWithoutEgresoInput>
  }

  export type UsuarioCreateWithoutEgresoInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutEgresoInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutEgresoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEgresoInput, UsuarioUncheckedCreateWithoutEgresoInput>
  }

  export type RegistroCajaUpsertWithoutEgresosInput = {
    update: XOR<RegistroCajaUpdateWithoutEgresosInput, RegistroCajaUncheckedUpdateWithoutEgresosInput>
    create: XOR<RegistroCajaCreateWithoutEgresosInput, RegistroCajaUncheckedCreateWithoutEgresosInput>
    where?: RegistroCajaWhereInput
  }

  export type RegistroCajaUpdateToOneWithWhereWithoutEgresosInput = {
    where?: RegistroCajaWhereInput
    data: XOR<RegistroCajaUpdateWithoutEgresosInput, RegistroCajaUncheckedUpdateWithoutEgresosInput>
  }

  export type RegistroCajaUpdateWithoutEgresosInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneWithoutRegistroCajaNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroCajaNestedInput
    depositos?: DepositoUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateWithoutEgresosInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    depositos?: DepositoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutRegistroCajaNestedInput
  }

  export type SucursalUpsertWithoutEgresoInput = {
    update: XOR<SucursalUpdateWithoutEgresoInput, SucursalUncheckedUpdateWithoutEgresoInput>
    create: XOR<SucursalCreateWithoutEgresoInput, SucursalUncheckedCreateWithoutEgresoInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutEgresoInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutEgresoInput, SucursalUncheckedUpdateWithoutEgresoInput>
  }

  export type SucursalUpdateWithoutEgresoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutEgresoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioUpsertWithoutEgresoInput = {
    update: XOR<UsuarioUpdateWithoutEgresoInput, UsuarioUncheckedUpdateWithoutEgresoInput>
    create: XOR<UsuarioCreateWithoutEgresoInput, UsuarioUncheckedCreateWithoutEgresoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEgresoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEgresoInput, UsuarioUncheckedUpdateWithoutEgresoInput>
  }

  export type UsuarioUpdateWithoutEgresoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEgresoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type StockCreateWithoutVencimientoInput = {
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    producto: ProductoCreateNestedOneWithoutStockInput
    entregaStock?: EntregaStockCreateNestedOneWithoutStockEntregadoInput
    sucursal: SucursalCreateNestedOneWithoutProductosInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutStockInput
  }

  export type StockUncheckedCreateWithoutVencimientoInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    sucursalId: number
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutVencimientoInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutVencimientoInput, StockUncheckedCreateWithoutVencimientoInput>
  }

  export type StockUpsertWithoutVencimientoInput = {
    update: XOR<StockUpdateWithoutVencimientoInput, StockUncheckedUpdateWithoutVencimientoInput>
    create: XOR<StockCreateWithoutVencimientoInput, StockUncheckedCreateWithoutVencimientoInput>
    where?: StockWhereInput
  }

  export type StockUpdateToOneWithWhereWithoutVencimientoInput = {
    where?: StockWhereInput
    data: XOR<StockUpdateWithoutVencimientoInput, StockUncheckedUpdateWithoutVencimientoInput>
  }

  export type StockUpdateWithoutVencimientoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutStockNestedInput
    entregaStock?: EntregaStockUpdateOneWithoutStockEntregadoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutProductosNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateWithoutVencimientoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: IntFieldUpdateOperationsInput | number
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutStockNestedInput
  }

  export type UsuarioCreateWithoutNotificacionesEnviadasInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutNotificacionesEnviadasInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutNotificacionesEnviadasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutNotificacionesEnviadasInput, UsuarioUncheckedCreateWithoutNotificacionesEnviadasInput>
  }

  export type NotificacionesUsuariosCreateWithoutNotificacionInput = {
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutNotificacionesUsuariosInput
  }

  export type NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput = {
    id?: number
    usuarioId: number
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
  }

  export type NotificacionesUsuariosCreateOrConnectWithoutNotificacionInput = {
    where: NotificacionesUsuariosWhereUniqueInput
    create: XOR<NotificacionesUsuariosCreateWithoutNotificacionInput, NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput>
  }

  export type NotificacionesUsuariosCreateManyNotificacionInputEnvelope = {
    data: NotificacionesUsuariosCreateManyNotificacionInput | NotificacionesUsuariosCreateManyNotificacionInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutNotificacionesRecibidasInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutNotificacionesRecibidasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutNotificacionesRecibidasInput, UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput>
  }

  export type UsuarioUpsertWithoutNotificacionesEnviadasInput = {
    update: XOR<UsuarioUpdateWithoutNotificacionesEnviadasInput, UsuarioUncheckedUpdateWithoutNotificacionesEnviadasInput>
    create: XOR<UsuarioCreateWithoutNotificacionesEnviadasInput, UsuarioUncheckedCreateWithoutNotificacionesEnviadasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutNotificacionesEnviadasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutNotificacionesEnviadasInput, UsuarioUncheckedUpdateWithoutNotificacionesEnviadasInput>
  }

  export type UsuarioUpdateWithoutNotificacionesEnviadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutNotificacionesEnviadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type NotificacionesUsuariosUpsertWithWhereUniqueWithoutNotificacionInput = {
    where: NotificacionesUsuariosWhereUniqueInput
    update: XOR<NotificacionesUsuariosUpdateWithoutNotificacionInput, NotificacionesUsuariosUncheckedUpdateWithoutNotificacionInput>
    create: XOR<NotificacionesUsuariosCreateWithoutNotificacionInput, NotificacionesUsuariosUncheckedCreateWithoutNotificacionInput>
  }

  export type NotificacionesUsuariosUpdateWithWhereUniqueWithoutNotificacionInput = {
    where: NotificacionesUsuariosWhereUniqueInput
    data: XOR<NotificacionesUsuariosUpdateWithoutNotificacionInput, NotificacionesUsuariosUncheckedUpdateWithoutNotificacionInput>
  }

  export type NotificacionesUsuariosUpdateManyWithWhereWithoutNotificacionInput = {
    where: NotificacionesUsuariosScalarWhereInput
    data: XOR<NotificacionesUsuariosUpdateManyMutationInput, NotificacionesUsuariosUncheckedUpdateManyWithoutNotificacionInput>
  }

  export type NotificacionesUsuariosScalarWhereInput = {
    AND?: NotificacionesUsuariosScalarWhereInput | NotificacionesUsuariosScalarWhereInput[]
    OR?: NotificacionesUsuariosScalarWhereInput[]
    NOT?: NotificacionesUsuariosScalarWhereInput | NotificacionesUsuariosScalarWhereInput[]
    id?: IntFilter<"NotificacionesUsuarios"> | number
    usuarioId?: IntFilter<"NotificacionesUsuarios"> | number
    notificacionId?: IntFilter<"NotificacionesUsuarios"> | number
    leido?: BoolFilter<"NotificacionesUsuarios"> | boolean
    eliminado?: BoolFilter<"NotificacionesUsuarios"> | boolean
    leidoEn?: DateTimeNullableFilter<"NotificacionesUsuarios"> | Date | string | null
    recibidoEn?: DateTimeFilter<"NotificacionesUsuarios"> | Date | string
  }

  export type UsuarioUpsertWithWhereUniqueWithoutNotificacionesRecibidasInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutNotificacionesRecibidasInput, UsuarioUncheckedUpdateWithoutNotificacionesRecibidasInput>
    create: XOR<UsuarioCreateWithoutNotificacionesRecibidasInput, UsuarioUncheckedCreateWithoutNotificacionesRecibidasInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutNotificacionesRecibidasInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutNotificacionesRecibidasInput, UsuarioUncheckedUpdateWithoutNotificacionesRecibidasInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutNotificacionesRecibidasInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutNotificacionesRecibidasInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    rol?: EnumRolFilter<"Usuario"> | $Enums.Rol
    contrasena?: StringFilter<"Usuario"> | string
    activo?: BoolFilter<"Usuario"> | boolean
    correo?: StringFilter<"Usuario"> | string
    sucursalId?: IntFilter<"Usuario"> | number
    fecha_creacion?: DateTimeFilter<"Usuario"> | Date | string
    fecha_actualizacion?: DateTimeFilter<"Usuario"> | Date | string
  }

  export type UsuarioCreateWithoutNotificacionesUsuariosInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutNotificacionesUsuariosInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutNotificacionesUsuariosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutNotificacionesUsuariosInput, UsuarioUncheckedCreateWithoutNotificacionesUsuariosInput>
  }

  export type NotificacionCreateWithoutNotificacionesUsuariosInput = {
    mensaje: string
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    remitente?: UsuarioCreateNestedOneWithoutNotificacionesEnviadasInput
    Usuario?: UsuarioCreateNestedManyWithoutNotificacionesRecibidasInput
  }

  export type NotificacionUncheckedCreateWithoutNotificacionesUsuariosInput = {
    id?: number
    mensaje: string
    remitenteId?: number | null
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutNotificacionesRecibidasInput
  }

  export type NotificacionCreateOrConnectWithoutNotificacionesUsuariosInput = {
    where: NotificacionWhereUniqueInput
    create: XOR<NotificacionCreateWithoutNotificacionesUsuariosInput, NotificacionUncheckedCreateWithoutNotificacionesUsuariosInput>
  }

  export type UsuarioUpsertWithoutNotificacionesUsuariosInput = {
    update: XOR<UsuarioUpdateWithoutNotificacionesUsuariosInput, UsuarioUncheckedUpdateWithoutNotificacionesUsuariosInput>
    create: XOR<UsuarioCreateWithoutNotificacionesUsuariosInput, UsuarioUncheckedCreateWithoutNotificacionesUsuariosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutNotificacionesUsuariosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutNotificacionesUsuariosInput, UsuarioUncheckedUpdateWithoutNotificacionesUsuariosInput>
  }

  export type UsuarioUpdateWithoutNotificacionesUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutNotificacionesUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type NotificacionUpsertWithoutNotificacionesUsuariosInput = {
    update: XOR<NotificacionUpdateWithoutNotificacionesUsuariosInput, NotificacionUncheckedUpdateWithoutNotificacionesUsuariosInput>
    create: XOR<NotificacionCreateWithoutNotificacionesUsuariosInput, NotificacionUncheckedCreateWithoutNotificacionesUsuariosInput>
    where?: NotificacionWhereInput
  }

  export type NotificacionUpdateToOneWithWhereWithoutNotificacionesUsuariosInput = {
    where?: NotificacionWhereInput
    data: XOR<NotificacionUpdateWithoutNotificacionesUsuariosInput, NotificacionUncheckedUpdateWithoutNotificacionesUsuariosInput>
  }

  export type NotificacionUpdateWithoutNotificacionesUsuariosInput = {
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    remitente?: UsuarioUpdateOneWithoutNotificacionesEnviadasNestedInput
    Usuario?: UsuarioUpdateManyWithoutNotificacionesRecibidasNestedInput
  }

  export type NotificacionUncheckedUpdateWithoutNotificacionesUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    remitenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUncheckedUpdateManyWithoutNotificacionesRecibidasNestedInput
  }

  export type ProductoCreateWithoutSolicitudPrecioInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutSolicitudPrecioInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutSolicitudPrecioInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutSolicitudPrecioInput, ProductoUncheckedCreateWithoutSolicitudPrecioInput>
  }

  export type UsuarioCreateWithoutSolicitudesPrecioInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutSolicitudesPrecioInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutSolicitudesPrecioInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSolicitudesPrecioInput, UsuarioUncheckedCreateWithoutSolicitudesPrecioInput>
  }

  export type UsuarioCreateWithoutSolicitudesAprobadasInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutSolicitudesAprobadasInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutSolicitudesAprobadasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSolicitudesAprobadasInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasInput>
  }

  export type ProductoUpsertWithoutSolicitudPrecioInput = {
    update: XOR<ProductoUpdateWithoutSolicitudPrecioInput, ProductoUncheckedUpdateWithoutSolicitudPrecioInput>
    create: XOR<ProductoCreateWithoutSolicitudPrecioInput, ProductoUncheckedCreateWithoutSolicitudPrecioInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutSolicitudPrecioInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutSolicitudPrecioInput, ProductoUncheckedUpdateWithoutSolicitudPrecioInput>
  }

  export type ProductoUpdateWithoutSolicitudPrecioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutSolicitudPrecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioUpsertWithoutSolicitudesPrecioInput = {
    update: XOR<UsuarioUpdateWithoutSolicitudesPrecioInput, UsuarioUncheckedUpdateWithoutSolicitudesPrecioInput>
    create: XOR<UsuarioCreateWithoutSolicitudesPrecioInput, UsuarioUncheckedCreateWithoutSolicitudesPrecioInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutSolicitudesPrecioInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutSolicitudesPrecioInput, UsuarioUncheckedUpdateWithoutSolicitudesPrecioInput>
  }

  export type UsuarioUpdateWithoutSolicitudesPrecioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutSolicitudesPrecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUpsertWithoutSolicitudesAprobadasInput = {
    update: XOR<UsuarioUpdateWithoutSolicitudesAprobadasInput, UsuarioUncheckedUpdateWithoutSolicitudesAprobadasInput>
    create: XOR<UsuarioCreateWithoutSolicitudesAprobadasInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutSolicitudesAprobadasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutSolicitudesAprobadasInput, UsuarioUncheckedUpdateWithoutSolicitudesAprobadasInput>
  }

  export type UsuarioUpdateWithoutSolicitudesAprobadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutSolicitudesAprobadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type StockCreateWithoutProductoInput = {
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStock?: EntregaStockCreateNestedOneWithoutStockEntregadoInput
    sucursal: SucursalCreateNestedOneWithoutProductosInput
    Vencimiento?: VencimientoCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutStockInput
  }

  export type StockUncheckedCreateWithoutProductoInput = {
    id?: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    sucursalId: number
    Vencimiento?: VencimientoUncheckedCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutProductoInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutProductoInput, StockUncheckedCreateWithoutProductoInput>
  }

  export type StockCreateManyProductoInputEnvelope = {
    data: StockCreateManyProductoInput | StockCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaCreateWithoutProductosInput = {
    nombre: string
  }

  export type CategoriaUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
  }

  export type CategoriaCreateOrConnectWithoutProductosInput = {
    where: CategoriaWhereUniqueInput
    create: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput>
  }

  export type VentaProductoCreateWithoutProductoInput = {
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
    venta: VentaCreateNestedOneWithoutProductosInput
  }

  export type VentaProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    ventaId: number
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
  }

  export type VentaProductoCreateOrConnectWithoutProductoInput = {
    where: VentaProductoWhereUniqueInput
    create: XOR<VentaProductoCreateWithoutProductoInput, VentaProductoUncheckedCreateWithoutProductoInput>
  }

  export type VentaProductoCreateManyProductoInputEnvelope = {
    data: VentaProductoCreateManyProductoInput | VentaProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type HistorialStockCreateWithoutProductoInput = {
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio?: Date | string
  }

  export type HistorialStockUncheckedCreateWithoutProductoInput = {
    id?: number
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio?: Date | string
  }

  export type HistorialStockCreateOrConnectWithoutProductoInput = {
    where: HistorialStockWhereUniqueInput
    create: XOR<HistorialStockCreateWithoutProductoInput, HistorialStockUncheckedCreateWithoutProductoInput>
  }

  export type HistorialStockCreateManyProductoInputEnvelope = {
    data: HistorialStockCreateManyProductoInput | HistorialStockCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type HistorialPrecioCreateWithoutProductoInput = {
    precioAnterior: number
    precioNuevo: number
    fechaCambio?: Date | string
  }

  export type HistorialPrecioUncheckedCreateWithoutProductoInput = {
    id?: number
    precioAnterior: number
    precioNuevo: number
    fechaCambio?: Date | string
  }

  export type HistorialPrecioCreateOrConnectWithoutProductoInput = {
    where: HistorialPrecioWhereUniqueInput
    create: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput>
  }

  export type HistorialPrecioCreateManyProductoInputEnvelope = {
    data: HistorialPrecioCreateManyProductoInput | HistorialPrecioCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type TransferenciaProductoCreateWithoutProductoInput = {
    cantidad: number
    fechaTransferencia?: Date | string
    sucursalOrigen: SucursalCreateNestedOneWithoutTransferenciaProductoInput
    sucursalDestino: SucursalCreateNestedOneWithoutTransferenciaProductoDestinoInput
    usuarioEncargado?: UsuarioCreateNestedOneWithoutTransferenciaProductoInput
  }

  export type TransferenciaProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type TransferenciaProductoCreateOrConnectWithoutProductoInput = {
    where: TransferenciaProductoWhereUniqueInput
    create: XOR<TransferenciaProductoCreateWithoutProductoInput, TransferenciaProductoUncheckedCreateWithoutProductoInput>
  }

  export type TransferenciaProductoCreateManyProductoInputEnvelope = {
    data: TransferenciaProductoCreateManyProductoInput | TransferenciaProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type PrecioProductoCreateWithoutProductoInput = {
    precio: number
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
    creadoPor?: UsuarioCreateNestedOneWithoutPrecioProductoInput
  }

  export type PrecioProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    precio: number
    creadoPorId?: number | null
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
  }

  export type PrecioProductoCreateOrConnectWithoutProductoInput = {
    where: PrecioProductoWhereUniqueInput
    create: XOR<PrecioProductoCreateWithoutProductoInput, PrecioProductoUncheckedCreateWithoutProductoInput>
  }

  export type PrecioProductoCreateManyProductoInputEnvelope = {
    data: PrecioProductoCreateManyProductoInput | PrecioProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudPrecioCreateWithoutProductoInput = {
    precioSolicitado: number
    estado?: $Enums.EstadoSolicitud
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
    solicitadoPor: UsuarioCreateNestedOneWithoutSolicitudesPrecioInput
    aprobadoPor?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasInput
  }

  export type SolicitudPrecioUncheckedCreateWithoutProductoInput = {
    id?: number
    precioSolicitado: number
    solicitadoPorId: number
    estado?: $Enums.EstadoSolicitud
    aprobadoPorId?: number | null
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudPrecioCreateOrConnectWithoutProductoInput = {
    where: SolicitudPrecioWhereUniqueInput
    create: XOR<SolicitudPrecioCreateWithoutProductoInput, SolicitudPrecioUncheckedCreateWithoutProductoInput>
  }

  export type SolicitudPrecioCreateManyProductoInputEnvelope = {
    data: SolicitudPrecioCreateManyProductoInput | SolicitudPrecioCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudTransferenciaProductoCreateWithoutProductoInput = {
    cantidad: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    sucursalOrigen: SucursalCreateNestedOneWithoutSolicitudesOrigenInput
    sucursalDestino: SucursalCreateNestedOneWithoutSolicitudesDestinoInput
    usuarioSolicitante?: UsuarioCreateNestedOneWithoutSolicitudesEnviadasInput
    administrador?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasTransferenciaInput
  }

  export type SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateOrConnectWithoutProductoInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    create: XOR<SolicitudTransferenciaProductoCreateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput>
  }

  export type SolicitudTransferenciaProductoCreateManyProductoInputEnvelope = {
    data: SolicitudTransferenciaProductoCreateManyProductoInput | SolicitudTransferenciaProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type HistorialPrecioCostoCreateWithoutProductoInput = {
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    modificadoPor?: UsuarioCreateNestedOneWithoutHistorialPrecioCostoInput
  }

  export type HistorialPrecioCostoUncheckedCreateWithoutProductoInput = {
    id?: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    modificadoPorId?: number | null
  }

  export type HistorialPrecioCostoCreateOrConnectWithoutProductoInput = {
    where: HistorialPrecioCostoWhereUniqueInput
    create: XOR<HistorialPrecioCostoCreateWithoutProductoInput, HistorialPrecioCostoUncheckedCreateWithoutProductoInput>
  }

  export type HistorialPrecioCostoCreateManyProductoInputEnvelope = {
    data: HistorialPrecioCostoCreateManyProductoInput | HistorialPrecioCostoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type AjusteStockCreateWithoutProductoInput = {
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    descripcion?: string | null
    stock?: StockCreateNestedOneWithoutAjusteStockInput
    usuario?: UsuarioCreateNestedOneWithoutAjusteStockInput
  }

  export type AjusteStockUncheckedCreateWithoutProductoInput = {
    id?: number
    stockId?: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    usuarioId?: number | null
    descripcion?: string | null
  }

  export type AjusteStockCreateOrConnectWithoutProductoInput = {
    where: AjusteStockWhereUniqueInput
    create: XOR<AjusteStockCreateWithoutProductoInput, AjusteStockUncheckedCreateWithoutProductoInput>
  }

  export type AjusteStockCreateManyProductoInputEnvelope = {
    data: AjusteStockCreateManyProductoInput | AjusteStockCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type EliminacionProductoCreateWithoutProductoInput = {
    fechaHora?: Date | string
    motivo?: string | null
    usuario?: UsuarioCreateNestedOneWithoutEliminacionProductoInput
  }

  export type EliminacionProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionProductoCreateOrConnectWithoutProductoInput = {
    where: EliminacionProductoWhereUniqueInput
    create: XOR<EliminacionProductoCreateWithoutProductoInput, EliminacionProductoUncheckedCreateWithoutProductoInput>
  }

  export type EliminacionProductoCreateManyProductoInputEnvelope = {
    data: EliminacionProductoCreateManyProductoInput | EliminacionProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type EliminacionStockCreateWithoutProductoInput = {
    fechaHora?: Date | string
    motivo?: string | null
    usuario?: UsuarioCreateNestedOneWithoutEliminacionStockInput
    sucursal?: SucursalCreateNestedOneWithoutEliminacionStockInput
  }

  export type EliminacionStockUncheckedCreateWithoutProductoInput = {
    id?: number
    fechaHora?: Date | string
    usuarioId?: number | null
    sucursalId?: number | null
    motivo?: string | null
  }

  export type EliminacionStockCreateOrConnectWithoutProductoInput = {
    where: EliminacionStockWhereUniqueInput
    create: XOR<EliminacionStockCreateWithoutProductoInput, EliminacionStockUncheckedCreateWithoutProductoInput>
  }

  export type EliminacionStockCreateManyProductoInputEnvelope = {
    data: EliminacionStockCreateManyProductoInput | EliminacionStockCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type GarantiaCreateWithoutProductoInput = {
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    cliente: ClienteCreateNestedOneWithoutGarantiaInput
    usuarioRecibe?: UsuarioCreateNestedOneWithoutGarantiaInput
    registros?: RegistroGarantiaCreateNestedManyWithoutGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutGarantiaInput
  }

  export type GarantiaUncheckedCreateWithoutProductoInput = {
    id?: number
    clienteId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
    registros?: RegistroGarantiaUncheckedCreateNestedManyWithoutGarantiaInput
  }

  export type GarantiaCreateOrConnectWithoutProductoInput = {
    where: GarantiaWhereUniqueInput
    create: XOR<GarantiaCreateWithoutProductoInput, GarantiaUncheckedCreateWithoutProductoInput>
  }

  export type GarantiaCreateManyProductoInputEnvelope = {
    data: GarantiaCreateManyProductoInput | GarantiaCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type RegistroGarantiaCreateWithoutProductoInput = {
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    garantia: GarantiaCreateNestedOneWithoutRegistrosInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutRegistroGarantiaInput
  }

  export type RegistroGarantiaUncheckedCreateWithoutProductoInput = {
    id?: number
    garantiaId: number
    usuarioId?: number | null
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaCreateOrConnectWithoutProductoInput = {
    where: RegistroGarantiaWhereUniqueInput
    create: XOR<RegistroGarantiaCreateWithoutProductoInput, RegistroGarantiaUncheckedCreateWithoutProductoInput>
  }

  export type RegistroGarantiaCreateManyProductoInputEnvelope = {
    data: RegistroGarantiaCreateManyProductoInput | RegistroGarantiaCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type VentaEliminadaProductoCreateWithoutProductoInput = {
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
    ventaEliminada: VentaEliminadaCreateNestedOneWithoutVentaEliminadaProductoInput
  }

  export type VentaEliminadaProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    ventaEliminadaId: number
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
  }

  export type VentaEliminadaProductoCreateOrConnectWithoutProductoInput = {
    where: VentaEliminadaProductoWhereUniqueInput
    create: XOR<VentaEliminadaProductoCreateWithoutProductoInput, VentaEliminadaProductoUncheckedCreateWithoutProductoInput>
  }

  export type VentaEliminadaProductoCreateManyProductoInputEnvelope = {
    data: VentaEliminadaProductoCreateManyProductoInput | VentaEliminadaProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type ReparacionCreateWithoutProductoInput = {
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutReparacionInput
    sucursal: SucursalCreateNestedOneWithoutReparacionInput
    cliente: ClienteCreateNestedOneWithoutReparacionInput
    registros?: RegistroReparacionCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionUncheckedCreateWithoutProductoInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    registros?: RegistroReparacionUncheckedCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionCreateOrConnectWithoutProductoInput = {
    where: ReparacionWhereUniqueInput
    create: XOR<ReparacionCreateWithoutProductoInput, ReparacionUncheckedCreateWithoutProductoInput>
  }

  export type ReparacionCreateManyProductoInputEnvelope = {
    data: ReparacionCreateManyProductoInput | ReparacionCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type StockUpsertWithWhereUniqueWithoutProductoInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutProductoInput, StockUncheckedUpdateWithoutProductoInput>
    create: XOR<StockCreateWithoutProductoInput, StockUncheckedCreateWithoutProductoInput>
  }

  export type StockUpdateWithWhereUniqueWithoutProductoInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutProductoInput, StockUncheckedUpdateWithoutProductoInput>
  }

  export type StockUpdateManyWithWhereWithoutProductoInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutProductoInput>
  }

  export type StockScalarWhereInput = {
    AND?: StockScalarWhereInput | StockScalarWhereInput[]
    OR?: StockScalarWhereInput[]
    NOT?: StockScalarWhereInput | StockScalarWhereInput[]
    id?: IntFilter<"Stock"> | number
    productoId?: IntFilter<"Stock"> | number
    cantidad?: IntFilter<"Stock"> | number
    costoTotal?: FloatFilter<"Stock"> | number
    creadoEn?: DateTimeFilter<"Stock"> | Date | string
    fechaIngreso?: DateTimeFilter<"Stock"> | Date | string
    fechaVencimiento?: DateTimeNullableFilter<"Stock"> | Date | string | null
    precioCosto?: FloatFilter<"Stock"> | number
    entregaStockId?: IntNullableFilter<"Stock"> | number | null
    sucursalId?: IntFilter<"Stock"> | number
  }

  export type CategoriaUpsertWithWhereUniqueWithoutProductosInput = {
    where: CategoriaWhereUniqueInput
    update: XOR<CategoriaUpdateWithoutProductosInput, CategoriaUncheckedUpdateWithoutProductosInput>
    create: XOR<CategoriaCreateWithoutProductosInput, CategoriaUncheckedCreateWithoutProductosInput>
  }

  export type CategoriaUpdateWithWhereUniqueWithoutProductosInput = {
    where: CategoriaWhereUniqueInput
    data: XOR<CategoriaUpdateWithoutProductosInput, CategoriaUncheckedUpdateWithoutProductosInput>
  }

  export type CategoriaUpdateManyWithWhereWithoutProductosInput = {
    where: CategoriaScalarWhereInput
    data: XOR<CategoriaUpdateManyMutationInput, CategoriaUncheckedUpdateManyWithoutProductosInput>
  }

  export type CategoriaScalarWhereInput = {
    AND?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
    OR?: CategoriaScalarWhereInput[]
    NOT?: CategoriaScalarWhereInput | CategoriaScalarWhereInput[]
    id?: IntFilter<"Categoria"> | number
    nombre?: StringFilter<"Categoria"> | string
  }

  export type VentaProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: VentaProductoWhereUniqueInput
    update: XOR<VentaProductoUpdateWithoutProductoInput, VentaProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<VentaProductoCreateWithoutProductoInput, VentaProductoUncheckedCreateWithoutProductoInput>
  }

  export type VentaProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: VentaProductoWhereUniqueInput
    data: XOR<VentaProductoUpdateWithoutProductoInput, VentaProductoUncheckedUpdateWithoutProductoInput>
  }

  export type VentaProductoUpdateManyWithWhereWithoutProductoInput = {
    where: VentaProductoScalarWhereInput
    data: XOR<VentaProductoUpdateManyMutationInput, VentaProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type VentaProductoScalarWhereInput = {
    AND?: VentaProductoScalarWhereInput | VentaProductoScalarWhereInput[]
    OR?: VentaProductoScalarWhereInput[]
    NOT?: VentaProductoScalarWhereInput | VentaProductoScalarWhereInput[]
    id?: IntFilter<"VentaProducto"> | number
    ventaId?: IntFilter<"VentaProducto"> | number
    productoId?: IntNullableFilter<"VentaProducto"> | number | null
    cantidad?: IntFilter<"VentaProducto"> | number
    creadoEn?: DateTimeFilter<"VentaProducto"> | Date | string
    precioVenta?: FloatFilter<"VentaProducto"> | number
  }

  export type HistorialStockUpsertWithWhereUniqueWithoutProductoInput = {
    where: HistorialStockWhereUniqueInput
    update: XOR<HistorialStockUpdateWithoutProductoInput, HistorialStockUncheckedUpdateWithoutProductoInput>
    create: XOR<HistorialStockCreateWithoutProductoInput, HistorialStockUncheckedCreateWithoutProductoInput>
  }

  export type HistorialStockUpdateWithWhereUniqueWithoutProductoInput = {
    where: HistorialStockWhereUniqueInput
    data: XOR<HistorialStockUpdateWithoutProductoInput, HistorialStockUncheckedUpdateWithoutProductoInput>
  }

  export type HistorialStockUpdateManyWithWhereWithoutProductoInput = {
    where: HistorialStockScalarWhereInput
    data: XOR<HistorialStockUpdateManyMutationInput, HistorialStockUncheckedUpdateManyWithoutProductoInput>
  }

  export type HistorialStockScalarWhereInput = {
    AND?: HistorialStockScalarWhereInput | HistorialStockScalarWhereInput[]
    OR?: HistorialStockScalarWhereInput[]
    NOT?: HistorialStockScalarWhereInput | HistorialStockScalarWhereInput[]
    id?: IntFilter<"HistorialStock"> | number
    productoId?: IntFilter<"HistorialStock"> | number
    cantidadAnterior?: IntFilter<"HistorialStock"> | number
    cantidadNueva?: IntFilter<"HistorialStock"> | number
    fechaCambio?: DateTimeFilter<"HistorialStock"> | Date | string
  }

  export type HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput = {
    where: HistorialPrecioWhereUniqueInput
    update: XOR<HistorialPrecioUpdateWithoutProductoInput, HistorialPrecioUncheckedUpdateWithoutProductoInput>
    create: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput>
  }

  export type HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput = {
    where: HistorialPrecioWhereUniqueInput
    data: XOR<HistorialPrecioUpdateWithoutProductoInput, HistorialPrecioUncheckedUpdateWithoutProductoInput>
  }

  export type HistorialPrecioUpdateManyWithWhereWithoutProductoInput = {
    where: HistorialPrecioScalarWhereInput
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyWithoutProductoInput>
  }

  export type HistorialPrecioScalarWhereInput = {
    AND?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
    OR?: HistorialPrecioScalarWhereInput[]
    NOT?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
    id?: IntFilter<"HistorialPrecio"> | number
    productoId?: IntFilter<"HistorialPrecio"> | number
    precioAnterior?: FloatFilter<"HistorialPrecio"> | number
    precioNuevo?: FloatFilter<"HistorialPrecio"> | number
    fechaCambio?: DateTimeFilter<"HistorialPrecio"> | Date | string
  }

  export type TransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: TransferenciaProductoWhereUniqueInput
    update: XOR<TransferenciaProductoUpdateWithoutProductoInput, TransferenciaProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<TransferenciaProductoCreateWithoutProductoInput, TransferenciaProductoUncheckedCreateWithoutProductoInput>
  }

  export type TransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: TransferenciaProductoWhereUniqueInput
    data: XOR<TransferenciaProductoUpdateWithoutProductoInput, TransferenciaProductoUncheckedUpdateWithoutProductoInput>
  }

  export type TransferenciaProductoUpdateManyWithWhereWithoutProductoInput = {
    where: TransferenciaProductoScalarWhereInput
    data: XOR<TransferenciaProductoUpdateManyMutationInput, TransferenciaProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type TransferenciaProductoScalarWhereInput = {
    AND?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
    OR?: TransferenciaProductoScalarWhereInput[]
    NOT?: TransferenciaProductoScalarWhereInput | TransferenciaProductoScalarWhereInput[]
    id?: IntFilter<"TransferenciaProducto"> | number
    productoId?: IntFilter<"TransferenciaProducto"> | number
    cantidad?: IntFilter<"TransferenciaProducto"> | number
    sucursalOrigenId?: IntFilter<"TransferenciaProducto"> | number
    sucursalDestinoId?: IntFilter<"TransferenciaProducto"> | number
    fechaTransferencia?: DateTimeFilter<"TransferenciaProducto"> | Date | string
    usuarioEncargadoId?: IntNullableFilter<"TransferenciaProducto"> | number | null
  }

  export type PrecioProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: PrecioProductoWhereUniqueInput
    update: XOR<PrecioProductoUpdateWithoutProductoInput, PrecioProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<PrecioProductoCreateWithoutProductoInput, PrecioProductoUncheckedCreateWithoutProductoInput>
  }

  export type PrecioProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: PrecioProductoWhereUniqueInput
    data: XOR<PrecioProductoUpdateWithoutProductoInput, PrecioProductoUncheckedUpdateWithoutProductoInput>
  }

  export type PrecioProductoUpdateManyWithWhereWithoutProductoInput = {
    where: PrecioProductoScalarWhereInput
    data: XOR<PrecioProductoUpdateManyMutationInput, PrecioProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type PrecioProductoScalarWhereInput = {
    AND?: PrecioProductoScalarWhereInput | PrecioProductoScalarWhereInput[]
    OR?: PrecioProductoScalarWhereInput[]
    NOT?: PrecioProductoScalarWhereInput | PrecioProductoScalarWhereInput[]
    id?: IntFilter<"PrecioProducto"> | number
    productoId?: IntNullableFilter<"PrecioProducto"> | number | null
    precio?: FloatFilter<"PrecioProducto"> | number
    creadoPorId?: IntNullableFilter<"PrecioProducto"> | number | null
    fechaCreacion?: DateTimeFilter<"PrecioProducto"> | Date | string
    estado?: EnumEstadoPrecioFilter<"PrecioProducto"> | $Enums.EstadoPrecio
    usado?: BoolFilter<"PrecioProducto"> | boolean
    tipo?: EnumTipoPrecioFilter<"PrecioProducto"> | $Enums.TipoPrecio
  }

  export type SolicitudPrecioUpsertWithWhereUniqueWithoutProductoInput = {
    where: SolicitudPrecioWhereUniqueInput
    update: XOR<SolicitudPrecioUpdateWithoutProductoInput, SolicitudPrecioUncheckedUpdateWithoutProductoInput>
    create: XOR<SolicitudPrecioCreateWithoutProductoInput, SolicitudPrecioUncheckedCreateWithoutProductoInput>
  }

  export type SolicitudPrecioUpdateWithWhereUniqueWithoutProductoInput = {
    where: SolicitudPrecioWhereUniqueInput
    data: XOR<SolicitudPrecioUpdateWithoutProductoInput, SolicitudPrecioUncheckedUpdateWithoutProductoInput>
  }

  export type SolicitudPrecioUpdateManyWithWhereWithoutProductoInput = {
    where: SolicitudPrecioScalarWhereInput
    data: XOR<SolicitudPrecioUpdateManyMutationInput, SolicitudPrecioUncheckedUpdateManyWithoutProductoInput>
  }

  export type SolicitudPrecioScalarWhereInput = {
    AND?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
    OR?: SolicitudPrecioScalarWhereInput[]
    NOT?: SolicitudPrecioScalarWhereInput | SolicitudPrecioScalarWhereInput[]
    id?: IntFilter<"SolicitudPrecio"> | number
    productoId?: IntFilter<"SolicitudPrecio"> | number
    precioSolicitado?: FloatFilter<"SolicitudPrecio"> | number
    solicitadoPorId?: IntFilter<"SolicitudPrecio"> | number
    estado?: EnumEstadoSolicitudFilter<"SolicitudPrecio"> | $Enums.EstadoSolicitud
    aprobadoPorId?: IntNullableFilter<"SolicitudPrecio"> | number | null
    fechaSolicitud?: DateTimeFilter<"SolicitudPrecio"> | Date | string
    fechaRespuesta?: DateTimeNullableFilter<"SolicitudPrecio"> | Date | string | null
  }

  export type SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    update: XOR<SolicitudTransferenciaProductoUpdateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<SolicitudTransferenciaProductoCreateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutProductoInput>
  }

  export type SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    data: XOR<SolicitudTransferenciaProductoUpdateWithoutProductoInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutProductoInput>
  }

  export type SolicitudTransferenciaProductoUpdateManyWithWhereWithoutProductoInput = {
    where: SolicitudTransferenciaProductoScalarWhereInput
    data: XOR<SolicitudTransferenciaProductoUpdateManyMutationInput, SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type SolicitudTransferenciaProductoScalarWhereInput = {
    AND?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
    OR?: SolicitudTransferenciaProductoScalarWhereInput[]
    NOT?: SolicitudTransferenciaProductoScalarWhereInput | SolicitudTransferenciaProductoScalarWhereInput[]
    id?: IntFilter<"SolicitudTransferenciaProducto"> | number
    productoId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    cantidad?: IntFilter<"SolicitudTransferenciaProducto"> | number
    sucursalOrigenId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    sucursalDestinoId?: IntFilter<"SolicitudTransferenciaProducto"> | number
    usuarioSolicitanteId?: IntNullableFilter<"SolicitudTransferenciaProducto"> | number | null
    estado?: EnumEstadoSolicitudTransferenciaFilter<"SolicitudTransferenciaProducto"> | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFilter<"SolicitudTransferenciaProducto"> | Date | string
    fechaAprobacion?: DateTimeNullableFilter<"SolicitudTransferenciaProducto"> | Date | string | null
    administradorId?: IntNullableFilter<"SolicitudTransferenciaProducto"> | number | null
  }

  export type HistorialPrecioCostoUpsertWithWhereUniqueWithoutProductoInput = {
    where: HistorialPrecioCostoWhereUniqueInput
    update: XOR<HistorialPrecioCostoUpdateWithoutProductoInput, HistorialPrecioCostoUncheckedUpdateWithoutProductoInput>
    create: XOR<HistorialPrecioCostoCreateWithoutProductoInput, HistorialPrecioCostoUncheckedCreateWithoutProductoInput>
  }

  export type HistorialPrecioCostoUpdateWithWhereUniqueWithoutProductoInput = {
    where: HistorialPrecioCostoWhereUniqueInput
    data: XOR<HistorialPrecioCostoUpdateWithoutProductoInput, HistorialPrecioCostoUncheckedUpdateWithoutProductoInput>
  }

  export type HistorialPrecioCostoUpdateManyWithWhereWithoutProductoInput = {
    where: HistorialPrecioCostoScalarWhereInput
    data: XOR<HistorialPrecioCostoUpdateManyMutationInput, HistorialPrecioCostoUncheckedUpdateManyWithoutProductoInput>
  }

  export type HistorialPrecioCostoScalarWhereInput = {
    AND?: HistorialPrecioCostoScalarWhereInput | HistorialPrecioCostoScalarWhereInput[]
    OR?: HistorialPrecioCostoScalarWhereInput[]
    NOT?: HistorialPrecioCostoScalarWhereInput | HistorialPrecioCostoScalarWhereInput[]
    id?: IntFilter<"HistorialPrecioCosto"> | number
    productoId?: IntFilter<"HistorialPrecioCosto"> | number
    precioCostoAnterior?: FloatFilter<"HistorialPrecioCosto"> | number
    precioCostoNuevo?: FloatFilter<"HistorialPrecioCosto"> | number
    fechaCambio?: DateTimeFilter<"HistorialPrecioCosto"> | Date | string
    modificadoPorId?: IntNullableFilter<"HistorialPrecioCosto"> | number | null
  }

  export type AjusteStockUpsertWithWhereUniqueWithoutProductoInput = {
    where: AjusteStockWhereUniqueInput
    update: XOR<AjusteStockUpdateWithoutProductoInput, AjusteStockUncheckedUpdateWithoutProductoInput>
    create: XOR<AjusteStockCreateWithoutProductoInput, AjusteStockUncheckedCreateWithoutProductoInput>
  }

  export type AjusteStockUpdateWithWhereUniqueWithoutProductoInput = {
    where: AjusteStockWhereUniqueInput
    data: XOR<AjusteStockUpdateWithoutProductoInput, AjusteStockUncheckedUpdateWithoutProductoInput>
  }

  export type AjusteStockUpdateManyWithWhereWithoutProductoInput = {
    where: AjusteStockScalarWhereInput
    data: XOR<AjusteStockUpdateManyMutationInput, AjusteStockUncheckedUpdateManyWithoutProductoInput>
  }

  export type AjusteStockScalarWhereInput = {
    AND?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
    OR?: AjusteStockScalarWhereInput[]
    NOT?: AjusteStockScalarWhereInput | AjusteStockScalarWhereInput[]
    id?: IntFilter<"AjusteStock"> | number
    productoId?: IntFilter<"AjusteStock"> | number
    stockId?: IntNullableFilter<"AjusteStock"> | number | null
    cantidadAjustada?: IntFilter<"AjusteStock"> | number
    tipoAjuste?: EnumTipoAjusteFilter<"AjusteStock"> | $Enums.TipoAjuste
    fechaHora?: DateTimeFilter<"AjusteStock"> | Date | string
    usuarioId?: IntNullableFilter<"AjusteStock"> | number | null
    descripcion?: StringNullableFilter<"AjusteStock"> | string | null
  }

  export type EliminacionProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: EliminacionProductoWhereUniqueInput
    update: XOR<EliminacionProductoUpdateWithoutProductoInput, EliminacionProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<EliminacionProductoCreateWithoutProductoInput, EliminacionProductoUncheckedCreateWithoutProductoInput>
  }

  export type EliminacionProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: EliminacionProductoWhereUniqueInput
    data: XOR<EliminacionProductoUpdateWithoutProductoInput, EliminacionProductoUncheckedUpdateWithoutProductoInput>
  }

  export type EliminacionProductoUpdateManyWithWhereWithoutProductoInput = {
    where: EliminacionProductoScalarWhereInput
    data: XOR<EliminacionProductoUpdateManyMutationInput, EliminacionProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type EliminacionProductoScalarWhereInput = {
    AND?: EliminacionProductoScalarWhereInput | EliminacionProductoScalarWhereInput[]
    OR?: EliminacionProductoScalarWhereInput[]
    NOT?: EliminacionProductoScalarWhereInput | EliminacionProductoScalarWhereInput[]
    id?: IntFilter<"EliminacionProducto"> | number
    productoId?: IntFilter<"EliminacionProducto"> | number
    fechaHora?: DateTimeFilter<"EliminacionProducto"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionProducto"> | number | null
    motivo?: StringNullableFilter<"EliminacionProducto"> | string | null
  }

  export type EliminacionStockUpsertWithWhereUniqueWithoutProductoInput = {
    where: EliminacionStockWhereUniqueInput
    update: XOR<EliminacionStockUpdateWithoutProductoInput, EliminacionStockUncheckedUpdateWithoutProductoInput>
    create: XOR<EliminacionStockCreateWithoutProductoInput, EliminacionStockUncheckedCreateWithoutProductoInput>
  }

  export type EliminacionStockUpdateWithWhereUniqueWithoutProductoInput = {
    where: EliminacionStockWhereUniqueInput
    data: XOR<EliminacionStockUpdateWithoutProductoInput, EliminacionStockUncheckedUpdateWithoutProductoInput>
  }

  export type EliminacionStockUpdateManyWithWhereWithoutProductoInput = {
    where: EliminacionStockScalarWhereInput
    data: XOR<EliminacionStockUpdateManyMutationInput, EliminacionStockUncheckedUpdateManyWithoutProductoInput>
  }

  export type EliminacionStockScalarWhereInput = {
    AND?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
    OR?: EliminacionStockScalarWhereInput[]
    NOT?: EliminacionStockScalarWhereInput | EliminacionStockScalarWhereInput[]
    id?: IntFilter<"EliminacionStock"> | number
    productoId?: IntFilter<"EliminacionStock"> | number
    fechaHora?: DateTimeFilter<"EliminacionStock"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionStock"> | number | null
    sucursalId?: IntNullableFilter<"EliminacionStock"> | number | null
    motivo?: StringNullableFilter<"EliminacionStock"> | string | null
  }

  export type GarantiaUpsertWithWhereUniqueWithoutProductoInput = {
    where: GarantiaWhereUniqueInput
    update: XOR<GarantiaUpdateWithoutProductoInput, GarantiaUncheckedUpdateWithoutProductoInput>
    create: XOR<GarantiaCreateWithoutProductoInput, GarantiaUncheckedCreateWithoutProductoInput>
  }

  export type GarantiaUpdateWithWhereUniqueWithoutProductoInput = {
    where: GarantiaWhereUniqueInput
    data: XOR<GarantiaUpdateWithoutProductoInput, GarantiaUncheckedUpdateWithoutProductoInput>
  }

  export type GarantiaUpdateManyWithWhereWithoutProductoInput = {
    where: GarantiaScalarWhereInput
    data: XOR<GarantiaUpdateManyMutationInput, GarantiaUncheckedUpdateManyWithoutProductoInput>
  }

  export type GarantiaScalarWhereInput = {
    AND?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
    OR?: GarantiaScalarWhereInput[]
    NOT?: GarantiaScalarWhereInput | GarantiaScalarWhereInput[]
    id?: IntFilter<"Garantia"> | number
    clienteId?: IntFilter<"Garantia"> | number
    productoId?: IntFilter<"Garantia"> | number
    usuarioIdRecibe?: IntNullableFilter<"Garantia"> | number | null
    comentario?: StringNullableFilter<"Garantia"> | string | null
    descripcionProblema?: StringFilter<"Garantia"> | string
    fechaRecepcion?: DateTimeFilter<"Garantia"> | Date | string
    estado?: EnumEstadoGarantiaFilter<"Garantia"> | $Enums.EstadoGarantia
    creadoEn?: DateTimeFilter<"Garantia"> | Date | string
    actualizadoEn?: DateTimeFilter<"Garantia"> | Date | string
    proveedorId?: IntNullableFilter<"Garantia"> | number | null
  }

  export type RegistroGarantiaUpsertWithWhereUniqueWithoutProductoInput = {
    where: RegistroGarantiaWhereUniqueInput
    update: XOR<RegistroGarantiaUpdateWithoutProductoInput, RegistroGarantiaUncheckedUpdateWithoutProductoInput>
    create: XOR<RegistroGarantiaCreateWithoutProductoInput, RegistroGarantiaUncheckedCreateWithoutProductoInput>
  }

  export type RegistroGarantiaUpdateWithWhereUniqueWithoutProductoInput = {
    where: RegistroGarantiaWhereUniqueInput
    data: XOR<RegistroGarantiaUpdateWithoutProductoInput, RegistroGarantiaUncheckedUpdateWithoutProductoInput>
  }

  export type RegistroGarantiaUpdateManyWithWhereWithoutProductoInput = {
    where: RegistroGarantiaScalarWhereInput
    data: XOR<RegistroGarantiaUpdateManyMutationInput, RegistroGarantiaUncheckedUpdateManyWithoutProductoInput>
  }

  export type RegistroGarantiaScalarWhereInput = {
    AND?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
    OR?: RegistroGarantiaScalarWhereInput[]
    NOT?: RegistroGarantiaScalarWhereInput | RegistroGarantiaScalarWhereInput[]
    id?: IntFilter<"RegistroGarantia"> | number
    garantiaId?: IntFilter<"RegistroGarantia"> | number
    usuarioId?: IntNullableFilter<"RegistroGarantia"> | number | null
    productoId?: IntFilter<"RegistroGarantia"> | number
    estado?: EnumEstadoGarantiaFilter<"RegistroGarantia"> | $Enums.EstadoGarantia
    conclusion?: StringNullableFilter<"RegistroGarantia"> | string | null
    accionesRealizadas?: StringNullableFilter<"RegistroGarantia"> | string | null
    fechaRegistro?: DateTimeFilter<"RegistroGarantia"> | Date | string
    proveedorId?: IntNullableFilter<"RegistroGarantia"> | number | null
  }

  export type VentaEliminadaProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: VentaEliminadaProductoWhereUniqueInput
    update: XOR<VentaEliminadaProductoUpdateWithoutProductoInput, VentaEliminadaProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<VentaEliminadaProductoCreateWithoutProductoInput, VentaEliminadaProductoUncheckedCreateWithoutProductoInput>
  }

  export type VentaEliminadaProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: VentaEliminadaProductoWhereUniqueInput
    data: XOR<VentaEliminadaProductoUpdateWithoutProductoInput, VentaEliminadaProductoUncheckedUpdateWithoutProductoInput>
  }

  export type VentaEliminadaProductoUpdateManyWithWhereWithoutProductoInput = {
    where: VentaEliminadaProductoScalarWhereInput
    data: XOR<VentaEliminadaProductoUpdateManyMutationInput, VentaEliminadaProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type ReparacionUpsertWithWhereUniqueWithoutProductoInput = {
    where: ReparacionWhereUniqueInput
    update: XOR<ReparacionUpdateWithoutProductoInput, ReparacionUncheckedUpdateWithoutProductoInput>
    create: XOR<ReparacionCreateWithoutProductoInput, ReparacionUncheckedCreateWithoutProductoInput>
  }

  export type ReparacionUpdateWithWhereUniqueWithoutProductoInput = {
    where: ReparacionWhereUniqueInput
    data: XOR<ReparacionUpdateWithoutProductoInput, ReparacionUncheckedUpdateWithoutProductoInput>
  }

  export type ReparacionUpdateManyWithWhereWithoutProductoInput = {
    where: ReparacionScalarWhereInput
    data: XOR<ReparacionUpdateManyMutationInput, ReparacionUncheckedUpdateManyWithoutProductoInput>
  }

  export type ReparacionScalarWhereInput = {
    AND?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
    OR?: ReparacionScalarWhereInput[]
    NOT?: ReparacionScalarWhereInput | ReparacionScalarWhereInput[]
    id?: IntFilter<"Reparacion"> | number
    usuarioId?: IntFilter<"Reparacion"> | number
    sucursalId?: IntFilter<"Reparacion"> | number
    clienteId?: IntFilter<"Reparacion"> | number
    productoId?: IntNullableFilter<"Reparacion"> | number | null
    productoExterno?: StringNullableFilter<"Reparacion"> | string | null
    problemas?: StringFilter<"Reparacion"> | string
    observaciones?: StringNullableFilter<"Reparacion"> | string | null
    fechaRecibido?: DateTimeFilter<"Reparacion"> | Date | string
    fechaEntregado?: DateTimeNullableFilter<"Reparacion"> | Date | string | null
    estado?: EnumEstadoReparacionFilter<"Reparacion"> | $Enums.EstadoReparacion
    hojaSolucion?: StringNullableFilter<"Reparacion"> | string | null
    creadoEn?: DateTimeFilter<"Reparacion"> | Date | string
    actualizadoEn?: DateTimeFilter<"Reparacion"> | Date | string
  }

  export type ProductoCreateWithoutHistorialPrecioCostoInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutHistorialPrecioCostoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutHistorialPrecioCostoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutHistorialPrecioCostoInput, ProductoUncheckedCreateWithoutHistorialPrecioCostoInput>
  }

  export type UsuarioCreateWithoutHistorialPrecioCostoInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutHistorialPrecioCostoInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutHistorialPrecioCostoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutHistorialPrecioCostoInput, UsuarioUncheckedCreateWithoutHistorialPrecioCostoInput>
  }

  export type ProductoUpsertWithoutHistorialPrecioCostoInput = {
    update: XOR<ProductoUpdateWithoutHistorialPrecioCostoInput, ProductoUncheckedUpdateWithoutHistorialPrecioCostoInput>
    create: XOR<ProductoCreateWithoutHistorialPrecioCostoInput, ProductoUncheckedCreateWithoutHistorialPrecioCostoInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutHistorialPrecioCostoInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutHistorialPrecioCostoInput, ProductoUncheckedUpdateWithoutHistorialPrecioCostoInput>
  }

  export type ProductoUpdateWithoutHistorialPrecioCostoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutHistorialPrecioCostoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioUpsertWithoutHistorialPrecioCostoInput = {
    update: XOR<UsuarioUpdateWithoutHistorialPrecioCostoInput, UsuarioUncheckedUpdateWithoutHistorialPrecioCostoInput>
    create: XOR<UsuarioCreateWithoutHistorialPrecioCostoInput, UsuarioUncheckedCreateWithoutHistorialPrecioCostoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutHistorialPrecioCostoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutHistorialPrecioCostoInput, UsuarioUncheckedUpdateWithoutHistorialPrecioCostoInput>
  }

  export type UsuarioUpdateWithoutHistorialPrecioCostoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutHistorialPrecioCostoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductoCreateWithoutPreciosInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutPreciosInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutPreciosInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutPreciosInput, ProductoUncheckedCreateWithoutPreciosInput>
  }

  export type UsuarioCreateWithoutPrecioProductoInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutPrecioProductoInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutPrecioProductoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPrecioProductoInput, UsuarioUncheckedCreateWithoutPrecioProductoInput>
  }

  export type ProductoUpsertWithoutPreciosInput = {
    update: XOR<ProductoUpdateWithoutPreciosInput, ProductoUncheckedUpdateWithoutPreciosInput>
    create: XOR<ProductoCreateWithoutPreciosInput, ProductoUncheckedCreateWithoutPreciosInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutPreciosInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutPreciosInput, ProductoUncheckedUpdateWithoutPreciosInput>
  }

  export type ProductoUpdateWithoutPreciosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutPreciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioUpsertWithoutPrecioProductoInput = {
    update: XOR<UsuarioUpdateWithoutPrecioProductoInput, UsuarioUncheckedUpdateWithoutPrecioProductoInput>
    create: XOR<UsuarioCreateWithoutPrecioProductoInput, UsuarioUncheckedCreateWithoutPrecioProductoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPrecioProductoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPrecioProductoInput, UsuarioUncheckedUpdateWithoutPrecioProductoInput>
  }

  export type UsuarioUpdateWithoutPrecioProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPrecioProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductoCreateWithoutHistorialPrecioInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutHistorialPrecioInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutHistorialPrecioInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutHistorialPrecioInput, ProductoUncheckedCreateWithoutHistorialPrecioInput>
  }

  export type ProductoUpsertWithoutHistorialPrecioInput = {
    update: XOR<ProductoUpdateWithoutHistorialPrecioInput, ProductoUncheckedUpdateWithoutHistorialPrecioInput>
    create: XOR<ProductoCreateWithoutHistorialPrecioInput, ProductoUncheckedCreateWithoutHistorialPrecioInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutHistorialPrecioInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutHistorialPrecioInput, ProductoUncheckedUpdateWithoutHistorialPrecioInput>
  }

  export type ProductoUpdateWithoutHistorialPrecioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutHistorialPrecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateWithoutAjusteStockInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutAjusteStockInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutAjusteStockInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutAjusteStockInput, ProductoUncheckedCreateWithoutAjusteStockInput>
  }

  export type StockCreateWithoutAjusteStockInput = {
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    producto: ProductoCreateNestedOneWithoutStockInput
    entregaStock?: EntregaStockCreateNestedOneWithoutStockEntregadoInput
    sucursal: SucursalCreateNestedOneWithoutProductosInput
    Vencimiento?: VencimientoCreateNestedManyWithoutStockInput
  }

  export type StockUncheckedCreateWithoutAjusteStockInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    sucursalId: number
    Vencimiento?: VencimientoUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutAjusteStockInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutAjusteStockInput, StockUncheckedCreateWithoutAjusteStockInput>
  }

  export type UsuarioCreateWithoutAjusteStockInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutAjusteStockInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutAjusteStockInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAjusteStockInput, UsuarioUncheckedCreateWithoutAjusteStockInput>
  }

  export type ProductoUpsertWithoutAjusteStockInput = {
    update: XOR<ProductoUpdateWithoutAjusteStockInput, ProductoUncheckedUpdateWithoutAjusteStockInput>
    create: XOR<ProductoCreateWithoutAjusteStockInput, ProductoUncheckedCreateWithoutAjusteStockInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutAjusteStockInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutAjusteStockInput, ProductoUncheckedUpdateWithoutAjusteStockInput>
  }

  export type ProductoUpdateWithoutAjusteStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutAjusteStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type StockUpsertWithoutAjusteStockInput = {
    update: XOR<StockUpdateWithoutAjusteStockInput, StockUncheckedUpdateWithoutAjusteStockInput>
    create: XOR<StockCreateWithoutAjusteStockInput, StockUncheckedCreateWithoutAjusteStockInput>
    where?: StockWhereInput
  }

  export type StockUpdateToOneWithWhereWithoutAjusteStockInput = {
    where?: StockWhereInput
    data: XOR<StockUpdateWithoutAjusteStockInput, StockUncheckedUpdateWithoutAjusteStockInput>
  }

  export type StockUpdateWithoutAjusteStockInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutStockNestedInput
    entregaStock?: EntregaStockUpdateOneWithoutStockEntregadoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutProductosNestedInput
    Vencimiento?: VencimientoUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateWithoutAjusteStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: IntFieldUpdateOperationsInput | number
    Vencimiento?: VencimientoUncheckedUpdateManyWithoutStockNestedInput
  }

  export type UsuarioUpsertWithoutAjusteStockInput = {
    update: XOR<UsuarioUpdateWithoutAjusteStockInput, UsuarioUncheckedUpdateWithoutAjusteStockInput>
    create: XOR<UsuarioCreateWithoutAjusteStockInput, UsuarioUncheckedCreateWithoutAjusteStockInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAjusteStockInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAjusteStockInput, UsuarioUncheckedUpdateWithoutAjusteStockInput>
  }

  export type UsuarioUpdateWithoutAjusteStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutAjusteStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductoCreateWithoutEliminacionStockInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutEliminacionStockInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutEliminacionStockInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutEliminacionStockInput, ProductoUncheckedCreateWithoutEliminacionStockInput>
  }

  export type UsuarioCreateWithoutEliminacionStockInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutEliminacionStockInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutEliminacionStockInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEliminacionStockInput, UsuarioUncheckedCreateWithoutEliminacionStockInput>
  }

  export type SucursalCreateWithoutEliminacionStockInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutEliminacionStockInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutEliminacionStockInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutEliminacionStockInput, SucursalUncheckedCreateWithoutEliminacionStockInput>
  }

  export type ProductoUpsertWithoutEliminacionStockInput = {
    update: XOR<ProductoUpdateWithoutEliminacionStockInput, ProductoUncheckedUpdateWithoutEliminacionStockInput>
    create: XOR<ProductoCreateWithoutEliminacionStockInput, ProductoUncheckedCreateWithoutEliminacionStockInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutEliminacionStockInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutEliminacionStockInput, ProductoUncheckedUpdateWithoutEliminacionStockInput>
  }

  export type ProductoUpdateWithoutEliminacionStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutEliminacionStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioUpsertWithoutEliminacionStockInput = {
    update: XOR<UsuarioUpdateWithoutEliminacionStockInput, UsuarioUncheckedUpdateWithoutEliminacionStockInput>
    create: XOR<UsuarioCreateWithoutEliminacionStockInput, UsuarioUncheckedCreateWithoutEliminacionStockInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEliminacionStockInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEliminacionStockInput, UsuarioUncheckedUpdateWithoutEliminacionStockInput>
  }

  export type UsuarioUpdateWithoutEliminacionStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEliminacionStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutEliminacionStockInput = {
    update: XOR<SucursalUpdateWithoutEliminacionStockInput, SucursalUncheckedUpdateWithoutEliminacionStockInput>
    create: XOR<SucursalCreateWithoutEliminacionStockInput, SucursalUncheckedCreateWithoutEliminacionStockInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutEliminacionStockInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutEliminacionStockInput, SucursalUncheckedUpdateWithoutEliminacionStockInput>
  }

  export type SucursalUpdateWithoutEliminacionStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutEliminacionStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type ProductoCreateWithoutEliminacionProductoInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutEliminacionProductoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutEliminacionProductoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutEliminacionProductoInput, ProductoUncheckedCreateWithoutEliminacionProductoInput>
  }

  export type UsuarioCreateWithoutEliminacionProductoInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutEliminacionProductoInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutEliminacionProductoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEliminacionProductoInput, UsuarioUncheckedCreateWithoutEliminacionProductoInput>
  }

  export type ProductoUpsertWithoutEliminacionProductoInput = {
    update: XOR<ProductoUpdateWithoutEliminacionProductoInput, ProductoUncheckedUpdateWithoutEliminacionProductoInput>
    create: XOR<ProductoCreateWithoutEliminacionProductoInput, ProductoUncheckedCreateWithoutEliminacionProductoInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutEliminacionProductoInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutEliminacionProductoInput, ProductoUncheckedUpdateWithoutEliminacionProductoInput>
  }

  export type ProductoUpdateWithoutEliminacionProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutEliminacionProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioUpsertWithoutEliminacionProductoInput = {
    update: XOR<UsuarioUpdateWithoutEliminacionProductoInput, UsuarioUncheckedUpdateWithoutEliminacionProductoInput>
    create: XOR<UsuarioCreateWithoutEliminacionProductoInput, UsuarioUncheckedCreateWithoutEliminacionProductoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEliminacionProductoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEliminacionProductoInput, UsuarioUncheckedUpdateWithoutEliminacionProductoInput>
  }

  export type UsuarioUpdateWithoutEliminacionProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEliminacionProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ClienteCreateWithoutEliminacionClienteInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutEliminacionClienteInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutEliminacionClienteInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutEliminacionClienteInput, ClienteUncheckedCreateWithoutEliminacionClienteInput>
  }

  export type UsuarioCreateWithoutEliminacionClienteInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutEliminacionClienteInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutEliminacionClienteInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEliminacionClienteInput, UsuarioUncheckedCreateWithoutEliminacionClienteInput>
  }

  export type ClienteUpsertWithoutEliminacionClienteInput = {
    update: XOR<ClienteUpdateWithoutEliminacionClienteInput, ClienteUncheckedUpdateWithoutEliminacionClienteInput>
    create: XOR<ClienteCreateWithoutEliminacionClienteInput, ClienteUncheckedCreateWithoutEliminacionClienteInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutEliminacionClienteInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutEliminacionClienteInput, ClienteUncheckedUpdateWithoutEliminacionClienteInput>
  }

  export type ClienteUpdateWithoutEliminacionClienteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutEliminacionClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type UsuarioUpsertWithoutEliminacionClienteInput = {
    update: XOR<UsuarioUpdateWithoutEliminacionClienteInput, UsuarioUncheckedUpdateWithoutEliminacionClienteInput>
    create: XOR<UsuarioCreateWithoutEliminacionClienteInput, UsuarioUncheckedCreateWithoutEliminacionClienteInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEliminacionClienteInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEliminacionClienteInput, UsuarioUncheckedUpdateWithoutEliminacionClienteInput>
  }

  export type UsuarioUpdateWithoutEliminacionClienteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEliminacionClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductoCreateWithoutStockInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutStockInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutStockInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutStockInput, ProductoUncheckedCreateWithoutStockInput>
  }

  export type EntregaStockCreateWithoutStockEntregadoInput = {
    montoTotal: number
    fechaEntrega?: Date | string
    proveedor?: ProveedorCreateNestedOneWithoutEntregasStockInput
    usuarioRecibido?: UsuarioCreateNestedOneWithoutEntregasRecibidasInput
    sucursal?: SucursalCreateNestedOneWithoutEntregaStockInput
  }

  export type EntregaStockUncheckedCreateWithoutStockEntregadoInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
    sucursalId?: number | null
  }

  export type EntregaStockCreateOrConnectWithoutStockEntregadoInput = {
    where: EntregaStockWhereUniqueInput
    create: XOR<EntregaStockCreateWithoutStockEntregadoInput, EntregaStockUncheckedCreateWithoutStockEntregadoInput>
  }

  export type SucursalCreateWithoutProductosInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutProductosInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutProductosInput, SucursalUncheckedCreateWithoutProductosInput>
  }

  export type VencimientoCreateWithoutStockInput = {
    fechaVencimiento: Date | string
    estado?: $Enums.EstadoVencimiento
    descripcion?: string | null
    fechaCreacion?: Date | string
  }

  export type VencimientoUncheckedCreateWithoutStockInput = {
    id?: number
    fechaVencimiento: Date | string
    estado?: $Enums.EstadoVencimiento
    descripcion?: string | null
    fechaCreacion?: Date | string
  }

  export type VencimientoCreateOrConnectWithoutStockInput = {
    where: VencimientoWhereUniqueInput
    create: XOR<VencimientoCreateWithoutStockInput, VencimientoUncheckedCreateWithoutStockInput>
  }

  export type VencimientoCreateManyStockInputEnvelope = {
    data: VencimientoCreateManyStockInput | VencimientoCreateManyStockInput[]
    skipDuplicates?: boolean
  }

  export type AjusteStockCreateWithoutStockInput = {
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    descripcion?: string | null
    producto: ProductoCreateNestedOneWithoutAjusteStockInput
    usuario?: UsuarioCreateNestedOneWithoutAjusteStockInput
  }

  export type AjusteStockUncheckedCreateWithoutStockInput = {
    id?: number
    productoId: number
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    usuarioId?: number | null
    descripcion?: string | null
  }

  export type AjusteStockCreateOrConnectWithoutStockInput = {
    where: AjusteStockWhereUniqueInput
    create: XOR<AjusteStockCreateWithoutStockInput, AjusteStockUncheckedCreateWithoutStockInput>
  }

  export type AjusteStockCreateManyStockInputEnvelope = {
    data: AjusteStockCreateManyStockInput | AjusteStockCreateManyStockInput[]
    skipDuplicates?: boolean
  }

  export type ProductoUpsertWithoutStockInput = {
    update: XOR<ProductoUpdateWithoutStockInput, ProductoUncheckedUpdateWithoutStockInput>
    create: XOR<ProductoCreateWithoutStockInput, ProductoUncheckedCreateWithoutStockInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutStockInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutStockInput, ProductoUncheckedUpdateWithoutStockInput>
  }

  export type ProductoUpdateWithoutStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type EntregaStockUpsertWithoutStockEntregadoInput = {
    update: XOR<EntregaStockUpdateWithoutStockEntregadoInput, EntregaStockUncheckedUpdateWithoutStockEntregadoInput>
    create: XOR<EntregaStockCreateWithoutStockEntregadoInput, EntregaStockUncheckedCreateWithoutStockEntregadoInput>
    where?: EntregaStockWhereInput
  }

  export type EntregaStockUpdateToOneWithWhereWithoutStockEntregadoInput = {
    where?: EntregaStockWhereInput
    data: XOR<EntregaStockUpdateWithoutStockEntregadoInput, EntregaStockUncheckedUpdateWithoutStockEntregadoInput>
  }

  export type EntregaStockUpdateWithoutStockEntregadoInput = {
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: ProveedorUpdateOneWithoutEntregasStockNestedInput
    usuarioRecibido?: UsuarioUpdateOneWithoutEntregasRecibidasNestedInput
    sucursal?: SucursalUpdateOneWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateWithoutStockEntregadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SucursalUpsertWithoutProductosInput = {
    update: XOR<SucursalUpdateWithoutProductosInput, SucursalUncheckedUpdateWithoutProductosInput>
    create: XOR<SucursalCreateWithoutProductosInput, SucursalUncheckedCreateWithoutProductosInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutProductosInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutProductosInput, SucursalUncheckedUpdateWithoutProductosInput>
  }

  export type SucursalUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type VencimientoUpsertWithWhereUniqueWithoutStockInput = {
    where: VencimientoWhereUniqueInput
    update: XOR<VencimientoUpdateWithoutStockInput, VencimientoUncheckedUpdateWithoutStockInput>
    create: XOR<VencimientoCreateWithoutStockInput, VencimientoUncheckedCreateWithoutStockInput>
  }

  export type VencimientoUpdateWithWhereUniqueWithoutStockInput = {
    where: VencimientoWhereUniqueInput
    data: XOR<VencimientoUpdateWithoutStockInput, VencimientoUncheckedUpdateWithoutStockInput>
  }

  export type VencimientoUpdateManyWithWhereWithoutStockInput = {
    where: VencimientoScalarWhereInput
    data: XOR<VencimientoUpdateManyMutationInput, VencimientoUncheckedUpdateManyWithoutStockInput>
  }

  export type VencimientoScalarWhereInput = {
    AND?: VencimientoScalarWhereInput | VencimientoScalarWhereInput[]
    OR?: VencimientoScalarWhereInput[]
    NOT?: VencimientoScalarWhereInput | VencimientoScalarWhereInput[]
    id?: IntFilter<"Vencimiento"> | number
    fechaVencimiento?: DateTimeFilter<"Vencimiento"> | Date | string
    estado?: EnumEstadoVencimientoFilter<"Vencimiento"> | $Enums.EstadoVencimiento
    descripcion?: StringNullableFilter<"Vencimiento"> | string | null
    stockId?: IntNullableFilter<"Vencimiento"> | number | null
    fechaCreacion?: DateTimeFilter<"Vencimiento"> | Date | string
  }

  export type AjusteStockUpsertWithWhereUniqueWithoutStockInput = {
    where: AjusteStockWhereUniqueInput
    update: XOR<AjusteStockUpdateWithoutStockInput, AjusteStockUncheckedUpdateWithoutStockInput>
    create: XOR<AjusteStockCreateWithoutStockInput, AjusteStockUncheckedCreateWithoutStockInput>
  }

  export type AjusteStockUpdateWithWhereUniqueWithoutStockInput = {
    where: AjusteStockWhereUniqueInput
    data: XOR<AjusteStockUpdateWithoutStockInput, AjusteStockUncheckedUpdateWithoutStockInput>
  }

  export type AjusteStockUpdateManyWithWhereWithoutStockInput = {
    where: AjusteStockScalarWhereInput
    data: XOR<AjusteStockUpdateManyMutationInput, AjusteStockUncheckedUpdateManyWithoutStockInput>
  }

  export type StockCreateWithoutSucursalInput = {
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    producto: ProductoCreateNestedOneWithoutStockInput
    entregaStock?: EntregaStockCreateNestedOneWithoutStockEntregadoInput
    Vencimiento?: VencimientoCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutStockInput
  }

  export type StockUncheckedCreateWithoutSucursalInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    Vencimiento?: VencimientoUncheckedCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutSucursalInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutSucursalInput, StockUncheckedCreateWithoutSucursalInput>
  }

  export type StockCreateManySucursalInputEnvelope = {
    data: StockCreateManySucursalInput | StockCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutSucursalInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutSucursalInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutSucursalInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSucursalInput, UsuarioUncheckedCreateWithoutSucursalInput>
  }

  export type UsuarioCreateManySucursalInputEnvelope = {
    data: UsuarioCreateManySucursalInput | UsuarioCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type VentaCreateWithoutSucursalInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    cliente?: ClienteCreateNestedOneWithoutComprasInput
    productos?: VentaProductoCreateNestedManyWithoutVentaInput
    metodoPago?: PagoCreateNestedOneWithoutVentaInput
    registroCaja?: RegistroCajaCreateNestedOneWithoutVentasInput
    ventaCuota?: VentaCuotaCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutSucursalInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
    productos?: VentaProductoUncheckedCreateNestedManyWithoutVentaInput
    metodoPago?: PagoUncheckedCreateNestedOneWithoutVentaInput
    ventaCuota?: VentaCuotaUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutSucursalInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaCreateManySucursalInputEnvelope = {
    data: VentaCreateManySucursalInput | VentaCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type TransferenciaProductoCreateWithoutSucursalOrigenInput = {
    cantidad: number
    fechaTransferencia?: Date | string
    producto: ProductoCreateNestedOneWithoutTransferenciaProductoInput
    sucursalDestino: SucursalCreateNestedOneWithoutTransferenciaProductoDestinoInput
    usuarioEncargado?: UsuarioCreateNestedOneWithoutTransferenciaProductoInput
  }

  export type TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type TransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput = {
    where: TransferenciaProductoWhereUniqueInput
    create: XOR<TransferenciaProductoCreateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput>
  }

  export type TransferenciaProductoCreateManySucursalOrigenInputEnvelope = {
    data: TransferenciaProductoCreateManySucursalOrigenInput | TransferenciaProductoCreateManySucursalOrigenInput[]
    skipDuplicates?: boolean
  }

  export type TransferenciaProductoCreateWithoutSucursalDestinoInput = {
    cantidad: number
    fechaTransferencia?: Date | string
    producto: ProductoCreateNestedOneWithoutTransferenciaProductoInput
    sucursalOrigen: SucursalCreateNestedOneWithoutTransferenciaProductoInput
    usuarioEncargado?: UsuarioCreateNestedOneWithoutTransferenciaProductoInput
  }

  export type TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type TransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput = {
    where: TransferenciaProductoWhereUniqueInput
    create: XOR<TransferenciaProductoCreateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput>
  }

  export type TransferenciaProductoCreateManySucursalDestinoInputEnvelope = {
    data: TransferenciaProductoCreateManySucursalDestinoInput | TransferenciaProductoCreateManySucursalDestinoInput[]
    skipDuplicates?: boolean
  }

  export type EntregaStockCreateWithoutSucursalInput = {
    montoTotal: number
    fechaEntrega?: Date | string
    proveedor?: ProveedorCreateNestedOneWithoutEntregasStockInput
    stockEntregado?: StockCreateNestedManyWithoutEntregaStockInput
    usuarioRecibido?: UsuarioCreateNestedOneWithoutEntregasRecibidasInput
  }

  export type EntregaStockUncheckedCreateWithoutSucursalInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
    stockEntregado?: StockUncheckedCreateNestedManyWithoutEntregaStockInput
  }

  export type EntregaStockCreateOrConnectWithoutSucursalInput = {
    where: EntregaStockWhereUniqueInput
    create: XOR<EntregaStockCreateWithoutSucursalInput, EntregaStockUncheckedCreateWithoutSucursalInput>
  }

  export type EntregaStockCreateManySucursalInputEnvelope = {
    data: EntregaStockCreateManySucursalInput | EntregaStockCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput = {
    cantidad: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudesTransferenciaInput
    sucursalDestino: SucursalCreateNestedOneWithoutSolicitudesDestinoInput
    usuarioSolicitante?: UsuarioCreateNestedOneWithoutSolicitudesEnviadasInput
    administrador?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasTransferenciaInput
  }

  export type SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalOrigenInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    create: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput>
  }

  export type SolicitudTransferenciaProductoCreateManySucursalOrigenInputEnvelope = {
    data: SolicitudTransferenciaProductoCreateManySucursalOrigenInput | SolicitudTransferenciaProductoCreateManySucursalOrigenInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput = {
    cantidad: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudesTransferenciaInput
    sucursalOrigen: SucursalCreateNestedOneWithoutSolicitudesOrigenInput
    usuarioSolicitante?: UsuarioCreateNestedOneWithoutSolicitudesEnviadasInput
    administrador?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasTransferenciaInput
  }

  export type SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateOrConnectWithoutSucursalDestinoInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    create: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput>
  }

  export type SolicitudTransferenciaProductoCreateManySucursalDestinoInputEnvelope = {
    data: SolicitudTransferenciaProductoCreateManySucursalDestinoInput | SolicitudTransferenciaProductoCreateManySucursalDestinoInput[]
    skipDuplicates?: boolean
  }

  export type EliminacionStockCreateWithoutSucursalInput = {
    fechaHora?: Date | string
    motivo?: string | null
    producto: ProductoCreateNestedOneWithoutEliminacionStockInput
    usuario?: UsuarioCreateNestedOneWithoutEliminacionStockInput
  }

  export type EliminacionStockUncheckedCreateWithoutSucursalInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionStockCreateOrConnectWithoutSucursalInput = {
    where: EliminacionStockWhereUniqueInput
    create: XOR<EliminacionStockCreateWithoutSucursalInput, EliminacionStockUncheckedCreateWithoutSucursalInput>
  }

  export type EliminacionStockCreateManySucursalInputEnvelope = {
    data: EliminacionStockCreateManySucursalInput | EliminacionStockCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type RegistroCajaCreateWithoutSucursalInput = {
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    usuario?: UsuarioCreateNestedOneWithoutRegistroCajaInput
    depositos?: DepositoCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUncheckedCreateWithoutSucursalInput = {
    id?: number
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    depositos?: DepositoUncheckedCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoUncheckedCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaUncheckedCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaCreateOrConnectWithoutSucursalInput = {
    where: RegistroCajaWhereUniqueInput
    create: XOR<RegistroCajaCreateWithoutSucursalInput, RegistroCajaUncheckedCreateWithoutSucursalInput>
  }

  export type RegistroCajaCreateManySucursalInputEnvelope = {
    data: RegistroCajaCreateManySucursalInput | RegistroCajaCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type DepositoCreateWithoutSucursalInput = {
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    registroCaja?: RegistroCajaCreateNestedOneWithoutDepositosInput
    usuario?: UsuarioCreateNestedOneWithoutDepositoInput
  }

  export type DepositoUncheckedCreateWithoutSucursalInput = {
    id?: number
    registroCajaId?: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    usuarioId?: number | null
  }

  export type DepositoCreateOrConnectWithoutSucursalInput = {
    where: DepositoWhereUniqueInput
    create: XOR<DepositoCreateWithoutSucursalInput, DepositoUncheckedCreateWithoutSucursalInput>
  }

  export type DepositoCreateManySucursalInputEnvelope = {
    data: DepositoCreateManySucursalInput | DepositoCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type EgresoCreateWithoutSucursalInput = {
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    registroCaja?: RegistroCajaCreateNestedOneWithoutEgresosInput
    usuario?: UsuarioCreateNestedOneWithoutEgresoInput
  }

  export type EgresoUncheckedCreateWithoutSucursalInput = {
    id?: number
    registroCajaId?: number | null
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    usuarioId?: number | null
  }

  export type EgresoCreateOrConnectWithoutSucursalInput = {
    where: EgresoWhereUniqueInput
    create: XOR<EgresoCreateWithoutSucursalInput, EgresoUncheckedCreateWithoutSucursalInput>
  }

  export type EgresoCreateManySucursalInputEnvelope = {
    data: EgresoCreateManySucursalInput | EgresoCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type SucursalSaldoCreateWithoutSucursalInput = {
    saldoAcumulado?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoUncheckedCreateWithoutSucursalInput = {
    id?: number
    saldoAcumulado?: number
    totalIngresos?: number
    totalEgresos?: number
    actualizadoEn?: Date | string
  }

  export type SucursalSaldoCreateOrConnectWithoutSucursalInput = {
    where: SucursalSaldoWhereUniqueInput
    create: XOR<SucursalSaldoCreateWithoutSucursalInput, SucursalSaldoUncheckedCreateWithoutSucursalInput>
  }

  export type VentaEliminadaCreateWithoutSucursalInput = {
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    usuario: UsuarioCreateNestedOneWithoutVentaEliminadaInput
    cliente?: ClienteCreateNestedOneWithoutVentaEliminadaInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaUncheckedCreateWithoutSucursalInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaCreateOrConnectWithoutSucursalInput = {
    where: VentaEliminadaWhereUniqueInput
    create: XOR<VentaEliminadaCreateWithoutSucursalInput, VentaEliminadaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaEliminadaCreateManySucursalInputEnvelope = {
    data: VentaEliminadaCreateManySucursalInput | VentaEliminadaCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type VentaCuotaCreateWithoutSucursalInput = {
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    cliente: ClienteCreateNestedOneWithoutVentaCuotaInput
    usuario: UsuarioCreateNestedOneWithoutVentaCuotaInput
    cuotas?: CuotaCreateNestedManyWithoutVentaCuotaInput
    venta?: VentaCreateNestedOneWithoutVentaCuotaInput
  }

  export type VentaCuotaUncheckedCreateWithoutSucursalInput = {
    id?: number
    clienteId: number
    usuarioId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
    cuotas?: CuotaUncheckedCreateNestedManyWithoutVentaCuotaInput
  }

  export type VentaCuotaCreateOrConnectWithoutSucursalInput = {
    where: VentaCuotaWhereUniqueInput
    create: XOR<VentaCuotaCreateWithoutSucursalInput, VentaCuotaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaCuotaCreateManySucursalInputEnvelope = {
    data: VentaCuotaCreateManySucursalInput | VentaCuotaCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type PlantillaComprobanteCreateWithoutSucursalInput = {
    nombre: string
    texto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type PlantillaComprobanteUncheckedCreateWithoutSucursalInput = {
    id?: number
    nombre: string
    texto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type PlantillaComprobanteCreateOrConnectWithoutSucursalInput = {
    where: PlantillaComprobanteWhereUniqueInput
    create: XOR<PlantillaComprobanteCreateWithoutSucursalInput, PlantillaComprobanteUncheckedCreateWithoutSucursalInput>
  }

  export type PlantillaComprobanteCreateManySucursalInputEnvelope = {
    data: PlantillaComprobanteCreateManySucursalInput | PlantillaComprobanteCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type ReparacionCreateWithoutSucursalInput = {
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutReparacionInput
    cliente: ClienteCreateNestedOneWithoutReparacionInput
    producto?: ProductoCreateNestedOneWithoutReparacionInput
    registros?: RegistroReparacionCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionUncheckedCreateWithoutSucursalInput = {
    id?: number
    usuarioId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    registros?: RegistroReparacionUncheckedCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionCreateOrConnectWithoutSucursalInput = {
    where: ReparacionWhereUniqueInput
    create: XOR<ReparacionCreateWithoutSucursalInput, ReparacionUncheckedCreateWithoutSucursalInput>
  }

  export type ReparacionCreateManySucursalInputEnvelope = {
    data: ReparacionCreateManySucursalInput | ReparacionCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type MetaUsuarioCreateWithoutSucursalInput = {
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
    usuario: UsuarioCreateNestedOneWithoutMetaUsuarioInput
  }

  export type MetaUsuarioUncheckedCreateWithoutSucursalInput = {
    id?: number
    usuarioId: number
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioCreateOrConnectWithoutSucursalInput = {
    where: MetaUsuarioWhereUniqueInput
    create: XOR<MetaUsuarioCreateWithoutSucursalInput, MetaUsuarioUncheckedCreateWithoutSucursalInput>
  }

  export type MetaUsuarioCreateManySucursalInputEnvelope = {
    data: MetaUsuarioCreateManySucursalInput | MetaUsuarioCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type MetaCobrosCreateWithoutSucursalInput = {
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    usuario: UsuarioCreateNestedOneWithoutMetaCobrosInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutMetaCobroInput
  }

  export type MetaCobrosUncheckedCreateWithoutSucursalInput = {
    id?: number
    usuarioId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutMetaCobroInput
  }

  export type MetaCobrosCreateOrConnectWithoutSucursalInput = {
    where: MetaCobrosWhereUniqueInput
    create: XOR<MetaCobrosCreateWithoutSucursalInput, MetaCobrosUncheckedCreateWithoutSucursalInput>
  }

  export type MetaCobrosCreateManySucursalInputEnvelope = {
    data: MetaCobrosCreateManySucursalInput | MetaCobrosCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type DepositoCobroCreateWithoutSucursalInput = {
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    usuario: UsuarioCreateNestedOneWithoutDepositoCobroInput
    metaCobro: MetaCobrosCreateNestedOneWithoutDepositoCobroInput
  }

  export type DepositoCobroUncheckedCreateWithoutSucursalInput = {
    id?: number
    usuarioId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    metaCobroId: number
  }

  export type DepositoCobroCreateOrConnectWithoutSucursalInput = {
    where: DepositoCobroWhereUniqueInput
    create: XOR<DepositoCobroCreateWithoutSucursalInput, DepositoCobroUncheckedCreateWithoutSucursalInput>
  }

  export type DepositoCobroCreateManySucursalInputEnvelope = {
    data: DepositoCobroCreateManySucursalInput | DepositoCobroCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type StockUpsertWithWhereUniqueWithoutSucursalInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutSucursalInput, StockUncheckedUpdateWithoutSucursalInput>
    create: XOR<StockCreateWithoutSucursalInput, StockUncheckedCreateWithoutSucursalInput>
  }

  export type StockUpdateWithWhereUniqueWithoutSucursalInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutSucursalInput, StockUncheckedUpdateWithoutSucursalInput>
  }

  export type StockUpdateManyWithWhereWithoutSucursalInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutSucursalInput>
  }

  export type UsuarioUpsertWithWhereUniqueWithoutSucursalInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutSucursalInput, UsuarioUncheckedUpdateWithoutSucursalInput>
    create: XOR<UsuarioCreateWithoutSucursalInput, UsuarioUncheckedCreateWithoutSucursalInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutSucursalInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutSucursalInput, UsuarioUncheckedUpdateWithoutSucursalInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutSucursalInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutSucursalInput>
  }

  export type VentaUpsertWithWhereUniqueWithoutSucursalInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutSucursalInput, VentaUncheckedUpdateWithoutSucursalInput>
    create: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutSucursalInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutSucursalInput, VentaUncheckedUpdateWithoutSucursalInput>
  }

  export type VentaUpdateManyWithWhereWithoutSucursalInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutSucursalInput>
  }

  export type TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput = {
    where: TransferenciaProductoWhereUniqueInput
    update: XOR<TransferenciaProductoUpdateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedUpdateWithoutSucursalOrigenInput>
    create: XOR<TransferenciaProductoCreateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput>
  }

  export type TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput = {
    where: TransferenciaProductoWhereUniqueInput
    data: XOR<TransferenciaProductoUpdateWithoutSucursalOrigenInput, TransferenciaProductoUncheckedUpdateWithoutSucursalOrigenInput>
  }

  export type TransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput = {
    where: TransferenciaProductoScalarWhereInput
    data: XOR<TransferenciaProductoUpdateManyMutationInput, TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenInput>
  }

  export type TransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput = {
    where: TransferenciaProductoWhereUniqueInput
    update: XOR<TransferenciaProductoUpdateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedUpdateWithoutSucursalDestinoInput>
    create: XOR<TransferenciaProductoCreateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput>
  }

  export type TransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput = {
    where: TransferenciaProductoWhereUniqueInput
    data: XOR<TransferenciaProductoUpdateWithoutSucursalDestinoInput, TransferenciaProductoUncheckedUpdateWithoutSucursalDestinoInput>
  }

  export type TransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput = {
    where: TransferenciaProductoScalarWhereInput
    data: XOR<TransferenciaProductoUpdateManyMutationInput, TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoInput>
  }

  export type EntregaStockUpsertWithWhereUniqueWithoutSucursalInput = {
    where: EntregaStockWhereUniqueInput
    update: XOR<EntregaStockUpdateWithoutSucursalInput, EntregaStockUncheckedUpdateWithoutSucursalInput>
    create: XOR<EntregaStockCreateWithoutSucursalInput, EntregaStockUncheckedCreateWithoutSucursalInput>
  }

  export type EntregaStockUpdateWithWhereUniqueWithoutSucursalInput = {
    where: EntregaStockWhereUniqueInput
    data: XOR<EntregaStockUpdateWithoutSucursalInput, EntregaStockUncheckedUpdateWithoutSucursalInput>
  }

  export type EntregaStockUpdateManyWithWhereWithoutSucursalInput = {
    where: EntregaStockScalarWhereInput
    data: XOR<EntregaStockUpdateManyMutationInput, EntregaStockUncheckedUpdateManyWithoutSucursalInput>
  }

  export type EntregaStockScalarWhereInput = {
    AND?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
    OR?: EntregaStockScalarWhereInput[]
    NOT?: EntregaStockScalarWhereInput | EntregaStockScalarWhereInput[]
    id?: IntFilter<"EntregaStock"> | number
    proveedorId?: IntNullableFilter<"EntregaStock"> | number | null
    montoTotal?: FloatFilter<"EntregaStock"> | number
    fechaEntrega?: DateTimeFilter<"EntregaStock"> | Date | string
    recibidoPorId?: IntNullableFilter<"EntregaStock"> | number | null
    sucursalId?: IntNullableFilter<"EntregaStock"> | number | null
  }

  export type SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalOrigenInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    update: XOR<SolicitudTransferenciaProductoUpdateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutSucursalOrigenInput>
    create: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalOrigenInput>
  }

  export type SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalOrigenInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    data: XOR<SolicitudTransferenciaProductoUpdateWithoutSucursalOrigenInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutSucursalOrigenInput>
  }

  export type SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalOrigenInput = {
    where: SolicitudTransferenciaProductoScalarWhereInput
    data: XOR<SolicitudTransferenciaProductoUpdateManyMutationInput, SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenInput>
  }

  export type SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutSucursalDestinoInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    update: XOR<SolicitudTransferenciaProductoUpdateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutSucursalDestinoInput>
    create: XOR<SolicitudTransferenciaProductoCreateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedCreateWithoutSucursalDestinoInput>
  }

  export type SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutSucursalDestinoInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    data: XOR<SolicitudTransferenciaProductoUpdateWithoutSucursalDestinoInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutSucursalDestinoInput>
  }

  export type SolicitudTransferenciaProductoUpdateManyWithWhereWithoutSucursalDestinoInput = {
    where: SolicitudTransferenciaProductoScalarWhereInput
    data: XOR<SolicitudTransferenciaProductoUpdateManyMutationInput, SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoInput>
  }

  export type EliminacionStockUpsertWithWhereUniqueWithoutSucursalInput = {
    where: EliminacionStockWhereUniqueInput
    update: XOR<EliminacionStockUpdateWithoutSucursalInput, EliminacionStockUncheckedUpdateWithoutSucursalInput>
    create: XOR<EliminacionStockCreateWithoutSucursalInput, EliminacionStockUncheckedCreateWithoutSucursalInput>
  }

  export type EliminacionStockUpdateWithWhereUniqueWithoutSucursalInput = {
    where: EliminacionStockWhereUniqueInput
    data: XOR<EliminacionStockUpdateWithoutSucursalInput, EliminacionStockUncheckedUpdateWithoutSucursalInput>
  }

  export type EliminacionStockUpdateManyWithWhereWithoutSucursalInput = {
    where: EliminacionStockScalarWhereInput
    data: XOR<EliminacionStockUpdateManyMutationInput, EliminacionStockUncheckedUpdateManyWithoutSucursalInput>
  }

  export type RegistroCajaUpsertWithWhereUniqueWithoutSucursalInput = {
    where: RegistroCajaWhereUniqueInput
    update: XOR<RegistroCajaUpdateWithoutSucursalInput, RegistroCajaUncheckedUpdateWithoutSucursalInput>
    create: XOR<RegistroCajaCreateWithoutSucursalInput, RegistroCajaUncheckedCreateWithoutSucursalInput>
  }

  export type RegistroCajaUpdateWithWhereUniqueWithoutSucursalInput = {
    where: RegistroCajaWhereUniqueInput
    data: XOR<RegistroCajaUpdateWithoutSucursalInput, RegistroCajaUncheckedUpdateWithoutSucursalInput>
  }

  export type RegistroCajaUpdateManyWithWhereWithoutSucursalInput = {
    where: RegistroCajaScalarWhereInput
    data: XOR<RegistroCajaUpdateManyMutationInput, RegistroCajaUncheckedUpdateManyWithoutSucursalInput>
  }

  export type RegistroCajaScalarWhereInput = {
    AND?: RegistroCajaScalarWhereInput | RegistroCajaScalarWhereInput[]
    OR?: RegistroCajaScalarWhereInput[]
    NOT?: RegistroCajaScalarWhereInput | RegistroCajaScalarWhereInput[]
    id?: IntFilter<"RegistroCaja"> | number
    sucursalId?: IntNullableFilter<"RegistroCaja"> | number | null
    usuarioId?: IntNullableFilter<"RegistroCaja"> | number | null
    saldoInicial?: FloatNullableFilter<"RegistroCaja"> | number | null
    saldoFinal?: FloatNullableFilter<"RegistroCaja"> | number | null
    fechaInicio?: DateTimeNullableFilter<"RegistroCaja"> | Date | string | null
    fechaCierre?: DateTimeNullableFilter<"RegistroCaja"> | Date | string | null
    estado?: EnumEstadoCajaNullableFilter<"RegistroCaja"> | $Enums.EstadoCaja | null
    comentario?: StringNullableFilter<"RegistroCaja"> | string | null
  }

  export type DepositoUpsertWithWhereUniqueWithoutSucursalInput = {
    where: DepositoWhereUniqueInput
    update: XOR<DepositoUpdateWithoutSucursalInput, DepositoUncheckedUpdateWithoutSucursalInput>
    create: XOR<DepositoCreateWithoutSucursalInput, DepositoUncheckedCreateWithoutSucursalInput>
  }

  export type DepositoUpdateWithWhereUniqueWithoutSucursalInput = {
    where: DepositoWhereUniqueInput
    data: XOR<DepositoUpdateWithoutSucursalInput, DepositoUncheckedUpdateWithoutSucursalInput>
  }

  export type DepositoUpdateManyWithWhereWithoutSucursalInput = {
    where: DepositoScalarWhereInput
    data: XOR<DepositoUpdateManyMutationInput, DepositoUncheckedUpdateManyWithoutSucursalInput>
  }

  export type EgresoUpsertWithWhereUniqueWithoutSucursalInput = {
    where: EgresoWhereUniqueInput
    update: XOR<EgresoUpdateWithoutSucursalInput, EgresoUncheckedUpdateWithoutSucursalInput>
    create: XOR<EgresoCreateWithoutSucursalInput, EgresoUncheckedCreateWithoutSucursalInput>
  }

  export type EgresoUpdateWithWhereUniqueWithoutSucursalInput = {
    where: EgresoWhereUniqueInput
    data: XOR<EgresoUpdateWithoutSucursalInput, EgresoUncheckedUpdateWithoutSucursalInput>
  }

  export type EgresoUpdateManyWithWhereWithoutSucursalInput = {
    where: EgresoScalarWhereInput
    data: XOR<EgresoUpdateManyMutationInput, EgresoUncheckedUpdateManyWithoutSucursalInput>
  }

  export type SucursalSaldoUpsertWithoutSucursalInput = {
    update: XOR<SucursalSaldoUpdateWithoutSucursalInput, SucursalSaldoUncheckedUpdateWithoutSucursalInput>
    create: XOR<SucursalSaldoCreateWithoutSucursalInput, SucursalSaldoUncheckedCreateWithoutSucursalInput>
    where?: SucursalSaldoWhereInput
  }

  export type SucursalSaldoUpdateToOneWithWhereWithoutSucursalInput = {
    where?: SucursalSaldoWhereInput
    data: XOR<SucursalSaldoUpdateWithoutSucursalInput, SucursalSaldoUncheckedUpdateWithoutSucursalInput>
  }

  export type SucursalSaldoUpdateWithoutSucursalInput = {
    saldoAcumulado?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalSaldoUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    saldoAcumulado?: FloatFieldUpdateOperationsInput | number
    totalIngresos?: FloatFieldUpdateOperationsInput | number
    totalEgresos?: FloatFieldUpdateOperationsInput | number
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaUpsertWithWhereUniqueWithoutSucursalInput = {
    where: VentaEliminadaWhereUniqueInput
    update: XOR<VentaEliminadaUpdateWithoutSucursalInput, VentaEliminadaUncheckedUpdateWithoutSucursalInput>
    create: XOR<VentaEliminadaCreateWithoutSucursalInput, VentaEliminadaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaEliminadaUpdateWithWhereUniqueWithoutSucursalInput = {
    where: VentaEliminadaWhereUniqueInput
    data: XOR<VentaEliminadaUpdateWithoutSucursalInput, VentaEliminadaUncheckedUpdateWithoutSucursalInput>
  }

  export type VentaEliminadaUpdateManyWithWhereWithoutSucursalInput = {
    where: VentaEliminadaScalarWhereInput
    data: XOR<VentaEliminadaUpdateManyMutationInput, VentaEliminadaUncheckedUpdateManyWithoutSucursalInput>
  }

  export type VentaEliminadaScalarWhereInput = {
    AND?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
    OR?: VentaEliminadaScalarWhereInput[]
    NOT?: VentaEliminadaScalarWhereInput | VentaEliminadaScalarWhereInput[]
    id?: IntFilter<"VentaEliminada"> | number
    usuarioId?: IntFilter<"VentaEliminada"> | number
    motivo?: StringFilter<"VentaEliminada"> | string
    totalVenta?: FloatFilter<"VentaEliminada"> | number
    clienteId?: IntNullableFilter<"VentaEliminada"> | number | null
    fechaEliminacion?: DateTimeFilter<"VentaEliminada"> | Date | string
    sucursalId?: IntFilter<"VentaEliminada"> | number
  }

  export type VentaCuotaUpsertWithWhereUniqueWithoutSucursalInput = {
    where: VentaCuotaWhereUniqueInput
    update: XOR<VentaCuotaUpdateWithoutSucursalInput, VentaCuotaUncheckedUpdateWithoutSucursalInput>
    create: XOR<VentaCuotaCreateWithoutSucursalInput, VentaCuotaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaCuotaUpdateWithWhereUniqueWithoutSucursalInput = {
    where: VentaCuotaWhereUniqueInput
    data: XOR<VentaCuotaUpdateWithoutSucursalInput, VentaCuotaUncheckedUpdateWithoutSucursalInput>
  }

  export type VentaCuotaUpdateManyWithWhereWithoutSucursalInput = {
    where: VentaCuotaScalarWhereInput
    data: XOR<VentaCuotaUpdateManyMutationInput, VentaCuotaUncheckedUpdateManyWithoutSucursalInput>
  }

  export type VentaCuotaScalarWhereInput = {
    AND?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
    OR?: VentaCuotaScalarWhereInput[]
    NOT?: VentaCuotaScalarWhereInput | VentaCuotaScalarWhereInput[]
    id?: IntFilter<"VentaCuota"> | number
    clienteId?: IntFilter<"VentaCuota"> | number
    usuarioId?: IntFilter<"VentaCuota"> | number
    sucursalId?: IntFilter<"VentaCuota"> | number
    totalVenta?: FloatFilter<"VentaCuota"> | number
    cuotaInicial?: FloatFilter<"VentaCuota"> | number
    cuotasTotales?: IntFilter<"VentaCuota"> | number
    fechaInicio?: DateTimeFilter<"VentaCuota"> | Date | string
    estado?: EnumEstadoCuotaFilter<"VentaCuota"> | $Enums.EstadoCuota
    creadoEn?: DateTimeFilter<"VentaCuota"> | Date | string
    actualizadoEn?: DateTimeFilter<"VentaCuota"> | Date | string
    dpi?: StringFilter<"VentaCuota"> | string
    testigos?: JsonFilter<"VentaCuota">
    fechaContrato?: DateTimeFilter<"VentaCuota"> | Date | string
    montoVenta?: FloatFilter<"VentaCuota"> | number
    garantiaMeses?: IntFilter<"VentaCuota"> | number
    totalPagado?: FloatFilter<"VentaCuota"> | number
    diasEntrePagos?: IntFilter<"VentaCuota"> | number
    interes?: IntFilter<"VentaCuota"> | number
    comentario?: StringNullableFilter<"VentaCuota"> | string | null
    ventaId?: IntNullableFilter<"VentaCuota"> | number | null
    montoTotalConInteres?: IntNullableFilter<"VentaCuota"> | number | null
  }

  export type PlantillaComprobanteUpsertWithWhereUniqueWithoutSucursalInput = {
    where: PlantillaComprobanteWhereUniqueInput
    update: XOR<PlantillaComprobanteUpdateWithoutSucursalInput, PlantillaComprobanteUncheckedUpdateWithoutSucursalInput>
    create: XOR<PlantillaComprobanteCreateWithoutSucursalInput, PlantillaComprobanteUncheckedCreateWithoutSucursalInput>
  }

  export type PlantillaComprobanteUpdateWithWhereUniqueWithoutSucursalInput = {
    where: PlantillaComprobanteWhereUniqueInput
    data: XOR<PlantillaComprobanteUpdateWithoutSucursalInput, PlantillaComprobanteUncheckedUpdateWithoutSucursalInput>
  }

  export type PlantillaComprobanteUpdateManyWithWhereWithoutSucursalInput = {
    where: PlantillaComprobanteScalarWhereInput
    data: XOR<PlantillaComprobanteUpdateManyMutationInput, PlantillaComprobanteUncheckedUpdateManyWithoutSucursalInput>
  }

  export type PlantillaComprobanteScalarWhereInput = {
    AND?: PlantillaComprobanteScalarWhereInput | PlantillaComprobanteScalarWhereInput[]
    OR?: PlantillaComprobanteScalarWhereInput[]
    NOT?: PlantillaComprobanteScalarWhereInput | PlantillaComprobanteScalarWhereInput[]
    id?: IntFilter<"PlantillaComprobante"> | number
    nombre?: StringFilter<"PlantillaComprobante"> | string
    texto?: StringFilter<"PlantillaComprobante"> | string
    sucursalId?: IntNullableFilter<"PlantillaComprobante"> | number | null
    creadoEn?: DateTimeFilter<"PlantillaComprobante"> | Date | string
    actualizadoEn?: DateTimeFilter<"PlantillaComprobante"> | Date | string
  }

  export type ReparacionUpsertWithWhereUniqueWithoutSucursalInput = {
    where: ReparacionWhereUniqueInput
    update: XOR<ReparacionUpdateWithoutSucursalInput, ReparacionUncheckedUpdateWithoutSucursalInput>
    create: XOR<ReparacionCreateWithoutSucursalInput, ReparacionUncheckedCreateWithoutSucursalInput>
  }

  export type ReparacionUpdateWithWhereUniqueWithoutSucursalInput = {
    where: ReparacionWhereUniqueInput
    data: XOR<ReparacionUpdateWithoutSucursalInput, ReparacionUncheckedUpdateWithoutSucursalInput>
  }

  export type ReparacionUpdateManyWithWhereWithoutSucursalInput = {
    where: ReparacionScalarWhereInput
    data: XOR<ReparacionUpdateManyMutationInput, ReparacionUncheckedUpdateManyWithoutSucursalInput>
  }

  export type MetaUsuarioUpsertWithWhereUniqueWithoutSucursalInput = {
    where: MetaUsuarioWhereUniqueInput
    update: XOR<MetaUsuarioUpdateWithoutSucursalInput, MetaUsuarioUncheckedUpdateWithoutSucursalInput>
    create: XOR<MetaUsuarioCreateWithoutSucursalInput, MetaUsuarioUncheckedCreateWithoutSucursalInput>
  }

  export type MetaUsuarioUpdateWithWhereUniqueWithoutSucursalInput = {
    where: MetaUsuarioWhereUniqueInput
    data: XOR<MetaUsuarioUpdateWithoutSucursalInput, MetaUsuarioUncheckedUpdateWithoutSucursalInput>
  }

  export type MetaUsuarioUpdateManyWithWhereWithoutSucursalInput = {
    where: MetaUsuarioScalarWhereInput
    data: XOR<MetaUsuarioUpdateManyMutationInput, MetaUsuarioUncheckedUpdateManyWithoutSucursalInput>
  }

  export type MetaUsuarioScalarWhereInput = {
    AND?: MetaUsuarioScalarWhereInput | MetaUsuarioScalarWhereInput[]
    OR?: MetaUsuarioScalarWhereInput[]
    NOT?: MetaUsuarioScalarWhereInput | MetaUsuarioScalarWhereInput[]
    id?: IntFilter<"MetaUsuario"> | number
    usuarioId?: IntFilter<"MetaUsuario"> | number
    sucursalId?: IntFilter<"MetaUsuario"> | number
    fechaInicio?: DateTimeFilter<"MetaUsuario"> | Date | string
    fechaFin?: DateTimeFilter<"MetaUsuario"> | Date | string
    montoMeta?: FloatFilter<"MetaUsuario"> | number
    montoActual?: FloatFilter<"MetaUsuario"> | number
    cumplida?: BoolFilter<"MetaUsuario"> | boolean
    fechaCumplida?: DateTimeNullableFilter<"MetaUsuario"> | Date | string | null
    numeroVentas?: FloatFilter<"MetaUsuario"> | number
    tituloMeta?: StringNullableFilter<"MetaUsuario"> | string | null
    estado?: EnumEstadoMetaTiendaFilter<"MetaUsuario"> | $Enums.EstadoMetaTienda
  }

  export type MetaCobrosUpsertWithWhereUniqueWithoutSucursalInput = {
    where: MetaCobrosWhereUniqueInput
    update: XOR<MetaCobrosUpdateWithoutSucursalInput, MetaCobrosUncheckedUpdateWithoutSucursalInput>
    create: XOR<MetaCobrosCreateWithoutSucursalInput, MetaCobrosUncheckedCreateWithoutSucursalInput>
  }

  export type MetaCobrosUpdateWithWhereUniqueWithoutSucursalInput = {
    where: MetaCobrosWhereUniqueInput
    data: XOR<MetaCobrosUpdateWithoutSucursalInput, MetaCobrosUncheckedUpdateWithoutSucursalInput>
  }

  export type MetaCobrosUpdateManyWithWhereWithoutSucursalInput = {
    where: MetaCobrosScalarWhereInput
    data: XOR<MetaCobrosUpdateManyMutationInput, MetaCobrosUncheckedUpdateManyWithoutSucursalInput>
  }

  export type MetaCobrosScalarWhereInput = {
    AND?: MetaCobrosScalarWhereInput | MetaCobrosScalarWhereInput[]
    OR?: MetaCobrosScalarWhereInput[]
    NOT?: MetaCobrosScalarWhereInput | MetaCobrosScalarWhereInput[]
    id?: IntFilter<"MetaCobros"> | number
    usuarioId?: IntFilter<"MetaCobros"> | number
    sucursalId?: IntFilter<"MetaCobros"> | number
    fechaCreado?: DateTimeFilter<"MetaCobros"> | Date | string
    fechaInicio?: DateTimeFilter<"MetaCobros"> | Date | string
    fechaFin?: DateTimeFilter<"MetaCobros"> | Date | string
    montoMeta?: FloatFilter<"MetaCobros"> | number
    montoActual?: FloatFilter<"MetaCobros"> | number
    cumplida?: BoolFilter<"MetaCobros"> | boolean
    fechaCumplida?: DateTimeNullableFilter<"MetaCobros"> | Date | string | null
    numeroDepositos?: IntFilter<"MetaCobros"> | number
    tituloMeta?: StringNullableFilter<"MetaCobros"> | string | null
    estado?: EnumEstadoMetaCobroFilter<"MetaCobros"> | $Enums.EstadoMetaCobro
  }

  export type DepositoCobroUpsertWithWhereUniqueWithoutSucursalInput = {
    where: DepositoCobroWhereUniqueInput
    update: XOR<DepositoCobroUpdateWithoutSucursalInput, DepositoCobroUncheckedUpdateWithoutSucursalInput>
    create: XOR<DepositoCobroCreateWithoutSucursalInput, DepositoCobroUncheckedCreateWithoutSucursalInput>
  }

  export type DepositoCobroUpdateWithWhereUniqueWithoutSucursalInput = {
    where: DepositoCobroWhereUniqueInput
    data: XOR<DepositoCobroUpdateWithoutSucursalInput, DepositoCobroUncheckedUpdateWithoutSucursalInput>
  }

  export type DepositoCobroUpdateManyWithWhereWithoutSucursalInput = {
    where: DepositoCobroScalarWhereInput
    data: XOR<DepositoCobroUpdateManyMutationInput, DepositoCobroUncheckedUpdateManyWithoutSucursalInput>
  }

  export type DepositoCobroScalarWhereInput = {
    AND?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
    OR?: DepositoCobroScalarWhereInput[]
    NOT?: DepositoCobroScalarWhereInput | DepositoCobroScalarWhereInput[]
    id?: IntFilter<"DepositoCobro"> | number
    usuarioId?: IntFilter<"DepositoCobro"> | number
    sucursalId?: IntFilter<"DepositoCobro"> | number
    numeroBoleta?: StringFilter<"DepositoCobro"> | string
    fechaRegistro?: DateTimeFilter<"DepositoCobro"> | Date | string
    montoDepositado?: FloatFilter<"DepositoCobro"> | number
    descripcion?: StringNullableFilter<"DepositoCobro"> | string | null
    metaCobroId?: IntFilter<"DepositoCobro"> | number
  }

  export type ProveedorCreateWithoutEntregasStockInput = {
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    Garantia?: GarantiaCreateNestedManyWithoutProveedorInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUncheckedCreateWithoutEntregasStockInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProveedorInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorCreateOrConnectWithoutEntregasStockInput = {
    where: ProveedorWhereUniqueInput
    create: XOR<ProveedorCreateWithoutEntregasStockInput, ProveedorUncheckedCreateWithoutEntregasStockInput>
  }

  export type StockCreateWithoutEntregaStockInput = {
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    producto: ProductoCreateNestedOneWithoutStockInput
    sucursal: SucursalCreateNestedOneWithoutProductosInput
    Vencimiento?: VencimientoCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutStockInput
  }

  export type StockUncheckedCreateWithoutEntregaStockInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    sucursalId: number
    Vencimiento?: VencimientoUncheckedCreateNestedManyWithoutStockInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutEntregaStockInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutEntregaStockInput, StockUncheckedCreateWithoutEntregaStockInput>
  }

  export type StockCreateManyEntregaStockInputEnvelope = {
    data: StockCreateManyEntregaStockInput | StockCreateManyEntregaStockInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioCreateWithoutEntregasRecibidasInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutEntregasRecibidasInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutEntregasRecibidasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEntregasRecibidasInput, UsuarioUncheckedCreateWithoutEntregasRecibidasInput>
  }

  export type SucursalCreateWithoutEntregaStockInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutEntregaStockInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutEntregaStockInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutEntregaStockInput, SucursalUncheckedCreateWithoutEntregaStockInput>
  }

  export type ProveedorUpsertWithoutEntregasStockInput = {
    update: XOR<ProveedorUpdateWithoutEntregasStockInput, ProveedorUncheckedUpdateWithoutEntregasStockInput>
    create: XOR<ProveedorCreateWithoutEntregasStockInput, ProveedorUncheckedCreateWithoutEntregasStockInput>
    where?: ProveedorWhereInput
  }

  export type ProveedorUpdateToOneWithWhereWithoutEntregasStockInput = {
    where?: ProveedorWhereInput
    data: XOR<ProveedorUpdateWithoutEntregasStockInput, ProveedorUncheckedUpdateWithoutEntregasStockInput>
  }

  export type ProveedorUpdateWithoutEntregasStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    Garantia?: GarantiaUpdateManyWithoutProveedorNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorUncheckedUpdateWithoutEntregasStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    Garantia?: GarantiaUncheckedUpdateManyWithoutProveedorNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type StockUpsertWithWhereUniqueWithoutEntregaStockInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutEntregaStockInput, StockUncheckedUpdateWithoutEntregaStockInput>
    create: XOR<StockCreateWithoutEntregaStockInput, StockUncheckedCreateWithoutEntregaStockInput>
  }

  export type StockUpdateWithWhereUniqueWithoutEntregaStockInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutEntregaStockInput, StockUncheckedUpdateWithoutEntregaStockInput>
  }

  export type StockUpdateManyWithWhereWithoutEntregaStockInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutEntregaStockInput>
  }

  export type UsuarioUpsertWithoutEntregasRecibidasInput = {
    update: XOR<UsuarioUpdateWithoutEntregasRecibidasInput, UsuarioUncheckedUpdateWithoutEntregasRecibidasInput>
    create: XOR<UsuarioCreateWithoutEntregasRecibidasInput, UsuarioUncheckedCreateWithoutEntregasRecibidasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEntregasRecibidasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEntregasRecibidasInput, UsuarioUncheckedUpdateWithoutEntregasRecibidasInput>
  }

  export type UsuarioUpdateWithoutEntregasRecibidasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutEntregasRecibidasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutEntregaStockInput = {
    update: XOR<SucursalUpdateWithoutEntregaStockInput, SucursalUncheckedUpdateWithoutEntregaStockInput>
    create: XOR<SucursalCreateWithoutEntregaStockInput, SucursalUncheckedCreateWithoutEntregaStockInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutEntregaStockInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutEntregaStockInput, SucursalUncheckedUpdateWithoutEntregaStockInput>
  }

  export type SucursalUpdateWithoutEntregaStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutEntregaStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type EntregaStockCreateWithoutUsuarioRecibidoInput = {
    montoTotal: number
    fechaEntrega?: Date | string
    proveedor?: ProveedorCreateNestedOneWithoutEntregasStockInput
    stockEntregado?: StockCreateNestedManyWithoutEntregaStockInput
    sucursal?: SucursalCreateNestedOneWithoutEntregaStockInput
  }

  export type EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    sucursalId?: number | null
    stockEntregado?: StockUncheckedCreateNestedManyWithoutEntregaStockInput
  }

  export type EntregaStockCreateOrConnectWithoutUsuarioRecibidoInput = {
    where: EntregaStockWhereUniqueInput
    create: XOR<EntregaStockCreateWithoutUsuarioRecibidoInput, EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput>
  }

  export type EntregaStockCreateManyUsuarioRecibidoInputEnvelope = {
    data: EntregaStockCreateManyUsuarioRecibidoInput | EntregaStockCreateManyUsuarioRecibidoInput[]
    skipDuplicates?: boolean
  }

  export type SucursalCreateWithoutUsuariosInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutUsuariosInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutUsuariosInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutUsuariosInput, SucursalUncheckedCreateWithoutUsuariosInput>
  }

  export type TransferenciaProductoCreateWithoutUsuarioEncargadoInput = {
    cantidad: number
    fechaTransferencia?: Date | string
    producto: ProductoCreateNestedOneWithoutTransferenciaProductoInput
    sucursalOrigen: SucursalCreateNestedOneWithoutTransferenciaProductoInput
    sucursalDestino: SucursalCreateNestedOneWithoutTransferenciaProductoDestinoInput
  }

  export type TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
  }

  export type TransferenciaProductoCreateOrConnectWithoutUsuarioEncargadoInput = {
    where: TransferenciaProductoWhereUniqueInput
    create: XOR<TransferenciaProductoCreateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput>
  }

  export type TransferenciaProductoCreateManyUsuarioEncargadoInputEnvelope = {
    data: TransferenciaProductoCreateManyUsuarioEncargadoInput | TransferenciaProductoCreateManyUsuarioEncargadoInput[]
    skipDuplicates?: boolean
  }

  export type PrecioProductoCreateWithoutCreadoPorInput = {
    precio: number
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
    producto?: ProductoCreateNestedOneWithoutPreciosInput
  }

  export type PrecioProductoUncheckedCreateWithoutCreadoPorInput = {
    id?: number
    productoId?: number | null
    precio: number
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
  }

  export type PrecioProductoCreateOrConnectWithoutCreadoPorInput = {
    where: PrecioProductoWhereUniqueInput
    create: XOR<PrecioProductoCreateWithoutCreadoPorInput, PrecioProductoUncheckedCreateWithoutCreadoPorInput>
  }

  export type PrecioProductoCreateManyCreadoPorInputEnvelope = {
    data: PrecioProductoCreateManyCreadoPorInput | PrecioProductoCreateManyCreadoPorInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudPrecioCreateWithoutSolicitadoPorInput = {
    precioSolicitado: number
    estado?: $Enums.EstadoSolicitud
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudPrecioInput
    aprobadoPor?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasInput
  }

  export type SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput = {
    id?: number
    productoId: number
    precioSolicitado: number
    estado?: $Enums.EstadoSolicitud
    aprobadoPorId?: number | null
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudPrecioCreateOrConnectWithoutSolicitadoPorInput = {
    where: SolicitudPrecioWhereUniqueInput
    create: XOR<SolicitudPrecioCreateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput>
  }

  export type SolicitudPrecioCreateManySolicitadoPorInputEnvelope = {
    data: SolicitudPrecioCreateManySolicitadoPorInput | SolicitudPrecioCreateManySolicitadoPorInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudPrecioCreateWithoutAprobadoPorInput = {
    precioSolicitado: number
    estado?: $Enums.EstadoSolicitud
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudPrecioInput
    solicitadoPor: UsuarioCreateNestedOneWithoutSolicitudesPrecioInput
  }

  export type SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput = {
    id?: number
    productoId: number
    precioSolicitado: number
    solicitadoPorId: number
    estado?: $Enums.EstadoSolicitud
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudPrecioCreateOrConnectWithoutAprobadoPorInput = {
    where: SolicitudPrecioWhereUniqueInput
    create: XOR<SolicitudPrecioCreateWithoutAprobadoPorInput, SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput>
  }

  export type SolicitudPrecioCreateManyAprobadoPorInputEnvelope = {
    data: SolicitudPrecioCreateManyAprobadoPorInput | SolicitudPrecioCreateManyAprobadoPorInput[]
    skipDuplicates?: boolean
  }

  export type NotificacionCreateWithoutRemitenteInput = {
    mensaje: string
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutNotificacionInput
    Usuario?: UsuarioCreateNestedManyWithoutNotificacionesRecibidasInput
  }

  export type NotificacionUncheckedCreateWithoutRemitenteInput = {
    id?: number
    mensaje: string
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutNotificacionInput
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutNotificacionesRecibidasInput
  }

  export type NotificacionCreateOrConnectWithoutRemitenteInput = {
    where: NotificacionWhereUniqueInput
    create: XOR<NotificacionCreateWithoutRemitenteInput, NotificacionUncheckedCreateWithoutRemitenteInput>
  }

  export type NotificacionCreateManyRemitenteInputEnvelope = {
    data: NotificacionCreateManyRemitenteInput | NotificacionCreateManyRemitenteInput[]
    skipDuplicates?: boolean
  }

  export type NotificacionCreateWithoutUsuarioInput = {
    mensaje: string
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    remitente?: UsuarioCreateNestedOneWithoutNotificacionesEnviadasInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutNotificacionInput
  }

  export type NotificacionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    mensaje: string
    remitenteId?: number | null
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutNotificacionInput
  }

  export type NotificacionCreateOrConnectWithoutUsuarioInput = {
    where: NotificacionWhereUniqueInput
    create: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionesUsuariosCreateWithoutUsuarioInput = {
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
    notificacion: NotificacionCreateNestedOneWithoutNotificacionesUsuariosInput
  }

  export type NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput = {
    id?: number
    notificacionId: number
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
  }

  export type NotificacionesUsuariosCreateOrConnectWithoutUsuarioInput = {
    where: NotificacionesUsuariosWhereUniqueInput
    create: XOR<NotificacionesUsuariosCreateWithoutUsuarioInput, NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionesUsuariosCreateManyUsuarioInputEnvelope = {
    data: NotificacionesUsuariosCreateManyUsuarioInput | NotificacionesUsuariosCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput = {
    cantidad: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudesTransferenciaInput
    sucursalOrigen: SucursalCreateNestedOneWithoutSolicitudesOrigenInput
    sucursalDestino: SucursalCreateNestedOneWithoutSolicitudesDestinoInput
    administrador?: UsuarioCreateNestedOneWithoutSolicitudesAprobadasTransferenciaInput
  }

  export type SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateOrConnectWithoutUsuarioSolicitanteInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    create: XOR<SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput>
  }

  export type SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInputEnvelope = {
    data: SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInput | SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInput[]
    skipDuplicates?: boolean
  }

  export type SolicitudTransferenciaProductoCreateWithoutAdministradorInput = {
    cantidad: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    producto: ProductoCreateNestedOneWithoutSolicitudesTransferenciaInput
    sucursalOrigen: SucursalCreateNestedOneWithoutSolicitudesOrigenInput
    sucursalDestino: SucursalCreateNestedOneWithoutSolicitudesDestinoInput
    usuarioSolicitante?: UsuarioCreateNestedOneWithoutSolicitudesEnviadasInput
  }

  export type SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
  }

  export type SolicitudTransferenciaProductoCreateOrConnectWithoutAdministradorInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    create: XOR<SolicitudTransferenciaProductoCreateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput>
  }

  export type SolicitudTransferenciaProductoCreateManyAdministradorInputEnvelope = {
    data: SolicitudTransferenciaProductoCreateManyAdministradorInput | SolicitudTransferenciaProductoCreateManyAdministradorInput[]
    skipDuplicates?: boolean
  }

  export type HistorialPrecioCostoCreateWithoutModificadoPorInput = {
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    producto: ProductoCreateNestedOneWithoutHistorialPrecioCostoInput
  }

  export type HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput = {
    id?: number
    productoId: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
  }

  export type HistorialPrecioCostoCreateOrConnectWithoutModificadoPorInput = {
    where: HistorialPrecioCostoWhereUniqueInput
    create: XOR<HistorialPrecioCostoCreateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput>
  }

  export type HistorialPrecioCostoCreateManyModificadoPorInputEnvelope = {
    data: HistorialPrecioCostoCreateManyModificadoPorInput | HistorialPrecioCostoCreateManyModificadoPorInput[]
    skipDuplicates?: boolean
  }

  export type AjusteStockCreateWithoutUsuarioInput = {
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    descripcion?: string | null
    producto: ProductoCreateNestedOneWithoutAjusteStockInput
    stock?: StockCreateNestedOneWithoutAjusteStockInput
  }

  export type AjusteStockUncheckedCreateWithoutUsuarioInput = {
    id?: number
    productoId: number
    stockId?: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    descripcion?: string | null
  }

  export type AjusteStockCreateOrConnectWithoutUsuarioInput = {
    where: AjusteStockWhereUniqueInput
    create: XOR<AjusteStockCreateWithoutUsuarioInput, AjusteStockUncheckedCreateWithoutUsuarioInput>
  }

  export type AjusteStockCreateManyUsuarioInputEnvelope = {
    data: AjusteStockCreateManyUsuarioInput | AjusteStockCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EliminacionProductoCreateWithoutUsuarioInput = {
    fechaHora?: Date | string
    motivo?: string | null
    producto: ProductoCreateNestedOneWithoutEliminacionProductoInput
  }

  export type EliminacionProductoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    motivo?: string | null
  }

  export type EliminacionProductoCreateOrConnectWithoutUsuarioInput = {
    where: EliminacionProductoWhereUniqueInput
    create: XOR<EliminacionProductoCreateWithoutUsuarioInput, EliminacionProductoUncheckedCreateWithoutUsuarioInput>
  }

  export type EliminacionProductoCreateManyUsuarioInputEnvelope = {
    data: EliminacionProductoCreateManyUsuarioInput | EliminacionProductoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EliminacionClienteCreateWithoutUsuarioInput = {
    fechaHora?: Date | string
    motivo?: string | null
    cliente: ClienteCreateNestedOneWithoutEliminacionClienteInput
  }

  export type EliminacionClienteUncheckedCreateWithoutUsuarioInput = {
    id?: number
    clienteId: number
    fechaHora?: Date | string
    motivo?: string | null
  }

  export type EliminacionClienteCreateOrConnectWithoutUsuarioInput = {
    where: EliminacionClienteWhereUniqueInput
    create: XOR<EliminacionClienteCreateWithoutUsuarioInput, EliminacionClienteUncheckedCreateWithoutUsuarioInput>
  }

  export type EliminacionClienteCreateManyUsuarioInputEnvelope = {
    data: EliminacionClienteCreateManyUsuarioInput | EliminacionClienteCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EliminacionStockCreateWithoutUsuarioInput = {
    fechaHora?: Date | string
    motivo?: string | null
    producto: ProductoCreateNestedOneWithoutEliminacionStockInput
    sucursal?: SucursalCreateNestedOneWithoutEliminacionStockInput
  }

  export type EliminacionStockUncheckedCreateWithoutUsuarioInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    sucursalId?: number | null
    motivo?: string | null
  }

  export type EliminacionStockCreateOrConnectWithoutUsuarioInput = {
    where: EliminacionStockWhereUniqueInput
    create: XOR<EliminacionStockCreateWithoutUsuarioInput, EliminacionStockUncheckedCreateWithoutUsuarioInput>
  }

  export type EliminacionStockCreateManyUsuarioInputEnvelope = {
    data: EliminacionStockCreateManyUsuarioInput | EliminacionStockCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type RegistroGarantiaCreateWithoutUsuarioInput = {
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    garantia: GarantiaCreateNestedOneWithoutRegistrosInput
    producto: ProductoCreateNestedOneWithoutRegistroGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutRegistroGarantiaInput
  }

  export type RegistroGarantiaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    garantiaId: number
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaCreateOrConnectWithoutUsuarioInput = {
    where: RegistroGarantiaWhereUniqueInput
    create: XOR<RegistroGarantiaCreateWithoutUsuarioInput, RegistroGarantiaUncheckedCreateWithoutUsuarioInput>
  }

  export type RegistroGarantiaCreateManyUsuarioInputEnvelope = {
    data: RegistroGarantiaCreateManyUsuarioInput | RegistroGarantiaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type GarantiaCreateWithoutUsuarioRecibeInput = {
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    cliente: ClienteCreateNestedOneWithoutGarantiaInput
    producto: ProductoCreateNestedOneWithoutGarantiaInput
    registros?: RegistroGarantiaCreateNestedManyWithoutGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutGarantiaInput
  }

  export type GarantiaUncheckedCreateWithoutUsuarioRecibeInput = {
    id?: number
    clienteId: number
    productoId: number
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
    registros?: RegistroGarantiaUncheckedCreateNestedManyWithoutGarantiaInput
  }

  export type GarantiaCreateOrConnectWithoutUsuarioRecibeInput = {
    where: GarantiaWhereUniqueInput
    create: XOR<GarantiaCreateWithoutUsuarioRecibeInput, GarantiaUncheckedCreateWithoutUsuarioRecibeInput>
  }

  export type GarantiaCreateManyUsuarioRecibeInputEnvelope = {
    data: GarantiaCreateManyUsuarioRecibeInput | GarantiaCreateManyUsuarioRecibeInput[]
    skipDuplicates?: boolean
  }

  export type RegistroCajaCreateWithoutUsuarioInput = {
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    sucursal?: SucursalCreateNestedOneWithoutRegistroCajaInput
    depositos?: DepositoCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    sucursalId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    depositos?: DepositoUncheckedCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoUncheckedCreateNestedManyWithoutRegistroCajaInput
    ventas?: VentaUncheckedCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaCreateOrConnectWithoutUsuarioInput = {
    where: RegistroCajaWhereUniqueInput
    create: XOR<RegistroCajaCreateWithoutUsuarioInput, RegistroCajaUncheckedCreateWithoutUsuarioInput>
  }

  export type RegistroCajaCreateManyUsuarioInputEnvelope = {
    data: RegistroCajaCreateManyUsuarioInput | RegistroCajaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DepositoCreateWithoutUsuarioInput = {
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    registroCaja?: RegistroCajaCreateNestedOneWithoutDepositosInput
    sucursal?: SucursalCreateNestedOneWithoutDepositoInput
  }

  export type DepositoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    registroCajaId?: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursalId?: number | null
  }

  export type DepositoCreateOrConnectWithoutUsuarioInput = {
    where: DepositoWhereUniqueInput
    create: XOR<DepositoCreateWithoutUsuarioInput, DepositoUncheckedCreateWithoutUsuarioInput>
  }

  export type DepositoCreateManyUsuarioInputEnvelope = {
    data: DepositoCreateManyUsuarioInput | DepositoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EgresoCreateWithoutUsuarioInput = {
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    registroCaja?: RegistroCajaCreateNestedOneWithoutEgresosInput
    sucursal?: SucursalCreateNestedOneWithoutEgresoInput
  }

  export type EgresoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    registroCajaId?: number | null
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursalId?: number | null
  }

  export type EgresoCreateOrConnectWithoutUsuarioInput = {
    where: EgresoWhereUniqueInput
    create: XOR<EgresoCreateWithoutUsuarioInput, EgresoUncheckedCreateWithoutUsuarioInput>
  }

  export type EgresoCreateManyUsuarioInputEnvelope = {
    data: EgresoCreateManyUsuarioInput | EgresoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type VentaEliminadaCreateWithoutUsuarioInput = {
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    cliente?: ClienteCreateNestedOneWithoutVentaEliminadaInput
    sucursal: SucursalCreateNestedOneWithoutVentaEliminadaInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
    sucursalId: number
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaCreateOrConnectWithoutUsuarioInput = {
    where: VentaEliminadaWhereUniqueInput
    create: XOR<VentaEliminadaCreateWithoutUsuarioInput, VentaEliminadaUncheckedCreateWithoutUsuarioInput>
  }

  export type VentaEliminadaCreateManyUsuarioInputEnvelope = {
    data: VentaEliminadaCreateManyUsuarioInput | VentaEliminadaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type VentaCuotaCreateWithoutUsuarioInput = {
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    cliente: ClienteCreateNestedOneWithoutVentaCuotaInput
    sucursal: SucursalCreateNestedOneWithoutVentaCuotaInput
    cuotas?: CuotaCreateNestedManyWithoutVentaCuotaInput
    venta?: VentaCreateNestedOneWithoutVentaCuotaInput
  }

  export type VentaCuotaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    clienteId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
    cuotas?: CuotaUncheckedCreateNestedManyWithoutVentaCuotaInput
  }

  export type VentaCuotaCreateOrConnectWithoutUsuarioInput = {
    where: VentaCuotaWhereUniqueInput
    create: XOR<VentaCuotaCreateWithoutUsuarioInput, VentaCuotaUncheckedCreateWithoutUsuarioInput>
  }

  export type VentaCuotaCreateManyUsuarioInputEnvelope = {
    data: VentaCuotaCreateManyUsuarioInput | VentaCuotaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CuotaCreateWithoutUsuarioInput = {
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
    ventaCuota: VentaCuotaCreateNestedOneWithoutCuotasInput
  }

  export type CuotaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    ventaCuotaId: number
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
  }

  export type CuotaCreateOrConnectWithoutUsuarioInput = {
    where: CuotaWhereUniqueInput
    create: XOR<CuotaCreateWithoutUsuarioInput, CuotaUncheckedCreateWithoutUsuarioInput>
  }

  export type CuotaCreateManyUsuarioInputEnvelope = {
    data: CuotaCreateManyUsuarioInput | CuotaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ReparacionCreateWithoutUsuarioInput = {
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    sucursal: SucursalCreateNestedOneWithoutReparacionInput
    cliente: ClienteCreateNestedOneWithoutReparacionInput
    producto?: ProductoCreateNestedOneWithoutReparacionInput
    registros?: RegistroReparacionCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    sucursalId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    registros?: RegistroReparacionUncheckedCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionCreateOrConnectWithoutUsuarioInput = {
    where: ReparacionWhereUniqueInput
    create: XOR<ReparacionCreateWithoutUsuarioInput, ReparacionUncheckedCreateWithoutUsuarioInput>
  }

  export type ReparacionCreateManyUsuarioInputEnvelope = {
    data: ReparacionCreateManyUsuarioInput | ReparacionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type RegistroReparacionCreateWithoutUsuarioInput = {
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
    reparacion: ReparacionCreateNestedOneWithoutRegistrosInput
  }

  export type RegistroReparacionUncheckedCreateWithoutUsuarioInput = {
    id?: number
    reparacionId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
  }

  export type RegistroReparacionCreateOrConnectWithoutUsuarioInput = {
    where: RegistroReparacionWhereUniqueInput
    create: XOR<RegistroReparacionCreateWithoutUsuarioInput, RegistroReparacionUncheckedCreateWithoutUsuarioInput>
  }

  export type RegistroReparacionCreateManyUsuarioInputEnvelope = {
    data: RegistroReparacionCreateManyUsuarioInput | RegistroReparacionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type MetaUsuarioCreateWithoutUsuarioInput = {
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
    sucursal: SucursalCreateNestedOneWithoutMetaUsuarioInput
  }

  export type MetaUsuarioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    sucursalId: number
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: MetaUsuarioWhereUniqueInput
    create: XOR<MetaUsuarioCreateWithoutUsuarioInput, MetaUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type MetaUsuarioCreateManyUsuarioInputEnvelope = {
    data: MetaUsuarioCreateManyUsuarioInput | MetaUsuarioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type MetaCobrosCreateWithoutUsuarioInput = {
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    sucursal: SucursalCreateNestedOneWithoutMetaCobrosInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutMetaCobroInput
  }

  export type MetaCobrosUncheckedCreateWithoutUsuarioInput = {
    id?: number
    sucursalId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutMetaCobroInput
  }

  export type MetaCobrosCreateOrConnectWithoutUsuarioInput = {
    where: MetaCobrosWhereUniqueInput
    create: XOR<MetaCobrosCreateWithoutUsuarioInput, MetaCobrosUncheckedCreateWithoutUsuarioInput>
  }

  export type MetaCobrosCreateManyUsuarioInputEnvelope = {
    data: MetaCobrosCreateManyUsuarioInput | MetaCobrosCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DepositoCobroCreateWithoutUsuarioInput = {
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    sucursal: SucursalCreateNestedOneWithoutDepositoCobroInput
    metaCobro: MetaCobrosCreateNestedOneWithoutDepositoCobroInput
  }

  export type DepositoCobroUncheckedCreateWithoutUsuarioInput = {
    id?: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    metaCobroId: number
  }

  export type DepositoCobroCreateOrConnectWithoutUsuarioInput = {
    where: DepositoCobroWhereUniqueInput
    create: XOR<DepositoCobroCreateWithoutUsuarioInput, DepositoCobroUncheckedCreateWithoutUsuarioInput>
  }

  export type DepositoCobroCreateManyUsuarioInputEnvelope = {
    data: DepositoCobroCreateManyUsuarioInput | DepositoCobroCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EntregaStockUpsertWithWhereUniqueWithoutUsuarioRecibidoInput = {
    where: EntregaStockWhereUniqueInput
    update: XOR<EntregaStockUpdateWithoutUsuarioRecibidoInput, EntregaStockUncheckedUpdateWithoutUsuarioRecibidoInput>
    create: XOR<EntregaStockCreateWithoutUsuarioRecibidoInput, EntregaStockUncheckedCreateWithoutUsuarioRecibidoInput>
  }

  export type EntregaStockUpdateWithWhereUniqueWithoutUsuarioRecibidoInput = {
    where: EntregaStockWhereUniqueInput
    data: XOR<EntregaStockUpdateWithoutUsuarioRecibidoInput, EntregaStockUncheckedUpdateWithoutUsuarioRecibidoInput>
  }

  export type EntregaStockUpdateManyWithWhereWithoutUsuarioRecibidoInput = {
    where: EntregaStockScalarWhereInput
    data: XOR<EntregaStockUpdateManyMutationInput, EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoInput>
  }

  export type SucursalUpsertWithoutUsuariosInput = {
    update: XOR<SucursalUpdateWithoutUsuariosInput, SucursalUncheckedUpdateWithoutUsuariosInput>
    create: XOR<SucursalCreateWithoutUsuariosInput, SucursalUncheckedCreateWithoutUsuariosInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutUsuariosInput, SucursalUncheckedUpdateWithoutUsuariosInput>
  }

  export type SucursalUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type TransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioEncargadoInput = {
    where: TransferenciaProductoWhereUniqueInput
    update: XOR<TransferenciaProductoUpdateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedUpdateWithoutUsuarioEncargadoInput>
    create: XOR<TransferenciaProductoCreateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedCreateWithoutUsuarioEncargadoInput>
  }

  export type TransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioEncargadoInput = {
    where: TransferenciaProductoWhereUniqueInput
    data: XOR<TransferenciaProductoUpdateWithoutUsuarioEncargadoInput, TransferenciaProductoUncheckedUpdateWithoutUsuarioEncargadoInput>
  }

  export type TransferenciaProductoUpdateManyWithWhereWithoutUsuarioEncargadoInput = {
    where: TransferenciaProductoScalarWhereInput
    data: XOR<TransferenciaProductoUpdateManyMutationInput, TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoInput>
  }

  export type PrecioProductoUpsertWithWhereUniqueWithoutCreadoPorInput = {
    where: PrecioProductoWhereUniqueInput
    update: XOR<PrecioProductoUpdateWithoutCreadoPorInput, PrecioProductoUncheckedUpdateWithoutCreadoPorInput>
    create: XOR<PrecioProductoCreateWithoutCreadoPorInput, PrecioProductoUncheckedCreateWithoutCreadoPorInput>
  }

  export type PrecioProductoUpdateWithWhereUniqueWithoutCreadoPorInput = {
    where: PrecioProductoWhereUniqueInput
    data: XOR<PrecioProductoUpdateWithoutCreadoPorInput, PrecioProductoUncheckedUpdateWithoutCreadoPorInput>
  }

  export type PrecioProductoUpdateManyWithWhereWithoutCreadoPorInput = {
    where: PrecioProductoScalarWhereInput
    data: XOR<PrecioProductoUpdateManyMutationInput, PrecioProductoUncheckedUpdateManyWithoutCreadoPorInput>
  }

  export type SolicitudPrecioUpsertWithWhereUniqueWithoutSolicitadoPorInput = {
    where: SolicitudPrecioWhereUniqueInput
    update: XOR<SolicitudPrecioUpdateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedUpdateWithoutSolicitadoPorInput>
    create: XOR<SolicitudPrecioCreateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedCreateWithoutSolicitadoPorInput>
  }

  export type SolicitudPrecioUpdateWithWhereUniqueWithoutSolicitadoPorInput = {
    where: SolicitudPrecioWhereUniqueInput
    data: XOR<SolicitudPrecioUpdateWithoutSolicitadoPorInput, SolicitudPrecioUncheckedUpdateWithoutSolicitadoPorInput>
  }

  export type SolicitudPrecioUpdateManyWithWhereWithoutSolicitadoPorInput = {
    where: SolicitudPrecioScalarWhereInput
    data: XOR<SolicitudPrecioUpdateManyMutationInput, SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorInput>
  }

  export type SolicitudPrecioUpsertWithWhereUniqueWithoutAprobadoPorInput = {
    where: SolicitudPrecioWhereUniqueInput
    update: XOR<SolicitudPrecioUpdateWithoutAprobadoPorInput, SolicitudPrecioUncheckedUpdateWithoutAprobadoPorInput>
    create: XOR<SolicitudPrecioCreateWithoutAprobadoPorInput, SolicitudPrecioUncheckedCreateWithoutAprobadoPorInput>
  }

  export type SolicitudPrecioUpdateWithWhereUniqueWithoutAprobadoPorInput = {
    where: SolicitudPrecioWhereUniqueInput
    data: XOR<SolicitudPrecioUpdateWithoutAprobadoPorInput, SolicitudPrecioUncheckedUpdateWithoutAprobadoPorInput>
  }

  export type SolicitudPrecioUpdateManyWithWhereWithoutAprobadoPorInput = {
    where: SolicitudPrecioScalarWhereInput
    data: XOR<SolicitudPrecioUpdateManyMutationInput, SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorInput>
  }

  export type NotificacionUpsertWithWhereUniqueWithoutRemitenteInput = {
    where: NotificacionWhereUniqueInput
    update: XOR<NotificacionUpdateWithoutRemitenteInput, NotificacionUncheckedUpdateWithoutRemitenteInput>
    create: XOR<NotificacionCreateWithoutRemitenteInput, NotificacionUncheckedCreateWithoutRemitenteInput>
  }

  export type NotificacionUpdateWithWhereUniqueWithoutRemitenteInput = {
    where: NotificacionWhereUniqueInput
    data: XOR<NotificacionUpdateWithoutRemitenteInput, NotificacionUncheckedUpdateWithoutRemitenteInput>
  }

  export type NotificacionUpdateManyWithWhereWithoutRemitenteInput = {
    where: NotificacionScalarWhereInput
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyWithoutRemitenteInput>
  }

  export type NotificacionScalarWhereInput = {
    AND?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
    OR?: NotificacionScalarWhereInput[]
    NOT?: NotificacionScalarWhereInput | NotificacionScalarWhereInput[]
    id?: IntFilter<"Notificacion"> | number
    mensaje?: StringFilter<"Notificacion"> | string
    remitenteId?: IntNullableFilter<"Notificacion"> | number | null
    tipoNotificacion?: EnumTipoNotificacionFilter<"Notificacion"> | $Enums.TipoNotificacion
    referenciaId?: IntNullableFilter<"Notificacion"> | number | null
    fechaCreacion?: DateTimeFilter<"Notificacion"> | Date | string
  }

  export type NotificacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionWhereUniqueInput
    update: XOR<NotificacionUpdateWithoutUsuarioInput, NotificacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<NotificacionCreateWithoutUsuarioInput, NotificacionUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionWhereUniqueInput
    data: XOR<NotificacionUpdateWithoutUsuarioInput, NotificacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type NotificacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: NotificacionScalarWhereInput
    data: XOR<NotificacionUpdateManyMutationInput, NotificacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type NotificacionesUsuariosUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionesUsuariosWhereUniqueInput
    update: XOR<NotificacionesUsuariosUpdateWithoutUsuarioInput, NotificacionesUsuariosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<NotificacionesUsuariosCreateWithoutUsuarioInput, NotificacionesUsuariosUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionesUsuariosUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionesUsuariosWhereUniqueInput
    data: XOR<NotificacionesUsuariosUpdateWithoutUsuarioInput, NotificacionesUsuariosUncheckedUpdateWithoutUsuarioInput>
  }

  export type NotificacionesUsuariosUpdateManyWithWhereWithoutUsuarioInput = {
    where: NotificacionesUsuariosScalarWhereInput
    data: XOR<NotificacionesUsuariosUpdateManyMutationInput, NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutUsuarioSolicitanteInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    update: XOR<SolicitudTransferenciaProductoUpdateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutUsuarioSolicitanteInput>
    create: XOR<SolicitudTransferenciaProductoCreateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedCreateWithoutUsuarioSolicitanteInput>
  }

  export type SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutUsuarioSolicitanteInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    data: XOR<SolicitudTransferenciaProductoUpdateWithoutUsuarioSolicitanteInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutUsuarioSolicitanteInput>
  }

  export type SolicitudTransferenciaProductoUpdateManyWithWhereWithoutUsuarioSolicitanteInput = {
    where: SolicitudTransferenciaProductoScalarWhereInput
    data: XOR<SolicitudTransferenciaProductoUpdateManyMutationInput, SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteInput>
  }

  export type SolicitudTransferenciaProductoUpsertWithWhereUniqueWithoutAdministradorInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    update: XOR<SolicitudTransferenciaProductoUpdateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutAdministradorInput>
    create: XOR<SolicitudTransferenciaProductoCreateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedCreateWithoutAdministradorInput>
  }

  export type SolicitudTransferenciaProductoUpdateWithWhereUniqueWithoutAdministradorInput = {
    where: SolicitudTransferenciaProductoWhereUniqueInput
    data: XOR<SolicitudTransferenciaProductoUpdateWithoutAdministradorInput, SolicitudTransferenciaProductoUncheckedUpdateWithoutAdministradorInput>
  }

  export type SolicitudTransferenciaProductoUpdateManyWithWhereWithoutAdministradorInput = {
    where: SolicitudTransferenciaProductoScalarWhereInput
    data: XOR<SolicitudTransferenciaProductoUpdateManyMutationInput, SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorInput>
  }

  export type HistorialPrecioCostoUpsertWithWhereUniqueWithoutModificadoPorInput = {
    where: HistorialPrecioCostoWhereUniqueInput
    update: XOR<HistorialPrecioCostoUpdateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedUpdateWithoutModificadoPorInput>
    create: XOR<HistorialPrecioCostoCreateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedCreateWithoutModificadoPorInput>
  }

  export type HistorialPrecioCostoUpdateWithWhereUniqueWithoutModificadoPorInput = {
    where: HistorialPrecioCostoWhereUniqueInput
    data: XOR<HistorialPrecioCostoUpdateWithoutModificadoPorInput, HistorialPrecioCostoUncheckedUpdateWithoutModificadoPorInput>
  }

  export type HistorialPrecioCostoUpdateManyWithWhereWithoutModificadoPorInput = {
    where: HistorialPrecioCostoScalarWhereInput
    data: XOR<HistorialPrecioCostoUpdateManyMutationInput, HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorInput>
  }

  export type AjusteStockUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: AjusteStockWhereUniqueInput
    update: XOR<AjusteStockUpdateWithoutUsuarioInput, AjusteStockUncheckedUpdateWithoutUsuarioInput>
    create: XOR<AjusteStockCreateWithoutUsuarioInput, AjusteStockUncheckedCreateWithoutUsuarioInput>
  }

  export type AjusteStockUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: AjusteStockWhereUniqueInput
    data: XOR<AjusteStockUpdateWithoutUsuarioInput, AjusteStockUncheckedUpdateWithoutUsuarioInput>
  }

  export type AjusteStockUpdateManyWithWhereWithoutUsuarioInput = {
    where: AjusteStockScalarWhereInput
    data: XOR<AjusteStockUpdateManyMutationInput, AjusteStockUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EliminacionProductoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EliminacionProductoWhereUniqueInput
    update: XOR<EliminacionProductoUpdateWithoutUsuarioInput, EliminacionProductoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EliminacionProductoCreateWithoutUsuarioInput, EliminacionProductoUncheckedCreateWithoutUsuarioInput>
  }

  export type EliminacionProductoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EliminacionProductoWhereUniqueInput
    data: XOR<EliminacionProductoUpdateWithoutUsuarioInput, EliminacionProductoUncheckedUpdateWithoutUsuarioInput>
  }

  export type EliminacionProductoUpdateManyWithWhereWithoutUsuarioInput = {
    where: EliminacionProductoScalarWhereInput
    data: XOR<EliminacionProductoUpdateManyMutationInput, EliminacionProductoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EliminacionClienteUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EliminacionClienteWhereUniqueInput
    update: XOR<EliminacionClienteUpdateWithoutUsuarioInput, EliminacionClienteUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EliminacionClienteCreateWithoutUsuarioInput, EliminacionClienteUncheckedCreateWithoutUsuarioInput>
  }

  export type EliminacionClienteUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EliminacionClienteWhereUniqueInput
    data: XOR<EliminacionClienteUpdateWithoutUsuarioInput, EliminacionClienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type EliminacionClienteUpdateManyWithWhereWithoutUsuarioInput = {
    where: EliminacionClienteScalarWhereInput
    data: XOR<EliminacionClienteUpdateManyMutationInput, EliminacionClienteUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EliminacionClienteScalarWhereInput = {
    AND?: EliminacionClienteScalarWhereInput | EliminacionClienteScalarWhereInput[]
    OR?: EliminacionClienteScalarWhereInput[]
    NOT?: EliminacionClienteScalarWhereInput | EliminacionClienteScalarWhereInput[]
    id?: IntFilter<"EliminacionCliente"> | number
    clienteId?: IntFilter<"EliminacionCliente"> | number
    fechaHora?: DateTimeFilter<"EliminacionCliente"> | Date | string
    usuarioId?: IntNullableFilter<"EliminacionCliente"> | number | null
    motivo?: StringNullableFilter<"EliminacionCliente"> | string | null
  }

  export type EliminacionStockUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EliminacionStockWhereUniqueInput
    update: XOR<EliminacionStockUpdateWithoutUsuarioInput, EliminacionStockUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EliminacionStockCreateWithoutUsuarioInput, EliminacionStockUncheckedCreateWithoutUsuarioInput>
  }

  export type EliminacionStockUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EliminacionStockWhereUniqueInput
    data: XOR<EliminacionStockUpdateWithoutUsuarioInput, EliminacionStockUncheckedUpdateWithoutUsuarioInput>
  }

  export type EliminacionStockUpdateManyWithWhereWithoutUsuarioInput = {
    where: EliminacionStockScalarWhereInput
    data: XOR<EliminacionStockUpdateManyMutationInput, EliminacionStockUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type RegistroGarantiaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: RegistroGarantiaWhereUniqueInput
    update: XOR<RegistroGarantiaUpdateWithoutUsuarioInput, RegistroGarantiaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<RegistroGarantiaCreateWithoutUsuarioInput, RegistroGarantiaUncheckedCreateWithoutUsuarioInput>
  }

  export type RegistroGarantiaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: RegistroGarantiaWhereUniqueInput
    data: XOR<RegistroGarantiaUpdateWithoutUsuarioInput, RegistroGarantiaUncheckedUpdateWithoutUsuarioInput>
  }

  export type RegistroGarantiaUpdateManyWithWhereWithoutUsuarioInput = {
    where: RegistroGarantiaScalarWhereInput
    data: XOR<RegistroGarantiaUpdateManyMutationInput, RegistroGarantiaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type GarantiaUpsertWithWhereUniqueWithoutUsuarioRecibeInput = {
    where: GarantiaWhereUniqueInput
    update: XOR<GarantiaUpdateWithoutUsuarioRecibeInput, GarantiaUncheckedUpdateWithoutUsuarioRecibeInput>
    create: XOR<GarantiaCreateWithoutUsuarioRecibeInput, GarantiaUncheckedCreateWithoutUsuarioRecibeInput>
  }

  export type GarantiaUpdateWithWhereUniqueWithoutUsuarioRecibeInput = {
    where: GarantiaWhereUniqueInput
    data: XOR<GarantiaUpdateWithoutUsuarioRecibeInput, GarantiaUncheckedUpdateWithoutUsuarioRecibeInput>
  }

  export type GarantiaUpdateManyWithWhereWithoutUsuarioRecibeInput = {
    where: GarantiaScalarWhereInput
    data: XOR<GarantiaUpdateManyMutationInput, GarantiaUncheckedUpdateManyWithoutUsuarioRecibeInput>
  }

  export type RegistroCajaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: RegistroCajaWhereUniqueInput
    update: XOR<RegistroCajaUpdateWithoutUsuarioInput, RegistroCajaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<RegistroCajaCreateWithoutUsuarioInput, RegistroCajaUncheckedCreateWithoutUsuarioInput>
  }

  export type RegistroCajaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: RegistroCajaWhereUniqueInput
    data: XOR<RegistroCajaUpdateWithoutUsuarioInput, RegistroCajaUncheckedUpdateWithoutUsuarioInput>
  }

  export type RegistroCajaUpdateManyWithWhereWithoutUsuarioInput = {
    where: RegistroCajaScalarWhereInput
    data: XOR<RegistroCajaUpdateManyMutationInput, RegistroCajaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DepositoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DepositoWhereUniqueInput
    update: XOR<DepositoUpdateWithoutUsuarioInput, DepositoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DepositoCreateWithoutUsuarioInput, DepositoUncheckedCreateWithoutUsuarioInput>
  }

  export type DepositoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DepositoWhereUniqueInput
    data: XOR<DepositoUpdateWithoutUsuarioInput, DepositoUncheckedUpdateWithoutUsuarioInput>
  }

  export type DepositoUpdateManyWithWhereWithoutUsuarioInput = {
    where: DepositoScalarWhereInput
    data: XOR<DepositoUpdateManyMutationInput, DepositoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EgresoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EgresoWhereUniqueInput
    update: XOR<EgresoUpdateWithoutUsuarioInput, EgresoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EgresoCreateWithoutUsuarioInput, EgresoUncheckedCreateWithoutUsuarioInput>
  }

  export type EgresoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EgresoWhereUniqueInput
    data: XOR<EgresoUpdateWithoutUsuarioInput, EgresoUncheckedUpdateWithoutUsuarioInput>
  }

  export type EgresoUpdateManyWithWhereWithoutUsuarioInput = {
    where: EgresoScalarWhereInput
    data: XOR<EgresoUpdateManyMutationInput, EgresoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type VentaEliminadaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: VentaEliminadaWhereUniqueInput
    update: XOR<VentaEliminadaUpdateWithoutUsuarioInput, VentaEliminadaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<VentaEliminadaCreateWithoutUsuarioInput, VentaEliminadaUncheckedCreateWithoutUsuarioInput>
  }

  export type VentaEliminadaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: VentaEliminadaWhereUniqueInput
    data: XOR<VentaEliminadaUpdateWithoutUsuarioInput, VentaEliminadaUncheckedUpdateWithoutUsuarioInput>
  }

  export type VentaEliminadaUpdateManyWithWhereWithoutUsuarioInput = {
    where: VentaEliminadaScalarWhereInput
    data: XOR<VentaEliminadaUpdateManyMutationInput, VentaEliminadaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type VentaCuotaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: VentaCuotaWhereUniqueInput
    update: XOR<VentaCuotaUpdateWithoutUsuarioInput, VentaCuotaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<VentaCuotaCreateWithoutUsuarioInput, VentaCuotaUncheckedCreateWithoutUsuarioInput>
  }

  export type VentaCuotaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: VentaCuotaWhereUniqueInput
    data: XOR<VentaCuotaUpdateWithoutUsuarioInput, VentaCuotaUncheckedUpdateWithoutUsuarioInput>
  }

  export type VentaCuotaUpdateManyWithWhereWithoutUsuarioInput = {
    where: VentaCuotaScalarWhereInput
    data: XOR<VentaCuotaUpdateManyMutationInput, VentaCuotaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CuotaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CuotaWhereUniqueInput
    update: XOR<CuotaUpdateWithoutUsuarioInput, CuotaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CuotaCreateWithoutUsuarioInput, CuotaUncheckedCreateWithoutUsuarioInput>
  }

  export type CuotaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CuotaWhereUniqueInput
    data: XOR<CuotaUpdateWithoutUsuarioInput, CuotaUncheckedUpdateWithoutUsuarioInput>
  }

  export type CuotaUpdateManyWithWhereWithoutUsuarioInput = {
    where: CuotaScalarWhereInput
    data: XOR<CuotaUpdateManyMutationInput, CuotaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ReparacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ReparacionWhereUniqueInput
    update: XOR<ReparacionUpdateWithoutUsuarioInput, ReparacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ReparacionCreateWithoutUsuarioInput, ReparacionUncheckedCreateWithoutUsuarioInput>
  }

  export type ReparacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ReparacionWhereUniqueInput
    data: XOR<ReparacionUpdateWithoutUsuarioInput, ReparacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type ReparacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: ReparacionScalarWhereInput
    data: XOR<ReparacionUpdateManyMutationInput, ReparacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type RegistroReparacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: RegistroReparacionWhereUniqueInput
    update: XOR<RegistroReparacionUpdateWithoutUsuarioInput, RegistroReparacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<RegistroReparacionCreateWithoutUsuarioInput, RegistroReparacionUncheckedCreateWithoutUsuarioInput>
  }

  export type RegistroReparacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: RegistroReparacionWhereUniqueInput
    data: XOR<RegistroReparacionUpdateWithoutUsuarioInput, RegistroReparacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type RegistroReparacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: RegistroReparacionScalarWhereInput
    data: XOR<RegistroReparacionUpdateManyMutationInput, RegistroReparacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type MetaUsuarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: MetaUsuarioWhereUniqueInput
    update: XOR<MetaUsuarioUpdateWithoutUsuarioInput, MetaUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<MetaUsuarioCreateWithoutUsuarioInput, MetaUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type MetaUsuarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: MetaUsuarioWhereUniqueInput
    data: XOR<MetaUsuarioUpdateWithoutUsuarioInput, MetaUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type MetaUsuarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: MetaUsuarioScalarWhereInput
    data: XOR<MetaUsuarioUpdateManyMutationInput, MetaUsuarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type MetaCobrosUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: MetaCobrosWhereUniqueInput
    update: XOR<MetaCobrosUpdateWithoutUsuarioInput, MetaCobrosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<MetaCobrosCreateWithoutUsuarioInput, MetaCobrosUncheckedCreateWithoutUsuarioInput>
  }

  export type MetaCobrosUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: MetaCobrosWhereUniqueInput
    data: XOR<MetaCobrosUpdateWithoutUsuarioInput, MetaCobrosUncheckedUpdateWithoutUsuarioInput>
  }

  export type MetaCobrosUpdateManyWithWhereWithoutUsuarioInput = {
    where: MetaCobrosScalarWhereInput
    data: XOR<MetaCobrosUpdateManyMutationInput, MetaCobrosUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DepositoCobroUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DepositoCobroWhereUniqueInput
    update: XOR<DepositoCobroUpdateWithoutUsuarioInput, DepositoCobroUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DepositoCobroCreateWithoutUsuarioInput, DepositoCobroUncheckedCreateWithoutUsuarioInput>
  }

  export type DepositoCobroUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DepositoCobroWhereUniqueInput
    data: XOR<DepositoCobroUpdateWithoutUsuarioInput, DepositoCobroUncheckedUpdateWithoutUsuarioInput>
  }

  export type DepositoCobroUpdateManyWithWhereWithoutUsuarioInput = {
    where: DepositoCobroScalarWhereInput
    data: XOR<DepositoCobroUpdateManyMutationInput, DepositoCobroUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type UsuarioCreateWithoutMetaUsuarioInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutMetaUsuarioInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutMetaUsuarioInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutMetaUsuarioInput, UsuarioUncheckedCreateWithoutMetaUsuarioInput>
  }

  export type SucursalCreateWithoutMetaUsuarioInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutMetaUsuarioInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutMetaUsuarioInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutMetaUsuarioInput, SucursalUncheckedCreateWithoutMetaUsuarioInput>
  }

  export type UsuarioUpsertWithoutMetaUsuarioInput = {
    update: XOR<UsuarioUpdateWithoutMetaUsuarioInput, UsuarioUncheckedUpdateWithoutMetaUsuarioInput>
    create: XOR<UsuarioCreateWithoutMetaUsuarioInput, UsuarioUncheckedCreateWithoutMetaUsuarioInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutMetaUsuarioInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutMetaUsuarioInput, UsuarioUncheckedUpdateWithoutMetaUsuarioInput>
  }

  export type UsuarioUpdateWithoutMetaUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutMetaUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutMetaUsuarioInput = {
    update: XOR<SucursalUpdateWithoutMetaUsuarioInput, SucursalUncheckedUpdateWithoutMetaUsuarioInput>
    create: XOR<SucursalCreateWithoutMetaUsuarioInput, SucursalUncheckedCreateWithoutMetaUsuarioInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutMetaUsuarioInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutMetaUsuarioInput, SucursalUncheckedUpdateWithoutMetaUsuarioInput>
  }

  export type SucursalUpdateWithoutMetaUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutMetaUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioCreateWithoutMetaCobrosInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutMetaCobrosInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutMetaCobrosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutMetaCobrosInput, UsuarioUncheckedCreateWithoutMetaCobrosInput>
  }

  export type SucursalCreateWithoutMetaCobrosInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutMetaCobrosInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutMetaCobrosInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutMetaCobrosInput, SucursalUncheckedCreateWithoutMetaCobrosInput>
  }

  export type DepositoCobroCreateWithoutMetaCobroInput = {
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    usuario: UsuarioCreateNestedOneWithoutDepositoCobroInput
    sucursal: SucursalCreateNestedOneWithoutDepositoCobroInput
  }

  export type DepositoCobroUncheckedCreateWithoutMetaCobroInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
  }

  export type DepositoCobroCreateOrConnectWithoutMetaCobroInput = {
    where: DepositoCobroWhereUniqueInput
    create: XOR<DepositoCobroCreateWithoutMetaCobroInput, DepositoCobroUncheckedCreateWithoutMetaCobroInput>
  }

  export type DepositoCobroCreateManyMetaCobroInputEnvelope = {
    data: DepositoCobroCreateManyMetaCobroInput | DepositoCobroCreateManyMetaCobroInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutMetaCobrosInput = {
    update: XOR<UsuarioUpdateWithoutMetaCobrosInput, UsuarioUncheckedUpdateWithoutMetaCobrosInput>
    create: XOR<UsuarioCreateWithoutMetaCobrosInput, UsuarioUncheckedCreateWithoutMetaCobrosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutMetaCobrosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutMetaCobrosInput, UsuarioUncheckedUpdateWithoutMetaCobrosInput>
  }

  export type UsuarioUpdateWithoutMetaCobrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutMetaCobrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutMetaCobrosInput = {
    update: XOR<SucursalUpdateWithoutMetaCobrosInput, SucursalUncheckedUpdateWithoutMetaCobrosInput>
    create: XOR<SucursalCreateWithoutMetaCobrosInput, SucursalUncheckedCreateWithoutMetaCobrosInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutMetaCobrosInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutMetaCobrosInput, SucursalUncheckedUpdateWithoutMetaCobrosInput>
  }

  export type SucursalUpdateWithoutMetaCobrosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutMetaCobrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type DepositoCobroUpsertWithWhereUniqueWithoutMetaCobroInput = {
    where: DepositoCobroWhereUniqueInput
    update: XOR<DepositoCobroUpdateWithoutMetaCobroInput, DepositoCobroUncheckedUpdateWithoutMetaCobroInput>
    create: XOR<DepositoCobroCreateWithoutMetaCobroInput, DepositoCobroUncheckedCreateWithoutMetaCobroInput>
  }

  export type DepositoCobroUpdateWithWhereUniqueWithoutMetaCobroInput = {
    where: DepositoCobroWhereUniqueInput
    data: XOR<DepositoCobroUpdateWithoutMetaCobroInput, DepositoCobroUncheckedUpdateWithoutMetaCobroInput>
  }

  export type DepositoCobroUpdateManyWithWhereWithoutMetaCobroInput = {
    where: DepositoCobroScalarWhereInput
    data: XOR<DepositoCobroUpdateManyMutationInput, DepositoCobroUncheckedUpdateManyWithoutMetaCobroInput>
  }

  export type UsuarioCreateWithoutDepositoCobroInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDepositoCobroInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDepositoCobroInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDepositoCobroInput, UsuarioUncheckedCreateWithoutDepositoCobroInput>
  }

  export type SucursalCreateWithoutDepositoCobroInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutDepositoCobroInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutDepositoCobroInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutDepositoCobroInput, SucursalUncheckedCreateWithoutDepositoCobroInput>
  }

  export type MetaCobrosCreateWithoutDepositoCobroInput = {
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
    usuario: UsuarioCreateNestedOneWithoutMetaCobrosInput
    sucursal: SucursalCreateNestedOneWithoutMetaCobrosInput
  }

  export type MetaCobrosUncheckedCreateWithoutDepositoCobroInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
  }

  export type MetaCobrosCreateOrConnectWithoutDepositoCobroInput = {
    where: MetaCobrosWhereUniqueInput
    create: XOR<MetaCobrosCreateWithoutDepositoCobroInput, MetaCobrosUncheckedCreateWithoutDepositoCobroInput>
  }

  export type UsuarioUpsertWithoutDepositoCobroInput = {
    update: XOR<UsuarioUpdateWithoutDepositoCobroInput, UsuarioUncheckedUpdateWithoutDepositoCobroInput>
    create: XOR<UsuarioCreateWithoutDepositoCobroInput, UsuarioUncheckedCreateWithoutDepositoCobroInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDepositoCobroInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDepositoCobroInput, UsuarioUncheckedUpdateWithoutDepositoCobroInput>
  }

  export type UsuarioUpdateWithoutDepositoCobroInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDepositoCobroInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type SucursalUpsertWithoutDepositoCobroInput = {
    update: XOR<SucursalUpdateWithoutDepositoCobroInput, SucursalUncheckedUpdateWithoutDepositoCobroInput>
    create: XOR<SucursalCreateWithoutDepositoCobroInput, SucursalUncheckedCreateWithoutDepositoCobroInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutDepositoCobroInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutDepositoCobroInput, SucursalUncheckedUpdateWithoutDepositoCobroInput>
  }

  export type SucursalUpdateWithoutDepositoCobroInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutDepositoCobroInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type MetaCobrosUpsertWithoutDepositoCobroInput = {
    update: XOR<MetaCobrosUpdateWithoutDepositoCobroInput, MetaCobrosUncheckedUpdateWithoutDepositoCobroInput>
    create: XOR<MetaCobrosCreateWithoutDepositoCobroInput, MetaCobrosUncheckedCreateWithoutDepositoCobroInput>
    where?: MetaCobrosWhereInput
  }

  export type MetaCobrosUpdateToOneWithWhereWithoutDepositoCobroInput = {
    where?: MetaCobrosWhereInput
    data: XOR<MetaCobrosUpdateWithoutDepositoCobroInput, MetaCobrosUncheckedUpdateWithoutDepositoCobroInput>
  }

  export type MetaCobrosUpdateWithoutDepositoCobroInput = {
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    usuario?: UsuarioUpdateOneRequiredWithoutMetaCobrosNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutMetaCobrosNestedInput
  }

  export type MetaCobrosUncheckedUpdateWithoutDepositoCobroInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
  }

  export type VentaCreateWithoutClienteInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    productos?: VentaProductoCreateNestedManyWithoutVentaInput
    metodoPago?: PagoCreateNestedOneWithoutVentaInput
    sucursal: SucursalCreateNestedOneWithoutVentaInput
    registroCaja?: RegistroCajaCreateNestedOneWithoutVentasInput
    ventaCuota?: VentaCuotaCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutClienteInput = {
    id?: number
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
    productos?: VentaProductoUncheckedCreateNestedManyWithoutVentaInput
    metodoPago?: PagoUncheckedCreateNestedOneWithoutVentaInput
    ventaCuota?: VentaCuotaUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutClienteInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput>
  }

  export type VentaCreateManyClienteInputEnvelope = {
    data: VentaCreateManyClienteInput | VentaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type MunicipioCreateWithoutClientesInput = {
    nombre: string
    departamento: DepartamentoCreateNestedOneWithoutMunicipiosInput
  }

  export type MunicipioUncheckedCreateWithoutClientesInput = {
    id?: number
    nombre: string
    departamentoId: number
  }

  export type MunicipioCreateOrConnectWithoutClientesInput = {
    where: MunicipioWhereUniqueInput
    create: XOR<MunicipioCreateWithoutClientesInput, MunicipioUncheckedCreateWithoutClientesInput>
  }

  export type DepartamentoCreateWithoutClientesInput = {
    nombre: string
    municipios?: MunicipioCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutClientesInput = {
    id?: number
    nombre: string
    municipios?: MunicipioUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutClientesInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutClientesInput, DepartamentoUncheckedCreateWithoutClientesInput>
  }

  export type EliminacionClienteCreateWithoutClienteInput = {
    fechaHora?: Date | string
    motivo?: string | null
    usuario?: UsuarioCreateNestedOneWithoutEliminacionClienteInput
  }

  export type EliminacionClienteUncheckedCreateWithoutClienteInput = {
    id?: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionClienteCreateOrConnectWithoutClienteInput = {
    where: EliminacionClienteWhereUniqueInput
    create: XOR<EliminacionClienteCreateWithoutClienteInput, EliminacionClienteUncheckedCreateWithoutClienteInput>
  }

  export type EliminacionClienteCreateManyClienteInputEnvelope = {
    data: EliminacionClienteCreateManyClienteInput | EliminacionClienteCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type GarantiaCreateWithoutClienteInput = {
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    producto: ProductoCreateNestedOneWithoutGarantiaInput
    usuarioRecibe?: UsuarioCreateNestedOneWithoutGarantiaInput
    registros?: RegistroGarantiaCreateNestedManyWithoutGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutGarantiaInput
  }

  export type GarantiaUncheckedCreateWithoutClienteInput = {
    id?: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
    registros?: RegistroGarantiaUncheckedCreateNestedManyWithoutGarantiaInput
  }

  export type GarantiaCreateOrConnectWithoutClienteInput = {
    where: GarantiaWhereUniqueInput
    create: XOR<GarantiaCreateWithoutClienteInput, GarantiaUncheckedCreateWithoutClienteInput>
  }

  export type GarantiaCreateManyClienteInputEnvelope = {
    data: GarantiaCreateManyClienteInput | GarantiaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type VentaEliminadaCreateWithoutClienteInput = {
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    usuario: UsuarioCreateNestedOneWithoutVentaEliminadaInput
    sucursal: SucursalCreateNestedOneWithoutVentaEliminadaInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaUncheckedCreateWithoutClienteInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    sucursalId: number
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutVentaEliminadaInput
  }

  export type VentaEliminadaCreateOrConnectWithoutClienteInput = {
    where: VentaEliminadaWhereUniqueInput
    create: XOR<VentaEliminadaCreateWithoutClienteInput, VentaEliminadaUncheckedCreateWithoutClienteInput>
  }

  export type VentaEliminadaCreateManyClienteInputEnvelope = {
    data: VentaEliminadaCreateManyClienteInput | VentaEliminadaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type VentaCuotaCreateWithoutClienteInput = {
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    usuario: UsuarioCreateNestedOneWithoutVentaCuotaInput
    sucursal: SucursalCreateNestedOneWithoutVentaCuotaInput
    cuotas?: CuotaCreateNestedManyWithoutVentaCuotaInput
    venta?: VentaCreateNestedOneWithoutVentaCuotaInput
  }

  export type VentaCuotaUncheckedCreateWithoutClienteInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
    cuotas?: CuotaUncheckedCreateNestedManyWithoutVentaCuotaInput
  }

  export type VentaCuotaCreateOrConnectWithoutClienteInput = {
    where: VentaCuotaWhereUniqueInput
    create: XOR<VentaCuotaCreateWithoutClienteInput, VentaCuotaUncheckedCreateWithoutClienteInput>
  }

  export type VentaCuotaCreateManyClienteInputEnvelope = {
    data: VentaCuotaCreateManyClienteInput | VentaCuotaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ReparacionCreateWithoutClienteInput = {
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    usuario: UsuarioCreateNestedOneWithoutReparacionInput
    sucursal: SucursalCreateNestedOneWithoutReparacionInput
    producto?: ProductoCreateNestedOneWithoutReparacionInput
    registros?: RegistroReparacionCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionUncheckedCreateWithoutClienteInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    registros?: RegistroReparacionUncheckedCreateNestedManyWithoutReparacionInput
  }

  export type ReparacionCreateOrConnectWithoutClienteInput = {
    where: ReparacionWhereUniqueInput
    create: XOR<ReparacionCreateWithoutClienteInput, ReparacionUncheckedCreateWithoutClienteInput>
  }

  export type ReparacionCreateManyClienteInputEnvelope = {
    data: ReparacionCreateManyClienteInput | ReparacionCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type VentaUpsertWithWhereUniqueWithoutClienteInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutClienteInput, VentaUncheckedUpdateWithoutClienteInput>
    create: XOR<VentaCreateWithoutClienteInput, VentaUncheckedCreateWithoutClienteInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutClienteInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutClienteInput, VentaUncheckedUpdateWithoutClienteInput>
  }

  export type VentaUpdateManyWithWhereWithoutClienteInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutClienteInput>
  }

  export type MunicipioUpsertWithoutClientesInput = {
    update: XOR<MunicipioUpdateWithoutClientesInput, MunicipioUncheckedUpdateWithoutClientesInput>
    create: XOR<MunicipioCreateWithoutClientesInput, MunicipioUncheckedCreateWithoutClientesInput>
    where?: MunicipioWhereInput
  }

  export type MunicipioUpdateToOneWithWhereWithoutClientesInput = {
    where?: MunicipioWhereInput
    data: XOR<MunicipioUpdateWithoutClientesInput, MunicipioUncheckedUpdateWithoutClientesInput>
  }

  export type MunicipioUpdateWithoutClientesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    departamento?: DepartamentoUpdateOneRequiredWithoutMunicipiosNestedInput
  }

  export type MunicipioUncheckedUpdateWithoutClientesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    departamentoId?: IntFieldUpdateOperationsInput | number
  }

  export type DepartamentoUpsertWithoutClientesInput = {
    update: XOR<DepartamentoUpdateWithoutClientesInput, DepartamentoUncheckedUpdateWithoutClientesInput>
    create: XOR<DepartamentoCreateWithoutClientesInput, DepartamentoUncheckedCreateWithoutClientesInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutClientesInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutClientesInput, DepartamentoUncheckedUpdateWithoutClientesInput>
  }

  export type DepartamentoUpdateWithoutClientesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    municipios?: MunicipioUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutClientesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    municipios?: MunicipioUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type EliminacionClienteUpsertWithWhereUniqueWithoutClienteInput = {
    where: EliminacionClienteWhereUniqueInput
    update: XOR<EliminacionClienteUpdateWithoutClienteInput, EliminacionClienteUncheckedUpdateWithoutClienteInput>
    create: XOR<EliminacionClienteCreateWithoutClienteInput, EliminacionClienteUncheckedCreateWithoutClienteInput>
  }

  export type EliminacionClienteUpdateWithWhereUniqueWithoutClienteInput = {
    where: EliminacionClienteWhereUniqueInput
    data: XOR<EliminacionClienteUpdateWithoutClienteInput, EliminacionClienteUncheckedUpdateWithoutClienteInput>
  }

  export type EliminacionClienteUpdateManyWithWhereWithoutClienteInput = {
    where: EliminacionClienteScalarWhereInput
    data: XOR<EliminacionClienteUpdateManyMutationInput, EliminacionClienteUncheckedUpdateManyWithoutClienteInput>
  }

  export type GarantiaUpsertWithWhereUniqueWithoutClienteInput = {
    where: GarantiaWhereUniqueInput
    update: XOR<GarantiaUpdateWithoutClienteInput, GarantiaUncheckedUpdateWithoutClienteInput>
    create: XOR<GarantiaCreateWithoutClienteInput, GarantiaUncheckedCreateWithoutClienteInput>
  }

  export type GarantiaUpdateWithWhereUniqueWithoutClienteInput = {
    where: GarantiaWhereUniqueInput
    data: XOR<GarantiaUpdateWithoutClienteInput, GarantiaUncheckedUpdateWithoutClienteInput>
  }

  export type GarantiaUpdateManyWithWhereWithoutClienteInput = {
    where: GarantiaScalarWhereInput
    data: XOR<GarantiaUpdateManyMutationInput, GarantiaUncheckedUpdateManyWithoutClienteInput>
  }

  export type VentaEliminadaUpsertWithWhereUniqueWithoutClienteInput = {
    where: VentaEliminadaWhereUniqueInput
    update: XOR<VentaEliminadaUpdateWithoutClienteInput, VentaEliminadaUncheckedUpdateWithoutClienteInput>
    create: XOR<VentaEliminadaCreateWithoutClienteInput, VentaEliminadaUncheckedCreateWithoutClienteInput>
  }

  export type VentaEliminadaUpdateWithWhereUniqueWithoutClienteInput = {
    where: VentaEliminadaWhereUniqueInput
    data: XOR<VentaEliminadaUpdateWithoutClienteInput, VentaEliminadaUncheckedUpdateWithoutClienteInput>
  }

  export type VentaEliminadaUpdateManyWithWhereWithoutClienteInput = {
    where: VentaEliminadaScalarWhereInput
    data: XOR<VentaEliminadaUpdateManyMutationInput, VentaEliminadaUncheckedUpdateManyWithoutClienteInput>
  }

  export type VentaCuotaUpsertWithWhereUniqueWithoutClienteInput = {
    where: VentaCuotaWhereUniqueInput
    update: XOR<VentaCuotaUpdateWithoutClienteInput, VentaCuotaUncheckedUpdateWithoutClienteInput>
    create: XOR<VentaCuotaCreateWithoutClienteInput, VentaCuotaUncheckedCreateWithoutClienteInput>
  }

  export type VentaCuotaUpdateWithWhereUniqueWithoutClienteInput = {
    where: VentaCuotaWhereUniqueInput
    data: XOR<VentaCuotaUpdateWithoutClienteInput, VentaCuotaUncheckedUpdateWithoutClienteInput>
  }

  export type VentaCuotaUpdateManyWithWhereWithoutClienteInput = {
    where: VentaCuotaScalarWhereInput
    data: XOR<VentaCuotaUpdateManyMutationInput, VentaCuotaUncheckedUpdateManyWithoutClienteInput>
  }

  export type ReparacionUpsertWithWhereUniqueWithoutClienteInput = {
    where: ReparacionWhereUniqueInput
    update: XOR<ReparacionUpdateWithoutClienteInput, ReparacionUncheckedUpdateWithoutClienteInput>
    create: XOR<ReparacionCreateWithoutClienteInput, ReparacionUncheckedCreateWithoutClienteInput>
  }

  export type ReparacionUpdateWithWhereUniqueWithoutClienteInput = {
    where: ReparacionWhereUniqueInput
    data: XOR<ReparacionUpdateWithoutClienteInput, ReparacionUncheckedUpdateWithoutClienteInput>
  }

  export type ReparacionUpdateManyWithWhereWithoutClienteInput = {
    where: ReparacionScalarWhereInput
    data: XOR<ReparacionUpdateManyMutationInput, ReparacionUncheckedUpdateManyWithoutClienteInput>
  }

  export type ClienteCreateWithoutGarantiaInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutGarantiaInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutGarantiaInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutGarantiaInput, ClienteUncheckedCreateWithoutGarantiaInput>
  }

  export type ProductoCreateWithoutGarantiaInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutGarantiaInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutGarantiaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutGarantiaInput, ProductoUncheckedCreateWithoutGarantiaInput>
  }

  export type UsuarioCreateWithoutGarantiaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutGarantiaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutGarantiaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutGarantiaInput, UsuarioUncheckedCreateWithoutGarantiaInput>
  }

  export type RegistroGarantiaCreateWithoutGarantiaInput = {
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    usuario?: UsuarioCreateNestedOneWithoutRegistroGarantiaInput
    producto: ProductoCreateNestedOneWithoutRegistroGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutRegistroGarantiaInput
  }

  export type RegistroGarantiaUncheckedCreateWithoutGarantiaInput = {
    id?: number
    usuarioId?: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaCreateOrConnectWithoutGarantiaInput = {
    where: RegistroGarantiaWhereUniqueInput
    create: XOR<RegistroGarantiaCreateWithoutGarantiaInput, RegistroGarantiaUncheckedCreateWithoutGarantiaInput>
  }

  export type RegistroGarantiaCreateManyGarantiaInputEnvelope = {
    data: RegistroGarantiaCreateManyGarantiaInput | RegistroGarantiaCreateManyGarantiaInput[]
    skipDuplicates?: boolean
  }

  export type ProveedorCreateWithoutGarantiaInput = {
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    entregasStock?: EntregaStockCreateNestedManyWithoutProveedorInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUncheckedCreateWithoutGarantiaInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    entregasStock?: EntregaStockUncheckedCreateNestedManyWithoutProveedorInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorCreateOrConnectWithoutGarantiaInput = {
    where: ProveedorWhereUniqueInput
    create: XOR<ProveedorCreateWithoutGarantiaInput, ProveedorUncheckedCreateWithoutGarantiaInput>
  }

  export type ClienteUpsertWithoutGarantiaInput = {
    update: XOR<ClienteUpdateWithoutGarantiaInput, ClienteUncheckedUpdateWithoutGarantiaInput>
    create: XOR<ClienteCreateWithoutGarantiaInput, ClienteUncheckedCreateWithoutGarantiaInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutGarantiaInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutGarantiaInput, ClienteUncheckedUpdateWithoutGarantiaInput>
  }

  export type ClienteUpdateWithoutGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ProductoUpsertWithoutGarantiaInput = {
    update: XOR<ProductoUpdateWithoutGarantiaInput, ProductoUncheckedUpdateWithoutGarantiaInput>
    create: XOR<ProductoCreateWithoutGarantiaInput, ProductoUncheckedCreateWithoutGarantiaInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutGarantiaInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutGarantiaInput, ProductoUncheckedUpdateWithoutGarantiaInput>
  }

  export type ProductoUpdateWithoutGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioUpsertWithoutGarantiaInput = {
    update: XOR<UsuarioUpdateWithoutGarantiaInput, UsuarioUncheckedUpdateWithoutGarantiaInput>
    create: XOR<UsuarioCreateWithoutGarantiaInput, UsuarioUncheckedCreateWithoutGarantiaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutGarantiaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutGarantiaInput, UsuarioUncheckedUpdateWithoutGarantiaInput>
  }

  export type UsuarioUpdateWithoutGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type RegistroGarantiaUpsertWithWhereUniqueWithoutGarantiaInput = {
    where: RegistroGarantiaWhereUniqueInput
    update: XOR<RegistroGarantiaUpdateWithoutGarantiaInput, RegistroGarantiaUncheckedUpdateWithoutGarantiaInput>
    create: XOR<RegistroGarantiaCreateWithoutGarantiaInput, RegistroGarantiaUncheckedCreateWithoutGarantiaInput>
  }

  export type RegistroGarantiaUpdateWithWhereUniqueWithoutGarantiaInput = {
    where: RegistroGarantiaWhereUniqueInput
    data: XOR<RegistroGarantiaUpdateWithoutGarantiaInput, RegistroGarantiaUncheckedUpdateWithoutGarantiaInput>
  }

  export type RegistroGarantiaUpdateManyWithWhereWithoutGarantiaInput = {
    where: RegistroGarantiaScalarWhereInput
    data: XOR<RegistroGarantiaUpdateManyMutationInput, RegistroGarantiaUncheckedUpdateManyWithoutGarantiaInput>
  }

  export type ProveedorUpsertWithoutGarantiaInput = {
    update: XOR<ProveedorUpdateWithoutGarantiaInput, ProveedorUncheckedUpdateWithoutGarantiaInput>
    create: XOR<ProveedorCreateWithoutGarantiaInput, ProveedorUncheckedCreateWithoutGarantiaInput>
    where?: ProveedorWhereInput
  }

  export type ProveedorUpdateToOneWithWhereWithoutGarantiaInput = {
    where?: ProveedorWhereInput
    data: XOR<ProveedorUpdateWithoutGarantiaInput, ProveedorUncheckedUpdateWithoutGarantiaInput>
  }

  export type ProveedorUpdateWithoutGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasStock?: EntregaStockUpdateManyWithoutProveedorNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorUncheckedUpdateWithoutGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasStock?: EntregaStockUncheckedUpdateManyWithoutProveedorNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type GarantiaCreateWithoutRegistrosInput = {
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    cliente: ClienteCreateNestedOneWithoutGarantiaInput
    producto: ProductoCreateNestedOneWithoutGarantiaInput
    usuarioRecibe?: UsuarioCreateNestedOneWithoutGarantiaInput
    proveedor?: ProveedorCreateNestedOneWithoutGarantiaInput
  }

  export type GarantiaUncheckedCreateWithoutRegistrosInput = {
    id?: number
    clienteId: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
  }

  export type GarantiaCreateOrConnectWithoutRegistrosInput = {
    where: GarantiaWhereUniqueInput
    create: XOR<GarantiaCreateWithoutRegistrosInput, GarantiaUncheckedCreateWithoutRegistrosInput>
  }

  export type UsuarioCreateWithoutRegistroGarantiaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutRegistroGarantiaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutRegistroGarantiaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRegistroGarantiaInput, UsuarioUncheckedCreateWithoutRegistroGarantiaInput>
  }

  export type ProductoCreateWithoutRegistroGarantiaInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutRegistroGarantiaInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutRegistroGarantiaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutRegistroGarantiaInput, ProductoUncheckedCreateWithoutRegistroGarantiaInput>
  }

  export type ProveedorCreateWithoutRegistroGarantiaInput = {
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    entregasStock?: EntregaStockCreateNestedManyWithoutProveedorInput
    Garantia?: GarantiaCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUncheckedCreateWithoutRegistroGarantiaInput = {
    id?: number
    nombre: string
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    razonSocial?: string | null
    rfc?: string | null
    nombreContacto?: string | null
    telefonoContacto?: string | null
    emailContacto?: string | null
    pais?: string | null
    ciudad?: string | null
    codigoPostal?: string | null
    latitud?: number | null
    longitud?: number | null
    activo?: boolean
    notas?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    entregasStock?: EntregaStockUncheckedCreateNestedManyWithoutProveedorInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorCreateOrConnectWithoutRegistroGarantiaInput = {
    where: ProveedorWhereUniqueInput
    create: XOR<ProveedorCreateWithoutRegistroGarantiaInput, ProveedorUncheckedCreateWithoutRegistroGarantiaInput>
  }

  export type GarantiaUpsertWithoutRegistrosInput = {
    update: XOR<GarantiaUpdateWithoutRegistrosInput, GarantiaUncheckedUpdateWithoutRegistrosInput>
    create: XOR<GarantiaCreateWithoutRegistrosInput, GarantiaUncheckedCreateWithoutRegistrosInput>
    where?: GarantiaWhereInput
  }

  export type GarantiaUpdateToOneWithWhereWithoutRegistrosInput = {
    where?: GarantiaWhereInput
    data: XOR<GarantiaUpdateWithoutRegistrosInput, GarantiaUncheckedUpdateWithoutRegistrosInput>
  }

  export type GarantiaUpdateWithoutRegistrosInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutGarantiaNestedInput
    usuarioRecibe?: UsuarioUpdateOneWithoutGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateWithoutRegistrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UsuarioUpsertWithoutRegistroGarantiaInput = {
    update: XOR<UsuarioUpdateWithoutRegistroGarantiaInput, UsuarioUncheckedUpdateWithoutRegistroGarantiaInput>
    create: XOR<UsuarioCreateWithoutRegistroGarantiaInput, UsuarioUncheckedCreateWithoutRegistroGarantiaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutRegistroGarantiaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutRegistroGarantiaInput, UsuarioUncheckedUpdateWithoutRegistroGarantiaInput>
  }

  export type UsuarioUpdateWithoutRegistroGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRegistroGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductoUpsertWithoutRegistroGarantiaInput = {
    update: XOR<ProductoUpdateWithoutRegistroGarantiaInput, ProductoUncheckedUpdateWithoutRegistroGarantiaInput>
    create: XOR<ProductoCreateWithoutRegistroGarantiaInput, ProductoUncheckedCreateWithoutRegistroGarantiaInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutRegistroGarantiaInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutRegistroGarantiaInput, ProductoUncheckedUpdateWithoutRegistroGarantiaInput>
  }

  export type ProductoUpdateWithoutRegistroGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutRegistroGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProveedorUpsertWithoutRegistroGarantiaInput = {
    update: XOR<ProveedorUpdateWithoutRegistroGarantiaInput, ProveedorUncheckedUpdateWithoutRegistroGarantiaInput>
    create: XOR<ProveedorCreateWithoutRegistroGarantiaInput, ProveedorUncheckedCreateWithoutRegistroGarantiaInput>
    where?: ProveedorWhereInput
  }

  export type ProveedorUpdateToOneWithWhereWithoutRegistroGarantiaInput = {
    where?: ProveedorWhereInput
    data: XOR<ProveedorUpdateWithoutRegistroGarantiaInput, ProveedorUncheckedUpdateWithoutRegistroGarantiaInput>
  }

  export type ProveedorUpdateWithoutRegistroGarantiaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasStock?: EntregaStockUpdateManyWithoutProveedorNestedInput
    Garantia?: GarantiaUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorUncheckedUpdateWithoutRegistroGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    rfc?: NullableStringFieldUpdateOperationsInput | string | null
    nombreContacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoContacto?: NullableStringFieldUpdateOperationsInput | string | null
    emailContacto?: NullableStringFieldUpdateOperationsInput | string | null
    pais?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableStringFieldUpdateOperationsInput | string | null
    codigoPostal?: NullableStringFieldUpdateOperationsInput | string | null
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasStock?: EntregaStockUncheckedUpdateManyWithoutProveedorNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type VentaCreateWithoutMetodoPagoInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    cliente?: ClienteCreateNestedOneWithoutComprasInput
    productos?: VentaProductoCreateNestedManyWithoutVentaInput
    sucursal: SucursalCreateNestedOneWithoutVentaInput
    registroCaja?: RegistroCajaCreateNestedOneWithoutVentasInput
    ventaCuota?: VentaCuotaCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutMetodoPagoInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
    productos?: VentaProductoUncheckedCreateNestedManyWithoutVentaInput
    ventaCuota?: VentaCuotaUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutMetodoPagoInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput>
  }

  export type VentaUpsertWithoutMetodoPagoInput = {
    update: XOR<VentaUpdateWithoutMetodoPagoInput, VentaUncheckedUpdateWithoutMetodoPagoInput>
    create: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutMetodoPagoInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutMetodoPagoInput, VentaUncheckedUpdateWithoutMetodoPagoInput>
  }

  export type VentaUpdateWithoutMetodoPagoInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutComprasNestedInput
    productos?: VentaProductoUpdateManyWithoutVentaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaNestedInput
    registroCaja?: RegistroCajaUpdateOneWithoutVentasNestedInput
    ventaCuota?: VentaCuotaUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutMetodoPagoInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: VentaProductoUncheckedUpdateManyWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type ProductoCreateWithoutHistorialStockInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutHistorialStockInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutHistorialStockInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutHistorialStockInput, ProductoUncheckedCreateWithoutHistorialStockInput>
  }

  export type ProductoUpsertWithoutHistorialStockInput = {
    update: XOR<ProductoUpdateWithoutHistorialStockInput, ProductoUncheckedUpdateWithoutHistorialStockInput>
    create: XOR<ProductoCreateWithoutHistorialStockInput, ProductoUncheckedCreateWithoutHistorialStockInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutHistorialStockInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutHistorialStockInput, ProductoUncheckedUpdateWithoutHistorialStockInput>
  }

  export type ProductoUpdateWithoutHistorialStockInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutHistorialStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ClienteCreateWithoutComprasInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutComprasInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutComprasInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutComprasInput, ClienteUncheckedCreateWithoutComprasInput>
  }

  export type VentaProductoCreateWithoutVentaInput = {
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
    producto?: ProductoCreateNestedOneWithoutVentasInput
  }

  export type VentaProductoUncheckedCreateWithoutVentaInput = {
    id?: number
    productoId?: number | null
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
  }

  export type VentaProductoCreateOrConnectWithoutVentaInput = {
    where: VentaProductoWhereUniqueInput
    create: XOR<VentaProductoCreateWithoutVentaInput, VentaProductoUncheckedCreateWithoutVentaInput>
  }

  export type VentaProductoCreateManyVentaInputEnvelope = {
    data: VentaProductoCreateManyVentaInput | VentaProductoCreateManyVentaInput[]
    skipDuplicates?: boolean
  }

  export type PagoCreateWithoutVentaInput = {
    monto: number
    metodoPago: $Enums.MetodoPago
    fechaPago?: Date | string
  }

  export type PagoUncheckedCreateWithoutVentaInput = {
    id?: number
    monto: number
    metodoPago: $Enums.MetodoPago
    fechaPago?: Date | string
  }

  export type PagoCreateOrConnectWithoutVentaInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutVentaInput, PagoUncheckedCreateWithoutVentaInput>
  }

  export type SucursalCreateWithoutVentaInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutVentaInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutVentaInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutVentaInput, SucursalUncheckedCreateWithoutVentaInput>
  }

  export type RegistroCajaCreateWithoutVentasInput = {
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    sucursal?: SucursalCreateNestedOneWithoutRegistroCajaInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroCajaInput
    depositos?: DepositoCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaUncheckedCreateWithoutVentasInput = {
    id?: number
    sucursalId?: number | null
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
    depositos?: DepositoUncheckedCreateNestedManyWithoutRegistroCajaInput
    egresos?: EgresoUncheckedCreateNestedManyWithoutRegistroCajaInput
  }

  export type RegistroCajaCreateOrConnectWithoutVentasInput = {
    where: RegistroCajaWhereUniqueInput
    create: XOR<RegistroCajaCreateWithoutVentasInput, RegistroCajaUncheckedCreateWithoutVentasInput>
  }

  export type VentaCuotaCreateWithoutVentaInput = {
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    cliente: ClienteCreateNestedOneWithoutVentaCuotaInput
    usuario: UsuarioCreateNestedOneWithoutVentaCuotaInput
    sucursal: SucursalCreateNestedOneWithoutVentaCuotaInput
    cuotas?: CuotaCreateNestedManyWithoutVentaCuotaInput
  }

  export type VentaCuotaUncheckedCreateWithoutVentaInput = {
    id?: number
    clienteId: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    montoTotalConInteres?: number | null
    cuotas?: CuotaUncheckedCreateNestedManyWithoutVentaCuotaInput
  }

  export type VentaCuotaCreateOrConnectWithoutVentaInput = {
    where: VentaCuotaWhereUniqueInput
    create: XOR<VentaCuotaCreateWithoutVentaInput, VentaCuotaUncheckedCreateWithoutVentaInput>
  }

  export type ClienteUpsertWithoutComprasInput = {
    update: XOR<ClienteUpdateWithoutComprasInput, ClienteUncheckedUpdateWithoutComprasInput>
    create: XOR<ClienteCreateWithoutComprasInput, ClienteUncheckedCreateWithoutComprasInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutComprasInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutComprasInput, ClienteUncheckedUpdateWithoutComprasInput>
  }

  export type ClienteUpdateWithoutComprasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutComprasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type VentaProductoUpsertWithWhereUniqueWithoutVentaInput = {
    where: VentaProductoWhereUniqueInput
    update: XOR<VentaProductoUpdateWithoutVentaInput, VentaProductoUncheckedUpdateWithoutVentaInput>
    create: XOR<VentaProductoCreateWithoutVentaInput, VentaProductoUncheckedCreateWithoutVentaInput>
  }

  export type VentaProductoUpdateWithWhereUniqueWithoutVentaInput = {
    where: VentaProductoWhereUniqueInput
    data: XOR<VentaProductoUpdateWithoutVentaInput, VentaProductoUncheckedUpdateWithoutVentaInput>
  }

  export type VentaProductoUpdateManyWithWhereWithoutVentaInput = {
    where: VentaProductoScalarWhereInput
    data: XOR<VentaProductoUpdateManyMutationInput, VentaProductoUncheckedUpdateManyWithoutVentaInput>
  }

  export type PagoUpsertWithoutVentaInput = {
    update: XOR<PagoUpdateWithoutVentaInput, PagoUncheckedUpdateWithoutVentaInput>
    create: XOR<PagoCreateWithoutVentaInput, PagoUncheckedCreateWithoutVentaInput>
    where?: PagoWhereInput
  }

  export type PagoUpdateToOneWithWhereWithoutVentaInput = {
    where?: PagoWhereInput
    data: XOR<PagoUpdateWithoutVentaInput, PagoUncheckedUpdateWithoutVentaInput>
  }

  export type PagoUpdateWithoutVentaInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    metodoPago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    fechaPago?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SucursalUpsertWithoutVentaInput = {
    update: XOR<SucursalUpdateWithoutVentaInput, SucursalUncheckedUpdateWithoutVentaInput>
    create: XOR<SucursalCreateWithoutVentaInput, SucursalUncheckedCreateWithoutVentaInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutVentaInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutVentaInput, SucursalUncheckedUpdateWithoutVentaInput>
  }

  export type SucursalUpdateWithoutVentaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type RegistroCajaUpsertWithoutVentasInput = {
    update: XOR<RegistroCajaUpdateWithoutVentasInput, RegistroCajaUncheckedUpdateWithoutVentasInput>
    create: XOR<RegistroCajaCreateWithoutVentasInput, RegistroCajaUncheckedCreateWithoutVentasInput>
    where?: RegistroCajaWhereInput
  }

  export type RegistroCajaUpdateToOneWithWhereWithoutVentasInput = {
    where?: RegistroCajaWhereInput
    data: XOR<RegistroCajaUpdateWithoutVentasInput, RegistroCajaUncheckedUpdateWithoutVentasInput>
  }

  export type RegistroCajaUpdateWithoutVentasInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneWithoutRegistroCajaNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroCajaNestedInput
    depositos?: DepositoUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    depositos?: DepositoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUncheckedUpdateManyWithoutRegistroCajaNestedInput
  }

  export type VentaCuotaUpsertWithoutVentaInput = {
    update: XOR<VentaCuotaUpdateWithoutVentaInput, VentaCuotaUncheckedUpdateWithoutVentaInput>
    create: XOR<VentaCuotaCreateWithoutVentaInput, VentaCuotaUncheckedCreateWithoutVentaInput>
    where?: VentaCuotaWhereInput
  }

  export type VentaCuotaUpdateToOneWithWhereWithoutVentaInput = {
    where?: VentaCuotaWhereInput
    data: XOR<VentaCuotaUpdateWithoutVentaInput, VentaCuotaUncheckedUpdateWithoutVentaInput>
  }

  export type VentaCuotaUpdateWithoutVentaInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClienteUpdateOneRequiredWithoutVentaCuotaNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutVentaCuotaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaCuotaNestedInput
    cuotas?: CuotaUpdateManyWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cuotas?: CuotaUncheckedUpdateManyWithoutVentaCuotaNestedInput
  }

  export type ProductoCreateWithoutTransferenciaProductoInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutTransferenciaProductoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutTransferenciaProductoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutTransferenciaProductoInput, ProductoUncheckedCreateWithoutTransferenciaProductoInput>
  }

  export type SucursalCreateWithoutTransferenciaProductoInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutTransferenciaProductoInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutTransferenciaProductoInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutTransferenciaProductoInput, SucursalUncheckedCreateWithoutTransferenciaProductoInput>
  }

  export type SucursalCreateWithoutTransferenciaProductoDestinoInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutTransferenciaProductoDestinoInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutTransferenciaProductoDestinoInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutTransferenciaProductoDestinoInput, SucursalUncheckedCreateWithoutTransferenciaProductoDestinoInput>
  }

  export type UsuarioCreateWithoutTransferenciaProductoInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutTransferenciaProductoInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutTransferenciaProductoInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutTransferenciaProductoInput, UsuarioUncheckedCreateWithoutTransferenciaProductoInput>
  }

  export type ProductoUpsertWithoutTransferenciaProductoInput = {
    update: XOR<ProductoUpdateWithoutTransferenciaProductoInput, ProductoUncheckedUpdateWithoutTransferenciaProductoInput>
    create: XOR<ProductoCreateWithoutTransferenciaProductoInput, ProductoUncheckedCreateWithoutTransferenciaProductoInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutTransferenciaProductoInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutTransferenciaProductoInput, ProductoUncheckedUpdateWithoutTransferenciaProductoInput>
  }

  export type ProductoUpdateWithoutTransferenciaProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutTransferenciaProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type SucursalUpsertWithoutTransferenciaProductoInput = {
    update: XOR<SucursalUpdateWithoutTransferenciaProductoInput, SucursalUncheckedUpdateWithoutTransferenciaProductoInput>
    create: XOR<SucursalCreateWithoutTransferenciaProductoInput, SucursalUncheckedCreateWithoutTransferenciaProductoInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutTransferenciaProductoInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutTransferenciaProductoInput, SucursalUncheckedUpdateWithoutTransferenciaProductoInput>
  }

  export type SucursalUpdateWithoutTransferenciaProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutTransferenciaProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUpsertWithoutTransferenciaProductoDestinoInput = {
    update: XOR<SucursalUpdateWithoutTransferenciaProductoDestinoInput, SucursalUncheckedUpdateWithoutTransferenciaProductoDestinoInput>
    create: XOR<SucursalCreateWithoutTransferenciaProductoDestinoInput, SucursalUncheckedCreateWithoutTransferenciaProductoDestinoInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutTransferenciaProductoDestinoInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutTransferenciaProductoDestinoInput, SucursalUncheckedUpdateWithoutTransferenciaProductoDestinoInput>
  }

  export type SucursalUpdateWithoutTransferenciaProductoDestinoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutTransferenciaProductoDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioUpsertWithoutTransferenciaProductoInput = {
    update: XOR<UsuarioUpdateWithoutTransferenciaProductoInput, UsuarioUncheckedUpdateWithoutTransferenciaProductoInput>
    create: XOR<UsuarioCreateWithoutTransferenciaProductoInput, UsuarioUncheckedCreateWithoutTransferenciaProductoInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutTransferenciaProductoInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutTransferenciaProductoInput, UsuarioUncheckedUpdateWithoutTransferenciaProductoInput>
  }

  export type UsuarioUpdateWithoutTransferenciaProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutTransferenciaProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductoCreateWithoutSolicitudesTransferenciaInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutSolicitudesTransferenciaInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutSolicitudesTransferenciaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutSolicitudesTransferenciaInput, ProductoUncheckedCreateWithoutSolicitudesTransferenciaInput>
  }

  export type SucursalCreateWithoutSolicitudesOrigenInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesDestino?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutSolicitudesOrigenInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutSolicitudesOrigenInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutSolicitudesOrigenInput, SucursalUncheckedCreateWithoutSolicitudesOrigenInput>
  }

  export type SucursalCreateWithoutSolicitudesDestinoInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioCreateNestedManyWithoutSucursalInput
    Venta?: VentaCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoCreateNestedManyWithoutSucursalOrigenInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateWithoutSolicitudesDestinoInput = {
    id?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    pbx?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    tipoSucursal: $Enums.TipoSucursal
    estadoOperacion?: boolean
    productos?: StockUncheckedCreateNestedManyWithoutSucursalInput
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutSucursalInput
    Venta?: VentaUncheckedCreateNestedManyWithoutSucursalInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedCreateNestedManyWithoutSucursalDestinoInput
    EntregaStock?: EntregaStockUncheckedCreateNestedManyWithoutSucursalInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutSucursalOrigenInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutSucursalInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutSucursalInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutSucursalInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutSucursalInput
    SucursalSaldo?: SucursalSaldoUncheckedCreateNestedOneWithoutSucursalInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutSucursalInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutSucursalInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedCreateNestedManyWithoutSucursalInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutSucursalInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutSucursalInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutSucursalInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalCreateOrConnectWithoutSolicitudesDestinoInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutSolicitudesDestinoInput, SucursalUncheckedCreateWithoutSolicitudesDestinoInput>
  }

  export type UsuarioCreateWithoutSolicitudesEnviadasInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutSolicitudesEnviadasInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutAdministradorInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutSolicitudesEnviadasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSolicitudesEnviadasInput, UsuarioUncheckedCreateWithoutSolicitudesEnviadasInput>
  }

  export type UsuarioCreateWithoutSolicitudesAprobadasTransferenciaInput = {
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockCreateNestedManyWithoutUsuarioRecibidoInput
    sucursal: SucursalCreateNestedOneWithoutUsuariosInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoCreateNestedManyWithoutUsuarioSolicitanteInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutSolicitudesAprobadasTransferenciaInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    sucursalId: number
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
    entregasRecibidas?: EntregaStockUncheckedCreateNestedManyWithoutUsuarioRecibidoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioEncargadoInput
    PrecioProducto?: PrecioProductoUncheckedCreateNestedManyWithoutCreadoPorInput
    solicitudesPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutSolicitadoPorInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedCreateNestedManyWithoutAprobadoPorInput
    notificacionesEnviadas?: NotificacionUncheckedCreateNestedManyWithoutRemitenteInput
    notificacionesRecibidas?: NotificacionUncheckedCreateNestedManyWithoutUsuarioInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedCreateNestedManyWithoutUsuarioInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutUsuarioSolicitanteInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutModificadoPorInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutUsuarioInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutUsuarioInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutUsuarioRecibeInput
    RegistroCaja?: RegistroCajaUncheckedCreateNestedManyWithoutUsuarioInput
    Deposito?: DepositoUncheckedCreateNestedManyWithoutUsuarioInput
    Egreso?: EgresoUncheckedCreateNestedManyWithoutUsuarioInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutUsuarioInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Cuota?: CuotaUncheckedCreateNestedManyWithoutUsuarioInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    RegistroReparacion?: RegistroReparacionUncheckedCreateNestedManyWithoutUsuarioInput
    MetaUsuario?: MetaUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    MetaCobros?: MetaCobrosUncheckedCreateNestedManyWithoutUsuarioInput
    DepositoCobro?: DepositoCobroUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutSolicitudesAprobadasTransferenciaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasTransferenciaInput>
  }

  export type ProductoUpsertWithoutSolicitudesTransferenciaInput = {
    update: XOR<ProductoUpdateWithoutSolicitudesTransferenciaInput, ProductoUncheckedUpdateWithoutSolicitudesTransferenciaInput>
    create: XOR<ProductoCreateWithoutSolicitudesTransferenciaInput, ProductoUncheckedCreateWithoutSolicitudesTransferenciaInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutSolicitudesTransferenciaInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutSolicitudesTransferenciaInput, ProductoUncheckedUpdateWithoutSolicitudesTransferenciaInput>
  }

  export type ProductoUpdateWithoutSolicitudesTransferenciaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutSolicitudesTransferenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type SucursalUpsertWithoutSolicitudesOrigenInput = {
    update: XOR<SucursalUpdateWithoutSolicitudesOrigenInput, SucursalUncheckedUpdateWithoutSolicitudesOrigenInput>
    create: XOR<SucursalCreateWithoutSolicitudesOrigenInput, SucursalUncheckedCreateWithoutSolicitudesOrigenInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutSolicitudesOrigenInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutSolicitudesOrigenInput, SucursalUncheckedUpdateWithoutSolicitudesOrigenInput>
  }

  export type SucursalUpdateWithoutSolicitudesOrigenInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutSolicitudesOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesDestino?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUpsertWithoutSolicitudesDestinoInput = {
    update: XOR<SucursalUpdateWithoutSolicitudesDestinoInput, SucursalUncheckedUpdateWithoutSolicitudesDestinoInput>
    create: XOR<SucursalCreateWithoutSolicitudesDestinoInput, SucursalUncheckedCreateWithoutSolicitudesDestinoInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutSolicitudesDestinoInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutSolicitudesDestinoInput, SucursalUncheckedUpdateWithoutSolicitudesDestinoInput>
  }

  export type SucursalUpdateWithoutSolicitudesDestinoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUpdateManyWithoutSucursalOrigenNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateWithoutSolicitudesDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    pbx?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoSucursal?: EnumTipoSucursalFieldUpdateOperationsInput | $Enums.TipoSucursal
    estadoOperacion?: BoolFieldUpdateOperationsInput | boolean
    productos?: StockUncheckedUpdateManyWithoutSucursalNestedInput
    usuarios?: UsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    Venta?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    TransferenciaProductoDestino?: TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoNestedInput
    EntregaStock?: EntregaStockUncheckedUpdateManyWithoutSucursalNestedInput
    solicitudesOrigen?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutSucursalNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutSucursalNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutSucursalNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutSucursalNestedInput
    SucursalSaldo?: SucursalSaldoUncheckedUpdateOneWithoutSucursalNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutSucursalNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutSucursalNestedInput
    PlantillaComprobante?: PlantillaComprobanteUncheckedUpdateManyWithoutSucursalNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutSucursalNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutSucursalNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutSucursalNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type UsuarioUpsertWithoutSolicitudesEnviadasInput = {
    update: XOR<UsuarioUpdateWithoutSolicitudesEnviadasInput, UsuarioUncheckedUpdateWithoutSolicitudesEnviadasInput>
    create: XOR<UsuarioCreateWithoutSolicitudesEnviadasInput, UsuarioUncheckedCreateWithoutSolicitudesEnviadasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutSolicitudesEnviadasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutSolicitudesEnviadasInput, UsuarioUncheckedUpdateWithoutSolicitudesEnviadasInput>
  }

  export type UsuarioUpdateWithoutSolicitudesEnviadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutSolicitudesEnviadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUpsertWithoutSolicitudesAprobadasTransferenciaInput = {
    update: XOR<UsuarioUpdateWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUncheckedUpdateWithoutSolicitudesAprobadasTransferenciaInput>
    create: XOR<UsuarioCreateWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUncheckedCreateWithoutSolicitudesAprobadasTransferenciaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutSolicitudesAprobadasTransferenciaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutSolicitudesAprobadasTransferenciaInput, UsuarioUncheckedUpdateWithoutSolicitudesAprobadasTransferenciaInput>
  }

  export type UsuarioUpdateWithoutSolicitudesAprobadasTransferenciaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutSolicitudesAprobadasTransferenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type VentaCreateWithoutProductosInput = {
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    cliente?: ClienteCreateNestedOneWithoutComprasInput
    metodoPago?: PagoCreateNestedOneWithoutVentaInput
    sucursal: SucursalCreateNestedOneWithoutVentaInput
    registroCaja?: RegistroCajaCreateNestedOneWithoutVentasInput
    ventaCuota?: VentaCuotaCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutProductosInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
    metodoPago?: PagoUncheckedCreateNestedOneWithoutVentaInput
    ventaCuota?: VentaCuotaUncheckedCreateNestedOneWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutProductosInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutProductosInput, VentaUncheckedCreateWithoutProductosInput>
  }

  export type ProductoCreateWithoutVentasInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    categorias?: CategoriaCreateNestedManyWithoutProductosInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutVentasInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    categorias?: CategoriaUncheckedCreateNestedManyWithoutProductosInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutVentasInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutVentasInput, ProductoUncheckedCreateWithoutVentasInput>
  }

  export type VentaUpsertWithoutProductosInput = {
    update: XOR<VentaUpdateWithoutProductosInput, VentaUncheckedUpdateWithoutProductosInput>
    create: XOR<VentaCreateWithoutProductosInput, VentaUncheckedCreateWithoutProductosInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutProductosInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutProductosInput, VentaUncheckedUpdateWithoutProductosInput>
  }

  export type VentaUpdateWithoutProductosInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutComprasNestedInput
    metodoPago?: PagoUpdateOneWithoutVentaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaNestedInput
    registroCaja?: RegistroCajaUpdateOneWithoutVentasNestedInput
    ventaCuota?: VentaCuotaUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    metodoPago?: PagoUncheckedUpdateOneWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type ProductoUpsertWithoutVentasInput = {
    update: XOR<ProductoUpdateWithoutVentasInput, ProductoUncheckedUpdateWithoutVentasInput>
    create: XOR<ProductoCreateWithoutVentasInput, ProductoUncheckedCreateWithoutVentasInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutVentasInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutVentasInput, ProductoUncheckedUpdateWithoutVentasInput>
  }

  export type ProductoUpdateWithoutVentasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUpdateManyWithoutProductosNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    categorias?: CategoriaUncheckedUpdateManyWithoutProductosNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type EntregaStockCreateWithoutProveedorInput = {
    montoTotal: number
    fechaEntrega?: Date | string
    stockEntregado?: StockCreateNestedManyWithoutEntregaStockInput
    usuarioRecibido?: UsuarioCreateNestedOneWithoutEntregasRecibidasInput
    sucursal?: SucursalCreateNestedOneWithoutEntregaStockInput
  }

  export type EntregaStockUncheckedCreateWithoutProveedorInput = {
    id?: number
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
    sucursalId?: number | null
    stockEntregado?: StockUncheckedCreateNestedManyWithoutEntregaStockInput
  }

  export type EntregaStockCreateOrConnectWithoutProveedorInput = {
    where: EntregaStockWhereUniqueInput
    create: XOR<EntregaStockCreateWithoutProveedorInput, EntregaStockUncheckedCreateWithoutProveedorInput>
  }

  export type EntregaStockCreateManyProveedorInputEnvelope = {
    data: EntregaStockCreateManyProveedorInput | EntregaStockCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type GarantiaCreateWithoutProveedorInput = {
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    cliente: ClienteCreateNestedOneWithoutGarantiaInput
    producto: ProductoCreateNestedOneWithoutGarantiaInput
    usuarioRecibe?: UsuarioCreateNestedOneWithoutGarantiaInput
    registros?: RegistroGarantiaCreateNestedManyWithoutGarantiaInput
  }

  export type GarantiaUncheckedCreateWithoutProveedorInput = {
    id?: number
    clienteId: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    registros?: RegistroGarantiaUncheckedCreateNestedManyWithoutGarantiaInput
  }

  export type GarantiaCreateOrConnectWithoutProveedorInput = {
    where: GarantiaWhereUniqueInput
    create: XOR<GarantiaCreateWithoutProveedorInput, GarantiaUncheckedCreateWithoutProveedorInput>
  }

  export type GarantiaCreateManyProveedorInputEnvelope = {
    data: GarantiaCreateManyProveedorInput | GarantiaCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type RegistroGarantiaCreateWithoutProveedorInput = {
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    garantia: GarantiaCreateNestedOneWithoutRegistrosInput
    usuario?: UsuarioCreateNestedOneWithoutRegistroGarantiaInput
    producto: ProductoCreateNestedOneWithoutRegistroGarantiaInput
  }

  export type RegistroGarantiaUncheckedCreateWithoutProveedorInput = {
    id?: number
    garantiaId: number
    usuarioId?: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
  }

  export type RegistroGarantiaCreateOrConnectWithoutProveedorInput = {
    where: RegistroGarantiaWhereUniqueInput
    create: XOR<RegistroGarantiaCreateWithoutProveedorInput, RegistroGarantiaUncheckedCreateWithoutProveedorInput>
  }

  export type RegistroGarantiaCreateManyProveedorInputEnvelope = {
    data: RegistroGarantiaCreateManyProveedorInput | RegistroGarantiaCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type EntregaStockUpsertWithWhereUniqueWithoutProveedorInput = {
    where: EntregaStockWhereUniqueInput
    update: XOR<EntregaStockUpdateWithoutProveedorInput, EntregaStockUncheckedUpdateWithoutProveedorInput>
    create: XOR<EntregaStockCreateWithoutProveedorInput, EntregaStockUncheckedCreateWithoutProveedorInput>
  }

  export type EntregaStockUpdateWithWhereUniqueWithoutProveedorInput = {
    where: EntregaStockWhereUniqueInput
    data: XOR<EntregaStockUpdateWithoutProveedorInput, EntregaStockUncheckedUpdateWithoutProveedorInput>
  }

  export type EntregaStockUpdateManyWithWhereWithoutProveedorInput = {
    where: EntregaStockScalarWhereInput
    data: XOR<EntregaStockUpdateManyMutationInput, EntregaStockUncheckedUpdateManyWithoutProveedorInput>
  }

  export type GarantiaUpsertWithWhereUniqueWithoutProveedorInput = {
    where: GarantiaWhereUniqueInput
    update: XOR<GarantiaUpdateWithoutProveedorInput, GarantiaUncheckedUpdateWithoutProveedorInput>
    create: XOR<GarantiaCreateWithoutProveedorInput, GarantiaUncheckedCreateWithoutProveedorInput>
  }

  export type GarantiaUpdateWithWhereUniqueWithoutProveedorInput = {
    where: GarantiaWhereUniqueInput
    data: XOR<GarantiaUpdateWithoutProveedorInput, GarantiaUncheckedUpdateWithoutProveedorInput>
  }

  export type GarantiaUpdateManyWithWhereWithoutProveedorInput = {
    where: GarantiaScalarWhereInput
    data: XOR<GarantiaUpdateManyMutationInput, GarantiaUncheckedUpdateManyWithoutProveedorInput>
  }

  export type RegistroGarantiaUpsertWithWhereUniqueWithoutProveedorInput = {
    where: RegistroGarantiaWhereUniqueInput
    update: XOR<RegistroGarantiaUpdateWithoutProveedorInput, RegistroGarantiaUncheckedUpdateWithoutProveedorInput>
    create: XOR<RegistroGarantiaCreateWithoutProveedorInput, RegistroGarantiaUncheckedCreateWithoutProveedorInput>
  }

  export type RegistroGarantiaUpdateWithWhereUniqueWithoutProveedorInput = {
    where: RegistroGarantiaWhereUniqueInput
    data: XOR<RegistroGarantiaUpdateWithoutProveedorInput, RegistroGarantiaUncheckedUpdateWithoutProveedorInput>
  }

  export type RegistroGarantiaUpdateManyWithWhereWithoutProveedorInput = {
    where: RegistroGarantiaScalarWhereInput
    data: XOR<RegistroGarantiaUpdateManyMutationInput, RegistroGarantiaUncheckedUpdateManyWithoutProveedorInput>
  }

  export type ProductoCreateWithoutCategoriasInput = {
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockCreateNestedManyWithoutProductoInput
    ventas?: VentaProductoCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutCategoriasInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    codigoProducto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    precioCostoActual?: number | null
    stock?: StockUncheckedCreateNestedManyWithoutProductoInput
    ventas?: VentaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialStock?: HistorialStockUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecio?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    TransferenciaProducto?: TransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    precios?: PrecioProductoUncheckedCreateNestedManyWithoutProductoInput
    SolicitudPrecio?: SolicitudPrecioUncheckedCreateNestedManyWithoutProductoInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedCreateNestedManyWithoutProductoInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedCreateNestedManyWithoutProductoInput
    AjusteStock?: AjusteStockUncheckedCreateNestedManyWithoutProductoInput
    EliminacionProducto?: EliminacionProductoUncheckedCreateNestedManyWithoutProductoInput
    EliminacionStock?: EliminacionStockUncheckedCreateNestedManyWithoutProductoInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutProductoInput
    RegistroGarantia?: RegistroGarantiaUncheckedCreateNestedManyWithoutProductoInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedCreateNestedManyWithoutProductoInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutCategoriasInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutCategoriasInput, ProductoUncheckedCreateWithoutCategoriasInput>
  }

  export type ProductoUpsertWithWhereUniqueWithoutCategoriasInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutCategoriasInput, ProductoUncheckedUpdateWithoutCategoriasInput>
    create: XOR<ProductoCreateWithoutCategoriasInput, ProductoUncheckedCreateWithoutCategoriasInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutCategoriasInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutCategoriasInput, ProductoUncheckedUpdateWithoutCategoriasInput>
  }

  export type ProductoUpdateManyWithWhereWithoutCategoriasInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutCategoriasInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    codigoProducto?: StringFilter<"Producto"> | string
    creadoEn?: DateTimeFilter<"Producto"> | Date | string
    actualizadoEn?: DateTimeFilter<"Producto"> | Date | string
    precioCostoActual?: FloatNullableFilter<"Producto"> | number | null
  }

  export type MunicipioCreateWithoutDepartamentoInput = {
    nombre: string
    clientes?: ClienteCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioUncheckedCreateWithoutDepartamentoInput = {
    id?: number
    nombre: string
    clientes?: ClienteUncheckedCreateNestedManyWithoutMunicipioInput
  }

  export type MunicipioCreateOrConnectWithoutDepartamentoInput = {
    where: MunicipioWhereUniqueInput
    create: XOR<MunicipioCreateWithoutDepartamentoInput, MunicipioUncheckedCreateWithoutDepartamentoInput>
  }

  export type MunicipioCreateManyDepartamentoInputEnvelope = {
    data: MunicipioCreateManyDepartamentoInput | MunicipioCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type ClienteCreateWithoutDepartamentoInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    municipio?: MunicipioCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutDepartamentoInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutDepartamentoInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutDepartamentoInput, ClienteUncheckedCreateWithoutDepartamentoInput>
  }

  export type ClienteCreateManyDepartamentoInputEnvelope = {
    data: ClienteCreateManyDepartamentoInput | ClienteCreateManyDepartamentoInput[]
    skipDuplicates?: boolean
  }

  export type MunicipioUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: MunicipioWhereUniqueInput
    update: XOR<MunicipioUpdateWithoutDepartamentoInput, MunicipioUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<MunicipioCreateWithoutDepartamentoInput, MunicipioUncheckedCreateWithoutDepartamentoInput>
  }

  export type MunicipioUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: MunicipioWhereUniqueInput
    data: XOR<MunicipioUpdateWithoutDepartamentoInput, MunicipioUncheckedUpdateWithoutDepartamentoInput>
  }

  export type MunicipioUpdateManyWithWhereWithoutDepartamentoInput = {
    where: MunicipioScalarWhereInput
    data: XOR<MunicipioUpdateManyMutationInput, MunicipioUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type MunicipioScalarWhereInput = {
    AND?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
    OR?: MunicipioScalarWhereInput[]
    NOT?: MunicipioScalarWhereInput | MunicipioScalarWhereInput[]
    id?: IntFilter<"Municipio"> | number
    nombre?: StringFilter<"Municipio"> | string
    departamentoId?: IntFilter<"Municipio"> | number
  }

  export type ClienteUpsertWithWhereUniqueWithoutDepartamentoInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutDepartamentoInput, ClienteUncheckedUpdateWithoutDepartamentoInput>
    create: XOR<ClienteCreateWithoutDepartamentoInput, ClienteUncheckedCreateWithoutDepartamentoInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutDepartamentoInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutDepartamentoInput, ClienteUncheckedUpdateWithoutDepartamentoInput>
  }

  export type ClienteUpdateManyWithWhereWithoutDepartamentoInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutDepartamentoInput>
  }

  export type ClienteScalarWhereInput = {
    AND?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    OR?: ClienteScalarWhereInput[]
    NOT?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    id?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    direccion?: StringNullableFilter<"Cliente"> | string | null
    creadoEn?: DateTimeFilter<"Cliente"> | Date | string
    actualizadoEn?: DateTimeFilter<"Cliente"> | Date | string
    municipioId?: IntNullableFilter<"Cliente"> | number | null
    departamentoId?: IntNullableFilter<"Cliente"> | number | null
    dpi?: StringNullableFilter<"Cliente"> | string | null
    iPInternet?: StringNullableFilter<"Cliente"> | string | null
  }

  export type DepartamentoCreateWithoutMunicipiosInput = {
    nombre: string
    clientes?: ClienteCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoUncheckedCreateWithoutMunicipiosInput = {
    id?: number
    nombre: string
    clientes?: ClienteUncheckedCreateNestedManyWithoutDepartamentoInput
  }

  export type DepartamentoCreateOrConnectWithoutMunicipiosInput = {
    where: DepartamentoWhereUniqueInput
    create: XOR<DepartamentoCreateWithoutMunicipiosInput, DepartamentoUncheckedCreateWithoutMunicipiosInput>
  }

  export type ClienteCreateWithoutMunicipioInput = {
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaCreateNestedManyWithoutClienteInput
    departamento?: DepartamentoCreateNestedOneWithoutClientesInput
    EliminacionCliente?: EliminacionClienteCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutMunicipioInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
    compras?: VentaUncheckedCreateNestedManyWithoutClienteInput
    EliminacionCliente?: EliminacionClienteUncheckedCreateNestedManyWithoutClienteInput
    Garantia?: GarantiaUncheckedCreateNestedManyWithoutClienteInput
    VentaEliminada?: VentaEliminadaUncheckedCreateNestedManyWithoutClienteInput
    VentaCuota?: VentaCuotaUncheckedCreateNestedManyWithoutClienteInput
    Reparacion?: ReparacionUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutMunicipioInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutMunicipioInput, ClienteUncheckedCreateWithoutMunicipioInput>
  }

  export type ClienteCreateManyMunicipioInputEnvelope = {
    data: ClienteCreateManyMunicipioInput | ClienteCreateManyMunicipioInput[]
    skipDuplicates?: boolean
  }

  export type DepartamentoUpsertWithoutMunicipiosInput = {
    update: XOR<DepartamentoUpdateWithoutMunicipiosInput, DepartamentoUncheckedUpdateWithoutMunicipiosInput>
    create: XOR<DepartamentoCreateWithoutMunicipiosInput, DepartamentoUncheckedCreateWithoutMunicipiosInput>
    where?: DepartamentoWhereInput
  }

  export type DepartamentoUpdateToOneWithWhereWithoutMunicipiosInput = {
    where?: DepartamentoWhereInput
    data: XOR<DepartamentoUpdateWithoutMunicipiosInput, DepartamentoUncheckedUpdateWithoutMunicipiosInput>
  }

  export type DepartamentoUpdateWithoutMunicipiosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    clientes?: ClienteUpdateManyWithoutDepartamentoNestedInput
  }

  export type DepartamentoUncheckedUpdateWithoutMunicipiosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    clientes?: ClienteUncheckedUpdateManyWithoutDepartamentoNestedInput
  }

  export type ClienteUpsertWithWhereUniqueWithoutMunicipioInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutMunicipioInput, ClienteUncheckedUpdateWithoutMunicipioInput>
    create: XOR<ClienteCreateWithoutMunicipioInput, ClienteUncheckedCreateWithoutMunicipioInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutMunicipioInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutMunicipioInput, ClienteUncheckedUpdateWithoutMunicipioInput>
  }

  export type ClienteUpdateManyWithWhereWithoutMunicipioInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutMunicipioInput>
  }

  export type RegistroReparacionCreateManyReparacionInput = {
    id?: number
    usuarioId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
  }

  export type RegistroReparacionUpdateWithoutReparacionInput = {
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
    usuario?: UsuarioUpdateOneRequiredWithoutRegistroReparacionNestedInput
  }

  export type RegistroReparacionUncheckedUpdateWithoutReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroReparacionUncheckedUpdateManyWithoutReparacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CuotaCreateManyVentaCuotaInput = {
    id?: number
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    usuarioId?: number | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
  }

  export type CuotaUpdateWithoutVentaCuotaInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
    usuario?: UsuarioUpdateOneWithoutCuotaNestedInput
  }

  export type CuotaUncheckedUpdateWithoutVentaCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CuotaUncheckedUpdateManyWithoutVentaCuotaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type VentaEliminadaProductoCreateManyVentaEliminadaInput = {
    id?: number
    productoId?: number | null
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
  }

  export type VentaEliminadaProductoUpdateWithoutVentaEliminadaInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneWithoutVentaEliminadaProductoNestedInput
  }

  export type VentaEliminadaProductoUncheckedUpdateWithoutVentaEliminadaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepositoCreateManyRegistroCajaInput = {
    id?: number
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type EgresoCreateManyRegistroCajaInput = {
    id?: number
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursalId?: number | null
    usuarioId?: number | null
  }

  export type VentaCreateManyRegistroCajaInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
  }

  export type DepositoUpdateWithoutRegistroCajaInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneWithoutDepositoNestedInput
    usuario?: UsuarioUpdateOneWithoutDepositoNestedInput
  }

  export type DepositoUncheckedUpdateWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DepositoUncheckedUpdateManyWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoUpdateWithoutRegistroCajaInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursal?: SucursalUpdateOneWithoutEgresoNestedInput
    usuario?: UsuarioUpdateOneWithoutEgresoNestedInput
  }

  export type EgresoUncheckedUpdateWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoUncheckedUpdateManyWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaUpdateWithoutRegistroCajaInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutComprasNestedInput
    productos?: VentaProductoUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUpdateOneWithoutVentaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: VentaProductoUncheckedUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUncheckedUpdateOneWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateManyWithoutRegistroCajaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificacionesUsuariosCreateManyNotificacionInput = {
    id?: number
    usuarioId: number
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
  }

  export type NotificacionesUsuariosUpdateWithoutNotificacionInput = {
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutNotificacionesUsuariosNestedInput
  }

  export type NotificacionesUsuariosUncheckedUpdateWithoutNotificacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUsuariosUncheckedUpdateManyWithoutNotificacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUpdateWithoutNotificacionesRecibidasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutUsuariosNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutNotificacionesRecibidasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutNotificacionesRecibidasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StockCreateManyProductoInput = {
    id?: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
    sucursalId: number
  }

  export type VentaProductoCreateManyProductoInput = {
    id?: number
    ventaId: number
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
  }

  export type HistorialStockCreateManyProductoInput = {
    id?: number
    cantidadAnterior: number
    cantidadNueva: number
    fechaCambio?: Date | string
  }

  export type HistorialPrecioCreateManyProductoInput = {
    id?: number
    precioAnterior: number
    precioNuevo: number
    fechaCambio?: Date | string
  }

  export type TransferenciaProductoCreateManyProductoInput = {
    id?: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type PrecioProductoCreateManyProductoInput = {
    id?: number
    precio: number
    creadoPorId?: number | null
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
  }

  export type SolicitudPrecioCreateManyProductoInput = {
    id?: number
    precioSolicitado: number
    solicitadoPorId: number
    estado?: $Enums.EstadoSolicitud
    aprobadoPorId?: number | null
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudTransferenciaProductoCreateManyProductoInput = {
    id?: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type HistorialPrecioCostoCreateManyProductoInput = {
    id?: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
    modificadoPorId?: number | null
  }

  export type AjusteStockCreateManyProductoInput = {
    id?: number
    stockId?: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    usuarioId?: number | null
    descripcion?: string | null
  }

  export type EliminacionProductoCreateManyProductoInput = {
    id?: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type EliminacionStockCreateManyProductoInput = {
    id?: number
    fechaHora?: Date | string
    usuarioId?: number | null
    sucursalId?: number | null
    motivo?: string | null
  }

  export type GarantiaCreateManyProductoInput = {
    id?: number
    clienteId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaCreateManyProductoInput = {
    id?: number
    garantiaId: number
    usuarioId?: number | null
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type VentaEliminadaProductoCreateManyProductoInput = {
    id?: number
    ventaEliminadaId: number
    cantidad: number
    precioVenta: number
    creadoEn?: Date | string
  }

  export type ReparacionCreateManyProductoInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    clienteId: number
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type StockUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStock?: EntregaStockUpdateOneWithoutStockEntregadoNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutProductosNestedInput
    Vencimiento?: VencimientoUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: IntFieldUpdateOperationsInput | number
    Vencimiento?: VencimientoUncheckedUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaUncheckedUpdateManyWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type VentaProductoUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
    venta?: VentaUpdateOneRequiredWithoutProductosNestedInput
  }

  export type VentaProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type VentaProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type HistorialStockUpdateWithoutProductoInput = {
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialStockUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialStockUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidadAnterior?: IntFieldUpdateOperationsInput | number
    cantidadNueva?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUpdateWithoutProductoInput = {
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precioAnterior?: FloatFieldUpdateOperationsInput | number
    precioNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferenciaProductoUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutTransferenciaProductoDestinoNestedInput
    usuarioEncargado?: UsuarioUpdateOneWithoutTransferenciaProductoNestedInput
  }

  export type TransferenciaProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PrecioProductoUpdateWithoutProductoInput = {
    precio?: FloatFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
    creadoPor?: UsuarioUpdateOneWithoutPrecioProductoNestedInput
  }

  export type PrecioProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type PrecioProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    creadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type SolicitudPrecioUpdateWithoutProductoInput = {
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    solicitadoPor?: UsuarioUpdateOneRequiredWithoutSolicitudesPrecioNestedInput
    aprobadoPor?: UsuarioUpdateOneWithoutSolicitudesAprobadasNestedInput
  }

  export type SolicitudPrecioUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    solicitadoPorId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    aprobadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudPrecioUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    solicitadoPorId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    aprobadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudTransferenciaProductoUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutSolicitudesOrigenNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutSolicitudesDestinoNestedInput
    usuarioSolicitante?: UsuarioUpdateOneWithoutSolicitudesEnviadasNestedInput
    administrador?: UsuarioUpdateOneWithoutSolicitudesAprobadasTransferenciaNestedInput
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialPrecioCostoUpdateWithoutProductoInput = {
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadoPor?: UsuarioUpdateOneWithoutHistorialPrecioCostoNestedInput
  }

  export type HistorialPrecioCostoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type HistorialPrecioCostoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    modificadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AjusteStockUpdateWithoutProductoInput = {
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    stock?: StockUpdateOneWithoutAjusteStockNestedInput
    usuario?: UsuarioUpdateOneWithoutAjusteStockNestedInput
  }

  export type AjusteStockUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AjusteStockUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoUpdateWithoutProductoInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneWithoutEliminacionProductoNestedInput
  }

  export type EliminacionProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockUpdateWithoutProductoInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneWithoutEliminacionStockNestedInput
    sucursal?: SucursalUpdateOneWithoutEliminacionStockNestedInput
  }

  export type EliminacionStockUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GarantiaUpdateWithoutProductoInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutGarantiaNestedInput
    usuarioRecibe?: UsuarioUpdateOneWithoutGarantiaNestedInput
    registros?: RegistroGarantiaUpdateManyWithoutGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    registros?: RegistroGarantiaUncheckedUpdateManyWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroGarantiaUpdateWithoutProductoInput = {
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    garantia?: GarantiaUpdateOneRequiredWithoutRegistrosNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutRegistroGarantiaNestedInput
  }

  export type RegistroGarantiaUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaEliminadaProductoUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    ventaEliminada?: VentaEliminadaUpdateOneRequiredWithoutVentaEliminadaProductoNestedInput
  }

  export type VentaEliminadaProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaEliminadaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaEliminadaProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaEliminadaId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precioVenta?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReparacionUpdateWithoutProductoInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutReparacionNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutReparacionNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutReparacionNestedInput
    registros?: RegistroReparacionUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroReparacionUncheckedUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VencimientoCreateManyStockInput = {
    id?: number
    fechaVencimiento: Date | string
    estado?: $Enums.EstadoVencimiento
    descripcion?: string | null
    fechaCreacion?: Date | string
  }

  export type AjusteStockCreateManyStockInput = {
    id?: number
    productoId: number
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    usuarioId?: number | null
    descripcion?: string | null
  }

  export type VencimientoUpdateWithoutStockInput = {
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VencimientoUncheckedUpdateWithoutStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VencimientoUncheckedUpdateManyWithoutStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoVencimientoFieldUpdateOperationsInput | $Enums.EstadoVencimiento
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AjusteStockUpdateWithoutStockInput = {
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutAjusteStockNestedInput
    usuario?: UsuarioUpdateOneWithoutAjusteStockNestedInput
  }

  export type AjusteStockUncheckedUpdateWithoutStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AjusteStockUncheckedUpdateManyWithoutStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockCreateManySucursalInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    entregaStockId?: number | null
  }

  export type UsuarioCreateManySucursalInput = {
    id?: number
    nombre: string
    rol: $Enums.Rol
    contrasena: string
    activo?: boolean
    correo: string
    fecha_creacion?: Date | string
    fecha_actualizacion?: Date | string
  }

  export type VentaCreateManySucursalInput = {
    id?: number
    clienteId?: number | null
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
  }

  export type TransferenciaProductoCreateManySucursalOrigenInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type TransferenciaProductoCreateManySucursalDestinoInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    fechaTransferencia?: Date | string
    usuarioEncargadoId?: number | null
  }

  export type EntregaStockCreateManySucursalInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateManySucursalOrigenInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateManySucursalDestinoInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type EliminacionStockCreateManySucursalInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type RegistroCajaCreateManySucursalInput = {
    id?: number
    usuarioId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
  }

  export type DepositoCreateManySucursalInput = {
    id?: number
    registroCajaId?: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    usuarioId?: number | null
  }

  export type EgresoCreateManySucursalInput = {
    id?: number
    registroCajaId?: number | null
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    usuarioId?: number | null
  }

  export type VentaEliminadaCreateManySucursalInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
  }

  export type VentaCuotaCreateManySucursalInput = {
    id?: number
    clienteId: number
    usuarioId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
  }

  export type PlantillaComprobanteCreateManySucursalInput = {
    id?: number
    nombre: string
    texto: string
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type ReparacionCreateManySucursalInput = {
    id?: number
    usuarioId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type MetaUsuarioCreateManySucursalInput = {
    id?: number
    usuarioId: number
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
  }

  export type MetaCobrosCreateManySucursalInput = {
    id?: number
    usuarioId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
  }

  export type DepositoCobroCreateManySucursalInput = {
    id?: number
    usuarioId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    metaCobroId: number
  }

  export type StockUpdateWithoutSucursalInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutStockNestedInput
    entregaStock?: EntregaStockUpdateOneWithoutStockEntregadoNestedInput
    Vencimiento?: VencimientoUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
    Vencimiento?: VencimientoUncheckedUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    entregaStockId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UsuarioUpdateWithoutSucursalInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    entregasRecibidas?: EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoNestedInput
    PrecioProducto?: PrecioProductoUncheckedUpdateManyWithoutCreadoPorNestedInput
    solicitudesPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorNestedInput
    solicitudesAprobadas?: SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorNestedInput
    notificacionesEnviadas?: NotificacionUncheckedUpdateManyWithoutRemitenteNestedInput
    notificacionesRecibidas?: NotificacionUncheckedUpdateManyWithoutUsuarioNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioNestedInput
    solicitudesEnviadas?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteNestedInput
    solicitudesAprobadasTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutUsuarioNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutUsuarioNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutUsuarioRecibeNestedInput
    RegistroCaja?: RegistroCajaUncheckedUpdateManyWithoutUsuarioNestedInput
    Deposito?: DepositoUncheckedUpdateManyWithoutUsuarioNestedInput
    Egreso?: EgresoUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutUsuarioNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Cuota?: CuotaUncheckedUpdateManyWithoutUsuarioNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    RegistroReparacion?: RegistroReparacionUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaUsuario?: MetaUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    MetaCobros?: MetaCobrosUncheckedUpdateManyWithoutUsuarioNestedInput
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    contrasena?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    correo?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaUpdateWithoutSucursalInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneWithoutComprasNestedInput
    productos?: VentaProductoUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUpdateOneWithoutVentaNestedInput
    registroCaja?: RegistroCajaUpdateOneWithoutVentasNestedInput
    ventaCuota?: VentaCuotaUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: VentaProductoUncheckedUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUncheckedUpdateOneWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoUpdateWithoutSucursalOrigenInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutTransferenciaProductoDestinoNestedInput
    usuarioEncargado?: UsuarioUpdateOneWithoutTransferenciaProductoNestedInput
  }

  export type TransferenciaProductoUncheckedUpdateWithoutSucursalOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoUpdateWithoutSucursalDestinoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    usuarioEncargado?: UsuarioUpdateOneWithoutTransferenciaProductoNestedInput
  }

  export type TransferenciaProductoUncheckedUpdateWithoutSucursalDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEncargadoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EntregaStockUpdateWithoutSucursalInput = {
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: ProveedorUpdateOneWithoutEntregasStockNestedInput
    stockEntregado?: StockUpdateManyWithoutEntregaStockNestedInput
    usuarioRecibido?: UsuarioUpdateOneWithoutEntregasRecibidasNestedInput
  }

  export type EntregaStockUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    stockEntregado?: StockUncheckedUpdateManyWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUpdateWithoutSucursalOrigenInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudesTransferenciaNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutSolicitudesDestinoNestedInput
    usuarioSolicitante?: UsuarioUpdateOneWithoutSolicitudesEnviadasNestedInput
    administrador?: UsuarioUpdateOneWithoutSolicitudesAprobadasTransferenciaNestedInput
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateWithoutSucursalOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalOrigenInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUpdateWithoutSucursalDestinoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudesTransferenciaNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutSolicitudesOrigenNestedInput
    usuarioSolicitante?: UsuarioUpdateOneWithoutSolicitudesEnviadasNestedInput
    administrador?: UsuarioUpdateOneWithoutSolicitudesAprobadasTransferenciaNestedInput
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateWithoutSucursalDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutSucursalDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EliminacionStockUpdateWithoutSucursalInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutEliminacionStockNestedInput
    usuario?: UsuarioUpdateOneWithoutEliminacionStockNestedInput
  }

  export type EliminacionStockUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RegistroCajaUpdateWithoutSucursalInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneWithoutRegistroCajaNestedInput
    depositos?: DepositoUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    depositos?: DepositoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepositoUpdateWithoutSucursalInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    registroCaja?: RegistroCajaUpdateOneWithoutDepositosNestedInput
    usuario?: UsuarioUpdateOneWithoutDepositoNestedInput
  }

  export type DepositoUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DepositoUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoUpdateWithoutSucursalInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    registroCaja?: RegistroCajaUpdateOneWithoutEgresosNestedInput
    usuario?: UsuarioUpdateOneWithoutEgresoNestedInput
  }

  export type EgresoUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaEliminadaUpdateWithoutSucursalInput = {
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutVentaEliminadaNestedInput
    cliente?: ClienteUpdateOneWithoutVentaEliminadaNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaCuotaUpdateWithoutSucursalInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClienteUpdateOneRequiredWithoutVentaCuotaNestedInput
    usuario?: UsuarioUpdateOneRequiredWithoutVentaCuotaNestedInput
    cuotas?: CuotaUpdateManyWithoutVentaCuotaNestedInput
    venta?: VentaUpdateOneWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cuotas?: CuotaUncheckedUpdateManyWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PlantillaComprobanteUpdateWithoutSucursalInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlantillaComprobanteUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlantillaComprobanteUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReparacionUpdateWithoutSucursalInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutReparacionNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutReparacionNestedInput
    producto?: ProductoUpdateOneWithoutReparacionNestedInput
    registros?: RegistroReparacionUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroReparacionUncheckedUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetaUsuarioUpdateWithoutSucursalInput = {
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
    usuario?: UsuarioUpdateOneRequiredWithoutMetaUsuarioNestedInput
  }

  export type MetaUsuarioUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaCobrosUpdateWithoutSucursalInput = {
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    usuario?: UsuarioUpdateOneRequiredWithoutMetaCobrosNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutMetaCobroNestedInput
  }

  export type MetaCobrosUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutMetaCobroNestedInput
  }

  export type MetaCobrosUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
  }

  export type DepositoCobroUpdateWithoutSucursalInput = {
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutDepositoCobroNestedInput
    metaCobro?: MetaCobrosUpdateOneRequiredWithoutDepositoCobroNestedInput
  }

  export type DepositoCobroUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    metaCobroId?: IntFieldUpdateOperationsInput | number
  }

  export type DepositoCobroUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    metaCobroId?: IntFieldUpdateOperationsInput | number
  }

  export type StockCreateManyEntregaStockInput = {
    id?: number
    productoId: number
    cantidad: number
    costoTotal: number
    creadoEn?: Date | string
    fechaIngreso: Date | string
    fechaVencimiento?: Date | string | null
    precioCosto: number
    sucursalId: number
  }

  export type StockUpdateWithoutEntregaStockInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneRequiredWithoutStockNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutProductosNestedInput
    Vencimiento?: VencimientoUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateWithoutEntregaStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    Vencimiento?: VencimientoUncheckedUpdateManyWithoutStockNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutEntregaStockInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    costoTotal?: FloatFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaIngreso?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precioCosto?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type EntregaStockCreateManyUsuarioRecibidoInput = {
    id?: number
    proveedorId?: number | null
    montoTotal: number
    fechaEntrega?: Date | string
    sucursalId?: number | null
  }

  export type TransferenciaProductoCreateManyUsuarioEncargadoInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    fechaTransferencia?: Date | string
  }

  export type PrecioProductoCreateManyCreadoPorInput = {
    id?: number
    productoId?: number | null
    precio: number
    fechaCreacion?: Date | string
    estado: $Enums.EstadoPrecio
    usado?: boolean
    tipo: $Enums.TipoPrecio
  }

  export type SolicitudPrecioCreateManySolicitadoPorInput = {
    id?: number
    productoId: number
    precioSolicitado: number
    estado?: $Enums.EstadoSolicitud
    aprobadoPorId?: number | null
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type SolicitudPrecioCreateManyAprobadoPorInput = {
    id?: number
    productoId: number
    precioSolicitado: number
    solicitadoPorId: number
    estado?: $Enums.EstadoSolicitud
    fechaSolicitud?: Date | string
    fechaRespuesta?: Date | string | null
  }

  export type NotificacionCreateManyRemitenteInput = {
    id?: number
    mensaje: string
    tipoNotificacion: $Enums.TipoNotificacion
    referenciaId?: number | null
    fechaCreacion?: Date | string
  }

  export type NotificacionesUsuariosCreateManyUsuarioInput = {
    id?: number
    notificacionId: number
    leido?: boolean
    eliminado?: boolean
    leidoEn?: Date | string | null
    recibidoEn?: Date | string
  }

  export type SolicitudTransferenciaProductoCreateManyUsuarioSolicitanteInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
    administradorId?: number | null
  }

  export type SolicitudTransferenciaProductoCreateManyAdministradorInput = {
    id?: number
    productoId: number
    cantidad: number
    sucursalOrigenId: number
    sucursalDestinoId: number
    usuarioSolicitanteId?: number | null
    estado?: $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: Date | string
    fechaAprobacion?: Date | string | null
  }

  export type HistorialPrecioCostoCreateManyModificadoPorInput = {
    id?: number
    productoId: number
    precioCostoAnterior: number
    precioCostoNuevo: number
    fechaCambio?: Date | string
  }

  export type AjusteStockCreateManyUsuarioInput = {
    id?: number
    productoId: number
    stockId?: number | null
    cantidadAjustada: number
    tipoAjuste: $Enums.TipoAjuste
    fechaHora?: Date | string
    descripcion?: string | null
  }

  export type EliminacionProductoCreateManyUsuarioInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    motivo?: string | null
  }

  export type EliminacionClienteCreateManyUsuarioInput = {
    id?: number
    clienteId: number
    fechaHora?: Date | string
    motivo?: string | null
  }

  export type EliminacionStockCreateManyUsuarioInput = {
    id?: number
    productoId: number
    fechaHora?: Date | string
    sucursalId?: number | null
    motivo?: string | null
  }

  export type RegistroGarantiaCreateManyUsuarioInput = {
    id?: number
    garantiaId: number
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type GarantiaCreateManyUsuarioRecibeInput = {
    id?: number
    clienteId: number
    productoId: number
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
  }

  export type RegistroCajaCreateManyUsuarioInput = {
    id?: number
    sucursalId?: number | null
    saldoInicial?: number | null
    saldoFinal?: number | null
    fechaInicio?: Date | string | null
    fechaCierre?: Date | string | null
    estado?: $Enums.EstadoCaja | null
    comentario?: string | null
  }

  export type DepositoCreateManyUsuarioInput = {
    id?: number
    registroCajaId?: number | null
    monto: number
    numeroBoleta: string
    banco: string
    fechaDeposito?: Date | string
    usadoParaCierre?: boolean
    descripcion?: string | null
    sucursalId?: number | null
  }

  export type EgresoCreateManyUsuarioInput = {
    id?: number
    registroCajaId?: number | null
    descripcion?: string | null
    monto: number
    fechaEgreso?: Date | string
    sucursalId?: number | null
  }

  export type VentaEliminadaCreateManyUsuarioInput = {
    id?: number
    motivo: string
    totalVenta: number
    clienteId?: number | null
    fechaEliminacion?: Date | string
    sucursalId: number
  }

  export type VentaCuotaCreateManyUsuarioInput = {
    id?: number
    clienteId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
  }

  export type CuotaCreateManyUsuarioInput = {
    id?: number
    ventaCuotaId: number
    monto: number
    fechaVencimiento?: Date | string | null
    fechaPago?: Date | string | null
    estado?: $Enums.EstadoPago
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    comentario?: string | null
    montoEsperado?: number | null
  }

  export type ReparacionCreateManyUsuarioInput = {
    id?: number
    sucursalId: number
    clienteId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type RegistroReparacionCreateManyUsuarioInput = {
    id?: number
    reparacionId: number
    estado: $Enums.EstadoReparacion
    accionesRealizadas: string
    fechaRegistro?: Date | string
    comentarioFinal?: string | null
    montoPagado?: number | null
  }

  export type MetaUsuarioCreateManyUsuarioInput = {
    id?: number
    sucursalId: number
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroVentas: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaTienda
  }

  export type MetaCobrosCreateManyUsuarioInput = {
    id?: number
    sucursalId: number
    fechaCreado?: Date | string
    fechaInicio?: Date | string
    fechaFin: Date | string
    montoMeta: number
    montoActual?: number
    cumplida?: boolean
    fechaCumplida?: Date | string | null
    numeroDepositos?: number
    tituloMeta?: string | null
    estado: $Enums.EstadoMetaCobro
  }

  export type DepositoCobroCreateManyUsuarioInput = {
    id?: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
    metaCobroId: number
  }

  export type EntregaStockUpdateWithoutUsuarioRecibidoInput = {
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedor?: ProveedorUpdateOneWithoutEntregasStockNestedInput
    stockEntregado?: StockUpdateManyWithoutEntregaStockNestedInput
    sucursal?: SucursalUpdateOneWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateWithoutUsuarioRecibidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    stockEntregado?: StockUncheckedUpdateManyWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateManyWithoutUsuarioRecibidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TransferenciaProductoUpdateWithoutUsuarioEncargadoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutTransferenciaProductoNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutTransferenciaProductoDestinoNestedInput
  }

  export type TransferenciaProductoUncheckedUpdateWithoutUsuarioEncargadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferenciaProductoUncheckedUpdateManyWithoutUsuarioEncargadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    fechaTransferencia?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecioProductoUpdateWithoutCreadoPorInput = {
    precio?: FloatFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
    producto?: ProductoUpdateOneWithoutPreciosNestedInput
  }

  export type PrecioProductoUncheckedUpdateWithoutCreadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: FloatFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type PrecioProductoUncheckedUpdateManyWithoutCreadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: FloatFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoPrecioFieldUpdateOperationsInput | $Enums.EstadoPrecio
    usado?: BoolFieldUpdateOperationsInput | boolean
    tipo?: EnumTipoPrecioFieldUpdateOperationsInput | $Enums.TipoPrecio
  }

  export type SolicitudPrecioUpdateWithoutSolicitadoPorInput = {
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudPrecioNestedInput
    aprobadoPor?: UsuarioUpdateOneWithoutSolicitudesAprobadasNestedInput
  }

  export type SolicitudPrecioUncheckedUpdateWithoutSolicitadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    aprobadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudPrecioUncheckedUpdateManyWithoutSolicitadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    aprobadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudPrecioUpdateWithoutAprobadoPorInput = {
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudPrecioNestedInput
    solicitadoPor?: UsuarioUpdateOneRequiredWithoutSolicitudesPrecioNestedInput
  }

  export type SolicitudPrecioUncheckedUpdateWithoutAprobadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    solicitadoPorId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudPrecioUncheckedUpdateManyWithoutAprobadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioSolicitado?: FloatFieldUpdateOperationsInput | number
    solicitadoPorId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudFieldUpdateOperationsInput | $Enums.EstadoSolicitud
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaRespuesta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificacionUpdateWithoutRemitenteInput = {
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutNotificacionNestedInput
    Usuario?: UsuarioUpdateManyWithoutNotificacionesRecibidasNestedInput
  }

  export type NotificacionUncheckedUpdateWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutNotificacionNestedInput
    Usuario?: UsuarioUncheckedUpdateManyWithoutNotificacionesRecibidasNestedInput
  }

  export type NotificacionUncheckedUpdateManyWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionUpdateWithoutUsuarioInput = {
    mensaje?: StringFieldUpdateOperationsInput | string
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    remitente?: UsuarioUpdateOneWithoutNotificacionesEnviadasNestedInput
    notificacionesUsuarios?: NotificacionesUsuariosUpdateManyWithoutNotificacionNestedInput
  }

  export type NotificacionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    remitenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    notificacionesUsuarios?: NotificacionesUsuariosUncheckedUpdateManyWithoutNotificacionNestedInput
  }

  export type NotificacionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    mensaje?: StringFieldUpdateOperationsInput | string
    remitenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipoNotificacion?: EnumTipoNotificacionFieldUpdateOperationsInput | $Enums.TipoNotificacion
    referenciaId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUsuariosUpdateWithoutUsuarioInput = {
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    notificacion?: NotificacionUpdateOneRequiredWithoutNotificacionesUsuariosNestedInput
  }

  export type NotificacionesUsuariosUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    notificacionId?: IntFieldUpdateOperationsInput | number
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUsuariosUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    notificacionId?: IntFieldUpdateOperationsInput | number
    leido?: BoolFieldUpdateOperationsInput | boolean
    eliminado?: BoolFieldUpdateOperationsInput | boolean
    leidoEn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recibidoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SolicitudTransferenciaProductoUpdateWithoutUsuarioSolicitanteInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudesTransferenciaNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutSolicitudesOrigenNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutSolicitudesDestinoNestedInput
    administrador?: UsuarioUpdateOneWithoutSolicitudesAprobadasTransferenciaNestedInput
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateWithoutUsuarioSolicitanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutUsuarioSolicitanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administradorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SolicitudTransferenciaProductoUpdateWithoutAdministradorInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    producto?: ProductoUpdateOneRequiredWithoutSolicitudesTransferenciaNestedInput
    sucursalOrigen?: SucursalUpdateOneRequiredWithoutSolicitudesOrigenNestedInput
    sucursalDestino?: SucursalUpdateOneRequiredWithoutSolicitudesDestinoNestedInput
    usuarioSolicitante?: UsuarioUpdateOneWithoutSolicitudesEnviadasNestedInput
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateWithoutAdministradorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SolicitudTransferenciaProductoUncheckedUpdateManyWithoutAdministradorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    sucursalOrigenId?: IntFieldUpdateOperationsInput | number
    sucursalDestinoId?: IntFieldUpdateOperationsInput | number
    usuarioSolicitanteId?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: EnumEstadoSolicitudTransferenciaFieldUpdateOperationsInput | $Enums.EstadoSolicitudTransferencia
    fechaSolicitud?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaAprobacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HistorialPrecioCostoUpdateWithoutModificadoPorInput = {
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutHistorialPrecioCostoNestedInput
  }

  export type HistorialPrecioCostoUncheckedUpdateWithoutModificadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioCostoUncheckedUpdateManyWithoutModificadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    precioCostoAnterior?: FloatFieldUpdateOperationsInput | number
    precioCostoNuevo?: FloatFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AjusteStockUpdateWithoutUsuarioInput = {
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutAjusteStockNestedInput
    stock?: StockUpdateOneWithoutAjusteStockNestedInput
  }

  export type AjusteStockUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AjusteStockUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    stockId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidadAjustada?: IntFieldUpdateOperationsInput | number
    tipoAjuste?: EnumTipoAjusteFieldUpdateOperationsInput | $Enums.TipoAjuste
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoUpdateWithoutUsuarioInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutEliminacionProductoNestedInput
  }

  export type EliminacionProductoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionProductoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionClienteUpdateWithoutUsuarioInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneRequiredWithoutEliminacionClienteNestedInput
  }

  export type EliminacionClienteUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionClienteUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockUpdateWithoutUsuarioInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    producto?: ProductoUpdateOneRequiredWithoutEliminacionStockNestedInput
    sucursal?: SucursalUpdateOneWithoutEliminacionStockNestedInput
  }

  export type EliminacionStockUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionStockUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RegistroGarantiaUpdateWithoutUsuarioInput = {
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    garantia?: GarantiaUpdateOneRequiredWithoutRegistrosNestedInput
    producto?: ProductoUpdateOneRequiredWithoutRegistroGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutRegistroGarantiaNestedInput
  }

  export type RegistroGarantiaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type GarantiaUpdateWithoutUsuarioRecibeInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutGarantiaNestedInput
    registros?: RegistroGarantiaUpdateManyWithoutGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateWithoutUsuarioRecibeInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    registros?: RegistroGarantiaUncheckedUpdateManyWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateManyWithoutUsuarioRecibeInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroCajaUpdateWithoutUsuarioInput = {
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneWithoutRegistroCajaNestedInput
    depositos?: DepositoUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    depositos?: DepositoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    egresos?: EgresoUncheckedUpdateManyWithoutRegistroCajaNestedInput
    ventas?: VentaUncheckedUpdateManyWithoutRegistroCajaNestedInput
  }

  export type RegistroCajaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    saldoInicial?: NullableFloatFieldUpdateOperationsInput | number | null
    saldoFinal?: NullableFloatFieldUpdateOperationsInput | number | null
    fechaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaCierre?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: NullableEnumEstadoCajaFieldUpdateOperationsInput | $Enums.EstadoCaja | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepositoUpdateWithoutUsuarioInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    registroCaja?: RegistroCajaUpdateOneWithoutDepositosNestedInput
    sucursal?: SucursalUpdateOneWithoutDepositoNestedInput
  }

  export type DepositoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DepositoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: FloatFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    banco?: StringFieldUpdateOperationsInput | string
    fechaDeposito?: DateTimeFieldUpdateOperationsInput | Date | string
    usadoParaCierre?: BoolFieldUpdateOperationsInput | boolean
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoUpdateWithoutUsuarioInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    registroCaja?: RegistroCajaUpdateOneWithoutEgresosNestedInput
    sucursal?: SucursalUpdateOneWithoutEgresoNestedInput
  }

  export type EgresoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EgresoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: FloatFieldUpdateOperationsInput | number
    fechaEgreso?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaEliminadaUpdateWithoutUsuarioInput = {
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneWithoutVentaEliminadaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaEliminadaNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCuotaUpdateWithoutUsuarioInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: ClienteUpdateOneRequiredWithoutVentaCuotaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaCuotaNestedInput
    cuotas?: CuotaUpdateManyWithoutVentaCuotaNestedInput
    venta?: VentaUpdateOneWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cuotas?: CuotaUncheckedUpdateManyWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CuotaUpdateWithoutUsuarioInput = {
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
    ventaCuota?: VentaCuotaUpdateOneRequiredWithoutCuotasNestedInput
  }

  export type CuotaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaCuotaId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CuotaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    ventaCuotaId?: IntFieldUpdateOperationsInput | number
    monto?: FloatFieldUpdateOperationsInput | number
    fechaVencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaPago?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoPagoFieldUpdateOperationsInput | $Enums.EstadoPago
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoEsperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ReparacionUpdateWithoutUsuarioInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursal?: SucursalUpdateOneRequiredWithoutReparacionNestedInput
    cliente?: ClienteUpdateOneRequiredWithoutReparacionNestedInput
    producto?: ProductoUpdateOneWithoutReparacionNestedInput
    registros?: RegistroReparacionUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroReparacionUncheckedUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroReparacionUpdateWithoutUsuarioInput = {
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
    reparacion?: ReparacionUpdateOneRequiredWithoutRegistrosNestedInput
  }

  export type RegistroReparacionUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    reparacionId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroReparacionUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    reparacionId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    accionesRealizadas?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarioFinal?: NullableStringFieldUpdateOperationsInput | string | null
    montoPagado?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MetaUsuarioUpdateWithoutUsuarioInput = {
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
    sucursal?: SucursalUpdateOneRequiredWithoutMetaUsuarioNestedInput
  }

  export type MetaUsuarioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaUsuarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroVentas?: FloatFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaTiendaFieldUpdateOperationsInput | $Enums.EstadoMetaTienda
  }

  export type MetaCobrosUpdateWithoutUsuarioInput = {
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    sucursal?: SucursalUpdateOneRequiredWithoutMetaCobrosNestedInput
    DepositoCobro?: DepositoCobroUpdateManyWithoutMetaCobroNestedInput
  }

  export type MetaCobrosUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
    DepositoCobro?: DepositoCobroUncheckedUpdateManyWithoutMetaCobroNestedInput
  }

  export type MetaCobrosUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    fechaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaFin?: DateTimeFieldUpdateOperationsInput | Date | string
    montoMeta?: FloatFieldUpdateOperationsInput | number
    montoActual?: FloatFieldUpdateOperationsInput | number
    cumplida?: BoolFieldUpdateOperationsInput | boolean
    fechaCumplida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    numeroDepositos?: IntFieldUpdateOperationsInput | number
    tituloMeta?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: EnumEstadoMetaCobroFieldUpdateOperationsInput | $Enums.EstadoMetaCobro
  }

  export type DepositoCobroUpdateWithoutUsuarioInput = {
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    sucursal?: SucursalUpdateOneRequiredWithoutDepositoCobroNestedInput
    metaCobro?: MetaCobrosUpdateOneRequiredWithoutDepositoCobroNestedInput
  }

  export type DepositoCobroUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    metaCobroId?: IntFieldUpdateOperationsInput | number
  }

  export type DepositoCobroUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    metaCobroId?: IntFieldUpdateOperationsInput | number
  }

  export type DepositoCobroCreateManyMetaCobroInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    numeroBoleta: string
    fechaRegistro?: Date | string
    montoDepositado: number
    descripcion?: string | null
  }

  export type DepositoCobroUpdateWithoutMetaCobroInput = {
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneRequiredWithoutDepositoCobroNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutDepositoCobroNestedInput
  }

  export type DepositoCobroUncheckedUpdateWithoutMetaCobroInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepositoCobroUncheckedUpdateManyWithoutMetaCobroInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    numeroBoleta?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    montoDepositado?: FloatFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VentaCreateManyClienteInput = {
    id?: number
    fechaVenta?: Date | string
    horaVenta?: Date | string
    totalVenta: number
    sucursalId: number
    nombreClienteFinal?: string | null
    telefonoClienteFinal?: string | null
    direccionClienteFinal?: string | null
    imei?: string | null
    registroCajaId?: number | null
  }

  export type EliminacionClienteCreateManyClienteInput = {
    id?: number
    fechaHora?: Date | string
    usuarioId?: number | null
    motivo?: string | null
  }

  export type GarantiaCreateManyClienteInput = {
    id?: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    proveedorId?: number | null
  }

  export type VentaEliminadaCreateManyClienteInput = {
    id?: number
    usuarioId: number
    motivo: string
    totalVenta: number
    fechaEliminacion?: Date | string
    sucursalId: number
  }

  export type VentaCuotaCreateManyClienteInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    totalVenta: number
    cuotaInicial: number
    cuotasTotales: number
    fechaInicio?: Date | string
    estado?: $Enums.EstadoCuota
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    dpi: string
    testigos: JsonNullValueInput | InputJsonValue
    fechaContrato?: Date | string
    montoVenta: number
    garantiaMeses: number
    totalPagado?: number
    diasEntrePagos?: number
    interes?: number
    comentario?: string | null
    ventaId?: number | null
    montoTotalConInteres?: number | null
  }

  export type ReparacionCreateManyClienteInput = {
    id?: number
    usuarioId: number
    sucursalId: number
    productoId?: number | null
    productoExterno?: string | null
    problemas: string
    observaciones?: string | null
    fechaRecibido?: Date | string
    fechaEntregado?: Date | string | null
    estado?: $Enums.EstadoReparacion
    hojaSolucion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type VentaUpdateWithoutClienteInput = {
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: VentaProductoUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUpdateOneWithoutVentaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaNestedInput
    registroCaja?: RegistroCajaUpdateOneWithoutVentasNestedInput
    ventaCuota?: VentaCuotaUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: VentaProductoUncheckedUpdateManyWithoutVentaNestedInput
    metodoPago?: PagoUncheckedUpdateOneWithoutVentaNestedInput
    ventaCuota?: VentaCuotaUncheckedUpdateOneWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    horaVenta?: DateTimeFieldUpdateOperationsInput | Date | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    nombreClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    telefonoClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    direccionClienteFinal?: NullableStringFieldUpdateOperationsInput | string | null
    imei?: NullableStringFieldUpdateOperationsInput | string | null
    registroCajaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EliminacionClienteUpdateWithoutClienteInput = {
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: UsuarioUpdateOneWithoutEliminacionClienteNestedInput
  }

  export type EliminacionClienteUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EliminacionClienteUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaHora?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GarantiaUpdateWithoutClienteInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneRequiredWithoutGarantiaNestedInput
    usuarioRecibe?: UsuarioUpdateOneWithoutGarantiaNestedInput
    registros?: RegistroGarantiaUpdateManyWithoutGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    registros?: RegistroGarantiaUncheckedUpdateManyWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaEliminadaUpdateWithoutClienteInput = {
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutVentaEliminadaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaEliminadaNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutVentaEliminadaNestedInput
  }

  export type VentaEliminadaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    totalVenta?: FloatFieldUpdateOperationsInput | number
    fechaEliminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    sucursalId?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCuotaUpdateWithoutClienteInput = {
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    usuario?: UsuarioUpdateOneRequiredWithoutVentaCuotaNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutVentaCuotaNestedInput
    cuotas?: CuotaUpdateManyWithoutVentaCuotaNestedInput
    venta?: VentaUpdateOneWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
    cuotas?: CuotaUncheckedUpdateManyWithoutVentaCuotaNestedInput
  }

  export type VentaCuotaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    totalVenta?: FloatFieldUpdateOperationsInput | number
    cuotaInicial?: FloatFieldUpdateOperationsInput | number
    cuotasTotales?: IntFieldUpdateOperationsInput | number
    fechaInicio?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoCuotaFieldUpdateOperationsInput | $Enums.EstadoCuota
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: StringFieldUpdateOperationsInput | string
    testigos?: JsonNullValueInput | InputJsonValue
    fechaContrato?: DateTimeFieldUpdateOperationsInput | Date | string
    montoVenta?: FloatFieldUpdateOperationsInput | number
    garantiaMeses?: IntFieldUpdateOperationsInput | number
    totalPagado?: FloatFieldUpdateOperationsInput | number
    diasEntrePagos?: IntFieldUpdateOperationsInput | number
    interes?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    ventaId?: NullableIntFieldUpdateOperationsInput | number | null
    montoTotalConInteres?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReparacionUpdateWithoutClienteInput = {
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutReparacionNestedInput
    sucursal?: SucursalUpdateOneRequiredWithoutReparacionNestedInput
    producto?: ProductoUpdateOneWithoutReparacionNestedInput
    registros?: RegistroReparacionUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroReparacionUncheckedUpdateManyWithoutReparacionNestedInput
  }

  export type ReparacionUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    sucursalId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoExterno?: NullableStringFieldUpdateOperationsInput | string | null
    problemas?: StringFieldUpdateOperationsInput | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRecibido?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaEntregado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado?: EnumEstadoReparacionFieldUpdateOperationsInput | $Enums.EstadoReparacion
    hojaSolucion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroGarantiaCreateManyGarantiaInput = {
    id?: number
    usuarioId?: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
    proveedorId?: number | null
  }

  export type RegistroGarantiaUpdateWithoutGarantiaInput = {
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneWithoutRegistroGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutRegistroGarantiaNestedInput
    proveedor?: ProveedorUpdateOneWithoutRegistroGarantiaNestedInput
  }

  export type RegistroGarantiaUncheckedUpdateWithoutGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutGarantiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VentaProductoCreateManyVentaInput = {
    id?: number
    productoId?: number | null
    cantidad: number
    creadoEn?: Date | string
    precioVenta: number
  }

  export type VentaProductoUpdateWithoutVentaInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
    producto?: ProductoUpdateOneWithoutVentasNestedInput
  }

  export type VentaProductoUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type VentaProductoUncheckedUpdateManyWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioVenta?: FloatFieldUpdateOperationsInput | number
  }

  export type EntregaStockCreateManyProveedorInput = {
    id?: number
    montoTotal: number
    fechaEntrega?: Date | string
    recibidoPorId?: number | null
    sucursalId?: number | null
  }

  export type GarantiaCreateManyProveedorInput = {
    id?: number
    clienteId: number
    productoId: number
    usuarioIdRecibe?: number | null
    comentario?: string | null
    descripcionProblema: string
    fechaRecepcion?: Date | string
    estado?: $Enums.EstadoGarantia
    creadoEn?: Date | string
    actualizadoEn?: Date | string
  }

  export type RegistroGarantiaCreateManyProveedorInput = {
    id?: number
    garantiaId: number
    usuarioId?: number | null
    productoId: number
    estado: $Enums.EstadoGarantia
    conclusion?: string | null
    accionesRealizadas?: string | null
    fechaRegistro?: Date | string
  }

  export type EntregaStockUpdateWithoutProveedorInput = {
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    stockEntregado?: StockUpdateManyWithoutEntregaStockNestedInput
    usuarioRecibido?: UsuarioUpdateOneWithoutEntregasRecibidasNestedInput
    sucursal?: SucursalUpdateOneWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
    stockEntregado?: StockUncheckedUpdateManyWithoutEntregaStockNestedInput
  }

  export type EntregaStockUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    montoTotal?: FloatFieldUpdateOperationsInput | number
    fechaEntrega?: DateTimeFieldUpdateOperationsInput | Date | string
    recibidoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    sucursalId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type GarantiaUpdateWithoutProveedorInput = {
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutGarantiaNestedInput
    usuarioRecibe?: UsuarioUpdateOneWithoutGarantiaNestedInput
    registros?: RegistroGarantiaUpdateManyWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroGarantiaUncheckedUpdateManyWithoutGarantiaNestedInput
  }

  export type GarantiaUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    usuarioIdRecibe?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    descripcionProblema?: StringFieldUpdateOperationsInput | string
    fechaRecepcion?: DateTimeFieldUpdateOperationsInput | Date | string
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroGarantiaUpdateWithoutProveedorInput = {
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    garantia?: GarantiaUpdateOneRequiredWithoutRegistrosNestedInput
    usuario?: UsuarioUpdateOneWithoutRegistroGarantiaNestedInput
    producto?: ProductoUpdateOneRequiredWithoutRegistroGarantiaNestedInput
  }

  export type RegistroGarantiaUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroGarantiaUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    garantiaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoGarantiaFieldUpdateOperationsInput | $Enums.EstadoGarantia
    conclusion?: NullableStringFieldUpdateOperationsInput | string | null
    accionesRealizadas?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoUpdateWithoutCategoriasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUpdateManyWithoutProductoNestedInput
    ventas?: VentaProductoUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutCategoriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
    stock?: StockUncheckedUpdateManyWithoutProductoNestedInput
    ventas?: VentaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialStock?: HistorialStockUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecio?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    TransferenciaProducto?: TransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    precios?: PrecioProductoUncheckedUpdateManyWithoutProductoNestedInput
    SolicitudPrecio?: SolicitudPrecioUncheckedUpdateManyWithoutProductoNestedInput
    solicitudesTransferencia?: SolicitudTransferenciaProductoUncheckedUpdateManyWithoutProductoNestedInput
    HistorialPrecioCosto?: HistorialPrecioCostoUncheckedUpdateManyWithoutProductoNestedInput
    AjusteStock?: AjusteStockUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionProducto?: EliminacionProductoUncheckedUpdateManyWithoutProductoNestedInput
    EliminacionStock?: EliminacionStockUncheckedUpdateManyWithoutProductoNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutProductoNestedInput
    RegistroGarantia?: RegistroGarantiaUncheckedUpdateManyWithoutProductoNestedInput
    VentaEliminadaProducto?: VentaEliminadaProductoUncheckedUpdateManyWithoutProductoNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    codigoProducto?: StringFieldUpdateOperationsInput | string
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    precioCostoActual?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type MunicipioCreateManyDepartamentoInput = {
    id?: number
    nombre: string
  }

  export type ClienteCreateManyDepartamentoInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    municipioId?: number | null
    dpi?: string | null
    iPInternet?: string | null
  }

  export type MunicipioUpdateWithoutDepartamentoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    clientes?: ClienteUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    clientes?: ClienteUncheckedUpdateManyWithoutMunicipioNestedInput
  }

  export type MunicipioUncheckedUpdateManyWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ClienteUpdateWithoutDepartamentoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    municipio?: MunicipioUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateManyWithoutDepartamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    municipioId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteCreateManyMunicipioInput = {
    id?: number
    nombre: string
    telefono?: string | null
    direccion?: string | null
    creadoEn?: Date | string
    actualizadoEn?: Date | string
    departamentoId?: number | null
    dpi?: string | null
    iPInternet?: string | null
  }

  export type ClienteUpdateWithoutMunicipioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUpdateManyWithoutClienteNestedInput
    departamento?: DepartamentoUpdateOneWithoutClientesNestedInput
    EliminacionCliente?: EliminacionClienteUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutMunicipioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
    compras?: VentaUncheckedUpdateManyWithoutClienteNestedInput
    EliminacionCliente?: EliminacionClienteUncheckedUpdateManyWithoutClienteNestedInput
    Garantia?: GarantiaUncheckedUpdateManyWithoutClienteNestedInput
    VentaEliminada?: VentaEliminadaUncheckedUpdateManyWithoutClienteNestedInput
    VentaCuota?: VentaCuotaUncheckedUpdateManyWithoutClienteNestedInput
    Reparacion?: ReparacionUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateManyWithoutMunicipioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    creadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    actualizadoEn?: DateTimeFieldUpdateOperationsInput | Date | string
    departamentoId?: NullableIntFieldUpdateOperationsInput | number | null
    dpi?: NullableStringFieldUpdateOperationsInput | string | null
    iPInternet?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ReparacionCountOutputTypeDefaultArgs instead
     */
    export type ReparacionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReparacionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaCuotaCountOutputTypeDefaultArgs instead
     */
    export type VentaCuotaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaCuotaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaEliminadaCountOutputTypeDefaultArgs instead
     */
    export type VentaEliminadaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaEliminadaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegistroCajaCountOutputTypeDefaultArgs instead
     */
    export type RegistroCajaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegistroCajaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificacionCountOutputTypeDefaultArgs instead
     */
    export type NotificacionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificacionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductoCountOutputTypeDefaultArgs instead
     */
    export type ProductoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StockCountOutputTypeDefaultArgs instead
     */
    export type StockCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StockCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SucursalCountOutputTypeDefaultArgs instead
     */
    export type SucursalCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SucursalCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntregaStockCountOutputTypeDefaultArgs instead
     */
    export type EntregaStockCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EntregaStockCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MetaCobrosCountOutputTypeDefaultArgs instead
     */
    export type MetaCobrosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MetaCobrosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteCountOutputTypeDefaultArgs instead
     */
    export type ClienteCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GarantiaCountOutputTypeDefaultArgs instead
     */
    export type GarantiaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GarantiaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaCountOutputTypeDefaultArgs instead
     */
    export type VentaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProveedorCountOutputTypeDefaultArgs instead
     */
    export type ProveedorCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProveedorCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaCountOutputTypeDefaultArgs instead
     */
    export type CategoriaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepartamentoCountOutputTypeDefaultArgs instead
     */
    export type DepartamentoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepartamentoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MunicipioCountOutputTypeDefaultArgs instead
     */
    export type MunicipioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MunicipioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReparacionDefaultArgs instead
     */
    export type ReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReparacionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegistroReparacionDefaultArgs instead
     */
    export type RegistroReparacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegistroReparacionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaCuotaDefaultArgs instead
     */
    export type VentaCuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaCuotaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CuotaDefaultArgs instead
     */
    export type CuotaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CuotaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PlantillaComprobanteDefaultArgs instead
     */
    export type PlantillaComprobanteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PlantillaComprobanteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaEliminadaDefaultArgs instead
     */
    export type VentaEliminadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaEliminadaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaEliminadaProductoDefaultArgs instead
     */
    export type VentaEliminadaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaEliminadaProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SucursalSaldoDefaultArgs instead
     */
    export type SucursalSaldoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SucursalSaldoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegistroCajaDefaultArgs instead
     */
    export type RegistroCajaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegistroCajaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SucursalSaldoGlobalDefaultArgs instead
     */
    export type SucursalSaldoGlobalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SucursalSaldoGlobalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepositoDefaultArgs instead
     */
    export type DepositoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepositoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EgresoDefaultArgs instead
     */
    export type EgresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EgresoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TicketSorteoDefaultArgs instead
     */
    export type TicketSorteoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TicketSorteoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VencimientoDefaultArgs instead
     */
    export type VencimientoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VencimientoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificacionDefaultArgs instead
     */
    export type NotificacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificacionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificacionesUsuariosDefaultArgs instead
     */
    export type NotificacionesUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificacionesUsuariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SolicitudPrecioDefaultArgs instead
     */
    export type SolicitudPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SolicitudPrecioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductoDefaultArgs instead
     */
    export type ProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HistorialPrecioCostoDefaultArgs instead
     */
    export type HistorialPrecioCostoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HistorialPrecioCostoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PrecioProductoDefaultArgs instead
     */
    export type PrecioProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PrecioProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HistorialPrecioDefaultArgs instead
     */
    export type HistorialPrecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HistorialPrecioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AjusteStockDefaultArgs instead
     */
    export type AjusteStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AjusteStockDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EliminacionStockDefaultArgs instead
     */
    export type EliminacionStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EliminacionStockDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EliminacionProductoDefaultArgs instead
     */
    export type EliminacionProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EliminacionProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EliminacionClienteDefaultArgs instead
     */
    export type EliminacionClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EliminacionClienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StockDefaultArgs instead
     */
    export type StockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StockDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SucursalDefaultArgs instead
     */
    export type SucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SucursalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntregaStockDefaultArgs instead
     */
    export type EntregaStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EntregaStockDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MetaUsuarioDefaultArgs instead
     */
    export type MetaUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MetaUsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MetaCobrosDefaultArgs instead
     */
    export type MetaCobrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MetaCobrosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepositoCobroDefaultArgs instead
     */
    export type DepositoCobroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepositoCobroDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteDefaultArgs instead
     */
    export type ClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GarantiaDefaultArgs instead
     */
    export type GarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GarantiaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RegistroGarantiaDefaultArgs instead
     */
    export type RegistroGarantiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RegistroGarantiaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PagoDefaultArgs instead
     */
    export type PagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PagoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HistorialStockDefaultArgs instead
     */
    export type HistorialStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HistorialStockDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaDefaultArgs instead
     */
    export type VentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TransferenciaProductoDefaultArgs instead
     */
    export type TransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TransferenciaProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SolicitudTransferenciaProductoDefaultArgs instead
     */
    export type SolicitudTransferenciaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SolicitudTransferenciaProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VentaProductoDefaultArgs instead
     */
    export type VentaProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VentaProductoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProveedorDefaultArgs instead
     */
    export type ProveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProveedorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriaDefaultArgs instead
     */
    export type CategoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepartamentoDefaultArgs instead
     */
    export type DepartamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepartamentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MunicipioDefaultArgs instead
     */
    export type MunicipioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MunicipioDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}